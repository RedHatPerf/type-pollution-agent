<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='1329904' time_ms='1667663964431'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
11.0.16.1+1
</release>
<info>
OpenJDK 64-Bit Server VM (11.0.16.1+1) for linux-amd64 JRE (11.0.16.1+1), built on Aug 16 2022 07:24:27 by &quot;&quot; with gcc 7.5.0
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+PrintNMethods -XX:+PrintNativeNMethods -XX:+PrintSignatureHandlers -XX:+PrintAdapterHandlers -XX:+PrintStubCode -XX:+LogCompilation -XX:LogFile=hotspot.log -XX:+DebugNonSafepoints </args>
<command>
benchmarks/target/type-pollution-benchmarks-0.1-SNAPSHOT.jar 2
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=11.0.16.1+1
java.vm.name=OpenJDK 64-Bit Server VM
jdk.debug=release
sun.boot.library.path=/home/forked_franz/.sdkman/candidates/java/11.0.16.1-tem/lib
java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/home/forked_franz/.sdkman/candidates/java/11.0.16.1-tem
java.class.path=benchmarks/target/type-pollution-benchmarks-0.1-SNAPSHOT.jar
jdk.boot.class.path.append=
java.vm.info=mixed mode, sharing
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=11
java.vm.vendor=Eclipse Adoptium
sun.java.command=benchmarks/target/type-pollution-benchmarks-0.1-SNAPSHOT.jar 2
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='1329923'/>
ICache::flush_icache_stub [0x00007fb547800080, 0x00007fb54780009d[ (29 bytes)
Loaded disassembler from /home/forked_franz/.sdkman/candidates/java/11.0.16.1-tem/lib/server/hsdis-amd64.so
[Disassembling for mach=&apos;i386:x86-64&apos;]
  0x00007fb547800080: test   %esi,%esi
  0x00007fb547800082: je     0x00007fb547800099
  0x00007fb547800088: mfence 
  0x00007fb54780008b: clflush (%rdi)
  0x00007fb54780008e: add    $0x40,%rdi
  0x00007fb547800092: dec    %esi
  0x00007fb547800094: jne    0x00007fb54780008b
  0x00007fb547800096: mfence 
  0x00007fb547800099: mov    %rdx,%rax
  0x00007fb54780009c: retq   

VM_Version::get_cpu_info_stub [0x00007fb547800380, 0x00007fb547800724[ (932 bytes)
  0x00007fb547800380: push   %rbp
  0x00007fb547800381: mov    %rdi,%rbp
  0x00007fb547800384: push   %rbx
  0x00007fb547800385: push   %rsi
  0x00007fb547800386: pushfq 
  0x00007fb547800387: pop    %rax
  0x00007fb547800388: push   %rax
  0x00007fb547800389: mov    %rax,%rcx
  0x00007fb54780038c: xor    $0x40000,%eax
  0x00007fb547800392: push   %rax
  0x00007fb547800393: popfq  
  0x00007fb547800394: pushfq 
  0x00007fb547800395: pop    %rax
  0x00007fb547800396: cmp    %rcx,%rax
  0x00007fb547800399: jne    0x00007fb5478003a8
  0x00007fb54780039b: mov    $0x300,%eax
  0x00007fb5478003a0: mov    %eax,0x10(%rbp)
  0x00007fb5478003a3: jmpq   0x00007fb5478005a7
  0x00007fb5478003a8: mov    %rcx,%rax
  0x00007fb5478003ab: xor    $0x200000,%eax
  0x00007fb5478003b1: push   %rax
  0x00007fb5478003b2: popfq  
  0x00007fb5478003b3: pushfq 
  0x00007fb5478003b4: pop    %rax
  0x00007fb5478003b5: cmp    %rax,%rcx
  0x00007fb5478003b8: jne    0x00007fb5478003c7
  0x00007fb5478003ba: mov    $0x400,%eax
  0x00007fb5478003bf: mov    %eax,0x10(%rbp)
  0x00007fb5478003c2: jmpq   0x00007fb5478005a7
  0x00007fb5478003c7: xor    %eax,%eax
  0x00007fb5478003c9: cpuid  
  0x00007fb5478003cb: or     %eax,%eax
  0x00007fb5478003cd: je     0x00007fb5478003ba
  0x00007fb5478003cf: lea    0x0(%rbp),%rsi
  0x00007fb5478003d3: mov    %eax,(%rsi)
  0x00007fb5478003d5: mov    %ebx,0x4(%rsi)
  0x00007fb5478003d8: mov    %ecx,0x8(%rsi)
  0x00007fb5478003db: mov    %edx,0xc(%rsi)
  0x00007fb5478003de: cmp    $0xa,%eax
  0x00007fb5478003e1: jbe    0x00007fb54780044f
  0x00007fb5478003e3: mov    $0xb,%eax
  0x00007fb5478003e8: xor    %ecx,%ecx
  0x00007fb5478003ea: cpuid  
  0x00007fb5478003ec: lea    0x40(%rbp),%rsi
  0x00007fb5478003f0: mov    %eax,(%rsi)
  0x00007fb5478003f2: mov    %ebx,0x4(%rsi)
  0x00007fb5478003f5: mov    %ecx,0x8(%rsi)
  0x00007fb5478003f8: mov    %edx,0xc(%rsi)
  0x00007fb5478003fb: mov    $0xb,%eax
  0x00007fb547800400: mov    $0x1,%ecx
  0x00007fb547800405: cpuid  
  0x00007fb547800407: push   %rax
  0x00007fb547800408: and    $0x1f,%eax
  0x00007fb54780040b: or     %ebx,%eax
  0x00007fb54780040d: and    $0xffff,%eax
  0x00007fb547800413: pop    %rax
  0x00007fb547800414: je     0x00007fb54780044f
  0x00007fb547800416: lea    0x50(%rbp),%rsi
  0x00007fb54780041a: mov    %eax,(%rsi)
  0x00007fb54780041c: mov    %ebx,0x4(%rsi)
  0x00007fb54780041f: mov    %ecx,0x8(%rsi)
  0x00007fb547800422: mov    %edx,0xc(%rsi)
  0x00007fb547800425: mov    $0xb,%eax
  0x00007fb54780042a: mov    $0x2,%ecx
  0x00007fb54780042f: cpuid  
  0x00007fb547800431: push   %rax
  0x00007fb547800432: and    $0x1f,%eax
  0x00007fb547800435: or     %ebx,%eax
  0x00007fb547800437: and    $0xffff,%eax
  0x00007fb54780043d: pop    %rax
  0x00007fb54780043e: je     0x00007fb54780044f
  0x00007fb547800440: lea    0x60(%rbp),%rsi
  0x00007fb547800444: mov    %eax,(%rsi)
  0x00007fb547800446: mov    %ebx,0x4(%rsi)
  0x00007fb547800449: mov    %ecx,0x8(%rsi)
  0x00007fb54780044c: mov    %edx,0xc(%rsi)
  0x00007fb54780044f: mov    $0x4,%eax
  0x00007fb547800454: cmp    0x0(%rbp),%eax
  0x00007fb547800457: jg     0x00007fb547800475
  0x00007fb547800459: xor    %ecx,%ecx
  0x00007fb54780045b: cpuid  
  0x00007fb54780045d: push   %rax
  0x00007fb54780045e: and    $0x1f,%eax
  0x00007fb547800461: or     %eax,%eax
  0x00007fb547800463: pop    %rax
  0x00007fb547800464: je     0x00007fb547800475
  0x00007fb547800466: lea    0x20(%rbp),%rsi
  0x00007fb54780046a: mov    %eax,(%rsi)
  0x00007fb54780046c: mov    %ebx,0x4(%rsi)
  0x00007fb54780046f: mov    %ecx,0x8(%rsi)
  0x00007fb547800472: mov    %edx,0xc(%rsi)
  0x00007fb547800475: mov    $0x1,%eax
  0x00007fb54780047a: cpuid  
  0x00007fb54780047c: lea    0x10(%rbp),%rsi
  0x00007fb547800480: mov    %eax,(%rsi)
  0x00007fb547800482: mov    %ebx,0x4(%rsi)
  0x00007fb547800485: mov    %ecx,0x8(%rsi)
  0x00007fb547800488: mov    %edx,0xc(%rsi)
  0x00007fb54780048b: and    $0x18000000,%ecx
  0x00007fb547800491: cmp    $0x18000000,%ecx
  0x00007fb547800497: jne    0x00007fb5478004aa
  0x00007fb547800499: xor    %ecx,%ecx
  0x00007fb54780049b: xgetbv 
  0x00007fb54780049e: lea    0x100(%rbp),%rsi
  0x00007fb5478004a5: mov    %eax,(%rsi)
  0x00007fb5478004a7: mov    %edx,0x4(%rsi)
  0x00007fb5478004aa: mov    $0x7,%eax
  0x00007fb5478004af: cmp    0x0(%rbp),%eax
  0x00007fb5478004b2: jg     0x00007fb5478004c7
  0x00007fb5478004b4: xor    %ecx,%ecx
  0x00007fb5478004b6: cpuid  
  0x00007fb5478004b8: lea    0x30(%rbp),%rsi
  0x00007fb5478004bc: mov    %eax,(%rsi)
  0x00007fb5478004be: mov    %ebx,0x4(%rsi)
  0x00007fb5478004c1: mov    %ecx,0x8(%rsi)
  0x00007fb5478004c4: mov    %edx,0xc(%rsi)
  0x00007fb5478004c7: mov    $0x80000000,%eax
  0x00007fb5478004cc: cpuid  
  0x00007fb5478004ce: cmp    $0x80000000,%eax
  0x00007fb5478004d4: jbe    0x00007fb5478005a7
  0x00007fb5478004da: cmp    $0x80000004,%eax
  0x00007fb5478004e0: jbe    0x00007fb54780056a
  0x00007fb5478004e6: cmp    $0x80000006,%eax
  0x00007fb5478004ec: jbe    0x00007fb547800551
  0x00007fb5478004ee: cmp    $0x80000007,%eax
  0x00007fb5478004f4: jbe    0x00007fb547800538
  0x00007fb5478004f6: cmp    $0x80000008,%eax
  0x00007fb5478004fc: jbe    0x00007fb54780051f
  0x00007fb5478004fe: cmp    $0x8000001e,%eax
  0x00007fb547800504: jb     0x00007fb54780051f
  0x00007fb547800506: mov    $0x8000001e,%eax
  0x00007fb54780050b: cpuid  
  0x00007fb54780050d: lea    0xf0(%rbp),%rsi
  0x00007fb547800514: mov    %eax,(%rsi)
  0x00007fb547800516: mov    %ebx,0x4(%rsi)
  0x00007fb547800519: mov    %ecx,0x8(%rsi)
  0x00007fb54780051c: mov    %edx,0xc(%rsi)
  0x00007fb54780051f: mov    $0x80000008,%eax
  0x00007fb547800524: cpuid  
  0x00007fb547800526: lea    0xe0(%rbp),%rsi
  0x00007fb54780052d: mov    %eax,(%rsi)
  0x00007fb54780052f: mov    %ebx,0x4(%rsi)
  0x00007fb547800532: mov    %ecx,0x8(%rsi)
  0x00007fb547800535: mov    %edx,0xc(%rsi)
  0x00007fb547800538: mov    $0x80000007,%eax
  0x00007fb54780053d: cpuid  
  0x00007fb54780053f: lea    0xd0(%rbp),%rsi
  0x00007fb547800546: mov    %eax,(%rsi)
  0x00007fb547800548: mov    %ebx,0x4(%rsi)
  0x00007fb54780054b: mov    %ecx,0x8(%rsi)
  0x00007fb54780054e: mov    %edx,0xc(%rsi)
  0x00007fb547800551: mov    $0x80000005,%eax
  0x00007fb547800556: cpuid  
  0x00007fb547800558: lea    0xc0(%rbp),%rsi
  0x00007fb54780055f: mov    %eax,(%rsi)
  0x00007fb547800561: mov    %ebx,0x4(%rsi)
  0x00007fb547800564: mov    %ecx,0x8(%rsi)
  0x00007fb547800567: mov    %edx,0xc(%rsi)
  0x00007fb54780056a: mov    $0x80000001,%eax
  0x00007fb54780056f: cpuid  
  0x00007fb547800571: lea    0x80(%rbp),%rsi
  0x00007fb547800578: mov    %eax,(%rsi)
  0x00007fb54780057a: mov    %ebx,0x4(%rsi)
  0x00007fb54780057d: mov    %ecx,0x8(%rsi)
  0x00007fb547800580: mov    %edx,0xc(%rsi)
  0x00007fb547800583: lea    0x10(%rbp),%rsi
  0x00007fb547800587: mov    $0x18000000,%ecx
  0x00007fb54780058c: and    0x8(%rsi),%ecx
  0x00007fb54780058f: cmp    $0x18000000,%ecx
  0x00007fb547800595: jne    0x00007fb5478005a7
  0x00007fb547800597: mov    $0x6,%eax
  0x00007fb54780059c: and    0x100(%rbp),%eax
  0x00007fb5478005a2: cmp    $0x6,%eax
  0x00007fb5478005a5: je     0x00007fb5478005ac
  0x00007fb5478005a7: jmpq   0x00007fb54780071f
  0x00007fb5478005ac: lea    0x30(%rbp),%rsi
  0x00007fb5478005b0: mov    $0x10000,%eax
  0x00007fb5478005b5: and    0x4(%rsi),%eax
  0x00007fb5478005b8: cmp    $0x10000,%eax
  0x00007fb5478005be: jne    0x00007fb54780060b
  0x00007fb5478005c0: mov    $0xe0,%eax
  0x00007fb5478005c5: and    0x100(%rbp),%eax
  0x00007fb5478005cb: cmp    $0xe0,%eax
  0x00007fb5478005d1: jne    0x00007fb54780060b
  0x00007fb5478005d3: lea    0x10(%rbp),%rsi
  0x00007fb5478005d7: mov    (%rsi),%eax
  0x00007fb5478005d9: cmp    $0x50654,%eax
  0x00007fb5478005df: je     0x00007fb54780060b
  0x00007fb5478005e5: mov    $0xcafebabe,%ecx
  0x00007fb5478005ea: vmovd  %ecx,%xmm0
  0x00007fb5478005ee: vpbroadcastd %xmm0,%zmm0
  0x00007fb5478005f4: vmovdqu32 %zmm0,%zmm7
  0x00007fb5478005fa: vmovdqu32 %zmm0,%zmm8
  0x00007fb547800600: vmovdqu32 %zmm0,%zmm31
  0x00007fb547800606: jmpq   0x00007fb54780062b
  0x00007fb54780060b: mov    $0xcafebabe,%ecx
  0x00007fb547800610: vmovd  %ecx,%xmm0
  0x00007fb547800614: vpshufd $0x0,%xmm0,%xmm0
  0x00007fb547800619: vinsertf128 $0x1,%xmm0,%ymm0,%ymm0
  0x00007fb54780061f: vmovdqu %ymm0,%ymm7
  0x00007fb547800623: vmovdqu %ymm0,%ymm8
  0x00007fb547800627: vmovdqu %ymm0,%ymm15
  0x00007fb54780062b: xor    %esi,%esi
  0x00007fb54780062d: mov    (%rsi),%eax
  0x00007fb54780062f: lea    0x30(%rbp),%rsi
  0x00007fb547800633: mov    $0x10000,%eax
  0x00007fb547800638: and    0x4(%rsi),%eax
  0x00007fb54780063b: cmp    $0x10000,%eax
  0x00007fb547800641: jne    0x00007fb5478006ce
  0x00007fb547800647: mov    $0xe0,%eax
  0x00007fb54780064c: and    0x100(%rbp),%eax
  0x00007fb547800652: cmp    $0xe0,%eax
  0x00007fb547800658: jne    0x00007fb5478006ce
  0x00007fb54780065e: lea    0x10(%rbp),%rsi
  0x00007fb547800662: mov    (%rsi),%eax
  0x00007fb547800664: cmp    $0x50654,%eax
  0x00007fb54780066a: je     0x00007fb5478006ce
  0x00007fb547800670: lea    0x188(%rbp),%rsi
  0x00007fb547800677: vmovdqu32 %zmm0,(%rsi)
  0x00007fb54780067d: vmovdqu32 %zmm7,0x40(%rsi)
  0x00007fb547800684: vmovdqu32 %zmm8,0x80(%rsi)
  0x00007fb54780068b: vmovdqu32 %zmm31,0xc0(%rsi)
  0x00007fb547800692: lea    0x0(%rbp),%rsi
  0x00007fb547800696: cmpl   $0x756e6547,0x4(%rsi)
  0x00007fb54780069d: jne    0x00007fb54780071f
  0x00007fb5478006a3: mov    $0xfff0ff0,%ecx
  0x00007fb5478006a8: lea    0x10(%rbp),%rsi
  0x00007fb5478006ac: and    (%rsi),%ecx
  0x00007fb5478006ae: cmp    $0x50670,%ecx
  0x00007fb5478006b4: je     0x00007fb54780071f
  0x00007fb5478006ba: cmp    $0x80650,%ecx
  0x00007fb5478006c0: je     0x00007fb54780071f
  0x00007fb5478006c6: vzeroupper 
  0x00007fb5478006c9: jmpq   0x00007fb54780071f
  0x00007fb5478006ce: lea    0x108(%rbp),%rsi
  0x00007fb5478006d5: vmovdqu %ymm0,(%rsi)
  0x00007fb5478006d9: vmovdqu %ymm7,0x20(%rsi)
  0x00007fb5478006de: vmovdqu %ymm8,0x40(%rsi)
  0x00007fb5478006e3: vmovdqu %ymm15,0x60(%rsi)
  0x00007fb5478006e8: lea    0x0(%rbp),%rsi
  0x00007fb5478006ec: cmpl   $0x756e6547,0x4(%rsi)
  0x00007fb5478006f3: jne    0x00007fb54780071f
  0x00007fb5478006f9: mov    $0xfff0ff0,%ecx
  0x00007fb5478006fe: lea    0x10(%rbp),%rsi
  0x00007fb547800702: and    (%rsi),%ecx
  0x00007fb547800704: cmp    $0x50670,%ecx
  0x00007fb54780070a: je     0x00007fb54780071f
  0x00007fb547800710: cmp    $0x80650,%ecx
  0x00007fb547800716: je     0x00007fb54780071f
  0x00007fb54780071c: vzeroupper 
  0x00007fb54780071f: popfq  
  0x00007fb547800720: pop    %rsi
  0x00007fb547800721: pop    %rbx
  0x00007fb547800722: pop    %rbp
  0x00007fb547800723: retq   

VM_Version::detect_virt_stub [0x00007fb547800724, 0x00007fb54780073e[ (26 bytes)
  0x00007fb547800724: push   %rbp
  0x00007fb547800725: push   %rbx
  0x00007fb547800726: push   %rsi
  0x00007fb547800727: mov    %rdi,%rax
  0x00007fb54780072a: mov    %rsi,%rsi
  0x00007fb54780072d: cpuid  
  0x00007fb54780072f: mov    %eax,(%rsi)
  0x00007fb547800731: mov    %ebx,0x4(%rsi)
  0x00007fb547800734: mov    %ecx,0x8(%rsi)
  0x00007fb547800737: mov    %edx,0xc(%rsi)
  0x00007fb54780073a: pop    %rsi
  0x00007fb54780073b: pop    %rbx
  0x00007fb54780073c: pop    %rbp
  0x00007fb54780073d: retq   

StubRoutines::forward exception [0x00007fb547800c00, 0x00007fb547800c3f[ (63 bytes)
  0x00007fb547800c00: mov    (%rsp),%rdi
  0x00007fb547800c04: mov    %rdi,%rsi
  0x00007fb547800c07: mov    %r15,%rdi
  0x00007fb547800c0a: test   $0xf,%esp
  0x00007fb547800c10: je     0x00007fb547800c28
  0x00007fb547800c16: sub    $0x8,%rsp
  0x00007fb547800c1a: callq  0x00007fb565148a40 = SharedRuntime::exception_handler_for_return_address(JavaThread*, unsigned char*)
  0x00007fb547800c1f: add    $0x8,%rsp
  0x00007fb547800c23: jmpq   0x00007fb547800c2d
  0x00007fb547800c28: callq  0x00007fb565148a40 = SharedRuntime::exception_handler_for_return_address(JavaThread*, unsigned char*)
  0x00007fb547800c2d: mov    %rax,%rbx
  0x00007fb547800c30: pop    %rdx
  0x00007fb547800c31: mov    0x8(%r15),%rax
  0x00007fb547800c35: movq   $0x0,0x8(%r15)
  0x00007fb547800c3d: jmpq   *%rbx

StubRoutines::call_stub [0x00007fb547800c3f, 0x00007fb547800d2d[ (238 bytes)
  0x00007fb547800c3f: push   %rbp
  0x00007fb547800c40: mov    %rsp,%rbp
  0x00007fb547800c43: sub    $0x60,%rsp
  0x00007fb547800c47: mov    %r9,-0x8(%rbp)
  0x00007fb547800c4b: mov    %r8,-0x10(%rbp)
  0x00007fb547800c4f: mov    %rcx,-0x18(%rbp)
  0x00007fb547800c53: mov    %edx,-0x20(%rbp)
  0x00007fb547800c56: mov    %rsi,-0x28(%rbp)
  0x00007fb547800c5a: mov    %rdi,-0x30(%rbp)
  0x00007fb547800c5e: mov    %rbx,-0x38(%rbp)
  0x00007fb547800c62: mov    %r12,-0x40(%rbp)
  0x00007fb547800c66: mov    %r13,-0x48(%rbp)
  0x00007fb547800c6a: mov    %r14,-0x50(%rbp)
  0x00007fb547800c6e: mov    %r15,-0x58(%rbp)
  0x00007fb547800c72: vstmxcsr -0x60(%rbp)
  0x00007fb547800c77: mov    -0x60(%rbp),%eax
  0x00007fb547800c7a: and    $0xffc0,%eax
  0x00007fb547800c80: cmp    0x1e1a5b96(%rip),%eax        # 0x00007fb5659a681c
  0x00007fb547800c86: je     0x00007fb547800c94
  0x00007fb547800c8c: vldmxcsr 0x1e1a5b88(%rip)        # 0x00007fb5659a681c
  0x00007fb547800c94: mov    0x18(%rbp),%r15
  0x00007fb547800c98: mov    0x1e1c1289(%rip),%r12        # 0x00007fb5659c1f28
  0x00007fb547800c9f: mov    0x10(%rbp),%ecx
  0x00007fb547800ca2: test   %ecx,%ecx
  0x00007fb547800ca4: je     0x00007fb547800cbc
  0x00007fb547800caa: mov    -0x8(%rbp),%rdx
  0x00007fb547800cae: mov    %ecx,%esi
  0x00007fb547800cb0: mov    (%rdx),%rax
  0x00007fb547800cb3: add    $0x8,%rdx
  0x00007fb547800cb7: dec    %esi
  0x00007fb547800cb9: push   %rax
  0x00007fb547800cba: jne    0x00007fb547800cb0
  0x00007fb547800cbc: mov    -0x18(%rbp),%rbx
  0x00007fb547800cc0: mov    -0x10(%rbp),%rsi
  0x00007fb547800cc4: mov    %rsp,%r13
  0x00007fb547800cc7: callq  *%rsi
  0x00007fb547800cc9: mov    -0x28(%rbp),%rdi
  0x00007fb547800ccd: mov    -0x20(%rbp),%esi
  0x00007fb547800cd0: cmp    $0xc,%esi
  0x00007fb547800cd3: je     0x00007fb547800d1c
  0x00007fb547800cd9: cmp    $0xb,%esi
  0x00007fb547800cdc: je     0x00007fb547800d1c
  0x00007fb547800ce2: cmp    $0x6,%esi
  0x00007fb547800ce5: je     0x00007fb547800d21
  0x00007fb547800ceb: cmp    $0x7,%esi
  0x00007fb547800cee: je     0x00007fb547800d27
  0x00007fb547800cf4: mov    %eax,(%rdi)
  0x00007fb547800cf6: lea    -0x60(%rbp),%rsp
  0x00007fb547800cfa: mov    -0x58(%rbp),%r15
  0x00007fb547800cfe: mov    -0x50(%rbp),%r14
  0x00007fb547800d02: mov    -0x48(%rbp),%r13
  0x00007fb547800d06: mov    -0x40(%rbp),%r12
  0x00007fb547800d0a: mov    -0x38(%rbp),%rbx
  0x00007fb547800d0e: vldmxcsr -0x60(%rbp)
  0x00007fb547800d13: add    $0x60,%rsp
  0x00007fb547800d17: vzeroupper 
  0x00007fb547800d1a: pop    %rbp
  0x00007fb547800d1b: retq   
  0x00007fb547800d1c: mov    %rax,(%rdi)
  0x00007fb547800d1f: jmp    0x00007fb547800cf6
  0x00007fb547800d21: vmovss %xmm0,(%rdi)
  0x00007fb547800d25: jmp    0x00007fb547800cf6
  0x00007fb547800d27: vmovsd %xmm0,(%rdi)
  0x00007fb547800d2b: jmp    0x00007fb547800cf6

StubRoutines::catch_exception [0x00007fb547800d2d, 0x00007fb547800d4c[ (31 bytes)
  0x00007fb547800d2d: mov    %rax,0x8(%r15)
  0x00007fb547800d31: movabs $0x7fb56545dc90,%r10
  0x00007fb547800d3b: mov    %r10,0x10(%r15)
  0x00007fb547800d3f: movl   $0x1da,0x18(%r15)
  0x00007fb547800d47: jmpq   0x00007fb547800cc9

StubRoutines::atomic_xchg [0x00007fb547800d4c, 0x00007fb547800d51[ (5 bytes)
  0x00007fb547800d4c: mov    %edi,%eax
  0x00007fb547800d4e: xchg   %eax,(%rsi)
  0x00007fb547800d50: retq   

StubRoutines::atomic_xchg_long [0x00007fb547800d51, 0x00007fb547800d58[ (7 bytes)
  0x00007fb547800d51: mov    %rdi,%rax
  0x00007fb547800d54: xchg   %rax,(%rsi)
  0x00007fb547800d57: retq   

StubRoutines::atomic_cmpxchg [0x00007fb547800d58, 0x00007fb547800d5f[ (7 bytes)
  0x00007fb547800d58: mov    %edx,%eax
  0x00007fb547800d5a: lock cmpxchg %edi,(%rsi)
  0x00007fb547800d5e: retq   

StubRoutines::atomic_cmpxchg_byte [0x00007fb547800d5f, 0x00007fb547800d69[ (10 bytes)
  0x00007fb547800d5f: movsbq %dl,%rax
  0x00007fb547800d63: lock cmpxchg %dil,(%rsi)
  0x00007fb547800d68: retq   

StubRoutines::atomic_cmpxchg_long [0x00007fb547800d69, 0x00007fb547800d72[ (9 bytes)
  0x00007fb547800d69: mov    %rdx,%rax
  0x00007fb547800d6c: lock cmpxchg %rdi,(%rsi)
  0x00007fb547800d71: retq   

StubRoutines::atomic_add [0x00007fb547800d72, 0x00007fb547800d7b[ (9 bytes)
  0x00007fb547800d72: mov    %edi,%eax
  0x00007fb547800d74: lock xadd %edi,(%rsi)
  0x00007fb547800d78: add    %edi,%eax
  0x00007fb547800d7a: retq   

StubRoutines::atomic_add_long [0x00007fb547800d7b, 0x00007fb547800d87[ (12 bytes)
  0x00007fb547800d7b: mov    %rdi,%rax
  0x00007fb547800d7e: lock xadd %rdi,(%rsi)
  0x00007fb547800d83: add    %rdi,%rax
  0x00007fb547800d86: retq   

StubRoutines::orderaccess_fence [0x00007fb547800d87, 0x00007fb547800d8e[ (7 bytes)
  0x00007fb547800d87: lock addl $0x0,-0x40(%rsp)
  0x00007fb547800d8d: retq   

StubRoutines::get_previous_fp [0x00007fb547800d8e, 0x00007fb547800d9b[ (13 bytes)
  0x00007fb547800d8e: push   %rbp
  0x00007fb547800d8f: mov    %rsp,%rbp
  0x00007fb547800d92: mov    0x0(%rbp),%rax
  0x00007fb547800d96: mov    (%rax),%rax
  0x00007fb547800d99: pop    %rbp
  0x00007fb547800d9a: retq   

StubRoutines::get_previous_sp [0x00007fb547800d9b, 0x00007fb547800da3[ (8 bytes)
  0x00007fb547800d9b: mov    %rsp,%rax
  0x00007fb547800d9e: add    $0x8,%rax
  0x00007fb547800da2: retq   

StubRoutines::verify_mxcsr [0x00007fb547800da3, 0x00007fb547800da4[ (1 bytes)
  0x00007fb547800da3: retq   

Decoding RuntimeStub - StackOverflowError throw_exception 0x00007fb547808510
  0x00007fb547808580: push   %rbp
  0x00007fb547808581: mov    %rsp,%rbp
  0x00007fb547808584: sub    $0x0,%rsp
  0x00007fb547808588: vzeroupper 
  0x00007fb54780858b: mov    %rbp,0x338(%r15)
  0x00007fb547808592: movabs $0x7fb547808588,%r10
  0x00007fb54780859c: mov    %r10,0x330(%r15)
  0x00007fb5478085a3: mov    %rsp,0x328(%r15)
  0x00007fb5478085aa: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478085ae: mov    %r15,%rdi
  0x00007fb5478085b1: callq  0x00007fb56514a4e0 = SharedRuntime::throw_StackOverflowError(JavaThread*)
  0x00007fb5478085b6: movabs $0x0,%r10
  0x00007fb5478085c0: mov    %r10,0x328(%r15)
  0x00007fb5478085c7: movabs $0x0,%r10
  0x00007fb5478085d1: mov    %r10,0x338(%r15)
  0x00007fb5478085d8: movabs $0x0,%r10
  0x00007fb5478085e2: mov    %r10,0x330(%r15)
  0x00007fb5478085e9: vzeroupper 
  0x00007fb5478085ec: leaveq 
  0x00007fb5478085ed: jmpq   0x00007fb547800c00
  0x00007fb5478085f2: hlt    
  0x00007fb5478085f3: hlt    
  0x00007fb5478085f4: hlt    
  0x00007fb5478085f5: hlt    
  0x00007fb5478085f6: hlt    
  0x00007fb5478085f7: hlt    

Decoding RuntimeStub - delayed StackOverflowError throw_exception 0x00007fb547808810
  0x00007fb547808880: push   %rbp
  0x00007fb547808881: mov    %rsp,%rbp
  0x00007fb547808884: sub    $0x0,%rsp
  0x00007fb547808888: vzeroupper 
  0x00007fb54780888b: mov    %rbp,0x338(%r15)
  0x00007fb547808892: movabs $0x7fb547808888,%r10
  0x00007fb54780889c: mov    %r10,0x330(%r15)
  0x00007fb5478088a3: mov    %rsp,0x328(%r15)
  0x00007fb5478088aa: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478088ae: mov    %r15,%rdi
  0x00007fb5478088b1: callq  0x00007fb56514a6c0 = SharedRuntime::throw_delayed_StackOverflowError(JavaThread*)
  0x00007fb5478088b6: movabs $0x0,%r10
  0x00007fb5478088c0: mov    %r10,0x328(%r15)
  0x00007fb5478088c7: movabs $0x0,%r10
  0x00007fb5478088d1: mov    %r10,0x338(%r15)
  0x00007fb5478088d8: movabs $0x0,%r10
  0x00007fb5478088e2: mov    %r10,0x330(%r15)
  0x00007fb5478088e9: vzeroupper 
  0x00007fb5478088ec: leaveq 
  0x00007fb5478088ed: jmpq   0x00007fb547800c00
  0x00007fb5478088f2: hlt    
  0x00007fb5478088f3: hlt    
  0x00007fb5478088f4: hlt    
  0x00007fb5478088f5: hlt    
  0x00007fb5478088f6: hlt    
  0x00007fb5478088f7: hlt    

StubRoutines::updateBytesCRC32 [0x00007fb547800dc0, 0x00007fb547801019[ (601 bytes)
  0x00007fb547800dc0: push   %rbp
  0x00007fb547800dc1: mov    %rsp,%rbp
  0x00007fb547800dc4: movabs $0x7fb56595c000,%rcx
  0x00007fb547800dce: not    %edi
  0x00007fb547800dd0: cmp    $0x10,%edx
  0x00007fb547800dd3: jl     0x00007fb547800ff2
  0x00007fb547800dd9: mov    %esi,%r11d
  0x00007fb547800ddc: and    $0xf,%r11d
  0x00007fb547800de0: je     0x00007fb547800e05
  0x00007fb547800de2: sub    $0x10,%r11d
  0x00007fb547800de6: add    %r11d,%edx
  0x00007fb547800de9: data16 xchg %ax,%ax
  0x00007fb547800dec: movsbl (%rsi),%eax
  0x00007fb547800def: xor    %edi,%eax
  0x00007fb547800df1: and    $0xff,%eax
  0x00007fb547800df7: shr    $0x8,%edi
  0x00007fb547800dfa: xor    (%rcx,%rax,4),%edi
  0x00007fb547800dfd: inc    %rsi
  0x00007fb547800e00: inc    %r11d
  0x00007fb547800e03: jl     0x00007fb547800dec
  0x00007fb547800e05: mov    %edx,%r11d
  0x00007fb547800e08: shr    $0x4,%edx
  0x00007fb547800e0b: je     0x00007fb547800fef
  0x00007fb547800e11: vmovdqa (%rsi),%xmm1
  0x00007fb547800e15: vmovd  %xmm1,%eax
  0x00007fb547800e19: xor    %eax,%edi
  0x00007fb547800e1b: vpinsrd $0x0,%edi,%xmm1,%xmm1
  0x00007fb547800e21: add    $0x10,%rsi
  0x00007fb547800e25: sub    $0x4,%edx
  0x00007fb547800e28: jl     0x00007fb547800f00
  0x00007fb547800e2e: vmovdqa (%rsi),%xmm2
  0x00007fb547800e32: vmovdqa 0x10(%rsi),%xmm3
  0x00007fb547800e37: vmovdqa 0x20(%rsi),%xmm4
  0x00007fb547800e3c: add    $0x30,%rsi
  0x00007fb547800e40: sub    $0x3,%edx
  0x00007fb547800e43: jle    0x00007fb547800ebc
  0x00007fb547800e49: vmovdqu 0x1e15b5cf(%rip),%xmm0        # 0x00007fb56595c420
  0x00007fb547800e51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb547800e5c: data16 data16 xchg %ax,%ax
  0x00007fb547800e60: vpclmulhqhqdq %xmm1,%xmm0,%xmm5
  0x00007fb547800e66: vpclmullqlqdq %xmm1,%xmm0,%xmm1
  0x00007fb547800e6c: vpxor  (%rsi),%xmm1,%xmm1
  0x00007fb547800e70: vpxor  %xmm5,%xmm1,%xmm1
  0x00007fb547800e74: vpclmulhqhqdq %xmm2,%xmm0,%xmm5
  0x00007fb547800e7a: vpclmullqlqdq %xmm2,%xmm0,%xmm2
  0x00007fb547800e80: vpxor  0x10(%rsi),%xmm2,%xmm2
  0x00007fb547800e85: vpxor  %xmm5,%xmm2,%xmm2
  0x00007fb547800e89: vpclmulhqhqdq %xmm3,%xmm0,%xmm5
  0x00007fb547800e8f: vpclmullqlqdq %xmm3,%xmm0,%xmm3
  0x00007fb547800e95: vpxor  0x20(%rsi),%xmm3,%xmm3
  0x00007fb547800e9a: vpxor  %xmm5,%xmm3,%xmm3
  0x00007fb547800e9e: vpclmulhqhqdq %xmm4,%xmm0,%xmm5
  0x00007fb547800ea4: vpclmullqlqdq %xmm4,%xmm0,%xmm4
  0x00007fb547800eaa: vpxor  0x30(%rsi),%xmm4,%xmm4
  0x00007fb547800eaf: vpxor  %xmm5,%xmm4,%xmm4
  0x00007fb547800eb3: add    $0x40,%rsi
  0x00007fb547800eb7: sub    $0x4,%edx
  0x00007fb547800eba: jg     0x00007fb547800e60
  0x00007fb547800ebc: vmovdqu 0x1e15b54c(%rip),%xmm0        # 0x00007fb56595c410
  0x00007fb547800ec4: vpclmulhqhqdq %xmm1,%xmm0,%xmm5
  0x00007fb547800eca: vpclmullqlqdq %xmm1,%xmm0,%xmm1
  0x00007fb547800ed0: vpxor  %xmm2,%xmm1,%xmm1
  0x00007fb547800ed4: vpxor  %xmm5,%xmm1,%xmm1
  0x00007fb547800ed8: vpclmulhqhqdq %xmm1,%xmm0,%xmm5
  0x00007fb547800ede: vpclmullqlqdq %xmm1,%xmm0,%xmm1
  0x00007fb547800ee4: vpxor  %xmm3,%xmm1,%xmm1
  0x00007fb547800ee8: vpxor  %xmm5,%xmm1,%xmm1
  0x00007fb547800eec: vpclmulhqhqdq %xmm1,%xmm0,%xmm5
  0x00007fb547800ef2: vpclmullqlqdq %xmm1,%xmm0,%xmm1
  0x00007fb547800ef8: vpxor  %xmm4,%xmm1,%xmm1
  0x00007fb547800efc: vpxor  %xmm5,%xmm1,%xmm1
  0x00007fb547800f00: add    $0x3,%edx
  0x00007fb547800f03: jle    0x00007fb547800f29
  0x00007fb547800f05: vmovdqu 0x1e15b503(%rip),%xmm0        # 0x00007fb56595c410
  0x00007fb547800f0d: vpclmulhqhqdq %xmm1,%xmm0,%xmm5
  0x00007fb547800f13: vpclmullqlqdq %xmm1,%xmm0,%xmm1
  0x00007fb547800f19: vpxor  (%rsi),%xmm1,%xmm1
  0x00007fb547800f1d: vpxor  %xmm5,%xmm1,%xmm1
  0x00007fb547800f21: add    $0x10,%rsi
  0x00007fb547800f25: dec    %edx
  0x00007fb547800f27: jg     0x00007fb547800f0d
  0x00007fb547800f29: vmovdqu 0x1e15b4cf(%rip),%xmm0        # 0x00007fb56595c400
  0x00007fb547800f31: vpclmulhqlqdq %xmm1,%xmm0,%xmm2
  0x00007fb547800f37: vpand  %xmm2,%xmm0,%xmm3
  0x00007fb547800f3b: vpclmulhqlqdq %xmm3,%xmm0,%xmm0
  0x00007fb547800f41: vpsrldq $0x8,%xmm1,%xmm1
  0x00007fb547800f46: vpsrldq $0x4,%xmm2,%xmm2
  0x00007fb547800f4b: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547800f4f: vpxor  %xmm2,%xmm0,%xmm0
  0x00007fb547800f53: vmovd  %xmm0,%eax
  0x00007fb547800f57: and    $0xff,%eax
  0x00007fb547800f5d: vmovd  (%rcx,%rax,4),%xmm1
  0x00007fb547800f62: vpsrldq $0x1,%xmm0,%xmm0
  0x00007fb547800f67: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547800f6b: vmovd  %xmm0,%eax
  0x00007fb547800f6f: and    $0xff,%eax
  0x00007fb547800f75: vmovd  (%rcx,%rax,4),%xmm1
  0x00007fb547800f7a: vpsrldq $0x1,%xmm0,%xmm0
  0x00007fb547800f7f: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547800f83: vmovd  %xmm0,%eax
  0x00007fb547800f87: and    $0xff,%eax
  0x00007fb547800f8d: vmovd  (%rcx,%rax,4),%xmm1
  0x00007fb547800f92: vpsrldq $0x1,%xmm0,%xmm0
  0x00007fb547800f97: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547800f9b: vmovd  %xmm0,%eax
  0x00007fb547800f9f: and    $0xff,%eax
  0x00007fb547800fa5: vmovd  (%rcx,%rax,4),%xmm1
  0x00007fb547800faa: vpsrldq $0x1,%xmm0,%xmm0
  0x00007fb547800faf: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547800fb3: vmovd  %xmm0,%edi
  0x00007fb547800fb7: mov    %edi,%eax
  0x00007fb547800fb9: and    $0xff,%eax
  0x00007fb547800fbf: shr    $0x8,%edi
  0x00007fb547800fc2: xor    (%rcx,%rax,4),%edi
  0x00007fb547800fc5: mov    %edi,%eax
  0x00007fb547800fc7: and    $0xff,%eax
  0x00007fb547800fcd: shr    $0x8,%edi
  0x00007fb547800fd0: xor    (%rcx,%rax,4),%edi
  0x00007fb547800fd3: mov    %edi,%eax
  0x00007fb547800fd5: and    $0xff,%eax
  0x00007fb547800fdb: shr    $0x8,%edi
  0x00007fb547800fde: xor    (%rcx,%rax,4),%edi
  0x00007fb547800fe1: mov    %edi,%eax
  0x00007fb547800fe3: and    $0xff,%eax
  0x00007fb547800fe9: shr    $0x8,%edi
  0x00007fb547800fec: xor    (%rcx,%rax,4),%edi
  0x00007fb547800fef: mov    %r11d,%edx
  0x00007fb547800ff2: and    $0xf,%edx
  0x00007fb547800ff5: je     0x00007fb547801010
  0x00007fb547800ff7: nop
  0x00007fb547800ff8: movsbl (%rsi),%eax
  0x00007fb547800ffb: xor    %edi,%eax
  0x00007fb547800ffd: and    $0xff,%eax
  0x00007fb547801003: shr    $0x8,%edi
  0x00007fb547801006: xor    (%rcx,%rax,4),%edi
  0x00007fb547801009: inc    %rsi
  0x00007fb54780100c: dec    %edx
  0x00007fb54780100e: jg     0x00007fb547800ff8
  0x00007fb547801010: not    %edi
  0x00007fb547801012: mov    %edi,%eax
  0x00007fb547801014: vzeroupper 
  0x00007fb547801017: leaveq 
  0x00007fb547801018: retq   

StubRoutines::updateBytesCRC32C [0x00007fb547801020, 0x00007fb547801279[ (601 bytes)
  0x00007fb547801020: push   %rbp
  0x00007fb547801021: mov    %rsp,%rbp
  0x00007fb547801024: cmp    $0x1800,%edx
  0x00007fb54780102a: jl     0x00007fb5478010d5
  0x00007fb547801030: xor    %eax,%eax
  0x00007fb547801032: xor    %r9d,%r9d
  0x00007fb547801035: mov    %rsi,%r10
  0x00007fb547801038: add    $0x800,%r10
  0x00007fb54780103f: crc32q (%rsi),%rdi
  0x00007fb547801045: crc32q 0x800(%rsi),%rax
  0x00007fb54780104f: crc32q 0x1000(%rsi),%r9
  0x00007fb547801059: add    $0x8,%rsi
  0x00007fb54780105d: cmp    %r10,%rsi
  0x00007fb547801060: jl     0x00007fb54780103f
  0x00007fb547801062: vmovd  %edi,%xmm0
  0x00007fb547801066: mov    $0x35d73a62,%r11d
  0x00007fb54780106c: vmovd  %r11d,%xmm2
  0x00007fb547801071: vpclmullqlqdq %xmm2,%xmm0,%xmm0
  0x00007fb547801077: vmovq  %xmm0,%rdi
  0x00007fb54780107c: vmovd  %eax,%xmm1
  0x00007fb547801080: mov    $0xd65762a,%r11d
  0x00007fb547801086: vmovd  %r11d,%xmm2
  0x00007fb54780108b: vpclmullqlqdq %xmm2,%xmm1,%xmm1
  0x00007fb547801091: vmovq  %xmm1,%rax
  0x00007fb547801096: shl    %rdi
  0x00007fb547801099: mov    %edi,%r11d
  0x00007fb54780109c: shr    $0x20,%rdi
  0x00007fb5478010a0: xor    %ecx,%ecx
  0x00007fb5478010a2: crc32l %r11d,%ecx
  0x00007fb5478010a8: xor    %ecx,%edi
  0x00007fb5478010aa: shl    %rax
  0x00007fb5478010ad: mov    %eax,%r11d
  0x00007fb5478010b0: shr    $0x20,%rax
  0x00007fb5478010b4: xor    %ecx,%ecx
  0x00007fb5478010b6: crc32l %r11d,%ecx
  0x00007fb5478010bc: xor    %ecx,%eax
  0x00007fb5478010be: xor    %eax,%edi
  0x00007fb5478010c0: xor    %r9d,%edi
  0x00007fb5478010c3: add    $0x1000,%rsi
  0x00007fb5478010ca: sub    $0x1800,%edx
  0x00007fb5478010d0: jmpq   0x00007fb547801024
  0x00007fb5478010d5: cmp    $0x810,%edx
  0x00007fb5478010db: jl     0x00007fb547801186
  0x00007fb5478010e1: xor    %eax,%eax
  0x00007fb5478010e3: xor    %r9d,%r9d
  0x00007fb5478010e6: mov    %rsi,%r10
  0x00007fb5478010e9: add    $0x2b0,%r10
  0x00007fb5478010f0: crc32q (%rsi),%rdi
  0x00007fb5478010f6: crc32q 0x2b0(%rsi),%rax
  0x00007fb547801100: crc32q 0x560(%rsi),%r9
  0x00007fb54780110a: add    $0x8,%rsi
  0x00007fb54780110e: cmp    %r10,%rsi
  0x00007fb547801111: jl     0x00007fb5478010f0
  0x00007fb547801113: vmovd  %edi,%xmm0
  0x00007fb547801117: mov    $0xe1ff9265,%r11d
  0x00007fb54780111d: vmovd  %r11d,%xmm2
  0x00007fb547801122: vpclmullqlqdq %xmm2,%xmm0,%xmm0
  0x00007fb547801128: vmovq  %xmm0,%rdi
  0x00007fb54780112d: vmovd  %eax,%xmm1
  0x00007fb547801131: mov    $0xadd1b2f0,%r11d
  0x00007fb547801137: vmovd  %r11d,%xmm2
  0x00007fb54780113c: vpclmullqlqdq %xmm2,%xmm1,%xmm1
  0x00007fb547801142: vmovq  %xmm1,%rax
  0x00007fb547801147: shl    %rdi
  0x00007fb54780114a: mov    %edi,%r11d
  0x00007fb54780114d: shr    $0x20,%rdi
  0x00007fb547801151: xor    %ecx,%ecx
  0x00007fb547801153: crc32l %r11d,%ecx
  0x00007fb547801159: xor    %ecx,%edi
  0x00007fb54780115b: shl    %rax
  0x00007fb54780115e: mov    %eax,%r11d
  0x00007fb547801161: shr    $0x20,%rax
  0x00007fb547801165: xor    %ecx,%ecx
  0x00007fb547801167: crc32l %r11d,%ecx
  0x00007fb54780116d: xor    %ecx,%eax
  0x00007fb54780116f: xor    %eax,%edi
  0x00007fb547801171: xor    %r9d,%edi
  0x00007fb547801174: add    $0x560,%rsi
  0x00007fb54780117b: sub    $0x810,%edx
  0x00007fb547801181: jmpq   0x00007fb5478010d5
  0x00007fb547801186: cmp    $0x288,%edx
  0x00007fb54780118c: jl     0x00007fb547801237
  0x00007fb547801192: xor    %eax,%eax
  0x00007fb547801194: xor    %r9d,%r9d
  0x00007fb547801197: mov    %rsi,%r10
  0x00007fb54780119a: add    $0xd8,%r10
  0x00007fb5478011a1: crc32q (%rsi),%rdi
  0x00007fb5478011a7: crc32q 0xd8(%rsi),%rax
  0x00007fb5478011b1: crc32q 0x1b0(%rsi),%r9
  0x00007fb5478011bb: add    $0x8,%rsi
  0x00007fb5478011bf: cmp    %r10,%rsi
  0x00007fb5478011c2: jl     0x00007fb5478011a1
  0x00007fb5478011c4: vmovd  %edi,%xmm0
  0x00007fb5478011c8: mov    $0x41019701,%r11d
  0x00007fb5478011ce: vmovd  %r11d,%xmm2
  0x00007fb5478011d3: vpclmullqlqdq %xmm2,%xmm0,%xmm0
  0x00007fb5478011d9: vmovq  %xmm0,%rdi
  0x00007fb5478011de: vmovd  %eax,%xmm1
  0x00007fb5478011e2: mov    $0x730206ad,%r11d
  0x00007fb5478011e8: vmovd  %r11d,%xmm2
  0x00007fb5478011ed: vpclmullqlqdq %xmm2,%xmm1,%xmm1
  0x00007fb5478011f3: vmovq  %xmm1,%rax
  0x00007fb5478011f8: shl    %rdi
  0x00007fb5478011fb: mov    %edi,%r11d
  0x00007fb5478011fe: shr    $0x20,%rdi
  0x00007fb547801202: xor    %ecx,%ecx
  0x00007fb547801204: crc32l %r11d,%ecx
  0x00007fb54780120a: xor    %ecx,%edi
  0x00007fb54780120c: shl    %rax
  0x00007fb54780120f: mov    %eax,%r11d
  0x00007fb547801212: shr    $0x20,%rax
  0x00007fb547801216: xor    %ecx,%ecx
  0x00007fb547801218: crc32l %r11d,%ecx
  0x00007fb54780121e: xor    %ecx,%eax
  0x00007fb547801220: xor    %eax,%edi
  0x00007fb547801222: xor    %r9d,%edi
  0x00007fb547801225: add    $0x1b0,%rsi
  0x00007fb54780122c: sub    $0x288,%edx
  0x00007fb547801232: jmpq   0x00007fb547801186
  0x00007fb547801237: mov    %edx,%eax
  0x00007fb547801239: and    $0x7,%eax
  0x00007fb54780123c: neg    %eax
  0x00007fb54780123e: add    %edx,%eax
  0x00007fb547801240: add    %rsi,%rax
  0x00007fb547801243: cmp    %rax,%rsi
  0x00007fb547801246: jge    0x00007fb547801257
  0x00007fb54780124c: crc32l (%rsi),%edi
  0x00007fb547801251: add    $0x4,%rsi
  0x00007fb547801255: jmp    0x00007fb547801243
  0x00007fb547801257: and    $0x7,%edx
  0x00007fb54780125a: mov    $0x1,%r9d
  0x00007fb547801260: cmp    %edx,%r9d
  0x00007fb547801263: jg     0x00007fb547801272
  0x00007fb547801265: crc32b (%rsi),%edi
  0x00007fb54780126a: inc    %rsi
  0x00007fb54780126d: inc    %r9d
  0x00007fb547801270: jmp    0x00007fb547801260
  0x00007fb547801272: mov    %edi,%eax
  0x00007fb547801274: vzeroupper 
  0x00007fb547801277: leaveq 
  0x00007fb547801278: retq   

StubRoutines::libmExp [0x00007fb547801279, 0x00007fb5478015a6[ (813 bytes)
  0x00007fb547801279: push   %rbp
  0x00007fb54780127a: mov    %rsp,%rbp
  0x00007fb54780127d: jmpq   0x00007fb547801282
  0x00007fb547801282: sub    $0x18,%rsp
  0x00007fb547801286: vmovsd %xmm0,0x8(%rsp)
  0x00007fb54780128c: vunpcklpd %xmm0,%xmm0,%xmm0
  0x00007fb547801290: vmovdqu 0x1e152388(%rip),%xmm1        # 0x00007fb565953620
  0x00007fb547801298: vmovdqu 0x1e152370(%rip),%xmm6        # 0x00007fb565953610
  0x00007fb5478012a0: vmovdqu 0x1e152388(%rip),%xmm2        # 0x00007fb565953630
  0x00007fb5478012a8: vmovdqu 0x1e152390(%rip),%xmm3        # 0x00007fb565953640
  0x00007fb5478012b0: vpextrw $0x3,%xmm0,%eax
  0x00007fb5478012b5: and    $0x7fff,%eax
  0x00007fb5478012bb: mov    $0x408f,%edx
  0x00007fb5478012c0: sub    %eax,%edx
  0x00007fb5478012c2: sub    $0x3c90,%eax
  0x00007fb5478012c8: or     %eax,%edx
  0x00007fb5478012ca: cmp    $0x80000000,%edx
  0x00007fb5478012d0: jae    0x00007fb54780156b
  0x00007fb5478012d6: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb5478012da: vaddpd %xmm6,%xmm1,%xmm1
  0x00007fb5478012de: vmovapd %xmm1,%xmm7
  0x00007fb5478012e2: vsubpd %xmm6,%xmm1,%xmm1
  0x00007fb5478012e6: vmulpd %xmm1,%xmm2,%xmm2
  0x00007fb5478012ea: vmovdqu 0x1e15236e(%rip),%xmm4        # 0x00007fb565953660
  0x00007fb5478012f2: vmulpd %xmm1,%xmm3,%xmm3
  0x00007fb5478012f6: vmovdqu 0x1e152372(%rip),%xmm5        # 0x00007fb565953670
  0x00007fb5478012fe: vsubpd %xmm2,%xmm0,%xmm0
  0x00007fb547801302: vmovd  %xmm7,%eax
  0x00007fb547801306: mov    %eax,%ecx
  0x00007fb547801308: and    $0x3f,%ecx
  0x00007fb54780130b: shl    $0x4,%ecx
  0x00007fb54780130e: sar    $0x6,%eax
  0x00007fb547801311: mov    %eax,%edx
  0x00007fb547801313: vmovdqu 0x1e1522e5(%rip),%xmm6        # 0x00007fb565953600
  0x00007fb54780131b: vpand  %xmm6,%xmm7,%xmm7
  0x00007fb54780131f: vmovdqu 0x1e1522c9(%rip),%xmm6        # 0x00007fb5659535f0
  0x00007fb547801327: vpaddq %xmm6,%xmm7,%xmm7
  0x00007fb54780132b: (bad)  
  0x00007fb54780132f: imull  (%rsi)
  0x00007fb547801331: vsubpd %xmm3,%xmm0,%xmm0
  0x00007fb547801335: movabs $0x7fb5659531f0,%r11
  0x00007fb54780133f: vmovdqu (%rcx,%r11,1),%xmm2
  0x00007fb547801345: vmulpd %xmm0,%xmm4,%xmm4
  0x00007fb547801349: vmovapd %xmm0,%xmm6
  0x00007fb54780134d: vmovapd %xmm0,%xmm1
  0x00007fb547801351: vmulpd %xmm6,%xmm6,%xmm6
  0x00007fb547801355: vmulpd %xmm6,%xmm0,%xmm0
  0x00007fb547801359: vaddpd %xmm4,%xmm5,%xmm5
  0x00007fb54780135d: vmulsd %xmm6,%xmm0,%xmm0
  0x00007fb547801361: vmulpd 0x1e1522e7(%rip),%xmm6,%xmm6        # 0x00007fb565953650
  0x00007fb547801369: vaddsd %xmm2,%xmm1,%xmm1
  0x00007fb54780136d: vunpckhpd %xmm2,%xmm2,%xmm2
  0x00007fb547801371: vmulpd %xmm5,%xmm0,%xmm0
  0x00007fb547801375: vaddsd %xmm0,%xmm1,%xmm1
  0x00007fb547801379: vpor   %xmm7,%xmm2,%xmm2
  0x00007fb54780137d: vunpckhpd %xmm0,%xmm0,%xmm0
  0x00007fb547801381: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb547801385: vaddsd %xmm6,%xmm0,%xmm0
  0x00007fb547801389: add    $0x37e,%edx
  0x00007fb54780138f: cmp    $0x77c,%edx
  0x00007fb547801395: ja     0x00007fb5478013a8
  0x00007fb54780139b: vmulsd %xmm2,%xmm0,%xmm0
  0x00007fb54780139f: vaddsd %xmm2,%xmm0,%xmm0
  0x00007fb5478013a3: jmpq   0x00007fb5478015a0
  0x00007fb5478013a8: vxorpd %xmm3,%xmm3,%xmm3
  0x00007fb5478013ac: vmovdqu 0x1e151e2c(%rip),%xmm4        # 0x00007fb5659531e0
  0x00007fb5478013b4: mov    $0xfffffc02,%edx
  0x00007fb5478013b9: sub    %eax,%edx
  0x00007fb5478013bb: vmovd  %edx,%xmm5
  0x00007fb5478013bf: vpsllq %xmm5,%xmm4,%xmm4
  0x00007fb5478013c3: mov    %eax,%ecx
  0x00007fb5478013c5: sar    %eax
  0x00007fb5478013c7: vpinsrw $0x3,%eax,%xmm3,%xmm3
  0x00007fb5478013cc: vmovdqu 0x1e151dfc(%rip),%xmm6        # 0x00007fb5659531d0
  0x00007fb5478013d4: (bad)  
  0x00007fb5478013d8: repz add $0xc5,%al
  0x00007fb5478013db: jmpq   0x00007fb54345e7da
  0x00007fb5478013e0: pop    %rcx
  0x00007fb5478013e1: retq   $0xfa83
  0x00007fb5478013e4: xor    $0xf,%al
  0x00007fb5478013e6: (bad)  
  0x00007fb5478013ea: add    %al,%ch
  0x00007fb5478013ec: (bad)  
  0x00007fb5478013ee: loop   0x00007fb5478013b5
  0x00007fb5478013f0: loope  0x00007fb5478013f0
  0x00007fb5478013f2: faddp  %st,%st(5)
  0x00007fb5478013f4: jmp    0x00007fb547801452
  0x00007fb5478013f6: (bad)  
  0x00007fb5478013f7: vaddsd %xmm2,%xmm0,%xmm0
  0x00007fb5478013fb: cmp    $0x3ff,%ecx
  0x00007fb547801401: jge    0x00007fb547801491
  0x00007fb547801407: vpextrw $0x3,%xmm0,%ecx
  0x00007fb54780140c: and    $0x8000,%ecx
  0x00007fb547801412: or     %ecx,%edx
  0x00007fb547801414: cmp    $0x0,%edx
  0x00007fb547801417: je     0x00007fb547801484
  0x00007fb54780141d: vmovapd %xmm0,%xmm6
  0x00007fb547801421: vaddsd %xmm4,%xmm0,%xmm0
  0x00007fb547801425: vmulsd %xmm3,%xmm0,%xmm0
  0x00007fb547801429: vpextrw $0x3,%xmm0,%ecx
  0x00007fb54780142e: and    $0x7ff0,%ecx
  0x00007fb547801434: cmp    $0x0,%ecx
  0x00007fb547801437: je     0x00007fb547801442
  0x00007fb54780143d: jmpq   0x00007fb5478015a0
  0x00007fb547801442: vmulsd %xmm3,%xmm6,%xmm6
  0x00007fb547801446: vmulsd %xmm3,%xmm4,%xmm4
  0x00007fb54780144a: vmovdqu %xmm6,%xmm0
  0x00007fb54780144e: vpxor  %xmm4,%xmm6,%xmm6
  0x00007fb547801452: vpsrad $0x1f,%xmm6,%xmm6
  0x00007fb547801457: vpshufd $0x55,%xmm6,%xmm6
  0x00007fb54780145c: (bad)  
  0x00007fb547801460: lock add %eax,%ebp
  0x00007fb547801463: stc    
  0x00007fb547801464: jae    0x00007fb547801436
  0x00007fb547801466: add    %eax,%ebp
  0x00007fb547801468: stc    
  0x00007fb547801469: out    %eax,(%dx)
  0x00007fb54780146a: mov    $0xc9,%ch
  0x00007fb54780146d: jae    0x00007fb547801445
  0x00007fb54780146f: (bad)  
  0x00007fb547801470: vpaddq %xmm6,%xmm0,%xmm0
  0x00007fb547801474: vpaddq %xmm4,%xmm0,%xmm0
  0x00007fb547801478: movl   $0xf,(%rsp)
  0x00007fb54780147f: jmpq   0x00007fb547801594
  0x00007fb547801484: vaddsd %xmm4,%xmm0,%xmm0
  0x00007fb547801488: vmulsd %xmm3,%xmm0,%xmm0
  0x00007fb54780148c: jmpq   0x00007fb5478015a0
  0x00007fb547801491: vaddsd %xmm4,%xmm0,%xmm0
  0x00007fb547801495: vmulsd %xmm3,%xmm0,%xmm0
  0x00007fb547801499: vpextrw $0x3,%xmm0,%ecx
  0x00007fb54780149e: and    $0x7ff0,%ecx
  0x00007fb5478014a4: cmp    $0x7ff0,%ecx
  0x00007fb5478014aa: jae    0x00007fb5478014f5
  0x00007fb5478014b0: jmpq   0x00007fb5478015a0
  0x00007fb5478014b5: vpaddd %xmm6,%xmm3,%xmm3
  0x00007fb5478014b9: vaddpd %xmm2,%xmm0,%xmm0
  0x00007fb5478014bd: vmulsd %xmm3,%xmm0,%xmm0
  0x00007fb5478014c1: movl   $0xf,(%rsp)
  0x00007fb5478014c8: jmpq   0x00007fb547801594
  0x00007fb5478014cd: cmp    $0x7ff00000,%eax
  0x00007fb5478014d3: jae    0x00007fb547801519
  0x00007fb5478014d9: mov    0xc(%rsp),%eax
  0x00007fb5478014dd: cmp    $0x80000000,%eax
  0x00007fb5478014e3: jae    0x00007fb547801501
  0x00007fb5478014e9: vmovsd 0x1e151cd7(%rip),%xmm0        # 0x00007fb5659531c8
  0x00007fb5478014f1: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb5478014f5: movl   $0xe,(%rsp)
  0x00007fb5478014fc: jmpq   0x00007fb547801594
  0x00007fb547801501: vmovsd 0x1e151cb7(%rip),%xmm0        # 0x00007fb5659531c0
  0x00007fb547801509: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb54780150d: movl   $0xf,(%rsp)
  0x00007fb547801514: jmpq   0x00007fb547801594
  0x00007fb547801519: mov    0x8(%rsp),%edx
  0x00007fb54780151d: cmp    $0x7ff00000,%eax
  0x00007fb547801523: ja     0x00007fb54780155c
  0x00007fb547801529: cmp    $0x0,%edx
  0x00007fb54780152c: jne    0x00007fb54780155c
  0x00007fb547801532: mov    0xc(%rsp),%eax
  0x00007fb547801536: cmp    $0x7ff00000,%eax
  0x00007fb54780153c: jne    0x00007fb54780154f
  0x00007fb547801542: vmovsd 0x1e151c6e(%rip),%xmm0        # 0x00007fb5659531b8
  0x00007fb54780154a: jmpq   0x00007fb5478015a0
  0x00007fb54780154f: vmovsd 0x1e18f0c9(%rip),%xmm0        # 0x00007fb565990620
  0x00007fb547801557: jmpq   0x00007fb5478015a0
  0x00007fb54780155c: vmovsd 0x8(%rsp),%xmm0
  0x00007fb547801562: vaddsd %xmm0,%xmm0,%xmm0
  0x00007fb547801566: jmpq   0x00007fb5478015a0
  0x00007fb54780156b: mov    0xc(%rsp),%eax
  0x00007fb54780156f: and    $0x7fffffff,%eax
  0x00007fb547801575: cmp    $0x40900000,%eax
  0x00007fb54780157b: jae    0x00007fb5478014cd
  0x00007fb547801581: vmovsd %xmm0,0x8(%rsp)
  0x00007fb547801587: vaddsd 0x1e151c21(%rip),%xmm0,%xmm0        # 0x00007fb5659531b0
  0x00007fb54780158f: jmpq   0x00007fb5478015a0
  0x00007fb547801594: vmovq  %xmm0,0x10(%rsp)
  0x00007fb54780159a: vmovq  0x10(%rsp),%xmm0
  0x00007fb5478015a0: add    $0x18,%rsp
  0x00007fb5478015a4: leaveq 
  0x00007fb5478015a5: retq   

StubRoutines::libmLog [0x00007fb5478015a6, 0x00007fb547801822[ (636 bytes)
  0x00007fb5478015a6: push   %rbp
  0x00007fb5478015a7: mov    %rsp,%rbp
  0x00007fb5478015aa: jmpq   0x00007fb5478015af
  0x00007fb5478015af: sub    $0x18,%rsp
  0x00007fb5478015b3: vmovsd %xmm0,(%rsp)
  0x00007fb5478015b8: movabs $0x3ff0000000000000,%rax
  0x00007fb5478015c2: vmovq  %rax,%xmm2
  0x00007fb5478015c7: movabs $0x77f0000000000000,%rdx
  0x00007fb5478015d1: vmovq  %rdx,%xmm3
  0x00007fb5478015d6: mov    $0x8000,%ecx
  0x00007fb5478015db: vmovd  %ecx,%xmm4
  0x00007fb5478015df: movabs $0xffffe00000000000,%r11
  0x00007fb5478015e9: vmovq  %r11,%xmm5
  0x00007fb5478015ee: vmovdqu %xmm0,%xmm1
  0x00007fb5478015f2: vpextrw $0x3,%xmm0,%eax
  0x00007fb5478015f7: vpor   %xmm2,%xmm0,%xmm0
  0x00007fb5478015fb: mov    $0x3fe0,%ecx
  0x00007fb547801600: vpsrlq $0x1b,%xmm0,%xmm0
  0x00007fb547801605: movabs $0x7fb5659536c0,%r8
  0x00007fb54780160f: vpsrld $0x2,%xmm0,%xmm0
  0x00007fb547801614: vrcpps %xmm0,%xmm0
  0x00007fb547801618: (bad)  
  0x00007fb54780161c: icebp  
  0x00007fb54780161d: or     $0xc5,%al
  0x00007fb54780161f: stc    
  0x00007fb547801620: jo     0x00007fb547801617
  0x00007fb547801622: in     $0xc5,%al
  0x00007fb547801624: icebp  
  0x00007fb547801625: jae    0x00007fb5478015f8
  0x00007fb547801627: or     $0x83,%al
  0x00007fb547801629: callq  0x00007fb52878973e
  0x00007fb54780162e: jg     0x00007fb547801630
  0x00007fb547801630: add    %cl,(%rdi)
  0x00007fb547801632: adc    $0x0,%esp
  0x00007fb547801635: add    %al,(%rax)
  0x00007fb547801637: vpaddd %xmm4,%xmm0,%xmm0
  0x00007fb54780163b: vpor   %xmm3,%xmm1,%xmm1
  0x00007fb54780163f: vmovd  %xmm0,%edx
  0x00007fb547801643: (bad)  
  0x00007fb547801647: lock sbb $0xe9dbd1c5,%eax
  0x00007fb54780164d: vpand  %xmm6,%xmm0,%xmm0
  0x00007fb547801651: vsubsd %xmm5,%xmm1,%xmm1
  0x00007fb547801655: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547801659: and    $0x7ff0,%eax
  0x00007fb54780165f: sub    %ecx,%eax
  0x00007fb547801661: vcvtsi2sd %eax,%xmm7,%xmm7
  0x00007fb547801665: vmulsd %xmm0,%xmm1,%xmm1
  0x00007fb547801669: vmovq  0x1e15203f(%rip),%xmm6        # 0x00007fb5659536b0
  0x00007fb547801671: vmovdqu 0x1e152007(%rip),%xmm3        # 0x00007fb565953680
  0x00007fb547801679: vsubsd %xmm2,%xmm5,%xmm5
  0x00007fb54780167d: and    $0xff0000,%edx
  0x00007fb547801683: shr    $0xc,%edx
  0x00007fb547801686: vmovdqu (%r8,%rdx,1),%xmm0
  0x00007fb54780168c: vmovdqu 0x1e151ffc(%rip),%xmm4        # 0x00007fb565953690
  0x00007fb547801694: vaddsd %xmm5,%xmm1,%xmm1
  0x00007fb547801698: vmovdqu 0x1e152000(%rip),%xmm2        # 0x00007fb5659536a0
  0x00007fb5478016a0: vmulsd %xmm7,%xmm6,%xmm6
  0x00007fb5478016a4: vmovddup %xmm1,%xmm5
  0x00007fb5478016a8: vmulsd 0x1e152008(%rip),%xmm7,%xmm7        # 0x00007fb5659536b8
  0x00007fb5478016b0: vmulsd %xmm1,%xmm3,%xmm3
  0x00007fb5478016b4: vaddsd %xmm6,%xmm0,%xmm0
  0x00007fb5478016b8: vmulpd %xmm5,%xmm4,%xmm4
  0x00007fb5478016bc: vmulpd %xmm5,%xmm5,%xmm5
  0x00007fb5478016c0: vmovddup %xmm0,%xmm6
  0x00007fb5478016c4: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb5478016c8: vaddpd %xmm2,%xmm4,%xmm4
  0x00007fb5478016cc: vmulpd %xmm5,%xmm3,%xmm3
  0x00007fb5478016d0: vsubsd %xmm0,%xmm6,%xmm6
  0x00007fb5478016d4: vmulsd %xmm1,%xmm4,%xmm4
  0x00007fb5478016d8: vpshufd $0xee,%xmm0,%xmm2
  0x00007fb5478016dd: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb5478016e1: vmulsd %xmm5,%xmm5,%xmm5
  0x00007fb5478016e5: vaddsd %xmm2,%xmm7,%xmm7
  0x00007fb5478016e9: vaddpd %xmm3,%xmm4,%xmm4
  0x00007fb5478016ed: vaddsd %xmm7,%xmm1,%xmm1
  0x00007fb5478016f1: vmulpd %xmm5,%xmm4,%xmm4
  0x00007fb5478016f5: vaddsd %xmm4,%xmm1,%xmm1
  0x00007fb5478016f9: vpshufd $0xee,%xmm4,%xmm5
  0x00007fb5478016fe: vaddsd %xmm5,%xmm1,%xmm1
  0x00007fb547801702: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb547801706: jmpq   0x00007fb54780181c
  0x00007fb54780170b: vmovq  (%rsp),%xmm0
  0x00007fb547801710: vmovq  (%rsp),%xmm1
  0x00007fb547801715: add    $0x10,%eax
  0x00007fb547801718: cmp    $0x8000,%eax
  0x00007fb54780171e: jae    0x00007fb5478017a9
  0x00007fb547801724: cmp    $0x10,%eax
  0x00007fb547801727: jb     0x00007fb547801742
  0x00007fb54780172d: vaddsd %xmm0,%xmm0,%xmm0
  0x00007fb547801731: jmpq   0x00007fb54780181c
  0x00007fb547801736: ja     0x00007fb54780172d
  0x00007fb547801738: cmp    $0x0,%edx
  0x00007fb54780173b: ja     0x00007fb54780172d
  0x00007fb54780173d: jmpq   0x00007fb5478017cf
  0x00007fb547801742: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb547801746: vaddsd %xmm0,%xmm1,%xmm1
  0x00007fb54780174a: vmovd  %xmm1,%edx
  0x00007fb54780174e: vpsrlq $0x20,%xmm1,%xmm1
  0x00007fb547801753: vmovd  %xmm1,%ecx
  0x00007fb547801757: or     %ecx,%edx
  0x00007fb547801759: cmp    $0x0,%edx
  0x00007fb54780175c: je     0x00007fb5478017f2
  0x00007fb547801762: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb547801766: mov    $0x47f0,%eax
  0x00007fb54780176b: vpinsrw $0x3,%eax,%xmm1,%xmm1
  0x00007fb547801770: vmulsd %xmm1,%xmm0,%xmm0
  0x00007fb547801774: vmovdqu %xmm0,%xmm1
  0x00007fb547801778: vpextrw $0x3,%xmm0,%eax
  0x00007fb54780177d: vpor   %xmm2,%xmm0,%xmm0
  0x00007fb547801781: vpsrlq $0x1b,%xmm0,%xmm0
  0x00007fb547801786: mov    $0x47f0,%ecx
  0x00007fb54780178b: vpsrld $0x2,%xmm0,%xmm0
  0x00007fb547801790: vrcpps %xmm0,%xmm0
  0x00007fb547801794: (bad)  
  0x00007fb547801798: icebp  
  0x00007fb547801799: or     $0xc5,%al
  0x00007fb54780179b: stc    
  0x00007fb54780179c: jo     0x00007fb547801793
  0x00007fb54780179e: in     $0xc5,%al
  0x00007fb5478017a0: icebp  
  0x00007fb5478017a1: jae    0x00007fb547801774
  0x00007fb5478017a3: or     $0xe9,%al
  0x00007fb5478017a5: mov    %esi,%?
  0x00007fb5478017a7: (bad)  
  0x00007fb5478017a8: inc    %ebp
  0x00007fb5478017aa: stc    
  0x00007fb5478017ab: jle    0x00007fb547801777
  0x00007fb5478017ad: vpsrlq $0x20,%xmm1,%xmm1
  0x00007fb5478017b2: vmovd  %xmm1,%ecx
  0x00007fb5478017b6: add    %ecx,%ecx
  0x00007fb5478017b8: cmp    $0xffe00000,%ecx
  0x00007fb5478017be: jae    0x00007fb547801736
  0x00007fb5478017c4: or     %ecx,%edx
  0x00007fb5478017c6: cmp    $0x0,%edx
  0x00007fb5478017c9: je     0x00007fb5478017f2
  0x00007fb5478017cf: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb5478017d3: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb5478017d7: mov    $0x7ff0,%eax
  0x00007fb5478017dc: vpinsrw $0x3,%eax,%xmm1,%xmm1
  0x00007fb5478017e1: vmulsd %xmm1,%xmm0,%xmm0
  0x00007fb5478017e5: movl   $0x3,0x10(%rsp)
  0x00007fb5478017ed: jmpq   0x00007fb547801810
  0x00007fb5478017f2: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb5478017f6: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb5478017fa: mov    $0xbff0,%eax
  0x00007fb5478017ff: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb547801804: vdivsd %xmm1,%xmm0,%xmm0
  0x00007fb547801808: movl   $0x2,0x10(%rsp)
  0x00007fb547801810: vmovq  %xmm0,0x8(%rsp)
  0x00007fb547801816: vmovq  0x8(%rsp),%xmm0
  0x00007fb54780181c: add    $0x18,%rsp
  0x00007fb547801820: leaveq 
  0x00007fb547801821: retq   

StubRoutines::libmLog10 [0x00007fb547801822, 0x00007fb547801ad1[ (687 bytes)
  0x00007fb547801822: push   %rbp
  0x00007fb547801823: mov    %rsp,%rbp
  0x00007fb547801826: sub    $0x18,%rsp
  0x00007fb54780182a: vmovsd %xmm0,(%rsp)
  0x00007fb54780182f: vxorpd %xmm2,%xmm2,%xmm2
  0x00007fb547801833: mov    $0x3ff0,%eax
  0x00007fb547801838: vpinsrw $0x3,%eax,%xmm2,%xmm2
  0x00007fb54780183d: mov    $0x3ede0000,%ecx
  0x00007fb547801842: vmovd  %ecx,%xmm7
  0x00007fb547801846: vxorpd %xmm3,%xmm3,%xmm3
  0x00007fb54780184a: mov    $0x77f0,%edx
  0x00007fb54780184f: vpinsrw $0x3,%edx,%xmm3,%xmm3
  0x00007fb547801854: vmovdqu %xmm0,%xmm1
  0x00007fb547801858: mov    $0x8000,%edx
  0x00007fb54780185d: vmovd  %edx,%xmm4
  0x00007fb547801861: vmovdqu 0x1e152ec7(%rip),%xmm5        # 0x00007fb565954730
  0x00007fb547801869: vpextrw $0x3,%xmm0,%eax
  0x00007fb54780186e: vpor   %xmm2,%xmm0,%xmm0
  0x00007fb547801872: mov    $0x3fe0,%ecx
  0x00007fb547801877: vpsrlq $0x1b,%xmm0,%xmm0
  0x00007fb54780187c: vmovdqu 0x1e152e9c(%rip),%xmm2        # 0x00007fb565954720
  0x00007fb547801884: vpsrld $0x2,%xmm0,%xmm0
  0x00007fb547801889: vrcpps %xmm0,%xmm0
  0x00007fb54780188d: (bad)  
  0x00007fb547801891: icebp  
  0x00007fb547801892: or     $0xc5,%al
  0x00007fb547801894: stc    
  0x00007fb547801895: jo     0x00007fb54780188c
  0x00007fb547801897: rex.WRX vpsrlq $0xc,%xmm1,%xmm1
  0x00007fb54780189d: sub    $0x10,%eax
  0x00007fb5478018a0: cmp    $0x7fe0,%eax
  0x00007fb5478018a6: jae    0x00007fb5478019a4
  0x00007fb5478018ac: vmulss %xmm7,%xmm0,%xmm0
  0x00007fb5478018b0: vpor   %xmm3,%xmm1,%xmm1
  0x00007fb5478018b4: movabs $0x7fb565953f10,%r11
  0x00007fb5478018be: vandpd %xmm1,%xmm5,%xmm5
  0x00007fb5478018c2: vpaddd %xmm4,%xmm0,%xmm0
  0x00007fb5478018c6: vsubsd %xmm5,%xmm1,%xmm1
  0x00007fb5478018ca: vmovd  %xmm0,%edx
  0x00007fb5478018ce: (bad)  
  0x00007fb5478018d2: lock sbb $0xc654f9c5,%eax
  0x00007fb5478018d8: and    $0x7ff0,%eax
  0x00007fb5478018de: sub    %ecx,%eax
  0x00007fb5478018e0: vcvtsi2sd %eax,%xmm7,%xmm7
  0x00007fb5478018e4: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb5478018e8: vmulsd %xmm0,%xmm1,%xmm1
  0x00007fb5478018ec: vmovq  0x1e15260c(%rip),%xmm6        # 0x00007fb565953f00
  0x00007fb5478018f4: vmovdqu 0x1e1525d4(%rip),%xmm3        # 0x00007fb565953ed0
  0x00007fb5478018fc: vsubsd %xmm2,%xmm5,%xmm5
  0x00007fb547801900: and    $0xff0000,%edx
  0x00007fb547801906: shr    $0xc,%edx
  0x00007fb547801909: vmovdqu -0x5e0(%r11,%rdx,1),%xmm0
  0x00007fb547801913: vmovdqu 0x1e1525c5(%rip),%xmm4        # 0x00007fb565953ee0
  0x00007fb54780191b: vaddsd %xmm5,%xmm1,%xmm1
  0x00007fb54780191f: vmovdqu 0x1e1525c9(%rip),%xmm2        # 0x00007fb565953ef0
  0x00007fb547801927: vmulsd %xmm7,%xmm6,%xmm6
  0x00007fb54780192b: vpshufd $0x44,%xmm1,%xmm5
  0x00007fb547801930: vmulsd 0x1e1525d0(%rip),%xmm7,%xmm7        # 0x00007fb565953f08
  0x00007fb547801938: vmulsd %xmm1,%xmm3,%xmm3
  0x00007fb54780193c: vaddsd %xmm6,%xmm0,%xmm0
  0x00007fb547801940: vmulpd %xmm5,%xmm4,%xmm4
  0x00007fb547801944: vmovq  0x1e152ddc(%rip),%xmm6        # 0x00007fb565954728
  0x00007fb54780194c: vmulpd %xmm5,%xmm5,%xmm5
  0x00007fb547801950: vaddpd %xmm2,%xmm4,%xmm4
  0x00007fb547801954: vmulpd %xmm5,%xmm3,%xmm3
  0x00007fb547801958: vpshufd $0xe4,%xmm0,%xmm2
  0x00007fb54780195d: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb547801961: vmulsd %xmm1,%xmm4,%xmm4
  0x00007fb547801965: vsubsd %xmm0,%xmm2,%xmm2
  0x00007fb547801969: vmulsd %xmm1,%xmm6,%xmm6
  0x00007fb54780196d: vaddsd %xmm2,%xmm1,%xmm1
  0x00007fb547801971: vpshufd $0xee,%xmm0,%xmm2
  0x00007fb547801976: vmulsd %xmm5,%xmm5,%xmm5
  0x00007fb54780197a: vaddsd %xmm2,%xmm7,%xmm7
  0x00007fb54780197e: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb547801982: vaddpd %xmm3,%xmm4,%xmm4
  0x00007fb547801986: vaddsd %xmm7,%xmm1,%xmm1
  0x00007fb54780198a: vmulpd %xmm5,%xmm4,%xmm4
  0x00007fb54780198e: vaddsd %xmm4,%xmm1,%xmm1
  0x00007fb547801992: vpshufd $0xee,%xmm4,%xmm5
  0x00007fb547801997: vaddsd %xmm5,%xmm1,%xmm1
  0x00007fb54780199b: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb54780199f: jmpq   0x00007fb547801acb
  0x00007fb5478019a4: vmovq  (%rsp),%xmm0
  0x00007fb5478019a9: vmovq  (%rsp),%xmm1
  0x00007fb5478019ae: add    $0x10,%eax
  0x00007fb5478019b1: cmp    $0x8000,%eax
  0x00007fb5478019b7: jae    0x00007fb547801a58
  0x00007fb5478019bd: cmp    $0x10,%eax
  0x00007fb5478019c0: jb     0x00007fb5478019db
  0x00007fb5478019c6: vaddsd %xmm0,%xmm0,%xmm0
  0x00007fb5478019ca: jmpq   0x00007fb547801acb
  0x00007fb5478019cf: ja     0x00007fb5478019c6
  0x00007fb5478019d1: cmp    $0x0,%edx
  0x00007fb5478019d4: ja     0x00007fb5478019c6
  0x00007fb5478019d6: jmpq   0x00007fb547801a7e
  0x00007fb5478019db: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb5478019df: vaddsd %xmm0,%xmm1,%xmm1
  0x00007fb5478019e3: vmovd  %xmm1,%edx
  0x00007fb5478019e7: vpsrlq $0x20,%xmm1,%xmm1
  0x00007fb5478019ec: vmovd  %xmm1,%ecx
  0x00007fb5478019f0: or     %ecx,%edx
  0x00007fb5478019f2: cmp    $0x0,%edx
  0x00007fb5478019f5: je     0x00007fb547801aa1
  0x00007fb5478019fb: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb5478019ff: mov    $0x47f0,%eax
  0x00007fb547801a04: vpinsrw $0x3,%eax,%xmm1,%xmm1
  0x00007fb547801a09: vmulsd %xmm1,%xmm0,%xmm0
  0x00007fb547801a0d: vxorpd %xmm2,%xmm2,%xmm2
  0x00007fb547801a11: mov    $0x3ff0,%eax
  0x00007fb547801a16: vpinsrw $0x3,%eax,%xmm2,%xmm2
  0x00007fb547801a1b: vmovdqu %xmm0,%xmm1
  0x00007fb547801a1f: vpextrw $0x3,%xmm0,%eax
  0x00007fb547801a24: vpor   %xmm2,%xmm0,%xmm0
  0x00007fb547801a28: mov    $0x47f0,%ecx
  0x00007fb547801a2d: vpsrlq $0x1b,%xmm0,%xmm0
  0x00007fb547801a32: vmovdqu 0x1e152ce6(%rip),%xmm2        # 0x00007fb565954720
  0x00007fb547801a3a: vpsrld $0x2,%xmm0,%xmm0
  0x00007fb547801a3f: vrcpps %xmm0,%xmm0
  0x00007fb547801a43: (bad)  
  0x00007fb547801a47: icebp  
  0x00007fb547801a48: or     $0xc5,%al
  0x00007fb547801a4a: stc    
  0x00007fb547801a4b: jo     0x00007fb547801a42
  0x00007fb547801a4d: rex.WRX vpsrlq $0xc,%xmm1,%xmm1
  0x00007fb547801a53: jmpq   0x00007fb5478018ac
  0x00007fb547801a58: vmovd  %xmm1,%edx
  0x00007fb547801a5c: vpsrlq $0x20,%xmm1,%xmm1
  0x00007fb547801a61: vmovd  %xmm1,%ecx
  0x00007fb547801a65: add    %ecx,%ecx
  0x00007fb547801a67: cmp    $0xffe00000,%ecx
  0x00007fb547801a6d: jae    0x00007fb5478019cf
  0x00007fb547801a73: or     %ecx,%edx
  0x00007fb547801a75: cmp    $0x0,%edx
  0x00007fb547801a78: je     0x00007fb547801aa1
  0x00007fb547801a7e: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb547801a82: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb547801a86: mov    $0x7ff0,%eax
  0x00007fb547801a8b: vpinsrw $0x3,%eax,%xmm1,%xmm1
  0x00007fb547801a90: vmulsd %xmm1,%xmm0,%xmm0
  0x00007fb547801a94: movl   $0x9,0x10(%rsp)
  0x00007fb547801a9c: jmpq   0x00007fb547801abf
  0x00007fb547801aa1: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb547801aa5: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb547801aa9: mov    $0xbff0,%eax
  0x00007fb547801aae: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb547801ab3: vdivsd %xmm1,%xmm0,%xmm0
  0x00007fb547801ab7: movl   $0x8,0x10(%rsp)
  0x00007fb547801abf: vmovq  %xmm0,0x8(%rsp)
  0x00007fb547801ac5: vmovq  0x8(%rsp),%xmm0
  0x00007fb547801acb: add    $0x18,%rsp
  0x00007fb547801acf: leaveq 
  0x00007fb547801ad0: retq   

StubRoutines::libmPow [0x00007fb547801ad1, 0x00007fb547802be5[ (4372 bytes)
  0x00007fb547801ad1: push   %rbp
  0x00007fb547801ad2: mov    %rsp,%rbp
  0x00007fb547801ad5: jmpq   0x00007fb547801ada
  0x00007fb547801ada: sub    $0x28,%rsp
  0x00007fb547801ade: vmovsd %xmm0,0x8(%rsp)
  0x00007fb547801ae4: vmovsd %xmm1,0x10(%rsp)
  0x00007fb547801aea: vmovq  %xmm1,%r8
  0x00007fb547801aef: cmp    0x1e152c4a(%rip),%r8        # 0x00007fb565954740
  0x00007fb547801af6: jne    0x00007fb547801b01
  0x00007fb547801af8: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb547801afc: jmpq   0x00007fb547802bdf
  0x00007fb547801b01: vpextrw $0x3,%xmm0,%eax
  0x00007fb547801b06: vxorpd %xmm2,%xmm2,%xmm2
  0x00007fb547801b0a: movabs $0x3ff0000000000000,%r9
  0x00007fb547801b14: vmovq  %r9,%xmm2
  0x00007fb547801b19: mov    $0x3fb90000,%r8d
  0x00007fb547801b1f: vmovq  %r8,%xmm7
  0x00007fb547801b24: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb547801b28: movabs $0x77f0000000000000,%r10
  0x00007fb547801b32: vmovq  %r10,%xmm1
  0x00007fb547801b37: vmovdqu %xmm0,%xmm3
  0x00007fb547801b3b: mov    $0x7ff0,%edx
  0x00007fb547801b40: and    %eax,%edx
  0x00007fb547801b42: sub    $0x3ff0,%edx
  0x00007fb547801b48: mov    %edx,%ecx
  0x00007fb547801b4a: sar    $0x1f,%edx
  0x00007fb547801b4d: add    %edx,%ecx
  0x00007fb547801b4f: xor    %edx,%ecx
  0x00007fb547801b51: vpor   %xmm2,%xmm0,%xmm0
  0x00007fb547801b55: vmovdqu 0x1e155cf3(%rip),%xmm6        # 0x00007fb565957850
  0x00007fb547801b5d: vpsrlq $0x1b,%xmm0,%xmm0
  0x00007fb547801b62: vmovq  0x1e155cd6(%rip),%xmm2        # 0x00007fb565957840
  0x00007fb547801b6a: vpsrld $0x2,%xmm0,%xmm0
  0x00007fb547801b6f: add    $0x10,%ecx
  0x00007fb547801b72: bsr    %ecx,%ecx
  0x00007fb547801b75: vrcpps %xmm0,%xmm0
  0x00007fb547801b79: (bad)  
  0x00007fb547801b7d: repz or $0x41,%al
  0x00007fb547801b80: mov    $0x2000,%ebx
  0x00007fb547801b85: vmovq  %r11,%xmm4
  0x00007fb547801b8a: vpsrlq $0xc,%xmm3,%xmm3
  0x00007fb547801b8f: sub    $0x10,%eax
  0x00007fb547801b92: cmp    $0x7fe0,%eax
  0x00007fb547801b98: jae    0x00007fb547801db0
  0x00007fb547801b9e: mov    $0x0,%r8d
  0x00007fb547801ba4: vmulss %xmm7,%xmm0,%xmm0
  0x00007fb547801ba8: mov    $0xffffffff,%edx
  0x00007fb547801bad: sub    $0x4,%ecx
  0x00007fb547801bb0: shl    %cl,%edx
  0x00007fb547801bb2: shl    $0x20,%rdx
  0x00007fb547801bb6: vmovq  %rdx,%xmm5
  0x00007fb547801bbb: vpor   %xmm1,%xmm3,%xmm3
  0x00007fb547801bbf: sub    $0x3fdf,%eax
  0x00007fb547801bc5: cmp    $0x1,%eax
  0x00007fb547801bc8: jbe    0x00007fb5478027f2
  0x00007fb547801bce: vpaddd %xmm4,%xmm0,%xmm0
  0x00007fb547801bd2: vpand  %xmm3,%xmm5,%xmm5
  0x00007fb547801bd6: vmovd  %xmm0,%edx
  0x00007fb547801bda: (bad)  
  0x00007fb547801bde: lock sbb $0xdd5ce3c5,%eax
  0x00007fb547801be4: vpand  %xmm6,%xmm0,%xmm0
  0x00007fb547801be8: sub    $0x1,%eax
  0x00007fb547801beb: sar    $0x4,%eax
  0x00007fb547801bee: vcvtsi2sd %eax,%xmm7,%xmm7
  0x00007fb547801bf2: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547801bf6: vmulsd %xmm0,%xmm3,%xmm3
  0x00007fb547801bfa: vmovdqu 0x1e154b6e(%rip),%xmm1        # 0x00007fb565956770
  0x00007fb547801c02: movabs $0x7fb565954760,%r11
  0x00007fb547801c0c: vsubsd %xmm2,%xmm5,%xmm5
  0x00007fb547801c10: vmovdqu 0x1e154b68(%rip),%xmm4        # 0x00007fb565956780
  0x00007fb547801c18: mov    %eax,%ecx
  0x00007fb547801c1a: sar    $0x1f,%eax
  0x00007fb547801c1d: add    %eax,%ecx
  0x00007fb547801c1f: xor    %ecx,%eax
  0x00007fb547801c21: add    $0x1,%eax
  0x00007fb547801c24: bsr    %eax,%eax
  0x00007fb547801c27: vunpcklpd %xmm3,%xmm5,%xmm5
  0x00007fb547801c2b: vmovdqu 0x1e154b5d(%rip),%xmm6        # 0x00007fb565956790
  0x00007fb547801c33: vaddsd %xmm5,%xmm3,%xmm3
  0x00007fb547801c37: and    $0xffc000,%edx
  0x00007fb547801c3d: shr    $0xa,%edx
  0x00007fb547801c40: vaddpd -0xe40(%r11,%rdx,1),%xmm5,%xmm5
  0x00007fb547801c4a: vmovdqu 0x1e154b4e(%rip),%xmm0        # 0x00007fb5659567a0
  0x00007fb547801c52: vpshufd $0x44,%xmm3,%xmm2
  0x00007fb547801c57: vmulsd %xmm3,%xmm3,%xmm3
  0x00007fb547801c5b: vmulpd %xmm2,%xmm1,%xmm1
  0x00007fb547801c5f: vmulpd %xmm2,%xmm4,%xmm4
  0x00007fb547801c63: vaddsd %xmm7,%xmm5,%xmm5
  0x00007fb547801c67: vmulsd %xmm3,%xmm2,%xmm2
  0x00007fb547801c6b: vaddpd %xmm1,%xmm6,%xmm6
  0x00007fb547801c6f: vmulsd %xmm3,%xmm3,%xmm3
  0x00007fb547801c73: vaddpd %xmm4,%xmm0,%xmm0
  0x00007fb547801c77: vmovq  0x10(%rsp),%xmm1
  0x00007fb547801c7d: mov    0x16(%rsp),%cx
  0x00007fb547801c82: vpshufd $0xee,%xmm5,%xmm7
  0x00007fb547801c87: vmovq  0x1e155ba1(%rip),%xmm4        # 0x00007fb565957830
  0x00007fb547801c8f: vmulpd %xmm2,%xmm6,%xmm6
  0x00007fb547801c93: vpshufd $0x44,%xmm3,%xmm3
  0x00007fb547801c98: vmulpd %xmm2,%xmm0,%xmm0
  0x00007fb547801c9c: shl    $0x4,%eax
  0x00007fb547801c9f: sub    $0x3e00,%eax
  0x00007fb547801ca5: and    $0x7ff0,%ecx
  0x00007fb547801cab: add    %ecx,%eax
  0x00007fb547801cad: vmulpd %xmm6,%xmm3,%xmm3
  0x00007fb547801cb1: cmp    $0x270,%eax
  0x00007fb547801cb7: jae    0x00007fb547801f75
  0x00007fb547801cbd: vxorpd %xmm6,%xmm6,%xmm6
  0x00007fb547801cc1: mov    $0x42b8,%edx
  0x00007fb547801cc6: vpinsrw $0x3,%edx,%xmm6,%xmm6
  0x00007fb547801ccb: vmovdqu %xmm1,%xmm2
  0x00007fb547801ccf: vpand  %xmm1,%xmm4,%xmm4
  0x00007fb547801cd3: vsubsd %xmm4,%xmm1,%xmm1
  0x00007fb547801cd7: vmulsd %xmm5,%xmm4,%xmm4
  0x00007fb547801cdb: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb547801cdf: vmulsd %xmm5,%xmm1,%xmm1
  0x00007fb547801ce3: vmovdqu %xmm6,%xmm7
  0x00007fb547801ce7: vaddsd %xmm4,%xmm6,%xmm6
  0x00007fb547801ceb: movabs $0x7fb565956830,%r11
  0x00007fb547801cf5: vaddpd %xmm0,%xmm3,%xmm3
  0x00007fb547801cf9: vmovd  %xmm6,%edx
  0x00007fb547801cfd: vsubsd %xmm7,%xmm6,%xmm6
  0x00007fb547801d01: vpshufd $0xee,%xmm3,%xmm0
  0x00007fb547801d06: vsubsd %xmm6,%xmm4,%xmm4
  0x00007fb547801d0a: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb547801d0e: mov    %edx,%ecx
  0x00007fb547801d10: and    $0xff,%edx
  0x00007fb547801d16: add    %edx,%edx
  0x00007fb547801d18: vmovdqu (%r11,%rdx,8),%xmm5
  0x00007fb547801d1e: vaddsd %xmm1,%xmm4,%xmm4
  0x00007fb547801d22: vmulsd %xmm0,%xmm2,%xmm2
  0x00007fb547801d26: vmovdqu 0x1e154ad2(%rip),%xmm7        # 0x00007fb565956800
  0x00007fb547801d2e: vmovdqu 0x1e154ada(%rip),%xmm3        # 0x00007fb565956810
  0x00007fb547801d36: shl    $0xc,%ecx
  0x00007fb547801d39: xor    %r8d,%ecx
  0x00007fb547801d3c: and    $0xfff00000,%ecx
  0x00007fb547801d42: vmovq  %rcx,%xmm6
  0x00007fb547801d47: vaddsd %xmm4,%xmm2,%xmm2
  0x00007fb547801d4b: movabs $0x3fe62e42fefa39ef,%r9
  0x00007fb547801d55: vmovq  %r9,%xmm1
  0x00007fb547801d5a: vpshufd $0x44,%xmm2,%xmm0
  0x00007fb547801d5f: vpshufd $0x44,%xmm2,%xmm4
  0x00007fb547801d64: vmulsd %xmm2,%xmm1,%xmm1
  0x00007fb547801d68: vpshufd $0x11,%xmm6,%xmm6
  0x00007fb547801d6d: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547801d71: vmulpd %xmm4,%xmm7,%xmm7
  0x00007fb547801d75: vpaddd %xmm6,%xmm5,%xmm5
  0x00007fb547801d79: vmulsd %xmm5,%xmm1,%xmm1
  0x00007fb547801d7d: vpshufd $0xee,%xmm5,%xmm6
  0x00007fb547801d82: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb547801d86: vaddpd %xmm7,%xmm3,%xmm3
  0x00007fb547801d8a: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb547801d8e: vmulpd %xmm3,%xmm0,%xmm0
  0x00007fb547801d92: vpshufd $0xee,%xmm0,%xmm3
  0x00007fb547801d97: vmulsd %xmm5,%xmm0,%xmm0
  0x00007fb547801d9b: vmulsd %xmm5,%xmm3,%xmm3
  0x00007fb547801d9f: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb547801da3: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb547801da7: vaddsd %xmm5,%xmm0,%xmm0
  0x00007fb547801dab: jmpq   0x00007fb547802bdf
  0x00007fb547801db0: add    $0x10,%eax
  0x00007fb547801db3: mov    $0x7ff0,%edx
  0x00007fb547801db8: and    %eax,%edx
  0x00007fb547801dba: cmp    $0x7ff0,%edx
  0x00007fb547801dc0: je     0x00007fb5478020f2
  0x00007fb547801dc6: test   $0x8000,%eax
  0x00007fb547801dcb: jne    0x00007fb5478023a3
  0x00007fb547801dd1: vmovq  0x8(%rsp),%xmm0
  0x00007fb547801dd7: vmovq  0x8(%rsp),%xmm3
  0x00007fb547801ddd: vmovd  %xmm3,%edx
  0x00007fb547801de1: vpsrlq $0x20,%xmm3,%xmm3
  0x00007fb547801de6: vmovd  %xmm3,%ecx
  0x00007fb547801dea: or     %ecx,%edx
  0x00007fb547801dec: cmp    $0x0,%edx
  0x00007fb547801def: je     0x00007fb5478025e5
  0x00007fb547801df5: vxorpd %xmm3,%xmm3,%xmm3
  0x00007fb547801df9: mov    $0x47f0,%eax
  0x00007fb547801dfe: vpinsrw $0x3,%eax,%xmm3,%xmm3
  0x00007fb547801e03: vmulsd %xmm3,%xmm0,%xmm0
  0x00007fb547801e07: vxorpd %xmm2,%xmm2,%xmm2
  0x00007fb547801e0b: mov    $0x3ff0,%eax
  0x00007fb547801e10: vpinsrw $0x3,%eax,%xmm2,%xmm2
  0x00007fb547801e15: vmovdqu %xmm0,%xmm3
  0x00007fb547801e19: vpextrw $0x3,%xmm0,%eax
  0x00007fb547801e1e: vpor   %xmm2,%xmm0,%xmm0
  0x00007fb547801e22: mov    $0x47f0,%ecx
  0x00007fb547801e27: vpsrlq $0x1b,%xmm0,%xmm0
  0x00007fb547801e2c: vmovq  0x1e155a0c(%rip),%xmm2        # 0x00007fb565957840
  0x00007fb547801e34: vpsrld $0x2,%xmm0,%xmm0
  0x00007fb547801e39: vrcpps %xmm0,%xmm0
  0x00007fb547801e3d: (bad)  
  0x00007fb547801e41: repz or $0xc5,%al
  0x00007fb547801e44: cli    
  0x00007fb547801e45: outsl  %ds:(%rsi),(%dx)
  0x00007fb547801e46: xor    $0x1e155a05,%eax
  0x00007fb547801e4b: vpsrlq $0xc,%xmm3,%xmm3
  0x00007fb547801e50: vmulss %xmm7,%xmm0,%xmm0
  0x00007fb547801e54: mov    $0xfffffc00,%edx
  0x00007fb547801e59: vmovd  %edx,%xmm5
  0x00007fb547801e5d: vpor   %xmm1,%xmm3,%xmm3
  0x00007fb547801e61: vpaddd %xmm4,%xmm0,%xmm0
  0x00007fb547801e65: (bad)  
  0x00007fb547801e69: cmc    
  0x00007fb547801e6a: and    %al,%ch
  0x00007fb547801e6c: stc    
  0x00007fb547801e6d: jle    0x00007fb547801e31
  0x00007fb547801e6f: (bad)  
  0x00007fb547801e73: lock sbb $0xebdbd1c5,%eax
  0x00007fb547801e79: mov    $0x0,%r8d
  0x00007fb547801e7f: vpand  %xmm6,%xmm0,%xmm0
  0x00007fb547801e83: vsubsd %xmm5,%xmm3,%xmm3
  0x00007fb547801e87: and    $0x7ff0,%eax
  0x00007fb547801e8d: sub    $0x47f0,%eax
  0x00007fb547801e93: sar    $0x4,%eax
  0x00007fb547801e96: vcvtsi2sd %eax,%xmm7,%xmm7
  0x00007fb547801e9a: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547801e9e: jmpq   0x00007fb547801bf6
  0x00007fb547801ea3: vmovq  0x8(%rsp),%xmm0
  0x00007fb547801ea9: vmovq  0x8(%rsp),%xmm3
  0x00007fb547801eaf: vmovd  %xmm3,%edx
  0x00007fb547801eb3: vpsrlq $0x20,%xmm3,%xmm3
  0x00007fb547801eb8: vmovd  %xmm3,%ecx
  0x00007fb547801ebc: or     %ecx,%edx
  0x00007fb547801ebe: cmp    $0x0,%edx
  0x00007fb547801ec1: je     0x00007fb5478025e5
  0x00007fb547801ec7: vxorpd %xmm3,%xmm3,%xmm3
  0x00007fb547801ecb: mov    $0x47f0,%eax
  0x00007fb547801ed0: vpinsrw $0x3,%eax,%xmm3,%xmm3
  0x00007fb547801ed5: vmulsd %xmm3,%xmm0,%xmm0
  0x00007fb547801ed9: vxorpd %xmm2,%xmm2,%xmm2
  0x00007fb547801edd: mov    $0x3ff0,%eax
  0x00007fb547801ee2: vpinsrw $0x3,%eax,%xmm2,%xmm2
  0x00007fb547801ee7: vmovdqu %xmm0,%xmm3
  0x00007fb547801eeb: vpextrw $0x3,%xmm0,%eax
  0x00007fb547801ef0: vpor   %xmm2,%xmm0,%xmm0
  0x00007fb547801ef4: mov    $0x47f0,%ecx
  0x00007fb547801ef9: vpsrlq $0x1b,%xmm0,%xmm0
  0x00007fb547801efe: vmovq  0x1e15593a(%rip),%xmm2        # 0x00007fb565957840
  0x00007fb547801f06: vpsrld $0x2,%xmm0,%xmm0
  0x00007fb547801f0b: vrcpps %xmm0,%xmm0
  0x00007fb547801f0f: (bad)  
  0x00007fb547801f13: repz or $0xc5,%al
  0x00007fb547801f16: cli    
  0x00007fb547801f17: outsl  %ds:(%rsi),(%dx)
  0x00007fb547801f18: xor    $0x1e155933,%eax
  0x00007fb547801f1d: vpsrlq $0xc,%xmm3,%xmm3
  0x00007fb547801f22: vmulss %xmm7,%xmm0,%xmm0
  0x00007fb547801f26: mov    $0xfffffc00,%edx
  0x00007fb547801f2b: vmovd  %edx,%xmm5
  0x00007fb547801f2f: vpor   %xmm1,%xmm3,%xmm3
  0x00007fb547801f33: vpaddd %xmm4,%xmm0,%xmm0
  0x00007fb547801f37: (bad)  
  0x00007fb547801f3b: cmc    
  0x00007fb547801f3c: and    %al,%ch
  0x00007fb547801f3e: stc    
  0x00007fb547801f3f: jle    0x00007fb547801f03
  0x00007fb547801f41: (bad)  
  0x00007fb547801f45: lock sbb $0xebdbd1c5,%eax
  0x00007fb547801f4b: mov    $0x80000000,%r8d
  0x00007fb547801f51: vpand  %xmm6,%xmm0,%xmm0
  0x00007fb547801f55: vsubsd %xmm5,%xmm3,%xmm3
  0x00007fb547801f59: and    $0x7ff0,%eax
  0x00007fb547801f5f: sub    $0x47f0,%eax
  0x00007fb547801f65: sar    $0x4,%eax
  0x00007fb547801f68: vcvtsi2sd %eax,%xmm7,%xmm7
  0x00007fb547801f6c: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547801f70: jmpq   0x00007fb547801bf6
  0x00007fb547801f75: cmp    $0x0,%eax
  0x00007fb547801f78: jl     0x00007fb547802556
  0x00007fb547801f7e: cmp    $0x2f0,%eax
  0x00007fb547801f84: jae    0x00007fb5478026ed
  0x00007fb547801f8a: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb547801f8e: vmovq  0x1e15483a(%rip),%xmm2        # 0x00007fb5659567d0
  0x00007fb547801f96: vaddpd %xmm0,%xmm3,%xmm3
  0x00007fb547801f9a: vxorpd %xmm6,%xmm6,%xmm6
  0x00007fb547801f9e: mov    $0x42b8,%eax
  0x00007fb547801fa3: vpinsrw $0x3,%eax,%xmm6,%xmm6
  0x00007fb547801fa8: vpshufd $0xee,%xmm3,%xmm0
  0x00007fb547801fad: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb547801fb1: vmovdqu %xmm5,%xmm3
  0x00007fb547801fb5: vaddsd %xmm0,%xmm5,%xmm5
  0x00007fb547801fb9: vmovdqu %xmm2,%xmm4
  0x00007fb547801fbd: vsubsd %xmm5,%xmm3,%xmm3
  0x00007fb547801fc1: vmovdqu %xmm5,%xmm7
  0x00007fb547801fc5: vpand  %xmm2,%xmm5,%xmm5
  0x00007fb547801fc9: vmovdqu %xmm1,%xmm2
  0x00007fb547801fcd: vpand  %xmm1,%xmm4,%xmm4
  0x00007fb547801fd1: vsubsd %xmm5,%xmm7,%xmm7
  0x00007fb547801fd5: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb547801fd9: vsubsd %xmm4,%xmm1,%xmm1
  0x00007fb547801fdd: vmulsd %xmm5,%xmm4,%xmm4
  0x00007fb547801fe1: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb547801fe5: vmulsd %xmm0,%xmm2,%xmm2
  0x00007fb547801fe9: vmovdqu %xmm6,%xmm7
  0x00007fb547801fed: vmulsd %xmm5,%xmm1,%xmm1
  0x00007fb547801ff1: vaddsd %xmm4,%xmm6,%xmm6
  0x00007fb547801ff5: vmovd  %xmm6,%eax
  0x00007fb547801ff9: vsubsd %xmm7,%xmm6,%xmm6
  0x00007fb547801ffd: movabs $0x7fb565956830,%r11
  0x00007fb547802007: vaddsd %xmm1,%xmm2,%xmm2
  0x00007fb54780200b: vmovdqu 0x1e1547ed(%rip),%xmm7        # 0x00007fb565956800
  0x00007fb547802013: vmovdqu 0x1e1547f5(%rip),%xmm3        # 0x00007fb565956810
  0x00007fb54780201b: vsubsd %xmm6,%xmm4,%xmm4
  0x00007fb54780201f: vpextrw $0x3,%xmm6,%edx
  0x00007fb547802024: mov    %eax,%ecx
  0x00007fb547802026: and    $0xff,%eax
  0x00007fb54780202c: add    %eax,%eax
  0x00007fb54780202e: vmovdqu (%r11,%rax,8),%xmm5
  0x00007fb547802034: vaddsd %xmm4,%xmm2,%xmm2
  0x00007fb547802038: sar    $0x8,%ecx
  0x00007fb54780203b: mov    %ecx,%eax
  0x00007fb54780203d: sar    %ecx
  0x00007fb54780203f: sub    %ecx,%eax
  0x00007fb547802041: shl    $0x14,%ecx
  0x00007fb547802044: xor    %r8d,%ecx
  0x00007fb547802047: vmovd  %ecx,%xmm6
  0x00007fb54780204b: vmovq  0x1e1547cd(%rip),%xmm1        # 0x00007fb565956820
  0x00007fb547802053: and    $0x7fff,%edx
  0x00007fb547802059: cmp    $0x4091,%edx
  0x00007fb54780205f: ja     0x00007fb5478026ed
  0x00007fb547802065: vpshufd $0x44,%xmm2,%xmm0
  0x00007fb54780206a: vpshufd $0x44,%xmm2,%xmm4
  0x00007fb54780206f: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547802073: vmulpd %xmm4,%xmm7,%xmm7
  0x00007fb547802077: vpshufd $0x11,%xmm6,%xmm6
  0x00007fb54780207c: vmulsd %xmm2,%xmm1,%xmm1
  0x00007fb547802080: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb547802084: vpaddd %xmm6,%xmm5,%xmm5
  0x00007fb547802088: vaddpd %xmm7,%xmm3,%xmm3
  0x00007fb54780208c: vmulsd %xmm5,%xmm1,%xmm1
  0x00007fb547802090: vpshufd $0xee,%xmm5,%xmm6
  0x00007fb547802095: vmulpd %xmm3,%xmm0,%xmm0
  0x00007fb547802099: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb54780209d: vpshufd $0xee,%xmm0,%xmm3
  0x00007fb5478020a2: vmulsd %xmm5,%xmm0,%xmm0
  0x00007fb5478020a6: vmulsd %xmm5,%xmm3,%xmm3
  0x00007fb5478020aa: shl    $0x4,%eax
  0x00007fb5478020ad: vxorpd %xmm4,%xmm4,%xmm4
  0x00007fb5478020b1: add    $0x3ff0,%eax
  0x00007fb5478020b7: vpinsrw $0x3,%eax,%xmm4,%xmm4
  0x00007fb5478020bc: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb5478020c0: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb5478020c4: vmovdqu %xmm0,%xmm1
  0x00007fb5478020c8: vaddsd %xmm5,%xmm0,%xmm0
  0x00007fb5478020cc: vmulsd %xmm4,%xmm0,%xmm0
  0x00007fb5478020d0: vpextrw $0x3,%xmm0,%eax
  0x00007fb5478020d5: and    $0x7ff0,%eax
  0x00007fb5478020db: je     0x00007fb547802790
  0x00007fb5478020e1: cmp    $0x7ff0,%eax
  0x00007fb5478020e7: je     0x00007fb54780274a
  0x00007fb5478020ed: jmpq   0x00007fb547802bdf
  0x00007fb5478020f2: vmovq  0x10(%rsp),%xmm1
  0x00007fb5478020f8: vmovq  0x8(%rsp),%xmm0
  0x00007fb5478020fe: vmovdqu %xmm0,%xmm2
  0x00007fb547802102: vmovd  %xmm2,%eax
  0x00007fb547802106: vpsrlq $0x14,%xmm2,%xmm2
  0x00007fb54780210b: vmovd  %xmm2,%edx
  0x00007fb54780210f: or     %edx,%eax
  0x00007fb547802111: je     0x00007fb547802162
  0x00007fb547802117: vmovd  %xmm1,%eax
  0x00007fb54780211b: vpsrlq $0x20,%xmm1,%xmm1
  0x00007fb547802120: vmovd  %xmm1,%edx
  0x00007fb547802124: mov    %edx,%ecx
  0x00007fb547802126: add    %edx,%edx
  0x00007fb547802128: or     %edx,%eax
  0x00007fb54780212a: je     0x00007fb547802139
  0x00007fb547802130: vaddsd %xmm0,%xmm0,%xmm0
  0x00007fb547802134: jmpq   0x00007fb547802bdf
  0x00007fb547802139: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb54780213d: mov    $0x3ff0,%eax
  0x00007fb547802142: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb547802147: movl   $0x1d,(%rsp)
  0x00007fb54780214e: jmpq   0x00007fb547802bd3
  0x00007fb547802153: vmovq  0x10(%rsp),%xmm0
  0x00007fb547802159: vaddpd %xmm0,%xmm0,%xmm0
  0x00007fb54780215d: jmpq   0x00007fb547802bdf
  0x00007fb547802162: vmovd  %xmm1,%eax
  0x00007fb547802166: vmovdqu %xmm1,%xmm2
  0x00007fb54780216a: vpsrlq $0x20,%xmm1,%xmm1
  0x00007fb54780216f: vmovd  %xmm1,%edx
  0x00007fb547802173: mov    %edx,%ecx
  0x00007fb547802175: add    %edx,%edx
  0x00007fb547802177: or     %edx,%eax
  0x00007fb547802179: je     0x00007fb54780253a
  0x00007fb54780217f: vpextrw $0x3,%xmm2,%eax
  0x00007fb547802184: and    $0x7ff0,%eax
  0x00007fb54780218a: cmp    $0x7ff0,%eax
  0x00007fb547802190: jne    0x00007fb5478021a7
  0x00007fb547802196: vmovd  %xmm2,%eax
  0x00007fb54780219a: vpsrlq $0x14,%xmm2,%xmm2
  0x00007fb54780219f: vmovd  %xmm2,%edx
  0x00007fb5478021a3: or     %edx,%eax
  0x00007fb5478021a5: jne    0x00007fb547802153
  0x00007fb5478021a7: vpextrw $0x3,%xmm0,%eax
  0x00007fb5478021ac: test   $0x8000,%eax
  0x00007fb5478021b1: jne    0x00007fb5478021ed
  0x00007fb5478021b7: test   $0x80000000,%ecx
  0x00007fb5478021bd: jne    0x00007fb54780254d
  0x00007fb5478021c3: jmpq   0x00007fb547802bdf
  0x00007fb5478021c8: vmovq  0x10(%rsp),%xmm1
  0x00007fb5478021ce: vmovd  %xmm1,%eax
  0x00007fb5478021d2: test   $0x1,%eax
  0x00007fb5478021d7: jne    0x00007fb54780228d
  0x00007fb5478021dd: test   $0x2,%eax
  0x00007fb5478021e2: jne    0x00007fb54780225e
  0x00007fb5478021e8: jmpq   0x00007fb54780228d
  0x00007fb5478021ed: shr    $0x14,%ecx
  0x00007fb5478021f0: and    $0x7ff,%ecx
  0x00007fb5478021f6: cmp    $0x433,%ecx
  0x00007fb5478021fc: ja     0x00007fb54780228d
  0x00007fb547802202: je     0x00007fb5478022b7
  0x00007fb547802208: cmp    $0x432,%ecx
  0x00007fb54780220e: ja     0x00007fb5478021c8
  0x00007fb547802210: cmp    $0x3ff,%ecx
  0x00007fb547802216: jb     0x00007fb54780228d
  0x00007fb54780221c: vmovq  0x10(%rsp),%xmm1
  0x00007fb547802222: mov    $0x4338,%eax
  0x00007fb547802227: vxorpd %xmm3,%xmm3,%xmm3
  0x00007fb54780222b: vpinsrw $0x3,%eax,%xmm3,%xmm3
  0x00007fb547802230: vmovdqu %xmm3,%xmm4
  0x00007fb547802234: vaddsd %xmm1,%xmm3,%xmm3
  0x00007fb547802238: vsubsd %xmm3,%xmm4,%xmm4
  0x00007fb54780223c: vaddsd %xmm4,%xmm1,%xmm1
  0x00007fb547802240: vpextrw $0x3,%xmm1,%eax
  0x00007fb547802245: and    $0x7ff0,%eax
  0x00007fb54780224b: jne    0x00007fb54780228d
  0x00007fb547802251: vmovd  %xmm3,%eax
  0x00007fb547802255: and    $0x1,%eax
  0x00007fb547802258: je     0x00007fb54780228d
  0x00007fb54780225e: vmovq  0x10(%rsp),%xmm1
  0x00007fb547802264: vpextrw $0x3,%xmm1,%eax
  0x00007fb547802269: and    $0x8000,%eax
  0x00007fb54780226f: jne    0x00007fb54780227a
  0x00007fb547802275: jmpq   0x00007fb547802bdf
  0x00007fb54780227a: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb54780227e: mov    $0x8000,%eax
  0x00007fb547802283: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb547802288: jmpq   0x00007fb547802bdf
  0x00007fb54780228d: vmovq  0x10(%rsp),%xmm1
  0x00007fb547802293: vpextrw $0x3,%xmm1,%eax
  0x00007fb547802298: and    $0x8000,%eax
  0x00007fb54780229e: jne    0x00007fb54780254d
  0x00007fb5478022a4: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb5478022a8: mov    $0x7ff0,%eax
  0x00007fb5478022ad: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb5478022b2: jmpq   0x00007fb547802bdf
  0x00007fb5478022b7: vmovq  0x10(%rsp),%xmm1
  0x00007fb5478022bd: vmovd  %xmm1,%eax
  0x00007fb5478022c1: and    $0x1,%eax
  0x00007fb5478022c4: je     0x00007fb54780228d
  0x00007fb5478022c6: jmp    0x00007fb54780225e
  0x00007fb5478022c8: vmovd  %xmm1,%eax
  0x00007fb5478022cc: vpsrlq $0x14,%xmm1,%xmm1
  0x00007fb5478022d1: vmovd  %xmm1,%edx
  0x00007fb5478022d5: or     %edx,%eax
  0x00007fb5478022d7: je     0x00007fb5478022ec
  0x00007fb5478022dd: vmovq  0x10(%rsp),%xmm0
  0x00007fb5478022e3: vaddsd %xmm0,%xmm0,%xmm0
  0x00007fb5478022e7: jmpq   0x00007fb547802bdf
  0x00007fb5478022ec: vmovq  0x8(%rsp),%xmm0
  0x00007fb5478022f2: vpextrw $0x3,%xmm0,%eax
  0x00007fb5478022f7: cmp    $0xbff0,%eax
  0x00007fb5478022fd: jne    0x00007fb54780232b
  0x00007fb547802303: vmovd  %xmm0,%ecx
  0x00007fb547802307: vpsrlq $0x14,%xmm0,%xmm0
  0x00007fb54780230c: vmovd  %xmm0,%edx
  0x00007fb547802310: or     %edx,%ecx
  0x00007fb547802312: jne    0x00007fb54780232b
  0x00007fb547802318: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb54780231c: mov    $0x7ff8,%eax
  0x00007fb547802321: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb547802326: jmpq   0x00007fb547802bdf
  0x00007fb54780232b: vmovq  0x10(%rsp),%xmm1
  0x00007fb547802331: and    $0x7ff0,%eax
  0x00007fb547802337: sub    $0x3ff0,%eax
  0x00007fb54780233d: vpextrw $0x3,%xmm1,%edx
  0x00007fb547802342: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb547802346: xor    %edx,%eax
  0x00007fb547802348: and    $0x8000,%eax
  0x00007fb54780234e: je     0x00007fb547802359
  0x00007fb547802354: jmpq   0x00007fb547802bdf
  0x00007fb547802359: mov    $0x7ff0,%ecx
  0x00007fb54780235e: vpinsrw $0x3,%ecx,%xmm0,%xmm0
  0x00007fb547802363: jmpq   0x00007fb547802bdf
  0x00007fb547802368: vmovd  %xmm1,%eax
  0x00007fb54780236c: cmp    $0x4320,%edx
  0x00007fb547802372: ja     0x00007fb547802393
  0x00007fb547802378: test   $0x1,%eax
  0x00007fb54780237d: jne    0x00007fb5478024b7
  0x00007fb547802383: test   $0x2,%eax
  0x00007fb547802388: je     0x00007fb5478024d9
  0x00007fb54780238e: jmpq   0x00007fb547802456
  0x00007fb547802393: test   $0x1,%eax
  0x00007fb547802398: je     0x00007fb5478024d9
  0x00007fb54780239e: jmpq   0x00007fb547802456
  0x00007fb5478023a3: vmovq  0x8(%rsp),%xmm2
  0x00007fb5478023a9: vmovd  %xmm2,%eax
  0x00007fb5478023ad: vpsrlq $0x1f,%xmm2,%xmm2
  0x00007fb5478023b2: vmovd  %xmm2,%ecx
  0x00007fb5478023b6: or     %ecx,%eax
  0x00007fb5478023b8: je     0x00007fb5478025e5
  0x00007fb5478023be: vmovq  0x10(%rsp),%xmm1
  0x00007fb5478023c4: vpextrw $0x3,%xmm1,%edx
  0x00007fb5478023c9: vmovd  %xmm1,%eax
  0x00007fb5478023cd: vmovdqu %xmm1,%xmm2
  0x00007fb5478023d1: vpsrlq $0x20,%xmm2,%xmm2
  0x00007fb5478023d6: vmovd  %xmm2,%ecx
  0x00007fb5478023da: add    %ecx,%ecx
  0x00007fb5478023dc: or     %eax,%ecx
  0x00007fb5478023de: je     0x00007fb5478025b8
  0x00007fb5478023e4: and    $0x7ff0,%edx
  0x00007fb5478023ea: cmp    $0x7ff0,%edx
  0x00007fb5478023f0: je     0x00007fb5478022c8
  0x00007fb5478023f6: cmp    $0x4330,%edx
  0x00007fb5478023fc: ja     0x00007fb5478024d9
  0x00007fb547802402: cmp    $0x4320,%edx
  0x00007fb547802408: jae    0x00007fb547802368
  0x00007fb54780240e: cmp    $0x3ff0,%edx
  0x00007fb547802414: jb     0x00007fb5478024b7
  0x00007fb54780241a: mov    $0x4338,%eax
  0x00007fb54780241f: vxorpd %xmm2,%xmm2,%xmm2
  0x00007fb547802423: vpinsrw $0x3,%eax,%xmm2,%xmm2
  0x00007fb547802428: vmovdqu %xmm2,%xmm4
  0x00007fb54780242c: vaddsd %xmm1,%xmm2,%xmm2
  0x00007fb547802430: vsubsd %xmm2,%xmm4,%xmm4
  0x00007fb547802434: vaddsd %xmm4,%xmm1,%xmm1
  0x00007fb547802438: vpextrw $0x3,%xmm1,%eax
  0x00007fb54780243d: and    $0x7fff,%eax
  0x00007fb547802443: jne    0x00007fb5478024b7
  0x00007fb547802449: vmovd  %xmm2,%eax
  0x00007fb54780244d: and    $0x1,%eax
  0x00007fb547802450: je     0x00007fb5478024d9
  0x00007fb547802456: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb54780245a: mov    $0x77f0,%edx
  0x00007fb54780245f: vpinsrw $0x3,%edx,%xmm1,%xmm1
  0x00007fb547802464: vmovq  0x1e1553d4(%rip),%xmm2        # 0x00007fb565957840
  0x00007fb54780246c: vmovq  0x8(%rsp),%xmm4
  0x00007fb547802472: vpextrw $0x3,%xmm4,%eax
  0x00007fb547802477: mov    $0x2000,%edx
  0x00007fb54780247c: vmovd  %edx,%xmm4
  0x00007fb547802480: and    $0x7fff,%eax
  0x00007fb547802486: sub    $0x10,%eax
  0x00007fb547802489: jl     0x00007fb547801ea3
  0x00007fb54780248f: mov    %eax,%edx
  0x00007fb547802491: and    $0x7ff0,%edx
  0x00007fb547802497: sub    $0x3ff0,%edx
  0x00007fb54780249d: mov    %edx,%ecx
  0x00007fb54780249f: sar    $0x1f,%edx
  0x00007fb5478024a2: add    %edx,%ecx
  0x00007fb5478024a4: xor    %edx,%ecx
  0x00007fb5478024a6: add    $0x10,%ecx
  0x00007fb5478024a9: bsr    %ecx,%ecx
  0x00007fb5478024ac: mov    $0x80000000,%r8d
  0x00007fb5478024b2: jmpq   0x00007fb547801ba4
  0x00007fb5478024b7: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb5478024bb: mov    $0x7ff0,%eax
  0x00007fb5478024c0: vpinsrw $0x3,%eax,%xmm1,%xmm1
  0x00007fb5478024c5: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb5478024c9: vmulsd %xmm1,%xmm0,%xmm0
  0x00007fb5478024cd: movl   $0x1c,(%rsp)
  0x00007fb5478024d4: jmpq   0x00007fb547802bd3
  0x00007fb5478024d9: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb5478024dd: mov    $0x77f0,%edx
  0x00007fb5478024e2: vpinsrw $0x3,%edx,%xmm1,%xmm1
  0x00007fb5478024e7: vmovq  0x1e155351(%rip),%xmm2        # 0x00007fb565957840
  0x00007fb5478024ef: vmovq  0x8(%rsp),%xmm4
  0x00007fb5478024f5: vpextrw $0x3,%xmm4,%eax
  0x00007fb5478024fa: mov    $0x2000,%edx
  0x00007fb5478024ff: vmovd  %edx,%xmm4
  0x00007fb547802503: and    $0x7fff,%eax
  0x00007fb547802509: sub    $0x10,%eax
  0x00007fb54780250c: jl     0x00007fb547801dd1
  0x00007fb547802512: mov    %eax,%edx
  0x00007fb547802514: and    $0x7ff0,%edx
  0x00007fb54780251a: sub    $0x3ff0,%edx
  0x00007fb547802520: mov    %edx,%ecx
  0x00007fb547802522: sar    $0x1f,%edx
  0x00007fb547802525: add    %edx,%ecx
  0x00007fb547802527: xor    %edx,%ecx
  0x00007fb547802529: add    $0x10,%ecx
  0x00007fb54780252c: bsr    %ecx,%ecx
  0x00007fb54780252f: mov    $0x0,%r8d
  0x00007fb547802535: jmpq   0x00007fb547801ba4
  0x00007fb54780253a: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb54780253e: mov    $0x3ff0,%eax
  0x00007fb547802543: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb547802548: jmpq   0x00007fb547802bdf
  0x00007fb54780254d: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb547802551: jmpq   0x00007fb547802bdf
  0x00007fb547802556: add    $0x180,%eax
  0x00007fb54780255c: cmp    $0x0,%eax
  0x00007fb54780255f: jl     0x00007fb5478025b8
  0x00007fb547802565: vmulsd %xmm1,%xmm5,%xmm5
  0x00007fb547802569: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb54780256d: shr    $0x1f,%r8d
  0x00007fb547802571: vaddpd %xmm0,%xmm3,%xmm3
  0x00007fb547802575: vpshufd $0xee,%xmm3,%xmm0
  0x00007fb54780257a: vaddsd %xmm0,%xmm3,%xmm3
  0x00007fb54780257e: movabs $0x7fb565954748,%r11
  0x00007fb547802588: vmovq  (%r11,%r8,8),%xmm4
  0x00007fb54780258e: vmulsd %xmm3,%xmm1,%xmm1
  0x00007fb547802592: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb547802596: mov    $0x3ff0,%eax
  0x00007fb54780259b: shl    $0xf,%r8d
  0x00007fb54780259f: or     %r8d,%eax
  0x00007fb5478025a2: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb5478025a7: vaddsd %xmm1,%xmm5,%xmm5
  0x00007fb5478025ab: vmulsd %xmm4,%xmm5,%xmm5
  0x00007fb5478025af: vaddsd %xmm5,%xmm0,%xmm0
  0x00007fb5478025b3: jmpq   0x00007fb547802bdf
  0x00007fb5478025b8: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb5478025bc: mov    $0x3ff0,%eax
  0x00007fb5478025c1: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb5478025c6: jmpq   0x00007fb547802bdf
  0x00007fb5478025cb: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb5478025cf: mov    $0x3ff0,%eax
  0x00007fb5478025d4: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb5478025d9: movl   $0x1a,(%rsp)
  0x00007fb5478025e0: jmpq   0x00007fb547802bd3
  0x00007fb5478025e5: vmovq  0x10(%rsp),%xmm1
  0x00007fb5478025eb: vmovdqu %xmm1,%xmm2
  0x00007fb5478025ef: vpextrw $0x3,%xmm1,%eax
  0x00007fb5478025f4: and    $0x7ff0,%eax
  0x00007fb5478025fa: cmp    $0x7ff0,%eax
  0x00007fb547802600: jne    0x00007fb54780261b
  0x00007fb547802606: vmovd  %xmm2,%eax
  0x00007fb54780260a: vpsrlq $0x14,%xmm2,%xmm2
  0x00007fb54780260f: vmovd  %xmm2,%edx
  0x00007fb547802613: or     %edx,%eax
  0x00007fb547802615: jne    0x00007fb547802153
  0x00007fb54780261b: vmovd  %xmm1,%eax
  0x00007fb54780261f: vpsrlq $0x20,%xmm1,%xmm1
  0x00007fb547802624: vmovd  %xmm1,%edx
  0x00007fb547802628: mov    %edx,%ecx
  0x00007fb54780262a: add    %edx,%edx
  0x00007fb54780262c: or     %edx,%eax
  0x00007fb54780262e: je     0x00007fb5478025cb
  0x00007fb547802630: shr    $0x15,%edx
  0x00007fb547802633: cmp    $0x433,%edx
  0x00007fb547802639: ja     0x00007fb5478026bb
  0x00007fb54780263f: je     0x00007fb5478026aa
  0x00007fb547802645: cmp    $0x3ff,%edx
  0x00007fb54780264b: jb     0x00007fb5478026bb
  0x00007fb547802651: vmovq  0x10(%rsp),%xmm1
  0x00007fb547802657: mov    $0x4338,%eax
  0x00007fb54780265c: vxorpd %xmm3,%xmm3,%xmm3
  0x00007fb547802660: vpinsrw $0x3,%eax,%xmm3,%xmm3
  0x00007fb547802665: vmovdqu %xmm3,%xmm4
  0x00007fb547802669: vaddsd %xmm1,%xmm3,%xmm3
  0x00007fb54780266d: vsubsd %xmm3,%xmm4,%xmm4
  0x00007fb547802671: vaddsd %xmm4,%xmm1,%xmm1
  0x00007fb547802675: vpextrw $0x3,%xmm1,%eax
  0x00007fb54780267a: and    $0x7ff0,%eax
  0x00007fb547802680: jne    0x00007fb5478026bb
  0x00007fb547802686: vmovd  %xmm3,%eax
  0x00007fb54780268a: and    $0x1,%eax
  0x00007fb54780268d: je     0x00007fb5478026bb
  0x00007fb547802693: vmovq  0x8(%rsp),%xmm0
  0x00007fb547802699: test   $0x80000000,%ecx
  0x00007fb54780269f: jne    0x00007fb5478026cb
  0x00007fb5478026a5: jmpq   0x00007fb547802bdf
  0x00007fb5478026aa: vmovq  0x10(%rsp),%xmm1
  0x00007fb5478026b0: vmovd  %xmm1,%eax
  0x00007fb5478026b4: test   $0x1,%eax
  0x00007fb5478026b9: jne    0x00007fb547802693
  0x00007fb5478026bb: test   $0x80000000,%ecx
  0x00007fb5478026c1: je     0x00007fb54780254d
  0x00007fb5478026c7: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb5478026cb: mov    $0x3ff0,%eax
  0x00007fb5478026d0: vxorpd %xmm1,%xmm1,%xmm1
  0x00007fb5478026d4: vpinsrw $0x3,%eax,%xmm1,%xmm1
  0x00007fb5478026d9: vdivsd %xmm0,%xmm1,%xmm1
  0x00007fb5478026dd: vmovdqu %xmm1,%xmm0
  0x00007fb5478026e1: movl   $0x1b,(%rsp)
  0x00007fb5478026e8: jmpq   0x00007fb547802bd3
  0x00007fb5478026ed: vmovq  0x8(%rsp),%xmm2
  0x00007fb5478026f3: vmovq  0x10(%rsp),%xmm6
  0x00007fb5478026f9: vpextrw $0x3,%xmm2,%eax
  0x00007fb5478026fe: vpextrw $0x3,%xmm6,%edx
  0x00007fb547802703: mov    $0x7ff0,%ecx
  0x00007fb547802708: and    %edx,%ecx
  0x00007fb54780270a: cmp    $0x7ff0,%ecx
  0x00007fb547802710: je     0x00007fb547802b17
  0x00007fb547802716: and    $0x7ff0,%eax
  0x00007fb54780271c: sub    $0x3ff0,%eax
  0x00007fb547802722: xor    %eax,%edx
  0x00007fb547802724: test   $0x8000,%edx
  0x00007fb54780272a: jne    0x00007fb547802756
  0x00007fb547802730: mov    $0x7fe0,%eax
  0x00007fb547802735: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb54780273a: shr    $0x10,%r8d
  0x00007fb54780273e: or     %r8d,%eax
  0x00007fb547802741: vpinsrw $0x3,%eax,%xmm1,%xmm1
  0x00007fb547802746: vmulsd %xmm1,%xmm0,%xmm0
  0x00007fb54780274a: movl   $0x18,(%rsp)
  0x00007fb547802751: jmpq   0x00007fb547802bd3
  0x00007fb547802756: mov    $0x10,%eax
  0x00007fb54780275b: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb547802760: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb547802764: test   $0x80000000,%r8d
  0x00007fb54780276b: je     0x00007fb547802784
  0x00007fb547802771: movabs $0x8000000000000000,%r9
  0x00007fb54780277b: vmovq  %r9,%xmm2
  0x00007fb547802780: vxorpd %xmm2,%xmm0,%xmm0
  0x00007fb547802784: movl   $0x19,(%rsp)
  0x00007fb54780278b: jmpq   0x00007fb547802bd3
  0x00007fb547802790: vpextrw $0x3,%xmm5,%ecx
  0x00007fb547802795: vpextrw $0x3,%xmm4,%edx
  0x00007fb54780279a: mov    $0xffffffff,%eax
  0x00007fb54780279f: and    $0x7ff0,%ecx
  0x00007fb5478027a5: sub    $0x3ff0,%ecx
  0x00007fb5478027ab: and    $0x7ff0,%edx
  0x00007fb5478027b1: add    %ecx,%edx
  0x00007fb5478027b3: mov    $0xffffffe1,%ecx
  0x00007fb5478027b8: sar    $0x4,%edx
  0x00007fb5478027bb: sub    %edx,%ecx
  0x00007fb5478027bd: jle    0x00007fb5478027ce
  0x00007fb5478027c3: cmp    $0x14,%ecx
  0x00007fb5478027c6: ja     0x00007fb5478027f0
  0x00007fb5478027cc: shl    %cl,%eax
  0x00007fb5478027ce: vmovd  %eax,%xmm0
  0x00007fb5478027d2: (bad)  
  0x00007fb5478027d6: lock and %al,%ch
  0x00007fb5478027d9: stc    
  0x00007fb5478027da: fcmovnb %st(5),%st
  0x00007fb5478027dc: vsubsd %xmm0,%xmm5,%xmm5
  0x00007fb5478027e0: vaddsd %xmm1,%xmm5,%xmm5
  0x00007fb5478027e4: vmulsd %xmm4,%xmm0,%xmm0
  0x00007fb5478027e8: vmulsd %xmm4,%xmm5,%xmm5
  0x00007fb5478027ec: vaddsd %xmm5,%xmm0,%xmm0
  0x00007fb5478027f0: jmp    0x00007fb547802784
  0x00007fb5478027f2: mov    0x16(%rsp),%cx
  0x00007fb5478027f7: mov    $0x80000000,%edx
  0x00007fb5478027fc: vmovd  %edx,%xmm1
  0x00007fb547802800: vxorpd %xmm7,%xmm7,%xmm7
  0x00007fb547802804: vpaddd %xmm4,%xmm0,%xmm0
  0x00007fb547802808: vmovd  %xmm0,%edx
  0x00007fb54780280c: (bad)  
  0x00007fb547802810: lock sbb $0xcbd4f1c5,%eax
  0x00007fb547802816: vpand  %xmm1,%xmm5,%xmm5
  0x00007fb54780281a: and    $0x7ff0,%ecx
  0x00007fb547802820: cmp    $0x40b0,%ecx
  0x00007fb547802826: jl     0x00007fb547801be0
  0x00007fb54780282c: vpand  %xmm6,%xmm0,%xmm0
  0x00007fb547802830: vsubsd %xmm5,%xmm3,%xmm3
  0x00007fb547802834: add    $0x3fdf,%eax
  0x00007fb54780283a: shr    $0x4,%eax
  0x00007fb54780283d: sub    $0x3fe,%eax
  0x00007fb547802843: vcvtsi2sd %eax,%xmm7,%xmm7
  0x00007fb547802847: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb54780284b: movabs $0x7fb565954760,%r11
  0x00007fb547802855: vmovq  0x1e153f93(%rip),%xmm4        # 0x00007fb5659567f0
  0x00007fb54780285d: vmulsd %xmm0,%xmm3,%xmm3
  0x00007fb547802861: vmovq  0x1e153f87(%rip),%xmm6        # 0x00007fb5659567f0
  0x00007fb547802869: vsubsd %xmm2,%xmm5,%xmm5
  0x00007fb54780286d: vmovq  0x1e153f83(%rip),%xmm1        # 0x00007fb5659567f8
  0x00007fb547802875: vpshufd $0x44,%xmm3,%xmm2
  0x00007fb54780287a: vunpcklpd %xmm3,%xmm5,%xmm5
  0x00007fb54780287e: vaddsd %xmm5,%xmm3,%xmm3
  0x00007fb547802882: vmovq  0x1e153f6e(%rip),%xmm0        # 0x00007fb5659567f8
  0x00007fb54780288a: and    $0xffc000,%edx
  0x00007fb547802890: shr    $0xa,%edx
  0x00007fb547802893: vaddpd -0xe40(%r11,%rdx,1),%xmm7,%xmm7
  0x00007fb54780289d: vmulsd %xmm5,%xmm4,%xmm4
  0x00007fb5478028a1: vmulsd %xmm5,%xmm0,%xmm0
  0x00007fb5478028a5: vmulsd %xmm2,%xmm6,%xmm6
  0x00007fb5478028a9: vmulsd %xmm2,%xmm1,%xmm1
  0x00007fb5478028ad: vmovdqu %xmm5,%xmm2
  0x00007fb5478028b1: vmulsd %xmm5,%xmm4,%xmm4
  0x00007fb5478028b5: vaddsd %xmm0,%xmm5,%xmm5
  0x00007fb5478028b9: vmovdqu %xmm7,%xmm0
  0x00007fb5478028bd: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb5478028c1: vaddsd %xmm5,%xmm7,%xmm7
  0x00007fb5478028c5: vmulsd %xmm2,%xmm6,%xmm6
  0x00007fb5478028c9: vsubsd %xmm7,%xmm0,%xmm0
  0x00007fb5478028cd: vmovdqu %xmm7,%xmm2
  0x00007fb5478028d1: vaddsd %xmm4,%xmm7,%xmm7
  0x00007fb5478028d5: vaddsd %xmm5,%xmm0,%xmm0
  0x00007fb5478028d9: vsubsd %xmm7,%xmm2,%xmm2
  0x00007fb5478028dd: vaddsd %xmm2,%xmm4,%xmm4
  0x00007fb5478028e1: vpshufd $0xee,%xmm5,%xmm2
  0x00007fb5478028e6: vmovdqu %xmm7,%xmm5
  0x00007fb5478028ea: vaddsd %xmm2,%xmm7,%xmm7
  0x00007fb5478028ee: vaddsd %xmm0,%xmm4,%xmm4
  0x00007fb5478028f2: vmovdqu 0x1e153e76(%rip),%xmm0        # 0x00007fb565956770
  0x00007fb5478028fa: vsubsd %xmm7,%xmm5,%xmm5
  0x00007fb5478028fe: vaddsd %xmm4,%xmm6,%xmm6
  0x00007fb547802902: vmovdqu %xmm7,%xmm4
  0x00007fb547802906: vaddsd %xmm2,%xmm5,%xmm5
  0x00007fb54780290a: vaddsd %xmm1,%xmm7,%xmm7
  0x00007fb54780290e: vmovdqu 0x1e153e9a(%rip),%xmm2        # 0x00007fb5659567b0
  0x00007fb547802916: vsubsd %xmm7,%xmm4,%xmm4
  0x00007fb54780291a: vaddsd %xmm5,%xmm6,%xmm6
  0x00007fb54780291e: vaddsd %xmm1,%xmm4,%xmm4
  0x00007fb547802922: vpshufd $0xee,%xmm7,%xmm5
  0x00007fb547802927: vmovapd %xmm7,%xmm1
  0x00007fb54780292b: vaddsd %xmm5,%xmm7,%xmm7
  0x00007fb54780292f: vsubsd %xmm7,%xmm1,%xmm1
  0x00007fb547802933: vaddsd %xmm5,%xmm1,%xmm1
  0x00007fb547802937: vmovdqu 0x1e153e81(%rip),%xmm5        # 0x00007fb5659567c0
  0x00007fb54780293f: vpshufd $0x44,%xmm3,%xmm3
  0x00007fb547802944: vaddsd %xmm4,%xmm6,%xmm6
  0x00007fb547802948: vaddsd %xmm1,%xmm6,%xmm6
  0x00007fb54780294c: vmovdqu 0x1e153e3c(%rip),%xmm1        # 0x00007fb565956790
  0x00007fb547802954: vmulpd %xmm3,%xmm0,%xmm0
  0x00007fb547802958: vmulpd %xmm3,%xmm2,%xmm2
  0x00007fb54780295c: vpshufd $0x44,%xmm3,%xmm4
  0x00007fb547802961: vmulpd %xmm3,%xmm3,%xmm3
  0x00007fb547802965: vaddpd %xmm1,%xmm0,%xmm0
  0x00007fb547802969: vaddpd %xmm2,%xmm5,%xmm5
  0x00007fb54780296d: vmulsd %xmm3,%xmm4,%xmm4
  0x00007fb547802971: vmovq  0x1e153e67(%rip),%xmm2        # 0x00007fb5659567e0
  0x00007fb547802979: vmulpd %xmm3,%xmm3,%xmm3
  0x00007fb54780297d: vmovq  0x10(%rsp),%xmm1
  0x00007fb547802983: mov    0x16(%rsp),%cx
  0x00007fb547802988: vmulpd %xmm4,%xmm0,%xmm0
  0x00007fb54780298c: vpextrw $0x3,%xmm7,%eax
  0x00007fb547802991: vmulpd %xmm4,%xmm5,%xmm5
  0x00007fb547802995: vmulpd %xmm3,%xmm0,%xmm0
  0x00007fb547802999: vmovq  0x1e154e97(%rip),%xmm4        # 0x00007fb565957838
  0x00007fb5478029a1: vpand  %xmm7,%xmm2,%xmm2
  0x00007fb5478029a5: vaddsd %xmm6,%xmm5,%xmm5
  0x00007fb5478029a9: vsubsd %xmm2,%xmm7,%xmm7
  0x00007fb5478029ad: vaddpd %xmm0,%xmm5,%xmm5
  0x00007fb5478029b1: and    $0x7ff0,%eax
  0x00007fb5478029b7: sub    $0x3ff0,%eax
  0x00007fb5478029bd: and    $0x7ff0,%ecx
  0x00007fb5478029c3: cmp    $0x7ff0,%ecx
  0x00007fb5478029c9: je     0x00007fb547802b17
  0x00007fb5478029cf: add    %eax,%ecx
  0x00007fb5478029d1: cmp    $0x40c0,%ecx
  0x00007fb5478029d7: jae    0x00007fb547802b7c
  0x00007fb5478029dd: vpshufd $0xee,%xmm5,%xmm0
  0x00007fb5478029e2: vpand  %xmm1,%xmm4,%xmm4
  0x00007fb5478029e6: vmovdqu %xmm1,%xmm3
  0x00007fb5478029ea: vaddsd %xmm0,%xmm5,%xmm5
  0x00007fb5478029ee: vsubsd %xmm4,%xmm1,%xmm1
  0x00007fb5478029f2: vxorpd %xmm6,%xmm6,%xmm6
  0x00007fb5478029f6: mov    $0x42b8,%edx
  0x00007fb5478029fb: vpinsrw $0x3,%edx,%xmm6,%xmm6
  0x00007fb547802a00: vaddsd %xmm5,%xmm7,%xmm7
  0x00007fb547802a04: vmulsd %xmm2,%xmm4,%xmm4
  0x00007fb547802a08: vmulsd %xmm2,%xmm1,%xmm1
  0x00007fb547802a0c: vmovdqu %xmm6,%xmm5
  0x00007fb547802a10: vmulsd %xmm7,%xmm3,%xmm3
  0x00007fb547802a14: vaddsd %xmm4,%xmm6,%xmm6
  0x00007fb547802a18: vaddsd %xmm3,%xmm1,%xmm1
  0x00007fb547802a1c: vmovdqu 0x1e153ddc(%rip),%xmm7        # 0x00007fb565956800
  0x00007fb547802a24: vmovd  %xmm6,%edx
  0x00007fb547802a28: vsubsd %xmm5,%xmm6,%xmm6
  0x00007fb547802a2c: movabs $0x7fb565956830,%r11
  0x00007fb547802a36: vmovdqu 0x1e153dd2(%rip),%xmm3        # 0x00007fb565956810
  0x00007fb547802a3e: vmovq  0x1e153dda(%rip),%xmm2        # 0x00007fb565956820
  0x00007fb547802a46: vsubsd %xmm6,%xmm4,%xmm4
  0x00007fb547802a4a: mov    %edx,%ecx
  0x00007fb547802a4c: and    $0xff,%edx
  0x00007fb547802a52: add    %edx,%edx
  0x00007fb547802a54: vmovdqu (%r11,%rdx,8),%xmm5
  0x00007fb547802a5a: vaddsd %xmm1,%xmm4,%xmm4
  0x00007fb547802a5e: vpextrw $0x3,%xmm6,%edx
  0x00007fb547802a63: shr    $0x8,%ecx
  0x00007fb547802a66: mov    %ecx,%eax
  0x00007fb547802a68: shr    $0x1,%ecx
  0x00007fb547802a6b: sub    %ecx,%eax
  0x00007fb547802a6d: shl    $0x14,%ecx
  0x00007fb547802a70: vmovd  %ecx,%xmm6
  0x00007fb547802a74: vpshufd $0x44,%xmm4,%xmm0
  0x00007fb547802a79: vpshufd $0x44,%xmm4,%xmm1
  0x00007fb547802a7e: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547802a82: vmulpd %xmm1,%xmm7,%xmm7
  0x00007fb547802a86: vpshufd $0x11,%xmm6,%xmm6
  0x00007fb547802a8b: vmulsd %xmm4,%xmm2,%xmm2
  0x00007fb547802a8f: and    $0x7fff,%edx
  0x00007fb547802a95: cmp    $0x4091,%edx
  0x00007fb547802a9b: ja     0x00007fb5478026ed
  0x00007fb547802aa1: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb547802aa5: vpaddd %xmm6,%xmm5,%xmm5
  0x00007fb547802aa9: vaddpd %xmm7,%xmm3,%xmm3
  0x00007fb547802aad: vmulsd %xmm5,%xmm2,%xmm2
  0x00007fb547802ab1: vpshufd $0xee,%xmm5,%xmm6
  0x00007fb547802ab6: vmulpd %xmm3,%xmm0,%xmm0
  0x00007fb547802aba: vaddsd %xmm6,%xmm2,%xmm2
  0x00007fb547802abe: vpshufd $0xee,%xmm0,%xmm3
  0x00007fb547802ac3: add    $0x3ff,%eax
  0x00007fb547802ac9: shl    $0x14,%eax
  0x00007fb547802acc: or     %r8d,%eax
  0x00007fb547802acf: vmovd  %eax,%xmm4
  0x00007fb547802ad3: vmulsd %xmm5,%xmm0,%xmm0
  0x00007fb547802ad7: vmulsd %xmm5,%xmm3,%xmm3
  0x00007fb547802adb: vaddsd %xmm2,%xmm0,%xmm0
  0x00007fb547802adf: (bad)  
  0x00007fb547802ae3: hlt    
  0x00007fb547802ae4: and    %al,%ch
  0x00007fb547802ae6: sti    
  0x00007fb547802ae7: pop    %rax
  0x00007fb547802ae8: retq   
  0x00007fb547802ae9: vmovdqu %xmm0,%xmm1
  0x00007fb547802aed: vaddsd %xmm5,%xmm0,%xmm0
  0x00007fb547802af1: vmulsd %xmm4,%xmm0,%xmm0
  0x00007fb547802af5: vpextrw $0x3,%xmm0,%eax
  0x00007fb547802afa: and    $0x7ff0,%eax
  0x00007fb547802b00: je     0x00007fb547802790
  0x00007fb547802b06: cmp    $0x7ff0,%eax
  0x00007fb547802b0c: je     0x00007fb54780274a
  0x00007fb547802b12: jmpq   0x00007fb547802bdf
  0x00007fb547802b17: vmovq  0x8(%rsp),%xmm0
  0x00007fb547802b1d: vxorpd %xmm2,%xmm2,%xmm2
  0x00007fb547802b21: mov    $0xbff0,%eax
  0x00007fb547802b26: vpinsrw $0x3,%eax,%xmm2,%xmm2
  0x00007fb547802b2b: vaddsd %xmm0,%xmm2,%xmm2
  0x00007fb547802b2f: vpextrw $0x3,%xmm2,%eax
  0x00007fb547802b34: cmp    $0x0,%eax
  0x00007fb547802b37: jne    0x00007fb547802b50
  0x00007fb547802b3d: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb547802b41: mov    $0x7ff8,%eax
  0x00007fb547802b46: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb547802b4b: jmpq   0x00007fb547802bdf
  0x00007fb547802b50: vmovq  0x10(%rsp),%xmm1
  0x00007fb547802b56: vmovd  %xmm1,%edx
  0x00007fb547802b5a: vmovdqu %xmm1,%xmm3
  0x00007fb547802b5e: vpsrlq $0x14,%xmm3,%xmm3
  0x00007fb547802b63: vmovd  %xmm3,%ecx
  0x00007fb547802b67: or     %edx,%ecx
  0x00007fb547802b69: je     0x00007fb547802b98
  0x00007fb547802b6f: vaddsd %xmm1,%xmm1,%xmm1
  0x00007fb547802b73: vmovdqu %xmm1,%xmm0
  0x00007fb547802b77: jmpq   0x00007fb547802bdf
  0x00007fb547802b7c: vpextrw $0x3,%xmm1,%eax
  0x00007fb547802b81: vpextrw $0x3,%xmm2,%ecx
  0x00007fb547802b86: xor    %ecx,%eax
  0x00007fb547802b88: test   $0x8000,%eax
  0x00007fb547802b8d: je     0x00007fb547802730
  0x00007fb547802b93: jmpq   0x00007fb547802756
  0x00007fb547802b98: vpextrw $0x3,%xmm0,%eax
  0x00007fb547802b9d: and    $0x7ff0,%eax
  0x00007fb547802ba3: vpextrw $0x3,%xmm1,%edx
  0x00007fb547802ba8: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb547802bac: sub    $0x3ff0,%eax
  0x00007fb547802bb2: xor    %edx,%eax
  0x00007fb547802bb4: test   $0x8000,%eax
  0x00007fb547802bb9: je     0x00007fb547802bc4
  0x00007fb547802bbf: jmpq   0x00007fb547802bdf
  0x00007fb547802bc4: mov    $0x7ff0,%edx
  0x00007fb547802bc9: vpinsrw $0x3,%edx,%xmm0,%xmm0
  0x00007fb547802bce: jmpq   0x00007fb547802bdf
  0x00007fb547802bd3: vmovq  %xmm0,0x18(%rsp)
  0x00007fb547802bd9: vmovq  0x18(%rsp),%xmm0
  0x00007fb547802bdf: add    $0x28,%rsp
  0x00007fb547802be3: leaveq 
  0x00007fb547802be4: retq   

StubRoutines::libmSin [0x00007fb547802be5, 0x00007fb54780327c[ (1687 bytes)
  0x00007fb547802be5: push   %rbp
  0x00007fb547802be6: mov    %rsp,%rbp
  0x00007fb547802be9: push   %rbx
  0x00007fb547802bea: sub    $0x10,%rsp
  0x00007fb547802bee: vmovsd %xmm0,0x8(%rsp)
  0x00007fb547802bf4: mov    0xc(%rsp),%eax
  0x00007fb547802bf8: vmovq  0x1e154ca0(%rip),%xmm1        # 0x00007fb5659578a0
  0x00007fb547802c00: vmovq  0x1e154c90(%rip),%xmm2        # 0x00007fb565957898
  0x00007fb547802c08: and    $0x7fff0000,%eax
  0x00007fb547802c0e: sub    $0x30300000,%eax
  0x00007fb547802c14: cmp    $0x10c50000,%eax
  0x00007fb547802c1a: ja     0x00007fb547802d6a
  0x00007fb547802c20: vmulsd %xmm0,%xmm1,%xmm1
  0x00007fb547802c24: vmovdqu 0x1e155594(%rip),%xmm5        # 0x00007fb5659581c0
  0x00007fb547802c2c: vmovq  0x1e154c5c(%rip),%xmm4        # 0x00007fb565957890
  0x00007fb547802c34: vpand  %xmm0,%xmm4,%xmm4
  0x00007fb547802c38: vpor   %xmm4,%xmm5,%xmm5
  0x00007fb547802c3c: vaddpd %xmm5,%xmm1,%xmm1
  0x00007fb547802c40: vcvttsd2si %xmm1,%edx
  0x00007fb547802c44: vcvtsi2sd %edx,%xmm1,%xmm1
  0x00007fb547802c48: vmovdqu 0x1e155560(%rip),%xmm6        # 0x00007fb5659581b0
  0x00007fb547802c50: movabs $0x3fb921fb54400000,%r8
  0x00007fb547802c5a: vmovq  %r8,%xmm3
  0x00007fb547802c5f: vmovdqu 0x1e155539(%rip),%xmm5        # 0x00007fb5659581a0
  0x00007fb547802c67: vpshufd $0x44,%xmm0,%xmm4
  0x00007fb547802c6c: vmulsd %xmm1,%xmm3,%xmm3
  0x00007fb547802c70: vmovddup %xmm1,%xmm1
  0x00007fb547802c74: and    $0x3f,%edx
  0x00007fb547802c77: shl    $0x5,%edx
  0x00007fb547802c7a: movabs $0x7fb5659579a0,%rax
  0x00007fb547802c84: add    %rdx,%rax
  0x00007fb547802c87: vmulpd %xmm1,%xmm6,%xmm6
  0x00007fb547802c8b: vmulsd 0x1e154bf5(%rip),%xmm1,%xmm1        # 0x00007fb565957888
  0x00007fb547802c93: vsubsd %xmm3,%xmm4,%xmm4
  0x00007fb547802c97: vmovq  0x8(%rax),%xmm7
  0x00007fb547802c9c: vsubsd %xmm3,%xmm0,%xmm0
  0x00007fb547802ca0: vmovddup %xmm4,%xmm3
  0x00007fb547802ca4: vsubsd %xmm6,%xmm4,%xmm4
  0x00007fb547802ca8: vpshufd $0x44,%xmm0,%xmm0
  0x00007fb547802cad: vmovdqu (%rax),%xmm2
  0x00007fb547802cb1: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547802cb5: vsubpd %xmm6,%xmm0,%xmm0
  0x00007fb547802cb9: vmulsd %xmm4,%xmm7,%xmm7
  0x00007fb547802cbd: vsubsd %xmm4,%xmm3,%xmm3
  0x00007fb547802cc1: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547802cc5: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547802cc9: vsubsd %xmm6,%xmm3,%xmm3
  0x00007fb547802ccd: vmovdqu 0x1e154cbb(%rip),%xmm6        # 0x00007fb565957990
  0x00007fb547802cd5: vsubsd %xmm3,%xmm1,%xmm1
  0x00007fb547802cd9: vmovq  0x18(%rax),%xmm3
  0x00007fb547802cde: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb547802ce2: vsubsd %xmm2,%xmm7,%xmm7
  0x00007fb547802ce6: vmulsd %xmm4,%xmm2,%xmm2
  0x00007fb547802cea: vmulpd %xmm0,%xmm6,%xmm6
  0x00007fb547802cee: vmulsd %xmm4,%xmm3,%xmm3
  0x00007fb547802cf2: vmulpd %xmm0,%xmm2,%xmm2
  0x00007fb547802cf6: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547802cfa: vaddpd 0x1e154c7e(%rip),%xmm5,%xmm5        # 0x00007fb565957980
  0x00007fb547802d02: vmulsd (%rax),%xmm4,%xmm4
  0x00007fb547802d06: vaddpd 0x1e154c62(%rip),%xmm6,%xmm6        # 0x00007fb565957970
  0x00007fb547802d0e: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547802d12: vmovdqu %xmm3,%xmm0
  0x00007fb547802d16: vaddsd 0x8(%rax),%xmm3,%xmm3
  0x00007fb547802d1b: vmulpd %xmm7,%xmm1,%xmm1
  0x00007fb547802d1f: vmovdqu %xmm4,%xmm7
  0x00007fb547802d23: vaddsd %xmm3,%xmm4,%xmm4
  0x00007fb547802d27: vaddpd %xmm5,%xmm6,%xmm6
  0x00007fb547802d2b: vmovq  0x8(%rax),%xmm5
  0x00007fb547802d30: vsubsd %xmm3,%xmm5,%xmm5
  0x00007fb547802d34: vsubsd %xmm4,%xmm3,%xmm3
  0x00007fb547802d38: vaddsd 0x10(%rax),%xmm1,%xmm1
  0x00007fb547802d3d: vmulpd %xmm2,%xmm6,%xmm6
  0x00007fb547802d41: vaddsd %xmm0,%xmm5,%xmm5
  0x00007fb547802d45: vaddsd %xmm7,%xmm3,%xmm3
  0x00007fb547802d49: vaddsd %xmm5,%xmm1,%xmm1
  0x00007fb547802d4d: vaddsd %xmm3,%xmm1,%xmm1
  0x00007fb547802d51: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb547802d55: vunpckhpd %xmm6,%xmm6,%xmm6
  0x00007fb547802d59: vmovdqu %xmm4,%xmm0
  0x00007fb547802d5d: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb547802d61: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb547802d65: jmpq   0x00007fb547803275
  0x00007fb547802d6a: jg     0x00007fb547802da9
  0x00007fb547802d70: shr    $0x14,%eax
  0x00007fb547802d73: cmp    $0xcfd,%eax
  0x00007fb547802d79: jne    0x00007fb547802d8c
  0x00007fb547802d7f: vmulsd 0x1e154af9(%rip),%xmm0,%xmm0        # 0x00007fb565957880
  0x00007fb547802d87: jmpq   0x00007fb547803275
  0x00007fb547802d8c: vmovq  0x1e154ae4(%rip),%xmm3        # 0x00007fb565957878
  0x00007fb547802d94: vmulsd %xmm0,%xmm3,%xmm3
  0x00007fb547802d98: vsubsd %xmm0,%xmm3,%xmm3
  0x00007fb547802d9c: vmulsd 0x1e154acc(%rip),%xmm3,%xmm3        # 0x00007fb565957870
  0x00007fb547802da4: jmpq   0x00007fb547803275
  0x00007fb547802da9: vpextrw $0x3,%xmm0,%eax
  0x00007fb547802dae: and    $0x7ff0,%eax
  0x00007fb547802db4: cmp    $0x7ff0,%eax
  0x00007fb547802dba: je     0x00007fb547803262
  0x00007fb547802dc0: vpextrw $0x3,%xmm0,%ecx
  0x00007fb547802dc5: and    $0x7ff0,%ecx
  0x00007fb547802dcb: sub    $0x3f60,%ecx
  0x00007fb547802dd1: shr    $0x7,%ecx
  0x00007fb547802dd4: and    $0xfffc,%ecx
  0x00007fb547802dda: movabs $0x7fb5659578c0,%r11
  0x00007fb547802de4: add    %r11,%rcx
  0x00007fb547802de7: vmovq  %xmm0,%rax
  0x00007fb547802dec: mov    0x14(%rcx),%r10d
  0x00007fb547802df0: mov    0x18(%rcx),%r8d
  0x00007fb547802df4: mov    %eax,%edx
  0x00007fb547802df6: shr    $0x15,%rax
  0x00007fb547802dfa: or     $0x80000000,%eax
  0x00007fb547802e00: shr    $0xb,%eax
  0x00007fb547802e03: mov    %r10d,%r9d
  0x00007fb547802e06: imul   %rdx,%r10
  0x00007fb547802e0a: imul   %rax,%r9
  0x00007fb547802e0e: imul   %rax,%r8
  0x00007fb547802e12: mov    0x10(%rcx),%esi
  0x00007fb547802e15: mov    0xc(%rcx),%edi
  0x00007fb547802e18: mov    %r10d,%r11d
  0x00007fb547802e1b: shr    $0x20,%r10
  0x00007fb547802e1f: add    %r10,%r9
  0x00007fb547802e22: add    %r8,%r11
  0x00007fb547802e25: mov    %r11d,%r8d
  0x00007fb547802e28: shr    $0x20,%r11
  0x00007fb547802e2c: add    %r11,%r9
  0x00007fb547802e2f: mov    %esi,%r10d
  0x00007fb547802e32: imul   %rdx,%rsi
  0x00007fb547802e36: imul   %rax,%r10
  0x00007fb547802e3a: mov    %edi,%r11d
  0x00007fb547802e3d: imul   %rdx,%rdi
  0x00007fb547802e41: mov    %esi,%ebx
  0x00007fb547802e43: shr    $0x20,%rsi
  0x00007fb547802e47: add    %rbx,%r9
  0x00007fb547802e4a: mov    %r9d,%ebx
  0x00007fb547802e4d: shr    $0x20,%r9
  0x00007fb547802e51: add    %rsi,%r10
  0x00007fb547802e54: add    %r9,%r10
  0x00007fb547802e57: shl    $0x20,%rbx
  0x00007fb547802e5b: or     %rbx,%r8
  0x00007fb547802e5e: imul   %rax,%r11
  0x00007fb547802e62: mov    0x8(%rcx),%r9d
  0x00007fb547802e66: mov    0x4(%rcx),%esi
  0x00007fb547802e69: mov    %edi,%ebx
  0x00007fb547802e6b: shr    $0x20,%rdi
  0x00007fb547802e6f: add    %rbx,%r10
  0x00007fb547802e72: mov    %r10d,%ebx
  0x00007fb547802e75: shr    $0x20,%r10
  0x00007fb547802e79: add    %rdi,%r11
  0x00007fb547802e7c: add    %r10,%r11
  0x00007fb547802e7f: mov    %r9,%rdi
  0x00007fb547802e82: imul   %rdx,%r9
  0x00007fb547802e86: imul   %rax,%rdi
  0x00007fb547802e8a: mov    %r9d,%r10d
  0x00007fb547802e8d: shr    $0x20,%r9
  0x00007fb547802e91: add    %r10,%r11
  0x00007fb547802e94: mov    %r11d,%r10d
  0x00007fb547802e97: shr    $0x20,%r11
  0x00007fb547802e9b: add    %r9,%rdi
  0x00007fb547802e9e: add    %r11,%rdi
  0x00007fb547802ea1: mov    %rsi,%r9
  0x00007fb547802ea4: imul   %rdx,%rsi
  0x00007fb547802ea8: imul   %rax,%r9
  0x00007fb547802eac: shl    $0x20,%r10
  0x00007fb547802eb0: or     %rbx,%r10
  0x00007fb547802eb3: mov    (%rcx),%eax
  0x00007fb547802eb5: mov    %esi,%r11d
  0x00007fb547802eb8: shr    $0x20,%rsi
  0x00007fb547802ebc: add    %r11,%rdi
  0x00007fb547802ebf: mov    %edi,%r11d
  0x00007fb547802ec2: shr    $0x20,%rdi
  0x00007fb547802ec6: add    %rsi,%r9
  0x00007fb547802ec9: add    %rdi,%r9
  0x00007fb547802ecc: imul   %rax,%rdx
  0x00007fb547802ed0: vpextrw $0x3,%xmm0,%ebx
  0x00007fb547802ed5: movabs $0x7fb5659578c0,%rdi
  0x00007fb547802edf: sub    %rdi,%rcx
  0x00007fb547802ee2: add    %ecx,%ecx
  0x00007fb547802ee4: add    %ecx,%ecx
  0x00007fb547802ee6: add    %ecx,%ecx
  0x00007fb547802ee8: add    $0x13,%ecx
  0x00007fb547802eeb: mov    $0x8000,%esi
  0x00007fb547802ef0: and    %ebx,%esi
  0x00007fb547802ef2: shr    $0x4,%ebx
  0x00007fb547802ef5: and    $0x7ff,%ebx
  0x00007fb547802efb: sub    $0x3ff,%ebx
  0x00007fb547802f01: sub    %ebx,%ecx
  0x00007fb547802f03: add    %rdx,%r9
  0x00007fb547802f06: mov    %ecx,%edx
  0x00007fb547802f08: add    $0x20,%edx
  0x00007fb547802f0b: cmp    $0x1,%ecx
  0x00007fb547802f0e: jl     0x00007fb5478031b2
  0x00007fb547802f14: neg    %ecx
  0x00007fb547802f16: add    $0x1d,%ecx
  0x00007fb547802f19: shl    %cl,%r9d
  0x00007fb547802f1c: mov    %r9d,%edi
  0x00007fb547802f1f: and    $0x1fffffff,%r9d
  0x00007fb547802f26: test   $0x10000000,%r9d
  0x00007fb547802f2d: jne    0x00007fb5478031df
  0x00007fb547802f33: shr    %cl,%r9d
  0x00007fb547802f36: mov    $0x0,%ebx
  0x00007fb547802f3b: shl    $0x20,%r9
  0x00007fb547802f3f: or     %r11,%r9
  0x00007fb547802f42: cmp    $0x0,%r9
  0x00007fb547802f46: je     0x00007fb547803156
  0x00007fb547802f4c: bsr    %r9,%r11
  0x00007fb547802f50: mov    $0x1d,%ecx
  0x00007fb547802f55: sub    %r11d,%ecx
  0x00007fb547802f58: jle    0x00007fb54780318f
  0x00007fb547802f5e: shl    %cl,%r9
  0x00007fb547802f61: mov    %r10,%rax
  0x00007fb547802f64: shl    %cl,%r10
  0x00007fb547802f67: add    %ecx,%edx
  0x00007fb547802f69: neg    %ecx
  0x00007fb547802f6b: add    $0x40,%ecx
  0x00007fb547802f6e: shr    %cl,%rax
  0x00007fb547802f71: shr    %cl,%r8
  0x00007fb547802f74: or     %rax,%r9
  0x00007fb547802f77: or     %r8,%r10
  0x00007fb547802f7a: vcvtsi2sd %r9,%xmm0,%xmm0
  0x00007fb547802f7f: shr    $0x1,%r10
  0x00007fb547802f83: vcvtsi2sd %r10,%xmm3,%xmm3
  0x00007fb547802f88: vxorpd %xmm4,%xmm4,%xmm4
  0x00007fb547802f8c: shl    $0x4,%edx
  0x00007fb547802f8f: neg    %edx
  0x00007fb547802f91: add    $0x3ff0,%edx
  0x00007fb547802f97: or     %esi,%edx
  0x00007fb547802f99: xor    %ebx,%edx
  0x00007fb547802f9b: vpinsrw $0x3,%edx,%xmm4,%xmm4
  0x00007fb547802fa0: vmovq  0x1e154900(%rip),%xmm2        # 0x00007fb5659578a8
  0x00007fb547802fa8: vmovq  0x1e154900(%rip),%xmm6        # 0x00007fb5659578b0
  0x00007fb547802fb0: vxorpd %xmm5,%xmm5,%xmm5
  0x00007fb547802fb4: sub    $0x3f0,%edx
  0x00007fb547802fba: vpinsrw $0x3,%edx,%xmm5,%xmm5
  0x00007fb547802fbf: vmulsd %xmm4,%xmm0,%xmm0
  0x00007fb547802fc3: shl    $0x10,%esi
  0x00007fb547802fc6: sar    $0x1f,%esi
  0x00007fb547802fc9: vmulsd %xmm5,%xmm3,%xmm3
  0x00007fb547802fcd: vmovdqu %xmm0,%xmm1
  0x00007fb547802fd1: vmulsd %xmm2,%xmm0,%xmm0
  0x00007fb547802fd5: shr    $0x1d,%edi
  0x00007fb547802fd8: vaddsd %xmm3,%xmm1,%xmm1
  0x00007fb547802fdc: vmulsd %xmm2,%xmm3,%xmm3
  0x00007fb547802fe0: add    %esi,%edi
  0x00007fb547802fe2: xor    %esi,%edi
  0x00007fb547802fe4: vmulsd %xmm1,%xmm6,%xmm6
  0x00007fb547802fe8: mov    %edi,%eax
  0x00007fb547802fea: vaddsd %xmm3,%xmm6,%xmm6
  0x00007fb547802fee: vmovdqu %xmm0,%xmm2
  0x00007fb547802ff2: vaddsd %xmm6,%xmm0,%xmm0
  0x00007fb547802ff6: vsubsd %xmm0,%xmm2,%xmm2
  0x00007fb547802ffa: vaddsd %xmm2,%xmm6,%xmm6
  0x00007fb547802ffe: vmovq  0x1e15489a(%rip),%xmm1        # 0x00007fb5659578a0
  0x00007fb547803006: vmulsd %xmm0,%xmm1,%xmm1
  0x00007fb54780300a: vmovq  0x1e1551ae(%rip),%xmm5        # 0x00007fb5659581c0
  0x00007fb547803012: vmovq  0x1e154876(%rip),%xmm4        # 0x00007fb565957890
  0x00007fb54780301a: vpand  %xmm0,%xmm4,%xmm4
  0x00007fb54780301e: vpor   %xmm4,%xmm5,%xmm5
  0x00007fb547803022: vaddpd %xmm5,%xmm1,%xmm1
  0x00007fb547803026: vcvttsd2si %xmm1,%edx
  0x00007fb54780302a: vcvtsi2sd %edx,%xmm1,%xmm1
  0x00007fb54780302e: vmovq  0x1e154832(%rip),%xmm3        # 0x00007fb565957868
  0x00007fb547803036: vmovdqu 0x1e155172(%rip),%xmm2        # 0x00007fb5659581b0
  0x00007fb54780303e: vmulsd %xmm1,%xmm3,%xmm3
  0x00007fb547803042: vunpcklpd %xmm1,%xmm1,%xmm1
  0x00007fb547803046: shl    $0x3,%eax
  0x00007fb547803049: add    $0x1c7600,%edx
  0x00007fb54780304f: vmovdqu %xmm0,%xmm4
  0x00007fb547803053: add    %eax,%edx
  0x00007fb547803055: and    $0x3f,%edx
  0x00007fb547803058: vmovdqu 0x1e155140(%rip),%xmm5        # 0x00007fb5659581a0
  0x00007fb547803060: movabs $0x7fb5659579a0,%rax
  0x00007fb54780306a: shl    $0x5,%edx
  0x00007fb54780306d: add    %rdx,%rax
  0x00007fb547803070: vmulpd %xmm1,%xmm2,%xmm2
  0x00007fb547803074: vsubsd %xmm3,%xmm0,%xmm0
  0x00007fb547803078: vmulsd 0x1e154808(%rip),%xmm1,%xmm1        # 0x00007fb565957888
  0x00007fb547803080: vsubsd %xmm3,%xmm4,%xmm4
  0x00007fb547803084: vmovq  0x8(%rax),%xmm7
  0x00007fb547803089: vunpcklpd %xmm0,%xmm0,%xmm0
  0x00007fb54780308d: vmovdqu %xmm4,%xmm3
  0x00007fb547803091: vsubsd %xmm2,%xmm4,%xmm4
  0x00007fb547803095: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547803099: vsubpd %xmm2,%xmm0,%xmm0
  0x00007fb54780309d: vmulsd %xmm4,%xmm7,%xmm7
  0x00007fb5478030a1: vsubsd %xmm4,%xmm3,%xmm3
  0x00007fb5478030a5: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb5478030a9: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb5478030ad: vsubsd %xmm2,%xmm3,%xmm3
  0x00007fb5478030b1: vmovdqu (%rax),%xmm2
  0x00007fb5478030b5: vsubsd %xmm3,%xmm1,%xmm1
  0x00007fb5478030b9: vmovq  0x18(%rax),%xmm3
  0x00007fb5478030be: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb5478030c2: vsubsd %xmm2,%xmm7,%xmm7
  0x00007fb5478030c6: vsubsd %xmm6,%xmm1,%xmm1
  0x00007fb5478030ca: vmovdqu 0x1e1548be(%rip),%xmm6        # 0x00007fb565957990
  0x00007fb5478030d2: vmulsd %xmm4,%xmm2,%xmm2
  0x00007fb5478030d6: vmulpd %xmm0,%xmm6,%xmm6
  0x00007fb5478030da: vmulsd %xmm4,%xmm3,%xmm3
  0x00007fb5478030de: vmulpd %xmm0,%xmm2,%xmm2
  0x00007fb5478030e2: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb5478030e6: vaddpd 0x1e154892(%rip),%xmm5,%xmm5        # 0x00007fb565957980
  0x00007fb5478030ee: vmulsd (%rax),%xmm4,%xmm4
  0x00007fb5478030f2: vaddpd 0x1e154876(%rip),%xmm6,%xmm6        # 0x00007fb565957970
  0x00007fb5478030fa: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb5478030fe: vmovdqu %xmm3,%xmm0
  0x00007fb547803102: vaddsd 0x8(%rax),%xmm3,%xmm3
  0x00007fb547803107: vmulpd %xmm7,%xmm1,%xmm1
  0x00007fb54780310b: vmovdqu %xmm4,%xmm7
  0x00007fb54780310f: vaddsd %xmm3,%xmm4,%xmm4
  0x00007fb547803113: vaddpd %xmm5,%xmm6,%xmm6
  0x00007fb547803117: vmovq  0x8(%rax),%xmm5
  0x00007fb54780311c: vsubsd %xmm3,%xmm5,%xmm5
  0x00007fb547803120: vsubsd %xmm4,%xmm3,%xmm3
  0x00007fb547803124: vaddsd 0x10(%rax),%xmm1,%xmm1
  0x00007fb547803129: vmulpd %xmm2,%xmm6,%xmm6
  0x00007fb54780312d: vaddsd %xmm0,%xmm5,%xmm5
  0x00007fb547803131: vaddsd %xmm7,%xmm3,%xmm3
  0x00007fb547803135: vaddsd %xmm5,%xmm1,%xmm1
  0x00007fb547803139: vaddsd %xmm3,%xmm1,%xmm1
  0x00007fb54780313d: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb547803141: vunpckhpd %xmm6,%xmm6,%xmm6
  0x00007fb547803145: vmovdqu %xmm4,%xmm0
  0x00007fb547803149: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb54780314d: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb547803151: jmpq   0x00007fb547803275
  0x00007fb547803156: add    $0x40,%edx
  0x00007fb547803159: mov    %r10,%r9
  0x00007fb54780315c: mov    %r8,%r10
  0x00007fb54780315f: mov    $0x0,%r8d
  0x00007fb547803165: cmp    $0x0,%r9
  0x00007fb547803169: jne    0x00007fb547802f4c
  0x00007fb54780316f: add    $0x40,%edx
  0x00007fb547803172: mov    %r10,%r9
  0x00007fb547803175: mov    %r8,%r10
  0x00007fb547803178: cmp    $0x0,%r9
  0x00007fb54780317c: jne    0x00007fb547802f4c
  0x00007fb547803182: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb547803186: vxorpd %xmm6,%xmm6,%xmm6
  0x00007fb54780318a: jmpq   0x00007fb547802ffe
  0x00007fb54780318f: je     0x00007fb547802f7a
  0x00007fb547803195: neg    %ecx
  0x00007fb547803197: shr    %cl,%r10
  0x00007fb54780319a: mov    %r9,%rax
  0x00007fb54780319d: shr    %cl,%r9
  0x00007fb5478031a0: sub    %ecx,%edx
  0x00007fb5478031a2: neg    %ecx
  0x00007fb5478031a4: add    $0x40,%ecx
  0x00007fb5478031a7: shl    %cl,%rax
  0x00007fb5478031aa: or     %rax,%r10
  0x00007fb5478031ad: jmpq   0x00007fb547802f7a
  0x00007fb5478031b2: neg    %ecx
  0x00007fb5478031b4: shl    $0x20,%r9
  0x00007fb5478031b8: or     %r11,%r9
  0x00007fb5478031bb: shl    %cl,%r9
  0x00007fb5478031be: mov    %r9,%rdi
  0x00007fb5478031c1: test   $0x80000000,%r9d
  0x00007fb5478031c8: jne    0x00007fb547803221
  0x00007fb5478031ce: shr    %cl,%r9d
  0x00007fb5478031d1: mov    $0x0,%ebx
  0x00007fb5478031d6: shr    $0x3,%rdi
  0x00007fb5478031da: jmpq   0x00007fb547802f42
  0x00007fb5478031df: shr    %cl,%r9d
  0x00007fb5478031e2: mov    $0x20000000,%ebx
  0x00007fb5478031e7: shr    %cl,%ebx
  0x00007fb5478031e9: shl    $0x20,%r9
  0x00007fb5478031ed: or     %r11,%r9
  0x00007fb5478031f0: shl    $0x20,%rbx
  0x00007fb5478031f4: add    $0x20000000,%edi
  0x00007fb5478031fa: mov    $0x0,%ecx
  0x00007fb5478031ff: mov    $0x0,%r11d
  0x00007fb547803205: sub    %r8,%rcx
  0x00007fb547803208: sbb    %r10,%r11
  0x00007fb54780320b: sbb    %r9,%rbx
  0x00007fb54780320e: mov    %rcx,%r8
  0x00007fb547803211: mov    %r11,%r10
  0x00007fb547803214: mov    %rbx,%r9
  0x00007fb547803217: mov    $0x8000,%ebx
  0x00007fb54780321c: jmpq   0x00007fb547802f42
  0x00007fb547803221: shr    %cl,%r9d
  0x00007fb547803224: movabs $0x100000000,%rbx
  0x00007fb54780322e: shr    %cl,%rbx
  0x00007fb547803231: mov    $0x0,%ecx
  0x00007fb547803236: mov    $0x0,%r11d
  0x00007fb54780323c: sub    %r8,%rcx
  0x00007fb54780323f: sbb    %r10,%r11
  0x00007fb547803242: sbb    %r9,%rbx
  0x00007fb547803245: mov    %rcx,%r8
  0x00007fb547803248: mov    %r11,%r10
  0x00007fb54780324b: mov    %rbx,%r9
  0x00007fb54780324e: mov    $0x8000,%ebx
  0x00007fb547803253: shr    $0x3,%rdi
  0x00007fb547803257: add    $0x20000000,%edi
  0x00007fb54780325d: jmpq   0x00007fb547802f42
  0x00007fb547803262: vmovq  0x8(%rsp),%xmm0
  0x00007fb547803268: vmulsd 0x1e1545f0(%rip),%xmm0,%xmm0        # 0x00007fb565957860
  0x00007fb547803270: vmovq  %xmm0,(%rsp)
  0x00007fb547803275: add    $0x10,%rsp
  0x00007fb547803279: pop    %rbx
  0x00007fb54780327a: leaveq 
  0x00007fb54780327b: retq   

StubRoutines::libmCos [0x00007fb54780327c, 0x00007fb5478038f5[ (1657 bytes)
  0x00007fb54780327c: push   %rbp
  0x00007fb54780327d: mov    %rsp,%rbp
  0x00007fb547803280: push   %rbx
  0x00007fb547803281: sub    $0x10,%rsp
  0x00007fb547803285: vmovsd %xmm0,0x8(%rsp)
  0x00007fb54780328b: mov    0xc(%rsp),%eax
  0x00007fb54780328f: vmovq  0x1e154609(%rip),%xmm1        # 0x00007fb5659578a0
  0x00007fb547803297: and    $0x7fff0000,%eax
  0x00007fb54780329d: sub    $0x30300000,%eax
  0x00007fb5478032a3: cmp    $0x10c50000,%eax
  0x00007fb5478032a9: ja     0x00007fb5478033f5
  0x00007fb5478032af: vmulsd %xmm0,%xmm1,%xmm1
  0x00007fb5478032b3: vmovdqu 0x1e154f05(%rip),%xmm5        # 0x00007fb5659581c0
  0x00007fb5478032bb: vmovq  0x1e1545cd(%rip),%xmm4        # 0x00007fb565957890
  0x00007fb5478032c3: vpand  %xmm0,%xmm4,%xmm4
  0x00007fb5478032c7: vpor   %xmm4,%xmm5,%xmm5
  0x00007fb5478032cb: vaddpd %xmm5,%xmm1,%xmm1
  0x00007fb5478032cf: vcvttsd2si %xmm1,%edx
  0x00007fb5478032d3: vcvtsi2sd %edx,%xmm1,%xmm1
  0x00007fb5478032d7: vmovdqu 0x1e154ed1(%rip),%xmm2        # 0x00007fb5659581b0
  0x00007fb5478032df: vmovq  0x1e154581(%rip),%xmm3        # 0x00007fb565957868
  0x00007fb5478032e7: vmulsd %xmm1,%xmm3,%xmm3
  0x00007fb5478032eb: vunpcklpd %xmm1,%xmm1,%xmm1
  0x00007fb5478032ef: add    $0x1c7610,%rdx
  0x00007fb5478032f6: vmovdqu %xmm0,%xmm4
  0x00007fb5478032fa: and    $0x3f,%rdx
  0x00007fb5478032fe: vmovdqu 0x1e154e9a(%rip),%xmm5        # 0x00007fb5659581a0
  0x00007fb547803306: movabs $0x7fb5659579a0,%rax
  0x00007fb547803310: shl    $0x5,%rdx
  0x00007fb547803314: add    %rdx,%rax
  0x00007fb547803317: vmulpd %xmm1,%xmm2,%xmm2
  0x00007fb54780331b: vsubsd %xmm3,%xmm0,%xmm0
  0x00007fb54780331f: vmulsd 0x1e154561(%rip),%xmm1,%xmm1        # 0x00007fb565957888
  0x00007fb547803327: vsubsd %xmm3,%xmm4,%xmm4
  0x00007fb54780332b: vmovq  0x8(%rax),%xmm7
  0x00007fb547803330: vunpcklpd %xmm0,%xmm0,%xmm0
  0x00007fb547803334: vmovdqu %xmm4,%xmm3
  0x00007fb547803338: vsubsd %xmm2,%xmm4,%xmm4
  0x00007fb54780333c: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547803340: vsubpd %xmm2,%xmm0,%xmm0
  0x00007fb547803344: vmovdqu 0x1e154644(%rip),%xmm6        # 0x00007fb565957990
  0x00007fb54780334c: vmulsd %xmm4,%xmm7,%xmm7
  0x00007fb547803350: vsubsd %xmm4,%xmm3,%xmm3
  0x00007fb547803354: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547803358: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb54780335c: vsubsd %xmm2,%xmm3,%xmm3
  0x00007fb547803360: vmovdqu (%rax),%xmm2
  0x00007fb547803364: vsubsd %xmm3,%xmm1,%xmm1
  0x00007fb547803368: vmovq  0x18(%rax),%xmm3
  0x00007fb54780336d: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb547803371: vsubsd %xmm2,%xmm7,%xmm7
  0x00007fb547803375: vmulsd %xmm4,%xmm2,%xmm2
  0x00007fb547803379: vmulpd %xmm0,%xmm6,%xmm6
  0x00007fb54780337d: vmulsd %xmm4,%xmm3,%xmm3
  0x00007fb547803381: vmulpd %xmm0,%xmm2,%xmm2
  0x00007fb547803385: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547803389: vaddpd 0x1e1545ef(%rip),%xmm5,%xmm5        # 0x00007fb565957980
  0x00007fb547803391: vmulsd (%rax),%xmm4,%xmm4
  0x00007fb547803395: vaddpd 0x1e1545d3(%rip),%xmm6,%xmm6        # 0x00007fb565957970
  0x00007fb54780339d: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb5478033a1: vmovdqu %xmm3,%xmm0
  0x00007fb5478033a5: vaddsd 0x8(%rax),%xmm3,%xmm3
  0x00007fb5478033aa: vmulpd %xmm7,%xmm1,%xmm1
  0x00007fb5478033ae: vmovdqu %xmm4,%xmm7
  0x00007fb5478033b2: vaddsd %xmm3,%xmm4,%xmm4
  0x00007fb5478033b6: vaddpd %xmm5,%xmm6,%xmm6
  0x00007fb5478033ba: vmovq  0x8(%rax),%xmm5
  0x00007fb5478033bf: vsubsd %xmm3,%xmm5,%xmm5
  0x00007fb5478033c3: vsubsd %xmm4,%xmm3,%xmm3
  0x00007fb5478033c7: vaddsd 0x10(%rax),%xmm1,%xmm1
  0x00007fb5478033cc: vmulpd %xmm2,%xmm6,%xmm6
  0x00007fb5478033d0: vaddsd %xmm5,%xmm0,%xmm0
  0x00007fb5478033d4: vaddsd %xmm7,%xmm3,%xmm3
  0x00007fb5478033d8: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb5478033dc: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb5478033e0: vaddsd %xmm6,%xmm0,%xmm0
  0x00007fb5478033e4: vunpckhpd %xmm6,%xmm6,%xmm6
  0x00007fb5478033e8: vaddsd %xmm6,%xmm0,%xmm0
  0x00007fb5478033ec: vaddsd %xmm4,%xmm0,%xmm0
  0x00007fb5478033f0: jmpq   0x00007fb5478038ee
  0x00007fb5478033f5: jg     0x00007fb547803420
  0x00007fb5478033fb: vpextrw $0x3,%xmm0,%eax
  0x00007fb547803400: and    $0x7fff,%eax
  0x00007fb547803406: vpinsrw $0x3,%eax,%xmm0,%xmm0
  0x00007fb54780340b: vmovq  0x1e14fd8d(%rip),%xmm1        # 0x00007fb5659531a0
  0x00007fb547803413: vsubsd %xmm0,%xmm1,%xmm1
  0x00007fb547803417: vmovdqu %xmm1,%xmm0
  0x00007fb54780341b: jmpq   0x00007fb5478038ee
  0x00007fb547803420: vpextrw $0x3,%xmm0,%eax
  0x00007fb547803425: and    $0x7ff0,%eax
  0x00007fb54780342b: cmp    $0x7ff0,%eax
  0x00007fb547803431: je     0x00007fb5478038db
  0x00007fb547803437: vpextrw $0x3,%xmm0,%ecx
  0x00007fb54780343c: and    $0x7ff0,%ecx
  0x00007fb547803442: sub    $0x3f60,%ecx
  0x00007fb547803448: shr    $0x7,%ecx
  0x00007fb54780344b: and    $0xfffc,%ecx
  0x00007fb547803451: movabs $0x7fb5659578c0,%r11
  0x00007fb54780345b: add    %r11,%rcx
  0x00007fb54780345e: vmovq  %xmm0,%rax
  0x00007fb547803463: mov    0x14(%rcx),%r10d
  0x00007fb547803467: mov    0x18(%rcx),%r8d
  0x00007fb54780346b: mov    %eax,%edx
  0x00007fb54780346d: shr    $0x15,%rax
  0x00007fb547803471: or     $0x80000000,%eax
  0x00007fb547803477: shr    $0xb,%eax
  0x00007fb54780347a: mov    %r10d,%r9d
  0x00007fb54780347d: imul   %rdx,%r10
  0x00007fb547803481: imul   %rax,%r9
  0x00007fb547803485: imul   %rax,%r8
  0x00007fb547803489: mov    0x10(%rcx),%esi
  0x00007fb54780348c: mov    0xc(%rcx),%edi
  0x00007fb54780348f: mov    %r10d,%r11d
  0x00007fb547803492: shr    $0x20,%r10
  0x00007fb547803496: add    %r10,%r9
  0x00007fb547803499: add    %r8,%r11
  0x00007fb54780349c: mov    %r11d,%r8d
  0x00007fb54780349f: shr    $0x20,%r11
  0x00007fb5478034a3: add    %r11,%r9
  0x00007fb5478034a6: mov    %esi,%r10d
  0x00007fb5478034a9: imul   %rdx,%rsi
  0x00007fb5478034ad: imul   %rax,%r10
  0x00007fb5478034b1: mov    %edi,%r11d
  0x00007fb5478034b4: imul   %rdx,%rdi
  0x00007fb5478034b8: mov    %esi,%ebx
  0x00007fb5478034ba: shr    $0x20,%rsi
  0x00007fb5478034be: add    %rbx,%r9
  0x00007fb5478034c1: mov    %r9d,%ebx
  0x00007fb5478034c4: shr    $0x20,%r9
  0x00007fb5478034c8: add    %rsi,%r10
  0x00007fb5478034cb: add    %r9,%r10
  0x00007fb5478034ce: shl    $0x20,%rbx
  0x00007fb5478034d2: or     %rbx,%r8
  0x00007fb5478034d5: imul   %rax,%r11
  0x00007fb5478034d9: mov    0x8(%rcx),%r9d
  0x00007fb5478034dd: mov    0x4(%rcx),%esi
  0x00007fb5478034e0: mov    %edi,%ebx
  0x00007fb5478034e2: shr    $0x20,%rdi
  0x00007fb5478034e6: add    %rbx,%r10
  0x00007fb5478034e9: mov    %r10d,%ebx
  0x00007fb5478034ec: shr    $0x20,%r10
  0x00007fb5478034f0: add    %rdi,%r11
  0x00007fb5478034f3: add    %r10,%r11
  0x00007fb5478034f6: mov    %r9,%rdi
  0x00007fb5478034f9: imul   %rdx,%r9
  0x00007fb5478034fd: imul   %rax,%rdi
  0x00007fb547803501: mov    %r9d,%r10d
  0x00007fb547803504: shr    $0x20,%r9
  0x00007fb547803508: add    %r10,%r11
  0x00007fb54780350b: mov    %r11d,%r10d
  0x00007fb54780350e: shr    $0x20,%r11
  0x00007fb547803512: add    %r9,%rdi
  0x00007fb547803515: add    %r11,%rdi
  0x00007fb547803518: mov    %rsi,%r9
  0x00007fb54780351b: imul   %rdx,%rsi
  0x00007fb54780351f: imul   %rax,%r9
  0x00007fb547803523: shl    $0x20,%r10
  0x00007fb547803527: or     %rbx,%r10
  0x00007fb54780352a: mov    (%rcx),%eax
  0x00007fb54780352c: mov    %esi,%r11d
  0x00007fb54780352f: shr    $0x20,%rsi
  0x00007fb547803533: add    %r11,%rdi
  0x00007fb547803536: mov    %edi,%r11d
  0x00007fb547803539: shr    $0x20,%rdi
  0x00007fb54780353d: add    %rsi,%r9
  0x00007fb547803540: add    %rdi,%r9
  0x00007fb547803543: imul   %rax,%rdx
  0x00007fb547803547: vpextrw $0x3,%xmm0,%ebx
  0x00007fb54780354c: movabs $0x7fb5659578c0,%rdi
  0x00007fb547803556: sub    %rdi,%rcx
  0x00007fb547803559: add    %ecx,%ecx
  0x00007fb54780355b: add    %ecx,%ecx
  0x00007fb54780355d: add    %ecx,%ecx
  0x00007fb54780355f: add    $0x13,%ecx
  0x00007fb547803562: mov    $0x8000,%esi
  0x00007fb547803567: and    %ebx,%esi
  0x00007fb547803569: shr    $0x4,%ebx
  0x00007fb54780356c: and    $0x7ff,%ebx
  0x00007fb547803572: sub    $0x3ff,%ebx
  0x00007fb547803578: sub    %ebx,%ecx
  0x00007fb54780357a: add    %rdx,%r9
  0x00007fb54780357d: mov    %ecx,%edx
  0x00007fb54780357f: add    $0x20,%edx
  0x00007fb547803582: cmp    $0x1,%ecx
  0x00007fb547803585: jl     0x00007fb54780382b
  0x00007fb54780358b: neg    %ecx
  0x00007fb54780358d: add    $0x1d,%ecx
  0x00007fb547803590: shl    %cl,%r9d
  0x00007fb547803593: mov    %r9d,%edi
  0x00007fb547803596: and    $0x1fffffff,%r9d
  0x00007fb54780359d: test   $0x10000000,%r9d
  0x00007fb5478035a4: jne    0x00007fb547803858
  0x00007fb5478035aa: shr    %cl,%r9d
  0x00007fb5478035ad: mov    $0x0,%ebx
  0x00007fb5478035b2: shl    $0x20,%r9
  0x00007fb5478035b6: or     %r11,%r9
  0x00007fb5478035b9: cmp    $0x0,%r9
  0x00007fb5478035bd: je     0x00007fb5478037cf
  0x00007fb5478035c3: bsr    %r9,%r11
  0x00007fb5478035c7: mov    $0x1d,%ecx
  0x00007fb5478035cc: sub    %r11d,%ecx
  0x00007fb5478035cf: jle    0x00007fb547803808
  0x00007fb5478035d5: shl    %cl,%r9
  0x00007fb5478035d8: mov    %r10,%rax
  0x00007fb5478035db: shl    %cl,%r10
  0x00007fb5478035de: add    %ecx,%edx
  0x00007fb5478035e0: neg    %ecx
  0x00007fb5478035e2: add    $0x40,%ecx
  0x00007fb5478035e5: shr    %cl,%rax
  0x00007fb5478035e8: shr    %cl,%r8
  0x00007fb5478035eb: or     %rax,%r9
  0x00007fb5478035ee: or     %r8,%r10
  0x00007fb5478035f1: vcvtsi2sd %r9,%xmm0,%xmm0
  0x00007fb5478035f6: shr    $0x1,%r10
  0x00007fb5478035fa: vcvtsi2sd %r10,%xmm3,%xmm3
  0x00007fb5478035ff: vxorpd %xmm4,%xmm4,%xmm4
  0x00007fb547803603: shl    $0x4,%edx
  0x00007fb547803606: neg    %edx
  0x00007fb547803608: add    $0x3ff0,%edx
  0x00007fb54780360e: or     %esi,%edx
  0x00007fb547803610: xor    %ebx,%edx
  0x00007fb547803612: vpinsrw $0x3,%edx,%xmm4,%xmm4
  0x00007fb547803617: vmovq  0x1e154289(%rip),%xmm2        # 0x00007fb5659578a8
  0x00007fb54780361f: vmovq  0x1e154289(%rip),%xmm6        # 0x00007fb5659578b0
  0x00007fb547803627: vxorpd %xmm5,%xmm5,%xmm5
  0x00007fb54780362b: sub    $0x3f0,%edx
  0x00007fb547803631: vpinsrw $0x3,%edx,%xmm5,%xmm5
  0x00007fb547803636: vmulsd %xmm4,%xmm0,%xmm0
  0x00007fb54780363a: shl    $0x10,%esi
  0x00007fb54780363d: sar    $0x1f,%esi
  0x00007fb547803640: vmulsd %xmm5,%xmm3,%xmm3
  0x00007fb547803644: vmovdqu %xmm0,%xmm1
  0x00007fb547803648: vmulsd %xmm2,%xmm0,%xmm0
  0x00007fb54780364c: shr    $0x1d,%edi
  0x00007fb54780364f: vaddsd %xmm3,%xmm1,%xmm1
  0x00007fb547803653: vmulsd %xmm2,%xmm3,%xmm3
  0x00007fb547803657: add    %esi,%edi
  0x00007fb547803659: xor    %esi,%edi
  0x00007fb54780365b: vmulsd %xmm1,%xmm6,%xmm6
  0x00007fb54780365f: mov    %edi,%eax
  0x00007fb547803661: vaddsd %xmm3,%xmm6,%xmm6
  0x00007fb547803665: vmovdqu %xmm0,%xmm2
  0x00007fb547803669: vaddsd %xmm6,%xmm0,%xmm0
  0x00007fb54780366d: vsubsd %xmm0,%xmm2,%xmm2
  0x00007fb547803671: vaddsd %xmm2,%xmm6,%xmm6
  0x00007fb547803675: vmovq  0x1e154223(%rip),%xmm1        # 0x00007fb5659578a0
  0x00007fb54780367d: vmulsd %xmm0,%xmm1,%xmm1
  0x00007fb547803681: vmovq  0x1e154b37(%rip),%xmm5        # 0x00007fb5659581c0
  0x00007fb547803689: vmovq  0x1e1541ff(%rip),%xmm4        # 0x00007fb565957890
  0x00007fb547803691: vpand  %xmm0,%xmm4,%xmm4
  0x00007fb547803695: vpor   %xmm4,%xmm5,%xmm5
  0x00007fb547803699: vaddpd %xmm5,%xmm1,%xmm1
  0x00007fb54780369d: vcvttsd2si %xmm1,%rdx
  0x00007fb5478036a2: vcvtsi2sd %rdx,%xmm1,%xmm1
  0x00007fb5478036a7: vmovq  0x1e1541b9(%rip),%xmm3        # 0x00007fb565957868
  0x00007fb5478036af: vmovdqu 0x1e154af9(%rip),%xmm2        # 0x00007fb5659581b0
  0x00007fb5478036b7: vmulsd %xmm1,%xmm3,%xmm3
  0x00007fb5478036bb: vunpcklpd %xmm1,%xmm1,%xmm1
  0x00007fb5478036bf: shl    $0x3,%eax
  0x00007fb5478036c2: add    $0x1c7610,%edx
  0x00007fb5478036c8: vmovdqu %xmm0,%xmm4
  0x00007fb5478036cc: add    %eax,%edx
  0x00007fb5478036ce: and    $0x3f,%edx
  0x00007fb5478036d1: vmovdqu 0x1e154ac7(%rip),%xmm5        # 0x00007fb5659581a0
  0x00007fb5478036d9: movabs $0x7fb5659579a0,%rax
  0x00007fb5478036e3: shl    $0x5,%edx
  0x00007fb5478036e6: add    %rdx,%rax
  0x00007fb5478036e9: vmulpd %xmm1,%xmm2,%xmm2
  0x00007fb5478036ed: vsubsd %xmm3,%xmm0,%xmm0
  0x00007fb5478036f1: vmulsd 0x1e15418f(%rip),%xmm1,%xmm1        # 0x00007fb565957888
  0x00007fb5478036f9: vsubsd %xmm3,%xmm4,%xmm4
  0x00007fb5478036fd: vmovq  0x8(%rax),%xmm7
  0x00007fb547803702: vunpcklpd %xmm0,%xmm0,%xmm0
  0x00007fb547803706: vmovdqu %xmm4,%xmm3
  0x00007fb54780370a: vsubsd %xmm2,%xmm4,%xmm4
  0x00007fb54780370e: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547803712: vsubpd %xmm2,%xmm0,%xmm0
  0x00007fb547803716: vmulsd %xmm4,%xmm7,%xmm7
  0x00007fb54780371a: vsubsd %xmm4,%xmm3,%xmm3
  0x00007fb54780371e: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547803722: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547803726: vsubsd %xmm2,%xmm3,%xmm3
  0x00007fb54780372a: vmovdqu (%rax),%xmm2
  0x00007fb54780372e: vsubsd %xmm3,%xmm1,%xmm1
  0x00007fb547803732: vmovq  0x18(%rax),%xmm3
  0x00007fb547803737: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb54780373b: vsubsd %xmm2,%xmm7,%xmm7
  0x00007fb54780373f: vsubsd %xmm6,%xmm1,%xmm1
  0x00007fb547803743: vmovdqu 0x1e154245(%rip),%xmm6        # 0x00007fb565957990
  0x00007fb54780374b: vmulsd %xmm4,%xmm2,%xmm2
  0x00007fb54780374f: vmulpd %xmm0,%xmm6,%xmm6
  0x00007fb547803753: vmulsd %xmm4,%xmm3,%xmm3
  0x00007fb547803757: vmulpd %xmm0,%xmm2,%xmm2
  0x00007fb54780375b: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb54780375f: vaddpd 0x1e154219(%rip),%xmm5,%xmm5        # 0x00007fb565957980
  0x00007fb547803767: vmulsd (%rax),%xmm4,%xmm4
  0x00007fb54780376b: vaddpd 0x1e1541fd(%rip),%xmm6,%xmm6        # 0x00007fb565957970
  0x00007fb547803773: vmulpd %xmm0,%xmm5,%xmm5
  0x00007fb547803777: vmovdqu %xmm3,%xmm0
  0x00007fb54780377b: vaddsd 0x8(%rax),%xmm3,%xmm3
  0x00007fb547803780: vmulpd %xmm7,%xmm1,%xmm1
  0x00007fb547803784: vmovdqu %xmm4,%xmm7
  0x00007fb547803788: vaddsd %xmm3,%xmm4,%xmm4
  0x00007fb54780378c: vaddpd %xmm5,%xmm6,%xmm6
  0x00007fb547803790: vmovq  0x8(%rax),%xmm5
  0x00007fb547803795: vsubsd %xmm3,%xmm5,%xmm5
  0x00007fb547803799: vsubsd %xmm4,%xmm3,%xmm3
  0x00007fb54780379d: vaddsd 0x10(%rax),%xmm1,%xmm1
  0x00007fb5478037a2: vmulpd %xmm2,%xmm6,%xmm6
  0x00007fb5478037a6: vaddsd %xmm0,%xmm5,%xmm5
  0x00007fb5478037aa: vaddsd %xmm7,%xmm3,%xmm3
  0x00007fb5478037ae: vaddsd %xmm5,%xmm1,%xmm1
  0x00007fb5478037b2: vaddsd %xmm3,%xmm1,%xmm1
  0x00007fb5478037b6: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb5478037ba: vunpckhpd %xmm6,%xmm6,%xmm6
  0x00007fb5478037be: vmovdqu %xmm4,%xmm0
  0x00007fb5478037c2: vaddsd %xmm6,%xmm1,%xmm1
  0x00007fb5478037c6: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb5478037ca: jmpq   0x00007fb5478038ee
  0x00007fb5478037cf: add    $0x40,%edx
  0x00007fb5478037d2: mov    %r10,%r9
  0x00007fb5478037d5: mov    %r8,%r10
  0x00007fb5478037d8: mov    $0x0,%r8d
  0x00007fb5478037de: cmp    $0x0,%r9
  0x00007fb5478037e2: jne    0x00007fb5478035c3
  0x00007fb5478037e8: add    $0x40,%edx
  0x00007fb5478037eb: mov    %r10,%r9
  0x00007fb5478037ee: mov    %r8,%r10
  0x00007fb5478037f1: cmp    $0x0,%r9
  0x00007fb5478037f5: jne    0x00007fb5478035c3
  0x00007fb5478037fb: vxorpd %xmm0,%xmm0,%xmm0
  0x00007fb5478037ff: vxorpd %xmm6,%xmm6,%xmm6
  0x00007fb547803803: jmpq   0x00007fb547803675
  0x00007fb547803808: je     0x00007fb5478035f1
  0x00007fb54780380e: neg    %ecx
  0x00007fb547803810: shr    %cl,%r10
  0x00007fb547803813: mov    %r9,%rax
  0x00007fb547803816: shr    %cl,%r9
  0x00007fb547803819: sub    %ecx,%edx
  0x00007fb54780381b: neg    %ecx
  0x00007fb54780381d: add    $0x40,%ecx
  0x00007fb547803820: shl    %cl,%rax
  0x00007fb547803823: or     %rax,%r10
  0x00007fb547803826: jmpq   0x00007fb5478035f1
  0x00007fb54780382b: neg    %ecx
  0x00007fb54780382d: shl    $0x20,%r9
  0x00007fb547803831: or     %r11,%r9
  0x00007fb547803834: shl    %cl,%r9
  0x00007fb547803837: mov    %r9,%rdi
  0x00007fb54780383a: test   $0x80000000,%r9d
  0x00007fb547803841: jne    0x00007fb54780389a
  0x00007fb547803847: shr    %cl,%r9d
  0x00007fb54780384a: mov    $0x0,%ebx
  0x00007fb54780384f: shr    $0x3,%rdi
  0x00007fb547803853: jmpq   0x00007fb5478035b9
  0x00007fb547803858: shr    %cl,%r9d
  0x00007fb54780385b: mov    $0x20000000,%ebx
  0x00007fb547803860: shr    %cl,%ebx
  0x00007fb547803862: shl    $0x20,%r9
  0x00007fb547803866: or     %r11,%r9
  0x00007fb547803869: shl    $0x20,%rbx
  0x00007fb54780386d: add    $0x20000000,%edi
  0x00007fb547803873: mov    $0x0,%ecx
  0x00007fb547803878: mov    $0x0,%r11d
  0x00007fb54780387e: sub    %r8,%rcx
  0x00007fb547803881: sbb    %r10,%r11
  0x00007fb547803884: sbb    %r9,%rbx
  0x00007fb547803887: mov    %rcx,%r8
  0x00007fb54780388a: mov    %r11,%r10
  0x00007fb54780388d: mov    %rbx,%r9
  0x00007fb547803890: mov    $0x8000,%ebx
  0x00007fb547803895: jmpq   0x00007fb5478035b9
  0x00007fb54780389a: shr    %cl,%r9d
  0x00007fb54780389d: movabs $0x100000000,%rbx
  0x00007fb5478038a7: shr    %cl,%rbx
  0x00007fb5478038aa: mov    $0x0,%ecx
  0x00007fb5478038af: mov    $0x0,%r11d
  0x00007fb5478038b5: sub    %r8,%rcx
  0x00007fb5478038b8: sbb    %r10,%r11
  0x00007fb5478038bb: sbb    %r9,%rbx
  0x00007fb5478038be: mov    %rcx,%r8
  0x00007fb5478038c1: mov    %r11,%r10
  0x00007fb5478038c4: mov    %rbx,%r9
  0x00007fb5478038c7: mov    $0x8000,%ebx
  0x00007fb5478038cc: shr    $0x3,%rdi
  0x00007fb5478038d0: add    $0x20000000,%edi
  0x00007fb5478038d6: jmpq   0x00007fb5478035b9
  0x00007fb5478038db: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478038e1: vmulsd 0x1e153f77(%rip),%xmm0,%xmm0        # 0x00007fb565957860
  0x00007fb5478038e9: vmovq  %xmm0,(%rsp)
  0x00007fb5478038ee: add    $0x10,%rsp
  0x00007fb5478038f2: pop    %rbx
  0x00007fb5478038f3: leaveq 
  0x00007fb5478038f4: retq   

StubRoutines::libmTan [0x00007fb5478038f5, 0x00007fb547804145[ (2128 bytes)
  0x00007fb5478038f5: push   %rbp
  0x00007fb5478038f6: mov    %rsp,%rbp
  0x00007fb5478038f9: push   %rbx
  0x00007fb5478038fa: sub    $0x10,%rsp
  0x00007fb5478038fe: vmovsd %xmm0,0x8(%rsp)
  0x00007fb547803904: vpextrw $0x3,%xmm0,%eax
  0x00007fb547803909: and    $0x7fff,%eax
  0x00007fb54780390f: sub    $0x3fba,%eax
  0x00007fb547803915: cmp    $0x10e,%eax
  0x00007fb54780391b: ja     0x00007fb547803b22
  0x00007fb547803921: vmovdqu 0x1e156057(%rip),%xmm5        # 0x00007fb565959980
  0x00007fb547803929: vmovdqu 0x1e15603f(%rip),%xmm6        # 0x00007fb565959970
  0x00007fb547803931: vunpcklpd %xmm0,%xmm0,%xmm0
  0x00007fb547803935: vmovdqu 0x1e156023(%rip),%xmm4        # 0x00007fb565959960
  0x00007fb54780393d: vandpd %xmm0,%xmm4,%xmm4
  0x00007fb547803941: vmovdqu 0x1e156007(%rip),%xmm1        # 0x00007fb565959950
  0x00007fb547803949: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb54780394d: vpor   %xmm4,%xmm5,%xmm5
  0x00007fb547803951: vaddpd %xmm5,%xmm1,%xmm1
  0x00007fb547803955: vmovdqu %xmm1,%xmm7
  0x00007fb547803959: vunpckhpd %xmm7,%xmm7,%xmm7
  0x00007fb54780395d: vcvttsd2si %xmm7,%edx
  0x00007fb547803961: (bad)  
  0x00007fb547803965: leaveq 
  0x00007fb547803966: vcvtdq2pd %xmm1,%xmm1
  0x00007fb54780396a: vmulpd %xmm6,%xmm1,%xmm1
  0x00007fb54780396e: vmovdqu 0x1e155fca(%rip),%xmm3        # 0x00007fb565959940
  0x00007fb547803976: vmovq  0x1e154872(%rip),%xmm5        # 0x00007fb5659581f0
  0x00007fb54780397e: add    $0x72900,%rdx
  0x00007fb547803985: vmovdqu 0x1e155fa3(%rip),%xmm4        # 0x00007fb565959930
  0x00007fb54780398d: vmulpd %xmm1,%xmm3,%xmm3
  0x00007fb547803991: and    $0x1f,%rdx
  0x00007fb547803995: vmulsd %xmm1,%xmm5,%xmm5
  0x00007fb547803999: mov    %rdx,%rcx
  0x00007fb54780399c: vmulpd %xmm1,%xmm4,%xmm4
  0x00007fb5478039a0: shl    %rcx
  0x00007fb5478039a3: vsubpd %xmm3,%xmm0,%xmm0
  0x00007fb5478039a7: vmulpd 0x1e155f71(%rip),%xmm1,%xmm1        # 0x00007fb565959920
  0x00007fb5478039af: add    %rcx,%rdx
  0x00007fb5478039b2: shl    $0x2,%rcx
  0x00007fb5478039b6: add    %rcx,%rdx
  0x00007fb5478039b9: vaddsd %xmm0,%xmm5,%xmm5
  0x00007fb5478039bd: vmovdqu %xmm0,%xmm2
  0x00007fb5478039c1: vsubpd %xmm4,%xmm0,%xmm0
  0x00007fb5478039c5: vmovq  0x1e15481b(%rip),%xmm6        # 0x00007fb5659581e8
  0x00007fb5478039cd: shl    $0x4,%rdx
  0x00007fb5478039d1: movabs $0x7fb565958320,%rax
  0x00007fb5478039db: vandpd 0x1e15492d(%rip),%xmm5,%xmm5        # 0x00007fb565958310
  0x00007fb5478039e3: vmovdqu %xmm0,%xmm3
  0x00007fb5478039e7: add    %rdx,%rax
  0x00007fb5478039ea: vsubpd %xmm0,%xmm2,%xmm2
  0x00007fb5478039ee: vunpckhpd %xmm0,%xmm0,%xmm0
  0x00007fb5478039f2: vdivsd %xmm5,%xmm6,%xmm6
  0x00007fb5478039f6: vsubpd %xmm4,%xmm2,%xmm2
  0x00007fb5478039fa: vmovdqu 0x10(%rax),%xmm7
  0x00007fb5478039ff: vsubsd %xmm5,%xmm3,%xmm3
  0x00007fb547803a03: vmulpd %xmm0,%xmm7,%xmm7
  0x00007fb547803a07: vsubpd %xmm1,%xmm2,%xmm2
  0x00007fb547803a0b: vmovdqu 0x30(%rax),%xmm1
  0x00007fb547803a10: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803a14: vmovdqu 0x60(%rax),%xmm4
  0x00007fb547803a19: vmulpd %xmm0,%xmm4,%xmm4
  0x00007fb547803a1d: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb547803a21: vmovdqu %xmm0,%xmm3
  0x00007fb547803a25: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547803a29: vaddpd (%rax),%xmm7,%xmm7
  0x00007fb547803a2d: vaddpd 0x20(%rax),%xmm1,%xmm1
  0x00007fb547803a32: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803a36: vaddpd 0x50(%rax),%xmm4,%xmm4
  0x00007fb547803a3b: vaddpd %xmm1,%xmm7,%xmm7
  0x00007fb547803a3f: vmovdqu 0x70(%rax),%xmm1
  0x00007fb547803a44: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803a48: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547803a4c: vaddpd %xmm1,%xmm4,%xmm4
  0x00007fb547803a50: vmovdqu 0x40(%rax),%xmm1
  0x00007fb547803a55: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803a59: vaddpd %xmm1,%xmm7,%xmm7
  0x00007fb547803a5d: vmovdqu %xmm3,%xmm1
  0x00007fb547803a61: vmulpd %xmm0,%xmm3,%xmm3
  0x00007fb547803a65: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb547803a69: vmulpd 0x90(%rax),%xmm1,%xmm1
  0x00007fb547803a71: vmulpd %xmm3,%xmm4,%xmm4
  0x00007fb547803a75: vmovdqu %xmm1,%xmm3
  0x00007fb547803a79: vaddpd %xmm4,%xmm7,%xmm7
  0x00007fb547803a7d: vmovdqu %xmm1,%xmm4
  0x00007fb547803a81: vmulsd %xmm7,%xmm0,%xmm0
  0x00007fb547803a85: vunpckhpd %xmm7,%xmm7,%xmm7
  0x00007fb547803a89: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb547803a8d: vunpckhpd %xmm1,%xmm1,%xmm1
  0x00007fb547803a91: vaddsd %xmm1,%xmm3,%xmm3
  0x00007fb547803a95: vsubsd %xmm3,%xmm4,%xmm4
  0x00007fb547803a99: vaddsd %xmm4,%xmm1,%xmm1
  0x00007fb547803a9d: vmovdqu %xmm2,%xmm4
  0x00007fb547803aa1: vmovq  0x90(%rax),%xmm7
  0x00007fb547803aa9: vunpckhpd %xmm2,%xmm2,%xmm2
  0x00007fb547803aad: vaddsd 0x98(%rax),%xmm7,%xmm7
  0x00007fb547803ab5: vmulsd %xmm2,%xmm7,%xmm7
  0x00007fb547803ab9: vaddsd 0x88(%rax),%xmm7,%xmm7
  0x00007fb547803ac1: vaddsd %xmm1,%xmm7,%xmm7
  0x00007fb547803ac5: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb547803ac9: vmovq  0x1e154717(%rip),%xmm7        # 0x00007fb5659581e8
  0x00007fb547803ad1: vmulsd %xmm6,%xmm4,%xmm4
  0x00007fb547803ad5: vmovq  0xa8(%rax),%xmm2
  0x00007fb547803add: vandpd %xmm6,%xmm2,%xmm2
  0x00007fb547803ae1: vmulsd %xmm2,%xmm5,%xmm5
  0x00007fb547803ae5: vmulsd 0xa0(%rax),%xmm6,%xmm6
  0x00007fb547803aed: vsubsd %xmm5,%xmm7,%xmm7
  0x00007fb547803af1: vsubsd 0x80(%rax),%xmm2,%xmm2
  0x00007fb547803af9: vsubsd %xmm4,%xmm7,%xmm7
  0x00007fb547803afd: vmulsd %xmm6,%xmm7,%xmm7
  0x00007fb547803b01: vmovdqu %xmm3,%xmm4
  0x00007fb547803b05: vsubsd %xmm2,%xmm3,%xmm3
  0x00007fb547803b09: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb547803b0d: vsubsd %xmm2,%xmm4,%xmm4
  0x00007fb547803b11: vaddsd %xmm4,%xmm0,%xmm0
  0x00007fb547803b15: vsubsd %xmm7,%xmm0,%xmm0
  0x00007fb547803b19: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb547803b1d: jmpq   0x00007fb54780413e
  0x00007fb547803b22: jg     0x00007fb547803bcc
  0x00007fb547803b28: vpextrw $0x3,%xmm0,%eax
  0x00007fb547803b2d: mov    %eax,%edx
  0x00007fb547803b2f: and    $0x7ff0,%eax
  0x00007fb547803b35: je     0x00007fb547803bbf
  0x00007fb547803b3b: and    $0x7fff,%edx
  0x00007fb547803b41: cmp    $0x3e20,%edx
  0x00007fb547803b47: jb     0x00007fb547803ba2
  0x00007fb547803b4d: vmovdqu %xmm0,%xmm2
  0x00007fb547803b51: vmovdqu %xmm0,%xmm3
  0x00007fb547803b55: vmovq  0x1e1547a3(%rip),%xmm1        # 0x00007fb565958300
  0x00007fb547803b5d: vmulsd %xmm0,%xmm2,%xmm2
  0x00007fb547803b61: vmulsd %xmm2,%xmm3,%xmm3
  0x00007fb547803b65: vmulsd %xmm2,%xmm1,%xmm1
  0x00007fb547803b69: vaddsd 0x1e15477f(%rip),%xmm1,%xmm1        # 0x00007fb5659582f0
  0x00007fb547803b71: vmulsd %xmm2,%xmm1,%xmm1
  0x00007fb547803b75: vaddsd 0x1e154763(%rip),%xmm1,%xmm1        # 0x00007fb5659582e0
  0x00007fb547803b7d: vmulsd %xmm2,%xmm1,%xmm1
  0x00007fb547803b81: vaddsd 0x1e154747(%rip),%xmm1,%xmm1        # 0x00007fb5659582d0
  0x00007fb547803b89: vmulsd %xmm2,%xmm1,%xmm1
  0x00007fb547803b8d: vaddsd 0x1e15472b(%rip),%xmm1,%xmm1        # 0x00007fb5659582c0
  0x00007fb547803b95: vmulsd %xmm3,%xmm1,%xmm1
  0x00007fb547803b99: vaddsd %xmm1,%xmm0,%xmm0
  0x00007fb547803b9d: jmpq   0x00007fb54780413e
  0x00007fb547803ba2: vmovq  0x1e154636(%rip),%xmm3        # 0x00007fb5659581e0
  0x00007fb547803baa: vmulsd %xmm0,%xmm3,%xmm3
  0x00007fb547803bae: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb547803bb2: vmulsd 0x1e15461e(%rip),%xmm0,%xmm0        # 0x00007fb5659581d8
  0x00007fb547803bba: jmpq   0x00007fb54780413e
  0x00007fb547803bbf: vmovdqu %xmm0,%xmm1
  0x00007fb547803bc3: vmulsd %xmm1,%xmm1,%xmm1
  0x00007fb547803bc7: jmpq   0x00007fb54780413e
  0x00007fb547803bcc: vpextrw $0x3,%xmm0,%eax
  0x00007fb547803bd1: and    $0x7ff0,%eax
  0x00007fb547803bd7: cmp    $0x7ff0,%eax
  0x00007fb547803bdd: je     0x00007fb54780412b
  0x00007fb547803be3: vpextrw $0x3,%xmm0,%ecx
  0x00007fb547803be8: and    $0x7ff0,%ecx
  0x00007fb547803bee: sub    $0x3f60,%ecx
  0x00007fb547803bf4: shr    $0x7,%ecx
  0x00007fb547803bf7: and    $0xfffc,%ecx
  0x00007fb547803bfd: movabs $0x7fb565958210,%r11
  0x00007fb547803c07: add    %r11,%rcx
  0x00007fb547803c0a: vmovq  %xmm0,%rax
  0x00007fb547803c0f: mov    0x14(%rcx),%r10d
  0x00007fb547803c13: mov    0x18(%rcx),%r8d
  0x00007fb547803c17: mov    %eax,%edx
  0x00007fb547803c19: shr    $0x15,%rax
  0x00007fb547803c1d: or     $0x80000000,%eax
  0x00007fb547803c23: shr    $0xb,%eax
  0x00007fb547803c26: mov    %r10d,%r9d
  0x00007fb547803c29: imul   %rdx,%r10
  0x00007fb547803c2d: imul   %rax,%r9
  0x00007fb547803c31: imul   %rax,%r8
  0x00007fb547803c35: mov    0x10(%rcx),%esi
  0x00007fb547803c38: mov    0xc(%rcx),%edi
  0x00007fb547803c3b: mov    %r10d,%r11d
  0x00007fb547803c3e: shr    $0x20,%r10
  0x00007fb547803c42: add    %r10,%r9
  0x00007fb547803c45: add    %r8,%r11
  0x00007fb547803c48: mov    %r11d,%r8d
  0x00007fb547803c4b: shr    $0x20,%r11
  0x00007fb547803c4f: add    %r11,%r9
  0x00007fb547803c52: mov    %esi,%r10d
  0x00007fb547803c55: imul   %rdx,%rsi
  0x00007fb547803c59: imul   %rax,%r10
  0x00007fb547803c5d: mov    %edi,%r11d
  0x00007fb547803c60: imul   %rdx,%rdi
  0x00007fb547803c64: mov    %esi,%ebx
  0x00007fb547803c66: shr    $0x20,%rsi
  0x00007fb547803c6a: add    %rbx,%r9
  0x00007fb547803c6d: mov    %r9d,%ebx
  0x00007fb547803c70: shr    $0x20,%r9
  0x00007fb547803c74: add    %rsi,%r10
  0x00007fb547803c77: add    %r9,%r10
  0x00007fb547803c7a: shl    $0x20,%rbx
  0x00007fb547803c7e: or     %rbx,%r8
  0x00007fb547803c81: imul   %rax,%r11
  0x00007fb547803c85: mov    0x8(%rcx),%r9d
  0x00007fb547803c89: mov    0x4(%rcx),%esi
  0x00007fb547803c8c: mov    %edi,%ebx
  0x00007fb547803c8e: shr    $0x20,%rdi
  0x00007fb547803c92: add    %rbx,%r10
  0x00007fb547803c95: mov    %r10d,%ebx
  0x00007fb547803c98: shr    $0x20,%r10
  0x00007fb547803c9c: add    %rdi,%r11
  0x00007fb547803c9f: add    %r10,%r11
  0x00007fb547803ca2: mov    %r9,%rdi
  0x00007fb547803ca5: imul   %rdx,%r9
  0x00007fb547803ca9: imul   %rax,%rdi
  0x00007fb547803cad: mov    %r9d,%r10d
  0x00007fb547803cb0: shr    $0x20,%r9
  0x00007fb547803cb4: add    %r10,%r11
  0x00007fb547803cb7: mov    %r11d,%r10d
  0x00007fb547803cba: shr    $0x20,%r11
  0x00007fb547803cbe: add    %r9,%rdi
  0x00007fb547803cc1: add    %r11,%rdi
  0x00007fb547803cc4: mov    %rsi,%r9
  0x00007fb547803cc7: imul   %rdx,%rsi
  0x00007fb547803ccb: imul   %rax,%r9
  0x00007fb547803ccf: shl    $0x20,%r10
  0x00007fb547803cd3: or     %rbx,%r10
  0x00007fb547803cd6: mov    (%rcx),%eax
  0x00007fb547803cd8: mov    %esi,%r11d
  0x00007fb547803cdb: shr    $0x20,%rsi
  0x00007fb547803cdf: add    %r11,%rdi
  0x00007fb547803ce2: mov    %edi,%r11d
  0x00007fb547803ce5: shr    $0x20,%rdi
  0x00007fb547803ce9: add    %rsi,%r9
  0x00007fb547803cec: add    %rdi,%r9
  0x00007fb547803cef: imul   %rax,%rdx
  0x00007fb547803cf3: vpextrw $0x3,%xmm0,%ebx
  0x00007fb547803cf8: movabs $0x7fb565958210,%rdi
  0x00007fb547803d02: sub    %rdi,%rcx
  0x00007fb547803d05: add    %ecx,%ecx
  0x00007fb547803d07: add    %ecx,%ecx
  0x00007fb547803d09: add    %ecx,%ecx
  0x00007fb547803d0b: add    $0x13,%ecx
  0x00007fb547803d0e: mov    $0x8000,%esi
  0x00007fb547803d13: and    %ebx,%esi
  0x00007fb547803d15: shr    $0x4,%ebx
  0x00007fb547803d18: and    $0x7ff,%ebx
  0x00007fb547803d1e: sub    $0x3ff,%ebx
  0x00007fb547803d24: sub    %ebx,%ecx
  0x00007fb547803d26: add    %rdx,%r9
  0x00007fb547803d29: mov    %ecx,%edx
  0x00007fb547803d2b: add    $0x20,%edx
  0x00007fb547803d2e: cmp    $0x0,%ecx
  0x00007fb547803d31: jl     0x00007fb54780407b
  0x00007fb547803d37: neg    %ecx
  0x00007fb547803d39: add    $0x1d,%ecx
  0x00007fb547803d3c: shl    %cl,%r9d
  0x00007fb547803d3f: mov    %r9d,%edi
  0x00007fb547803d42: and    $0x3fffffff,%r9d
  0x00007fb547803d49: test   $0x20000000,%r9d
  0x00007fb547803d50: jne    0x00007fb5478040a8
  0x00007fb547803d56: shr    %cl,%r9d
  0x00007fb547803d59: mov    $0x0,%ebx
  0x00007fb547803d5e: shl    $0x20,%r9
  0x00007fb547803d62: or     %r11,%r9
  0x00007fb547803d65: cmp    $0x0,%r9
  0x00007fb547803d69: je     0x00007fb547804027
  0x00007fb547803d6f: bsr    %r9,%r11
  0x00007fb547803d73: mov    $0x1d,%ecx
  0x00007fb547803d78: sub    %r11d,%ecx
  0x00007fb547803d7b: jle    0x00007fb547804058
  0x00007fb547803d81: shl    %cl,%r9
  0x00007fb547803d84: mov    %r10,%rax
  0x00007fb547803d87: shl    %cl,%r10
  0x00007fb547803d8a: add    %ecx,%edx
  0x00007fb547803d8c: neg    %ecx
  0x00007fb547803d8e: add    $0x40,%ecx
  0x00007fb547803d91: shr    %cl,%rax
  0x00007fb547803d94: shr    %cl,%r8
  0x00007fb547803d97: or     %rax,%r9
  0x00007fb547803d9a: or     %r8,%r10
  0x00007fb547803d9d: vcvtsi2sd %r9,%xmm0,%xmm0
  0x00007fb547803da2: shr    $0x1,%r10
  0x00007fb547803da6: vcvtsi2sd %r10,%xmm3,%xmm3
  0x00007fb547803dab: vxorpd %xmm4,%xmm4,%xmm4
  0x00007fb547803daf: shl    $0x4,%edx
  0x00007fb547803db2: neg    %edx
  0x00007fb547803db4: add    $0x3ff0,%edx
  0x00007fb547803dba: or     %esi,%edx
  0x00007fb547803dbc: xor    %ebx,%edx
  0x00007fb547803dbe: vpinsrw $0x3,%edx,%xmm4,%xmm4
  0x00007fb547803dc3: vmovq  0x1e15442d(%rip),%xmm2        # 0x00007fb5659581f8
  0x00007fb547803dcb: vmovq  0x1e15442d(%rip),%xmm7        # 0x00007fb565958200
  0x00007fb547803dd3: vxorpd %xmm5,%xmm5,%xmm5
  0x00007fb547803dd7: sub    $0x3f0,%edx
  0x00007fb547803ddd: vpinsrw $0x3,%edx,%xmm5,%xmm5
  0x00007fb547803de2: vmulsd %xmm4,%xmm0,%xmm0
  0x00007fb547803de6: shl    $0x10,%esi
  0x00007fb547803de9: sar    $0x1f,%esi
  0x00007fb547803dec: vmulsd %xmm5,%xmm3,%xmm3
  0x00007fb547803df0: vmovdqu %xmm0,%xmm1
  0x00007fb547803df4: vmulsd %xmm2,%xmm0,%xmm0
  0x00007fb547803df8: shr    $0x1e,%edi
  0x00007fb547803dfb: vaddsd %xmm3,%xmm1,%xmm1
  0x00007fb547803dff: vmulsd %xmm2,%xmm3,%xmm3
  0x00007fb547803e03: add    %esi,%edi
  0x00007fb547803e05: xor    %esi,%edi
  0x00007fb547803e07: vmulsd %xmm1,%xmm7,%xmm7
  0x00007fb547803e0b: mov    %edi,%eax
  0x00007fb547803e0d: vaddsd %xmm3,%xmm7,%xmm7
  0x00007fb547803e11: vmovdqu %xmm0,%xmm2
  0x00007fb547803e15: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb547803e19: vsubsd %xmm0,%xmm2,%xmm2
  0x00007fb547803e1d: vaddsd %xmm2,%xmm7,%xmm7
  0x00007fb547803e21: vmovdqu 0x1e155b27(%rip),%xmm1        # 0x00007fb565959950
  0x00007fb547803e29: vmovddup %xmm0,%xmm0
  0x00007fb547803e2d: vmovdqu 0x1e155b2b(%rip),%xmm4        # 0x00007fb565959960
  0x00007fb547803e35: vandpd %xmm0,%xmm4,%xmm4
  0x00007fb547803e39: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803e3d: vmovddup %xmm7,%xmm7
  0x00007fb547803e41: vmovdqu 0x1e155b37(%rip),%xmm5        # 0x00007fb565959980
  0x00007fb547803e49: vmovdqu 0x1e155b1f(%rip),%xmm6        # 0x00007fb565959970
  0x00007fb547803e51: vpor   %xmm4,%xmm5,%xmm5
  0x00007fb547803e55: vaddpd %xmm5,%xmm1,%xmm1
  0x00007fb547803e59: vmovdqu %xmm1,%xmm5
  0x00007fb547803e5d: vunpckhpd %xmm5,%xmm5,%xmm5
  0x00007fb547803e61: vcvttsd2si %xmm5,%edx
  0x00007fb547803e65: (bad)  
  0x00007fb547803e69: leaveq 
  0x00007fb547803e6a: vcvtdq2pd %xmm1,%xmm1
  0x00007fb547803e6e: vmulpd %xmm6,%xmm1,%xmm1
  0x00007fb547803e72: vmovdqu 0x1e155ac6(%rip),%xmm3        # 0x00007fb565959940
  0x00007fb547803e7a: vmovq  0x1e15436e(%rip),%xmm5        # 0x00007fb5659581f0
  0x00007fb547803e82: shl    $0x4,%eax
  0x00007fb547803e85: add    $0x72900,%edx
  0x00007fb547803e8b: vmovdqu 0x1e155a9d(%rip),%xmm4        # 0x00007fb565959930
  0x00007fb547803e93: vmulpd %xmm1,%xmm3,%xmm3
  0x00007fb547803e97: add    %eax,%edx
  0x00007fb547803e99: and    $0x1f,%edx
  0x00007fb547803e9c: vmulsd %xmm1,%xmm5,%xmm5
  0x00007fb547803ea0: mov    %edx,%ecx
  0x00007fb547803ea2: vmulpd %xmm1,%xmm4,%xmm4
  0x00007fb547803ea6: shl    %ecx
  0x00007fb547803ea8: vsubpd %xmm3,%xmm0,%xmm0
  0x00007fb547803eac: vmulpd 0x1e155a6c(%rip),%xmm1,%xmm1        # 0x00007fb565959920
  0x00007fb547803eb4: add    %ecx,%edx
  0x00007fb547803eb6: shl    $0x2,%ecx
  0x00007fb547803eb9: add    %ecx,%edx
  0x00007fb547803ebb: vaddsd %xmm0,%xmm5,%xmm5
  0x00007fb547803ebf: vmovdqu %xmm0,%xmm2
  0x00007fb547803ec3: vsubpd %xmm4,%xmm0,%xmm0
  0x00007fb547803ec7: vmovq  0x1e154319(%rip),%xmm6        # 0x00007fb5659581e8
  0x00007fb547803ecf: shl    $0x4,%edx
  0x00007fb547803ed2: movabs $0x7fb565958320,%rax
  0x00007fb547803edc: vandpd 0x1e15442c(%rip),%xmm5,%xmm5        # 0x00007fb565958310
  0x00007fb547803ee4: vmovdqu %xmm0,%xmm3
  0x00007fb547803ee8: add    %rdx,%rax
  0x00007fb547803eeb: vsubpd %xmm0,%xmm2,%xmm2
  0x00007fb547803eef: vunpckhpd %xmm0,%xmm0,%xmm0
  0x00007fb547803ef3: vdivsd %xmm5,%xmm6,%xmm6
  0x00007fb547803ef7: vsubpd %xmm4,%xmm2,%xmm2
  0x00007fb547803efb: vsubsd %xmm5,%xmm3,%xmm3
  0x00007fb547803eff: vsubpd %xmm1,%xmm2,%xmm2
  0x00007fb547803f03: vmovdqu 0x30(%rax),%xmm1
  0x00007fb547803f08: vaddpd %xmm7,%xmm2,%xmm2
  0x00007fb547803f0c: vmovdqu 0x10(%rax),%xmm7
  0x00007fb547803f11: vmulpd %xmm0,%xmm7,%xmm7
  0x00007fb547803f15: vmovdqu 0x60(%rax),%xmm4
  0x00007fb547803f1a: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803f1e: vmulpd %xmm0,%xmm4,%xmm4
  0x00007fb547803f22: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb547803f26: vmovdqu %xmm0,%xmm3
  0x00007fb547803f2a: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547803f2e: vaddpd (%rax),%xmm7,%xmm7
  0x00007fb547803f32: vaddpd 0x20(%rax),%xmm1,%xmm1
  0x00007fb547803f37: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803f3b: vaddpd 0x50(%rax),%xmm4,%xmm4
  0x00007fb547803f40: vaddpd %xmm1,%xmm7,%xmm7
  0x00007fb547803f44: vmovdqu 0x70(%rax),%xmm1
  0x00007fb547803f49: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803f4d: vmulpd %xmm0,%xmm0,%xmm0
  0x00007fb547803f51: vaddpd %xmm1,%xmm4,%xmm4
  0x00007fb547803f55: vmovdqu 0x40(%rax),%xmm1
  0x00007fb547803f5a: vmulpd %xmm0,%xmm1,%xmm1
  0x00007fb547803f5e: vaddpd %xmm1,%xmm7,%xmm7
  0x00007fb547803f62: vmovdqu %xmm3,%xmm1
  0x00007fb547803f66: vmulpd %xmm0,%xmm3,%xmm3
  0x00007fb547803f6a: vmulsd %xmm0,%xmm0,%xmm0
  0x00007fb547803f6e: vmulpd 0x90(%rax),%xmm1,%xmm1
  0x00007fb547803f76: vmulpd %xmm3,%xmm4,%xmm4
  0x00007fb547803f7a: vmovdqu %xmm1,%xmm3
  0x00007fb547803f7e: vaddpd %xmm4,%xmm7,%xmm7
  0x00007fb547803f82: vmovdqu %xmm1,%xmm4
  0x00007fb547803f86: vmulsd %xmm7,%xmm0,%xmm0
  0x00007fb547803f8a: vunpckhpd %xmm7,%xmm7,%xmm7
  0x00007fb547803f8e: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb547803f92: vunpckhpd %xmm1,%xmm1,%xmm1
  0x00007fb547803f96: vaddsd %xmm1,%xmm3,%xmm3
  0x00007fb547803f9a: vsubsd %xmm3,%xmm4,%xmm4
  0x00007fb547803f9e: vaddsd %xmm4,%xmm1,%xmm1
  0x00007fb547803fa2: vmovdqu %xmm2,%xmm4
  0x00007fb547803fa6: vmovq  0x90(%rax),%xmm7
  0x00007fb547803fae: vunpckhpd %xmm2,%xmm2,%xmm2
  0x00007fb547803fb2: vaddsd 0x98(%rax),%xmm7,%xmm7
  0x00007fb547803fba: vmulsd %xmm2,%xmm7,%xmm7
  0x00007fb547803fbe: vaddsd 0x88(%rax),%xmm7,%xmm7
  0x00007fb547803fc6: vaddsd %xmm1,%xmm7,%xmm7
  0x00007fb547803fca: vaddsd %xmm7,%xmm0,%xmm0
  0x00007fb547803fce: vmovq  0x1e154212(%rip),%xmm7        # 0x00007fb5659581e8
  0x00007fb547803fd6: vmulsd %xmm6,%xmm4,%xmm4
  0x00007fb547803fda: vmovq  0xa8(%rax),%xmm2
  0x00007fb547803fe2: vandpd %xmm6,%xmm2,%xmm2
  0x00007fb547803fe6: vmulsd %xmm2,%xmm5,%xmm5
  0x00007fb547803fea: vmulsd 0xa0(%rax),%xmm6,%xmm6
  0x00007fb547803ff2: vsubsd %xmm5,%xmm7,%xmm7
  0x00007fb547803ff6: vsubsd 0x80(%rax),%xmm2,%xmm2
  0x00007fb547803ffe: vsubsd %xmm4,%xmm7,%xmm7
  0x00007fb547804002: vmulsd %xmm6,%xmm7,%xmm7
  0x00007fb547804006: vmovdqu %xmm3,%xmm4
  0x00007fb54780400a: vsubsd %xmm2,%xmm3,%xmm3
  0x00007fb54780400e: vaddsd %xmm3,%xmm2,%xmm2
  0x00007fb547804012: vsubsd %xmm2,%xmm4,%xmm4
  0x00007fb547804016: vaddsd %xmm4,%xmm0,%xmm0
  0x00007fb54780401a: vsubsd %xmm7,%xmm0,%xmm0
  0x00007fb54780401e: vaddsd %xmm3,%xmm0,%xmm0
  0x00007fb547804022: jmpq   0x00007fb54780413e
  0x00007fb547804027: add    $0x40,%edx
  0x00007fb54780402a: mov    %r10,%r9
  0x00007fb54780402d: mov    %r8,%r10
  0x00007fb547804030: mov    $0x0,%r8d
  0x00007fb547804036: cmp    $0x0,%r9
  0x00007fb54780403a: jne    0x00007fb547803d6f
  0x00007fb547804040: add    $0x40,%edx
  0x00007fb547804043: mov    %r10,%r9
  0x00007fb547804046: mov    %r8,%r10
  0x00007fb547804049: cmp    $0x0,%r9
  0x00007fb54780404d: jne    0x00007fb547803d6f
  0x00007fb547804053: jmpq   0x00007fb547803d9d
  0x00007fb547804058: je     0x00007fb547803d9d
  0x00007fb54780405e: neg    %ecx
  0x00007fb547804060: shr    %cl,%r10
  0x00007fb547804063: mov    %r9,%rax
  0x00007fb547804066: shr    %cl,%r9
  0x00007fb547804069: sub    %ecx,%edx
  0x00007fb54780406b: neg    %ecx
  0x00007fb54780406d: add    $0x40,%ecx
  0x00007fb547804070: shl    %cl,%rax
  0x00007fb547804073: or     %rax,%r10
  0x00007fb547804076: jmpq   0x00007fb547803d9d
  0x00007fb54780407b: not    %ecx
  0x00007fb54780407d: shl    $0x20,%r9
  0x00007fb547804081: or     %r11,%r9
  0x00007fb547804084: shl    %cl,%r9
  0x00007fb547804087: mov    %r9,%rdi
  0x00007fb54780408a: test   $0x80000000,%r9d
  0x00007fb547804091: jne    0x00007fb5478040ea
  0x00007fb547804097: shr    %cl,%r9d
  0x00007fb54780409a: mov    $0x0,%ebx
  0x00007fb54780409f: shr    $0x2,%rdi
  0x00007fb5478040a3: jmpq   0x00007fb547803d65
  0x00007fb5478040a8: shr    %cl,%r9d
  0x00007fb5478040ab: mov    $0x40000000,%ebx
  0x00007fb5478040b0: shr    %cl,%ebx
  0x00007fb5478040b2: shl    $0x20,%r9
  0x00007fb5478040b6: or     %r11,%r9
  0x00007fb5478040b9: shl    $0x20,%rbx
  0x00007fb5478040bd: add    $0x40000000,%edi
  0x00007fb5478040c3: mov    $0x0,%ecx
  0x00007fb5478040c8: mov    $0x0,%r11d
  0x00007fb5478040ce: sub    %r8,%rcx
  0x00007fb5478040d1: sbb    %r10,%r11
  0x00007fb5478040d4: sbb    %r9,%rbx
  0x00007fb5478040d7: mov    %rcx,%r8
  0x00007fb5478040da: mov    %r11,%r10
  0x00007fb5478040dd: mov    %rbx,%r9
  0x00007fb5478040e0: mov    $0x8000,%ebx
  0x00007fb5478040e5: jmpq   0x00007fb547803d65
  0x00007fb5478040ea: shr    %cl,%r9d
  0x00007fb5478040ed: movabs $0x100000000,%rbx
  0x00007fb5478040f7: shr    %cl,%rbx
  0x00007fb5478040fa: mov    $0x0,%ecx
  0x00007fb5478040ff: mov    $0x0,%r11d
  0x00007fb547804105: sub    %r8,%rcx
  0x00007fb547804108: sbb    %r10,%r11
  0x00007fb54780410b: sbb    %r9,%rbx
  0x00007fb54780410e: mov    %rcx,%r8
  0x00007fb547804111: mov    %r11,%r10
  0x00007fb547804114: mov    %rbx,%r9
  0x00007fb547804117: mov    $0x8000,%ebx
  0x00007fb54780411c: shr    $0x2,%rdi
  0x00007fb547804120: add    $0x40000000,%edi
  0x00007fb547804126: jmpq   0x00007fb547803d65
  0x00007fb54780412b: vmovq  0x8(%rsp),%xmm0
  0x00007fb547804131: vmulsd 0x1e154097(%rip),%xmm0,%xmm0        # 0x00007fb5659581d0
  0x00007fb547804139: vmovq  %xmm0,(%rsp)
  0x00007fb54780413e: add    $0x10,%rsp
  0x00007fb547804142: pop    %rbx
  0x00007fb547804143: leaveq 
  0x00007fb547804144: retq   

Decoding RuntimeStub - wrong_method_stub 0x00007fb547808190
  0x00007fb547808200: push   %rbp
  0x00007fb547808201: mov    %rsp,%rbp
  0x00007fb547808204: pushfq 
  0x00007fb547808205: sub    $0x8,%rsp
  0x00007fb547808209: mov    %rsp,-0x28(%rsp)
  0x00007fb54780820e: sub    $0x80,%rsp
  0x00007fb547808215: mov    %rax,0x78(%rsp)
  0x00007fb54780821a: mov    %rcx,0x70(%rsp)
  0x00007fb54780821f: mov    %rdx,0x68(%rsp)
  0x00007fb547808224: mov    %rbx,0x60(%rsp)
  0x00007fb547808229: mov    %rbp,0x50(%rsp)
  0x00007fb54780822e: mov    %rsi,0x48(%rsp)
  0x00007fb547808233: mov    %rdi,0x40(%rsp)
  0x00007fb547808238: mov    %r8,0x38(%rsp)
  0x00007fb54780823d: mov    %r9,0x30(%rsp)
  0x00007fb547808242: mov    %r10,0x28(%rsp)
  0x00007fb547808247: mov    %r11,0x20(%rsp)
  0x00007fb54780824c: mov    %r12,0x18(%rsp)
  0x00007fb547808251: mov    %r13,0x10(%rsp)
  0x00007fb547808256: mov    %r14,0x8(%rsp)
  0x00007fb54780825b: mov    %r15,(%rsp)
  0x00007fb54780825f: sub    $0xa80,%rsp
  0x00007fb547808266: fxsave64 (%rsp)
  0x00007fb54780826b: vzeroupper 
  0x00007fb54780826e: vzeroupper 
  0x00007fb547808271: mov    %rsp,0x328(%r15)
  0x00007fb547808278: mov    %r15,%rdi
  0x00007fb54780827b: callq  0x00007fb56514f5d0 = SharedRuntime::handle_wrong_method(JavaThread*)
  0x00007fb547808280: movabs $0x0,%r10
  0x00007fb54780828a: mov    %r10,0x328(%r15)
  0x00007fb547808291: movabs $0x0,%r10
  0x00007fb54780829b: mov    %r10,0x330(%r15)
  0x00007fb5478082a2: vzeroupper 
  0x00007fb5478082a5: cmpq   $0x0,0x8(%r15)
  0x00007fb5478082ad: jne    0x00007fb547808343
  0x00007fb5478082b3: mov    0x390(%r15),%rbx
  0x00007fb5478082ba: movabs $0x0,%r10
  0x00007fb5478082c4: mov    %r10,0x390(%r15)
  0x00007fb5478082cb: mov    %rbx,0xae0(%rsp)
  0x00007fb5478082d3: mov    %rax,0xaf8(%rsp)
  0x00007fb5478082db: vzeroupper 
  0x00007fb5478082de: fxrstor64 (%rsp)
  0x00007fb5478082e3: add    $0xa80,%rsp
  0x00007fb5478082ea: mov    (%rsp),%r15
  0x00007fb5478082ee: mov    0x8(%rsp),%r14
  0x00007fb5478082f3: mov    0x10(%rsp),%r13
  0x00007fb5478082f8: mov    0x18(%rsp),%r12
  0x00007fb5478082fd: mov    0x20(%rsp),%r11
  0x00007fb547808302: mov    0x28(%rsp),%r10
  0x00007fb547808307: mov    0x30(%rsp),%r9
  0x00007fb54780830c: mov    0x38(%rsp),%r8
  0x00007fb547808311: mov    0x40(%rsp),%rdi
  0x00007fb547808316: mov    0x48(%rsp),%rsi
  0x00007fb54780831b: mov    0x50(%rsp),%rbp
  0x00007fb547808320: mov    0x60(%rsp),%rbx
  0x00007fb547808325: mov    0x68(%rsp),%rdx
  0x00007fb54780832a: mov    0x70(%rsp),%rcx
  0x00007fb54780832f: mov    0x78(%rsp),%rax
  0x00007fb547808334: add    $0x80,%rsp
  0x00007fb54780833b: add    $0x8,%rsp
  0x00007fb54780833f: popfq  
  0x00007fb547808340: pop    %rbp
  0x00007fb547808341: jmpq   *%rax
  0x00007fb547808343: vzeroupper 
  0x00007fb547808346: fxrstor64 (%rsp)
  0x00007fb54780834b: add    $0xa80,%rsp
  0x00007fb547808352: mov    (%rsp),%r15
  0x00007fb547808356: mov    0x8(%rsp),%r14
  0x00007fb54780835b: mov    0x10(%rsp),%r13
  0x00007fb547808360: mov    0x18(%rsp),%r12
  0x00007fb547808365: mov    0x20(%rsp),%r11
  0x00007fb54780836a: mov    0x28(%rsp),%r10
  0x00007fb54780836f: mov    0x30(%rsp),%r9
  0x00007fb547808374: mov    0x38(%rsp),%r8
  0x00007fb547808379: mov    0x40(%rsp),%rdi
  0x00007fb54780837e: mov    0x48(%rsp),%rsi
  0x00007fb547808383: mov    0x50(%rsp),%rbp
  0x00007fb547808388: mov    0x60(%rsp),%rbx
  0x00007fb54780838d: mov    0x68(%rsp),%rdx
  0x00007fb547808392: mov    0x70(%rsp),%rcx
  0x00007fb547808397: mov    0x78(%rsp),%rax
  0x00007fb54780839c: add    $0x80,%rsp
  0x00007fb5478083a3: add    $0x8,%rsp
  0x00007fb5478083a7: popfq  
  0x00007fb5478083a8: pop    %rbp
  0x00007fb5478083a9: movq   $0x0,0x388(%r15)
  0x00007fb5478083b4: mov    0x8(%r15),%rax
  0x00007fb5478083b8: jmpq   0x00007fb547800c00
  0x00007fb5478083bd: hlt    
  0x00007fb5478083be: hlt    
  0x00007fb5478083bf: hlt    

Decoding RuntimeStub - wrong_method_abstract_stub 0x00007fb54784b310
  0x00007fb54784b380: push   %rbp
  0x00007fb54784b381: mov    %rsp,%rbp
  0x00007fb54784b384: pushfq 
  0x00007fb54784b385: sub    $0x8,%rsp
  0x00007fb54784b389: mov    %rsp,-0x28(%rsp)
  0x00007fb54784b38e: sub    $0x80,%rsp
  0x00007fb54784b395: mov    %rax,0x78(%rsp)
  0x00007fb54784b39a: mov    %rcx,0x70(%rsp)
  0x00007fb54784b39f: mov    %rdx,0x68(%rsp)
  0x00007fb54784b3a4: mov    %rbx,0x60(%rsp)
  0x00007fb54784b3a9: mov    %rbp,0x50(%rsp)
  0x00007fb54784b3ae: mov    %rsi,0x48(%rsp)
  0x00007fb54784b3b3: mov    %rdi,0x40(%rsp)
  0x00007fb54784b3b8: mov    %r8,0x38(%rsp)
  0x00007fb54784b3bd: mov    %r9,0x30(%rsp)
  0x00007fb54784b3c2: mov    %r10,0x28(%rsp)
  0x00007fb54784b3c7: mov    %r11,0x20(%rsp)
  0x00007fb54784b3cc: mov    %r12,0x18(%rsp)
  0x00007fb54784b3d1: mov    %r13,0x10(%rsp)
  0x00007fb54784b3d6: mov    %r14,0x8(%rsp)
  0x00007fb54784b3db: mov    %r15,(%rsp)
  0x00007fb54784b3df: sub    $0xa80,%rsp
  0x00007fb54784b3e6: fxsave64 (%rsp)
  0x00007fb54784b3eb: vzeroupper 
  0x00007fb54784b3ee: vzeroupper 
  0x00007fb54784b3f1: mov    %rsp,0x328(%r15)
  0x00007fb54784b3f8: mov    %r15,%rdi
  0x00007fb54784b3fb: callq  0x00007fb565147b20 = SharedRuntime::handle_wrong_method_abstract(JavaThread*)
  0x00007fb54784b400: movabs $0x0,%r10
  0x00007fb54784b40a: mov    %r10,0x328(%r15)
  0x00007fb54784b411: movabs $0x0,%r10
  0x00007fb54784b41b: mov    %r10,0x330(%r15)
  0x00007fb54784b422: vzeroupper 
  0x00007fb54784b425: cmpq   $0x0,0x8(%r15)
  0x00007fb54784b42d: jne    0x00007fb54784b4c3
  0x00007fb54784b433: mov    0x390(%r15),%rbx
  0x00007fb54784b43a: movabs $0x0,%r10
  0x00007fb54784b444: mov    %r10,0x390(%r15)
  0x00007fb54784b44b: mov    %rbx,0xae0(%rsp)
  0x00007fb54784b453: mov    %rax,0xaf8(%rsp)
  0x00007fb54784b45b: vzeroupper 
  0x00007fb54784b45e: fxrstor64 (%rsp)
  0x00007fb54784b463: add    $0xa80,%rsp
  0x00007fb54784b46a: mov    (%rsp),%r15
  0x00007fb54784b46e: mov    0x8(%rsp),%r14
  0x00007fb54784b473: mov    0x10(%rsp),%r13
  0x00007fb54784b478: mov    0x18(%rsp),%r12
  0x00007fb54784b47d: mov    0x20(%rsp),%r11
  0x00007fb54784b482: mov    0x28(%rsp),%r10
  0x00007fb54784b487: mov    0x30(%rsp),%r9
  0x00007fb54784b48c: mov    0x38(%rsp),%r8
  0x00007fb54784b491: mov    0x40(%rsp),%rdi
  0x00007fb54784b496: mov    0x48(%rsp),%rsi
  0x00007fb54784b49b: mov    0x50(%rsp),%rbp
  0x00007fb54784b4a0: mov    0x60(%rsp),%rbx
  0x00007fb54784b4a5: mov    0x68(%rsp),%rdx
  0x00007fb54784b4aa: mov    0x70(%rsp),%rcx
  0x00007fb54784b4af: mov    0x78(%rsp),%rax
  0x00007fb54784b4b4: add    $0x80,%rsp
  0x00007fb54784b4bb: add    $0x8,%rsp
  0x00007fb54784b4bf: popfq  
  0x00007fb54784b4c0: pop    %rbp
  0x00007fb54784b4c1: jmpq   *%rax
  0x00007fb54784b4c3: vzeroupper 
  0x00007fb54784b4c6: fxrstor64 (%rsp)
  0x00007fb54784b4cb: add    $0xa80,%rsp
  0x00007fb54784b4d2: mov    (%rsp),%r15
  0x00007fb54784b4d6: mov    0x8(%rsp),%r14
  0x00007fb54784b4db: mov    0x10(%rsp),%r13
  0x00007fb54784b4e0: mov    0x18(%rsp),%r12
  0x00007fb54784b4e5: mov    0x20(%rsp),%r11
  0x00007fb54784b4ea: mov    0x28(%rsp),%r10
  0x00007fb54784b4ef: mov    0x30(%rsp),%r9
  0x00007fb54784b4f4: mov    0x38(%rsp),%r8
  0x00007fb54784b4f9: mov    0x40(%rsp),%rdi
  0x00007fb54784b4fe: mov    0x48(%rsp),%rsi
  0x00007fb54784b503: mov    0x50(%rsp),%rbp
  0x00007fb54784b508: mov    0x60(%rsp),%rbx
  0x00007fb54784b50d: mov    0x68(%rsp),%rdx
  0x00007fb54784b512: mov    0x70(%rsp),%rcx
  0x00007fb54784b517: mov    0x78(%rsp),%rax
  0x00007fb54784b51c: add    $0x80,%rsp
  0x00007fb54784b523: add    $0x8,%rsp
  0x00007fb54784b527: popfq  
  0x00007fb54784b528: pop    %rbp
  0x00007fb54784b529: movq   $0x0,0x388(%r15)
  0x00007fb54784b534: mov    0x8(%r15),%rax
  0x00007fb54784b538: jmpq   0x00007fb547800c00
  0x00007fb54784b53d: hlt    
  0x00007fb54784b53e: hlt    
  0x00007fb54784b53f: hlt    

Decoding RuntimeStub - ic_miss_stub 0x00007fb54784b010
  0x00007fb54784b080: push   %rbp
  0x00007fb54784b081: mov    %rsp,%rbp
  0x00007fb54784b084: pushfq 
  0x00007fb54784b085: sub    $0x8,%rsp
  0x00007fb54784b089: mov    %rsp,-0x28(%rsp)
  0x00007fb54784b08e: sub    $0x80,%rsp
  0x00007fb54784b095: mov    %rax,0x78(%rsp)
  0x00007fb54784b09a: mov    %rcx,0x70(%rsp)
  0x00007fb54784b09f: mov    %rdx,0x68(%rsp)
  0x00007fb54784b0a4: mov    %rbx,0x60(%rsp)
  0x00007fb54784b0a9: mov    %rbp,0x50(%rsp)
  0x00007fb54784b0ae: mov    %rsi,0x48(%rsp)
  0x00007fb54784b0b3: mov    %rdi,0x40(%rsp)
  0x00007fb54784b0b8: mov    %r8,0x38(%rsp)
  0x00007fb54784b0bd: mov    %r9,0x30(%rsp)
  0x00007fb54784b0c2: mov    %r10,0x28(%rsp)
  0x00007fb54784b0c7: mov    %r11,0x20(%rsp)
  0x00007fb54784b0cc: mov    %r12,0x18(%rsp)
  0x00007fb54784b0d1: mov    %r13,0x10(%rsp)
  0x00007fb54784b0d6: mov    %r14,0x8(%rsp)
  0x00007fb54784b0db: mov    %r15,(%rsp)
  0x00007fb54784b0df: sub    $0xa80,%rsp
  0x00007fb54784b0e6: fxsave64 (%rsp)
  0x00007fb54784b0eb: vzeroupper 
  0x00007fb54784b0ee: vzeroupper 
  0x00007fb54784b0f1: mov    %rsp,0x328(%r15)
  0x00007fb54784b0f8: mov    %r15,%rdi
  0x00007fb54784b0fb: callq  0x00007fb56514f330 = SharedRuntime::handle_wrong_method_ic_miss(JavaThread*)
  0x00007fb54784b100: movabs $0x0,%r10
  0x00007fb54784b10a: mov    %r10,0x328(%r15)
  0x00007fb54784b111: movabs $0x0,%r10
  0x00007fb54784b11b: mov    %r10,0x330(%r15)
  0x00007fb54784b122: vzeroupper 
  0x00007fb54784b125: cmpq   $0x0,0x8(%r15)
  0x00007fb54784b12d: jne    0x00007fb54784b1c3
  0x00007fb54784b133: mov    0x390(%r15),%rbx
  0x00007fb54784b13a: movabs $0x0,%r10
  0x00007fb54784b144: mov    %r10,0x390(%r15)
  0x00007fb54784b14b: mov    %rbx,0xae0(%rsp)
  0x00007fb54784b153: mov    %rax,0xaf8(%rsp)
  0x00007fb54784b15b: vzeroupper 
  0x00007fb54784b15e: fxrstor64 (%rsp)
  0x00007fb54784b163: add    $0xa80,%rsp
  0x00007fb54784b16a: mov    (%rsp),%r15
  0x00007fb54784b16e: mov    0x8(%rsp),%r14
  0x00007fb54784b173: mov    0x10(%rsp),%r13
  0x00007fb54784b178: mov    0x18(%rsp),%r12
  0x00007fb54784b17d: mov    0x20(%rsp),%r11
  0x00007fb54784b182: mov    0x28(%rsp),%r10
  0x00007fb54784b187: mov    0x30(%rsp),%r9
  0x00007fb54784b18c: mov    0x38(%rsp),%r8
  0x00007fb54784b191: mov    0x40(%rsp),%rdi
  0x00007fb54784b196: mov    0x48(%rsp),%rsi
  0x00007fb54784b19b: mov    0x50(%rsp),%rbp
  0x00007fb54784b1a0: mov    0x60(%rsp),%rbx
  0x00007fb54784b1a5: mov    0x68(%rsp),%rdx
  0x00007fb54784b1aa: mov    0x70(%rsp),%rcx
  0x00007fb54784b1af: mov    0x78(%rsp),%rax
  0x00007fb54784b1b4: add    $0x80,%rsp
  0x00007fb54784b1bb: add    $0x8,%rsp
  0x00007fb54784b1bf: popfq  
  0x00007fb54784b1c0: pop    %rbp
  0x00007fb54784b1c1: jmpq   *%rax
  0x00007fb54784b1c3: vzeroupper 
  0x00007fb54784b1c6: fxrstor64 (%rsp)
  0x00007fb54784b1cb: add    $0xa80,%rsp
  0x00007fb54784b1d2: mov    (%rsp),%r15
  0x00007fb54784b1d6: mov    0x8(%rsp),%r14
  0x00007fb54784b1db: mov    0x10(%rsp),%r13
  0x00007fb54784b1e0: mov    0x18(%rsp),%r12
  0x00007fb54784b1e5: mov    0x20(%rsp),%r11
  0x00007fb54784b1ea: mov    0x28(%rsp),%r10
  0x00007fb54784b1ef: mov    0x30(%rsp),%r9
  0x00007fb54784b1f4: mov    0x38(%rsp),%r8
  0x00007fb54784b1f9: mov    0x40(%rsp),%rdi
  0x00007fb54784b1fe: mov    0x48(%rsp),%rsi
  0x00007fb54784b203: mov    0x50(%rsp),%rbp
  0x00007fb54784b208: mov    0x60(%rsp),%rbx
  0x00007fb54784b20d: mov    0x68(%rsp),%rdx
  0x00007fb54784b212: mov    0x70(%rsp),%rcx
  0x00007fb54784b217: mov    0x78(%rsp),%rax
  0x00007fb54784b21c: add    $0x80,%rsp
  0x00007fb54784b223: add    $0x8,%rsp
  0x00007fb54784b227: popfq  
  0x00007fb54784b228: pop    %rbp
  0x00007fb54784b229: movq   $0x0,0x388(%r15)
  0x00007fb54784b234: mov    0x8(%r15),%rax
  0x00007fb54784b238: jmpq   0x00007fb547800c00
  0x00007fb54784b23d: hlt    
  0x00007fb54784b23e: hlt    
  0x00007fb54784b23f: hlt    

Decoding RuntimeStub - resolve_opt_virtual_call 0x00007fb54784ad10
  0x00007fb54784ad80: push   %rbp
  0x00007fb54784ad81: mov    %rsp,%rbp
  0x00007fb54784ad84: pushfq 
  0x00007fb54784ad85: sub    $0x8,%rsp
  0x00007fb54784ad89: mov    %rsp,-0x28(%rsp)
  0x00007fb54784ad8e: sub    $0x80,%rsp
  0x00007fb54784ad95: mov    %rax,0x78(%rsp)
  0x00007fb54784ad9a: mov    %rcx,0x70(%rsp)
  0x00007fb54784ad9f: mov    %rdx,0x68(%rsp)
  0x00007fb54784ada4: mov    %rbx,0x60(%rsp)
  0x00007fb54784ada9: mov    %rbp,0x50(%rsp)
  0x00007fb54784adae: mov    %rsi,0x48(%rsp)
  0x00007fb54784adb3: mov    %rdi,0x40(%rsp)
  0x00007fb54784adb8: mov    %r8,0x38(%rsp)
  0x00007fb54784adbd: mov    %r9,0x30(%rsp)
  0x00007fb54784adc2: mov    %r10,0x28(%rsp)
  0x00007fb54784adc7: mov    %r11,0x20(%rsp)
  0x00007fb54784adcc: mov    %r12,0x18(%rsp)
  0x00007fb54784add1: mov    %r13,0x10(%rsp)
  0x00007fb54784add6: mov    %r14,0x8(%rsp)
  0x00007fb54784addb: mov    %r15,(%rsp)
  0x00007fb54784addf: sub    $0xa80,%rsp
  0x00007fb54784ade6: fxsave64 (%rsp)
  0x00007fb54784adeb: vzeroupper 
  0x00007fb54784adee: vzeroupper 
  0x00007fb54784adf1: mov    %rsp,0x328(%r15)
  0x00007fb54784adf8: mov    %r15,%rdi
  0x00007fb54784adfb: callq  0x00007fb56514e030 = SharedRuntime::resolve_opt_virtual_call_C(JavaThread*)
  0x00007fb54784ae00: movabs $0x0,%r10
  0x00007fb54784ae0a: mov    %r10,0x328(%r15)
  0x00007fb54784ae11: movabs $0x0,%r10
  0x00007fb54784ae1b: mov    %r10,0x330(%r15)
  0x00007fb54784ae22: vzeroupper 
  0x00007fb54784ae25: cmpq   $0x0,0x8(%r15)
  0x00007fb54784ae2d: jne    0x00007fb54784aec3
  0x00007fb54784ae33: mov    0x390(%r15),%rbx
  0x00007fb54784ae3a: movabs $0x0,%r10
  0x00007fb54784ae44: mov    %r10,0x390(%r15)
  0x00007fb54784ae4b: mov    %rbx,0xae0(%rsp)
  0x00007fb54784ae53: mov    %rax,0xaf8(%rsp)
  0x00007fb54784ae5b: vzeroupper 
  0x00007fb54784ae5e: fxrstor64 (%rsp)
  0x00007fb54784ae63: add    $0xa80,%rsp
  0x00007fb54784ae6a: mov    (%rsp),%r15
  0x00007fb54784ae6e: mov    0x8(%rsp),%r14
  0x00007fb54784ae73: mov    0x10(%rsp),%r13
  0x00007fb54784ae78: mov    0x18(%rsp),%r12
  0x00007fb54784ae7d: mov    0x20(%rsp),%r11
  0x00007fb54784ae82: mov    0x28(%rsp),%r10
  0x00007fb54784ae87: mov    0x30(%rsp),%r9
  0x00007fb54784ae8c: mov    0x38(%rsp),%r8
  0x00007fb54784ae91: mov    0x40(%rsp),%rdi
  0x00007fb54784ae96: mov    0x48(%rsp),%rsi
  0x00007fb54784ae9b: mov    0x50(%rsp),%rbp
  0x00007fb54784aea0: mov    0x60(%rsp),%rbx
  0x00007fb54784aea5: mov    0x68(%rsp),%rdx
  0x00007fb54784aeaa: mov    0x70(%rsp),%rcx
  0x00007fb54784aeaf: mov    0x78(%rsp),%rax
  0x00007fb54784aeb4: add    $0x80,%rsp
  0x00007fb54784aebb: add    $0x8,%rsp
  0x00007fb54784aebf: popfq  
  0x00007fb54784aec0: pop    %rbp
  0x00007fb54784aec1: jmpq   *%rax
  0x00007fb54784aec3: vzeroupper 
  0x00007fb54784aec6: fxrstor64 (%rsp)
  0x00007fb54784aecb: add    $0xa80,%rsp
  0x00007fb54784aed2: mov    (%rsp),%r15
  0x00007fb54784aed6: mov    0x8(%rsp),%r14
  0x00007fb54784aedb: mov    0x10(%rsp),%r13
  0x00007fb54784aee0: mov    0x18(%rsp),%r12
  0x00007fb54784aee5: mov    0x20(%rsp),%r11
  0x00007fb54784aeea: mov    0x28(%rsp),%r10
  0x00007fb54784aeef: mov    0x30(%rsp),%r9
  0x00007fb54784aef4: mov    0x38(%rsp),%r8
  0x00007fb54784aef9: mov    0x40(%rsp),%rdi
  0x00007fb54784aefe: mov    0x48(%rsp),%rsi
  0x00007fb54784af03: mov    0x50(%rsp),%rbp
  0x00007fb54784af08: mov    0x60(%rsp),%rbx
  0x00007fb54784af0d: mov    0x68(%rsp),%rdx
  0x00007fb54784af12: mov    0x70(%rsp),%rcx
  0x00007fb54784af17: mov    0x78(%rsp),%rax
  0x00007fb54784af1c: add    $0x80,%rsp
  0x00007fb54784af23: add    $0x8,%rsp
  0x00007fb54784af27: popfq  
  0x00007fb54784af28: pop    %rbp
  0x00007fb54784af29: movq   $0x0,0x388(%r15)
  0x00007fb54784af34: mov    0x8(%r15),%rax
  0x00007fb54784af38: jmpq   0x00007fb547800c00
  0x00007fb54784af3d: hlt    
  0x00007fb54784af3e: hlt    
  0x00007fb54784af3f: hlt    

Decoding RuntimeStub - resolve_virtual_call 0x00007fb54784aa10
  0x00007fb54784aa80: push   %rbp
  0x00007fb54784aa81: mov    %rsp,%rbp
  0x00007fb54784aa84: pushfq 
  0x00007fb54784aa85: sub    $0x8,%rsp
  0x00007fb54784aa89: mov    %rsp,-0x28(%rsp)
  0x00007fb54784aa8e: sub    $0x80,%rsp
  0x00007fb54784aa95: mov    %rax,0x78(%rsp)
  0x00007fb54784aa9a: mov    %rcx,0x70(%rsp)
  0x00007fb54784aa9f: mov    %rdx,0x68(%rsp)
  0x00007fb54784aaa4: mov    %rbx,0x60(%rsp)
  0x00007fb54784aaa9: mov    %rbp,0x50(%rsp)
  0x00007fb54784aaae: mov    %rsi,0x48(%rsp)
  0x00007fb54784aab3: mov    %rdi,0x40(%rsp)
  0x00007fb54784aab8: mov    %r8,0x38(%rsp)
  0x00007fb54784aabd: mov    %r9,0x30(%rsp)
  0x00007fb54784aac2: mov    %r10,0x28(%rsp)
  0x00007fb54784aac7: mov    %r11,0x20(%rsp)
  0x00007fb54784aacc: mov    %r12,0x18(%rsp)
  0x00007fb54784aad1: mov    %r13,0x10(%rsp)
  0x00007fb54784aad6: mov    %r14,0x8(%rsp)
  0x00007fb54784aadb: mov    %r15,(%rsp)
  0x00007fb54784aadf: sub    $0xa80,%rsp
  0x00007fb54784aae6: fxsave64 (%rsp)
  0x00007fb54784aaeb: vzeroupper 
  0x00007fb54784aaee: vzeroupper 
  0x00007fb54784aaf1: mov    %rsp,0x328(%r15)
  0x00007fb54784aaf8: mov    %r15,%rdi
  0x00007fb54784aafb: callq  0x00007fb56514dd80 = SharedRuntime::resolve_virtual_call_C(JavaThread*)
  0x00007fb54784ab00: movabs $0x0,%r10
  0x00007fb54784ab0a: mov    %r10,0x328(%r15)
  0x00007fb54784ab11: movabs $0x0,%r10
  0x00007fb54784ab1b: mov    %r10,0x330(%r15)
  0x00007fb54784ab22: vzeroupper 
  0x00007fb54784ab25: cmpq   $0x0,0x8(%r15)
  0x00007fb54784ab2d: jne    0x00007fb54784abc3
  0x00007fb54784ab33: mov    0x390(%r15),%rbx
  0x00007fb54784ab3a: movabs $0x0,%r10
  0x00007fb54784ab44: mov    %r10,0x390(%r15)
  0x00007fb54784ab4b: mov    %rbx,0xae0(%rsp)
  0x00007fb54784ab53: mov    %rax,0xaf8(%rsp)
  0x00007fb54784ab5b: vzeroupper 
  0x00007fb54784ab5e: fxrstor64 (%rsp)
  0x00007fb54784ab63: add    $0xa80,%rsp
  0x00007fb54784ab6a: mov    (%rsp),%r15
  0x00007fb54784ab6e: mov    0x8(%rsp),%r14
  0x00007fb54784ab73: mov    0x10(%rsp),%r13
  0x00007fb54784ab78: mov    0x18(%rsp),%r12
  0x00007fb54784ab7d: mov    0x20(%rsp),%r11
  0x00007fb54784ab82: mov    0x28(%rsp),%r10
  0x00007fb54784ab87: mov    0x30(%rsp),%r9
  0x00007fb54784ab8c: mov    0x38(%rsp),%r8
  0x00007fb54784ab91: mov    0x40(%rsp),%rdi
  0x00007fb54784ab96: mov    0x48(%rsp),%rsi
  0x00007fb54784ab9b: mov    0x50(%rsp),%rbp
  0x00007fb54784aba0: mov    0x60(%rsp),%rbx
  0x00007fb54784aba5: mov    0x68(%rsp),%rdx
  0x00007fb54784abaa: mov    0x70(%rsp),%rcx
  0x00007fb54784abaf: mov    0x78(%rsp),%rax
  0x00007fb54784abb4: add    $0x80,%rsp
  0x00007fb54784abbb: add    $0x8,%rsp
  0x00007fb54784abbf: popfq  
  0x00007fb54784abc0: pop    %rbp
  0x00007fb54784abc1: jmpq   *%rax
  0x00007fb54784abc3: vzeroupper 
  0x00007fb54784abc6: fxrstor64 (%rsp)
  0x00007fb54784abcb: add    $0xa80,%rsp
  0x00007fb54784abd2: mov    (%rsp),%r15
  0x00007fb54784abd6: mov    0x8(%rsp),%r14
  0x00007fb54784abdb: mov    0x10(%rsp),%r13
  0x00007fb54784abe0: mov    0x18(%rsp),%r12
  0x00007fb54784abe5: mov    0x20(%rsp),%r11
  0x00007fb54784abea: mov    0x28(%rsp),%r10
  0x00007fb54784abef: mov    0x30(%rsp),%r9
  0x00007fb54784abf4: mov    0x38(%rsp),%r8
  0x00007fb54784abf9: mov    0x40(%rsp),%rdi
  0x00007fb54784abfe: mov    0x48(%rsp),%rsi
  0x00007fb54784ac03: mov    0x50(%rsp),%rbp
  0x00007fb54784ac08: mov    0x60(%rsp),%rbx
  0x00007fb54784ac0d: mov    0x68(%rsp),%rdx
  0x00007fb54784ac12: mov    0x70(%rsp),%rcx
  0x00007fb54784ac17: mov    0x78(%rsp),%rax
  0x00007fb54784ac1c: add    $0x80,%rsp
  0x00007fb54784ac23: add    $0x8,%rsp
  0x00007fb54784ac27: popfq  
  0x00007fb54784ac28: pop    %rbp
  0x00007fb54784ac29: movq   $0x0,0x388(%r15)
  0x00007fb54784ac34: mov    0x8(%r15),%rax
  0x00007fb54784ac38: jmpq   0x00007fb547800c00
  0x00007fb54784ac3d: hlt    
  0x00007fb54784ac3e: hlt    
  0x00007fb54784ac3f: hlt    

Decoding RuntimeStub - resolve_static_call 0x00007fb54784a710
  0x00007fb54784a780: push   %rbp
  0x00007fb54784a781: mov    %rsp,%rbp
  0x00007fb54784a784: pushfq 
  0x00007fb54784a785: sub    $0x8,%rsp
  0x00007fb54784a789: mov    %rsp,-0x28(%rsp)
  0x00007fb54784a78e: sub    $0x80,%rsp
  0x00007fb54784a795: mov    %rax,0x78(%rsp)
  0x00007fb54784a79a: mov    %rcx,0x70(%rsp)
  0x00007fb54784a79f: mov    %rdx,0x68(%rsp)
  0x00007fb54784a7a4: mov    %rbx,0x60(%rsp)
  0x00007fb54784a7a9: mov    %rbp,0x50(%rsp)
  0x00007fb54784a7ae: mov    %rsi,0x48(%rsp)
  0x00007fb54784a7b3: mov    %rdi,0x40(%rsp)
  0x00007fb54784a7b8: mov    %r8,0x38(%rsp)
  0x00007fb54784a7bd: mov    %r9,0x30(%rsp)
  0x00007fb54784a7c2: mov    %r10,0x28(%rsp)
  0x00007fb54784a7c7: mov    %r11,0x20(%rsp)
  0x00007fb54784a7cc: mov    %r12,0x18(%rsp)
  0x00007fb54784a7d1: mov    %r13,0x10(%rsp)
  0x00007fb54784a7d6: mov    %r14,0x8(%rsp)
  0x00007fb54784a7db: mov    %r15,(%rsp)
  0x00007fb54784a7df: sub    $0xa80,%rsp
  0x00007fb54784a7e6: fxsave64 (%rsp)
  0x00007fb54784a7eb: vzeroupper 
  0x00007fb54784a7ee: vzeroupper 
  0x00007fb54784a7f1: mov    %rsp,0x328(%r15)
  0x00007fb54784a7f8: mov    %r15,%rdi
  0x00007fb54784a7fb: callq  0x00007fb56514dad0 = SharedRuntime::resolve_static_call_C(JavaThread*)
  0x00007fb54784a800: movabs $0x0,%r10
  0x00007fb54784a80a: mov    %r10,0x328(%r15)
  0x00007fb54784a811: movabs $0x0,%r10
  0x00007fb54784a81b: mov    %r10,0x330(%r15)
  0x00007fb54784a822: vzeroupper 
  0x00007fb54784a825: cmpq   $0x0,0x8(%r15)
  0x00007fb54784a82d: jne    0x00007fb54784a8c3
  0x00007fb54784a833: mov    0x390(%r15),%rbx
  0x00007fb54784a83a: movabs $0x0,%r10
  0x00007fb54784a844: mov    %r10,0x390(%r15)
  0x00007fb54784a84b: mov    %rbx,0xae0(%rsp)
  0x00007fb54784a853: mov    %rax,0xaf8(%rsp)
  0x00007fb54784a85b: vzeroupper 
  0x00007fb54784a85e: fxrstor64 (%rsp)
  0x00007fb54784a863: add    $0xa80,%rsp
  0x00007fb54784a86a: mov    (%rsp),%r15
  0x00007fb54784a86e: mov    0x8(%rsp),%r14
  0x00007fb54784a873: mov    0x10(%rsp),%r13
  0x00007fb54784a878: mov    0x18(%rsp),%r12
  0x00007fb54784a87d: mov    0x20(%rsp),%r11
  0x00007fb54784a882: mov    0x28(%rsp),%r10
  0x00007fb54784a887: mov    0x30(%rsp),%r9
  0x00007fb54784a88c: mov    0x38(%rsp),%r8
  0x00007fb54784a891: mov    0x40(%rsp),%rdi
  0x00007fb54784a896: mov    0x48(%rsp),%rsi
  0x00007fb54784a89b: mov    0x50(%rsp),%rbp
  0x00007fb54784a8a0: mov    0x60(%rsp),%rbx
  0x00007fb54784a8a5: mov    0x68(%rsp),%rdx
  0x00007fb54784a8aa: mov    0x70(%rsp),%rcx
  0x00007fb54784a8af: mov    0x78(%rsp),%rax
  0x00007fb54784a8b4: add    $0x80,%rsp
  0x00007fb54784a8bb: add    $0x8,%rsp
  0x00007fb54784a8bf: popfq  
  0x00007fb54784a8c0: pop    %rbp
  0x00007fb54784a8c1: jmpq   *%rax
  0x00007fb54784a8c3: vzeroupper 
  0x00007fb54784a8c6: fxrstor64 (%rsp)
  0x00007fb54784a8cb: add    $0xa80,%rsp
  0x00007fb54784a8d2: mov    (%rsp),%r15
  0x00007fb54784a8d6: mov    0x8(%rsp),%r14
  0x00007fb54784a8db: mov    0x10(%rsp),%r13
  0x00007fb54784a8e0: mov    0x18(%rsp),%r12
  0x00007fb54784a8e5: mov    0x20(%rsp),%r11
  0x00007fb54784a8ea: mov    0x28(%rsp),%r10
  0x00007fb54784a8ef: mov    0x30(%rsp),%r9
  0x00007fb54784a8f4: mov    0x38(%rsp),%r8
  0x00007fb54784a8f9: mov    0x40(%rsp),%rdi
  0x00007fb54784a8fe: mov    0x48(%rsp),%rsi
  0x00007fb54784a903: mov    0x50(%rsp),%rbp
  0x00007fb54784a908: mov    0x60(%rsp),%rbx
  0x00007fb54784a90d: mov    0x68(%rsp),%rdx
  0x00007fb54784a912: mov    0x70(%rsp),%rcx
  0x00007fb54784a917: mov    0x78(%rsp),%rax
  0x00007fb54784a91c: add    $0x80,%rsp
  0x00007fb54784a923: add    $0x8,%rsp
  0x00007fb54784a927: popfq  
  0x00007fb54784a928: pop    %rbp
  0x00007fb54784a929: movq   $0x0,0x388(%r15)
  0x00007fb54784a934: mov    0x8(%r15),%rax
  0x00007fb54784a938: jmpq   0x00007fb547800c00
  0x00007fb54784a93d: hlt    
  0x00007fb54784a93e: hlt    
  0x00007fb54784a93f: hlt    

Decoding SafepointBlob 0x00007fb54784b610
  0x00007fb54784b680: push   %rbx
  0x00007fb54784b681: push   %rbp
  0x00007fb54784b682: mov    %rsp,%rbp
  0x00007fb54784b685: pushfq 
  0x00007fb54784b686: sub    $0x8,%rsp
  0x00007fb54784b68a: mov    %rsp,-0x28(%rsp)
  0x00007fb54784b68f: sub    $0x80,%rsp
  0x00007fb54784b696: mov    %rax,0x78(%rsp)
  0x00007fb54784b69b: mov    %rcx,0x70(%rsp)
  0x00007fb54784b6a0: mov    %rdx,0x68(%rsp)
  0x00007fb54784b6a5: mov    %rbx,0x60(%rsp)
  0x00007fb54784b6aa: mov    %rbp,0x50(%rsp)
  0x00007fb54784b6af: mov    %rsi,0x48(%rsp)
  0x00007fb54784b6b4: mov    %rdi,0x40(%rsp)
  0x00007fb54784b6b9: mov    %r8,0x38(%rsp)
  0x00007fb54784b6be: mov    %r9,0x30(%rsp)
  0x00007fb54784b6c3: mov    %r10,0x28(%rsp)
  0x00007fb54784b6c8: mov    %r11,0x20(%rsp)
  0x00007fb54784b6cd: mov    %r12,0x18(%rsp)
  0x00007fb54784b6d2: mov    %r13,0x10(%rsp)
  0x00007fb54784b6d7: mov    %r14,0x8(%rsp)
  0x00007fb54784b6dc: mov    %r15,(%rsp)
  0x00007fb54784b6e0: sub    $0xa80,%rsp
  0x00007fb54784b6e7: fxsave64 (%rsp)
  0x00007fb54784b6ec: vextractf128 $0x1,%ymm0,0x240(%rsp)
  0x00007fb54784b6f7: vextractf128 $0x1,%ymm1,0x250(%rsp)
  0x00007fb54784b702: vextractf128 $0x1,%ymm2,0x260(%rsp)
  0x00007fb54784b70d: vextractf128 $0x1,%ymm3,0x270(%rsp)
  0x00007fb54784b718: vextractf128 $0x1,%ymm4,0x280(%rsp)
  0x00007fb54784b723: vextractf128 $0x1,%ymm5,0x290(%rsp)
  0x00007fb54784b72e: vextractf128 $0x1,%ymm6,0x2a0(%rsp)
  0x00007fb54784b739: vextractf128 $0x1,%ymm7,0x2b0(%rsp)
  0x00007fb54784b744: vextractf128 $0x1,%ymm8,0x2c0(%rsp)
  0x00007fb54784b74f: vextractf128 $0x1,%ymm9,0x2d0(%rsp)
  0x00007fb54784b75a: vextractf128 $0x1,%ymm10,0x2e0(%rsp)
  0x00007fb54784b765: vextractf128 $0x1,%ymm11,0x2f0(%rsp)
  0x00007fb54784b770: vextractf128 $0x1,%ymm12,0x300(%rsp)
  0x00007fb54784b77b: vextractf128 $0x1,%ymm13,0x310(%rsp)
  0x00007fb54784b786: vextractf128 $0x1,%ymm14,0x320(%rsp)
  0x00007fb54784b791: vextractf128 $0x1,%ymm15,0x330(%rsp)
  0x00007fb54784b79c: vzeroupper 
  0x00007fb54784b79f: vzeroupper 
  0x00007fb54784b7a2: mov    %rsp,0x328(%r15)
  0x00007fb54784b7a9: mov    0x3d0(%r15),%rbx
  0x00007fb54784b7b0: mov    %rbx,0x8(%rbp)
  0x00007fb54784b7b4: mov    %r15,%rdi
  0x00007fb54784b7b7: callq  0x00007fb565139040 = SafepointSynchronize::handle_polling_page_exception(JavaThread*)
  0x00007fb54784b7bc: movabs $0x0,%r10
  0x00007fb54784b7c6: mov    %r10,0x328(%r15)
  0x00007fb54784b7cd: movabs $0x0,%r10
  0x00007fb54784b7d7: mov    %r10,0x330(%r15)
  0x00007fb54784b7de: vzeroupper 
  0x00007fb54784b7e1: cmpq   $0x0,0x8(%r15)
  0x00007fb54784b7e9: je     0x00007fb54784b90a
  0x00007fb54784b7ef: vzeroupper 
  0x00007fb54784b7f2: vinsertf128 $0x1,0x240(%rsp),%ymm0,%ymm0
  0x00007fb54784b7fd: vinsertf128 $0x1,0x250(%rsp),%ymm1,%ymm1
  0x00007fb54784b808: vinsertf128 $0x1,0x260(%rsp),%ymm2,%ymm2
  0x00007fb54784b813: vinsertf128 $0x1,0x270(%rsp),%ymm3,%ymm3
  0x00007fb54784b81e: vinsertf128 $0x1,0x280(%rsp),%ymm4,%ymm4
  0x00007fb54784b829: vinsertf128 $0x1,0x290(%rsp),%ymm5,%ymm5
  0x00007fb54784b834: vinsertf128 $0x1,0x2a0(%rsp),%ymm6,%ymm6
  0x00007fb54784b83f: vinsertf128 $0x1,0x2b0(%rsp),%ymm7,%ymm7
  0x00007fb54784b84a: vinsertf128 $0x1,0x2c0(%rsp),%ymm8,%ymm8
  0x00007fb54784b855: vinsertf128 $0x1,0x2d0(%rsp),%ymm9,%ymm9
  0x00007fb54784b860: vinsertf128 $0x1,0x2e0(%rsp),%ymm10,%ymm10
  0x00007fb54784b86b: vinsertf128 $0x1,0x2f0(%rsp),%ymm11,%ymm11
  0x00007fb54784b876: vinsertf128 $0x1,0x300(%rsp),%ymm12,%ymm12
  0x00007fb54784b881: vinsertf128 $0x1,0x310(%rsp),%ymm13,%ymm13
  0x00007fb54784b88c: vinsertf128 $0x1,0x320(%rsp),%ymm14,%ymm14
  0x00007fb54784b897: vinsertf128 $0x1,0x330(%rsp),%ymm15,%ymm15
  0x00007fb54784b8a2: fxrstor64 (%rsp)
  0x00007fb54784b8a7: add    $0xa80,%rsp
  0x00007fb54784b8ae: mov    (%rsp),%r15
  0x00007fb54784b8b2: mov    0x8(%rsp),%r14
  0x00007fb54784b8b7: mov    0x10(%rsp),%r13
  0x00007fb54784b8bc: mov    0x18(%rsp),%r12
  0x00007fb54784b8c1: mov    0x20(%rsp),%r11
  0x00007fb54784b8c6: mov    0x28(%rsp),%r10
  0x00007fb54784b8cb: mov    0x30(%rsp),%r9
  0x00007fb54784b8d0: mov    0x38(%rsp),%r8
  0x00007fb54784b8d5: mov    0x40(%rsp),%rdi
  0x00007fb54784b8da: mov    0x48(%rsp),%rsi
  0x00007fb54784b8df: mov    0x50(%rsp),%rbp
  0x00007fb54784b8e4: mov    0x60(%rsp),%rbx
  0x00007fb54784b8e9: mov    0x68(%rsp),%rdx
  0x00007fb54784b8ee: mov    0x70(%rsp),%rcx
  0x00007fb54784b8f3: mov    0x78(%rsp),%rax
  0x00007fb54784b8f8: add    $0x80,%rsp
  0x00007fb54784b8ff: add    $0x8,%rsp
  0x00007fb54784b903: popfq  
  0x00007fb54784b904: pop    %rbp
  0x00007fb54784b905: jmpq   0x00007fb547800c00
  0x00007fb54784b90a: cmp    0x8(%rbp),%rbx
  0x00007fb54784b90e: jne    0x00007fb54784b940
  0x00007fb54784b910: cmpb   $0x41,(%rbx)
  0x00007fb54784b913: jne    0x00007fb54784b91d
  0x00007fb54784b919: add    $0x1,%rbx
  0x00007fb54784b91d: movzbq 0x1(%rbx),%rcx
  0x00007fb54784b922: and    $0x7,%rcx
  0x00007fb54784b926: sub    $0x4,%rcx
  0x00007fb54784b92a: cmp    $0x1,%rcx
  0x00007fb54784b92e: ja     0x00007fb54784b938
  0x00007fb54784b934: add    $0x1,%rbx
  0x00007fb54784b938: add    $0x2,%rbx
  0x00007fb54784b93c: mov    %rbx,0x8(%rbp)
  0x00007fb54784b940: vzeroupper 
  0x00007fb54784b943: vinsertf128 $0x1,0x240(%rsp),%ymm0,%ymm0
  0x00007fb54784b94e: vinsertf128 $0x1,0x250(%rsp),%ymm1,%ymm1
  0x00007fb54784b959: vinsertf128 $0x1,0x260(%rsp),%ymm2,%ymm2
  0x00007fb54784b964: vinsertf128 $0x1,0x270(%rsp),%ymm3,%ymm3
  0x00007fb54784b96f: vinsertf128 $0x1,0x280(%rsp),%ymm4,%ymm4
  0x00007fb54784b97a: vinsertf128 $0x1,0x290(%rsp),%ymm5,%ymm5
  0x00007fb54784b985: vinsertf128 $0x1,0x2a0(%rsp),%ymm6,%ymm6
  0x00007fb54784b990: vinsertf128 $0x1,0x2b0(%rsp),%ymm7,%ymm7
  0x00007fb54784b99b: vinsertf128 $0x1,0x2c0(%rsp),%ymm8,%ymm8
  0x00007fb54784b9a6: vinsertf128 $0x1,0x2d0(%rsp),%ymm9,%ymm9
  0x00007fb54784b9b1: vinsertf128 $0x1,0x2e0(%rsp),%ymm10,%ymm10
  0x00007fb54784b9bc: vinsertf128 $0x1,0x2f0(%rsp),%ymm11,%ymm11
  0x00007fb54784b9c7: vinsertf128 $0x1,0x300(%rsp),%ymm12,%ymm12
  0x00007fb54784b9d2: vinsertf128 $0x1,0x310(%rsp),%ymm13,%ymm13
  0x00007fb54784b9dd: vinsertf128 $0x1,0x320(%rsp),%ymm14,%ymm14
  0x00007fb54784b9e8: vinsertf128 $0x1,0x330(%rsp),%ymm15,%ymm15
  0x00007fb54784b9f3: fxrstor64 (%rsp)
  0x00007fb54784b9f8: add    $0xa80,%rsp
  0x00007fb54784b9ff: mov    (%rsp),%r15
  0x00007fb54784ba03: mov    0x8(%rsp),%r14
  0x00007fb54784ba08: mov    0x10(%rsp),%r13
  0x00007fb54784ba0d: mov    0x18(%rsp),%r12
  0x00007fb54784ba12: mov    0x20(%rsp),%r11
  0x00007fb54784ba17: mov    0x28(%rsp),%r10
  0x00007fb54784ba1c: mov    0x30(%rsp),%r9
  0x00007fb54784ba21: mov    0x38(%rsp),%r8
  0x00007fb54784ba26: mov    0x40(%rsp),%rdi
  0x00007fb54784ba2b: mov    0x48(%rsp),%rsi
  0x00007fb54784ba30: mov    0x50(%rsp),%rbp
  0x00007fb54784ba35: mov    0x60(%rsp),%rbx
  0x00007fb54784ba3a: mov    0x68(%rsp),%rdx
  0x00007fb54784ba3f: mov    0x70(%rsp),%rcx
  0x00007fb54784ba44: mov    0x78(%rsp),%rax
  0x00007fb54784ba49: add    $0x80,%rsp
  0x00007fb54784ba50: add    $0x8,%rsp
  0x00007fb54784ba54: popfq  
  0x00007fb54784ba55: pop    %rbp
  0x00007fb54784ba56: retq   
  0x00007fb54784ba57: hlt    

Decoding SafepointBlob 0x00007fb547849a90
  0x00007fb547849b00: push   %rbx
  0x00007fb547849b01: push   %rbp
  0x00007fb547849b02: mov    %rsp,%rbp
  0x00007fb547849b05: pushfq 
  0x00007fb547849b06: sub    $0x8,%rsp
  0x00007fb547849b0a: mov    %rsp,-0x28(%rsp)
  0x00007fb547849b0f: sub    $0x80,%rsp
  0x00007fb547849b16: mov    %rax,0x78(%rsp)
  0x00007fb547849b1b: mov    %rcx,0x70(%rsp)
  0x00007fb547849b20: mov    %rdx,0x68(%rsp)
  0x00007fb547849b25: mov    %rbx,0x60(%rsp)
  0x00007fb547849b2a: mov    %rbp,0x50(%rsp)
  0x00007fb547849b2f: mov    %rsi,0x48(%rsp)
  0x00007fb547849b34: mov    %rdi,0x40(%rsp)
  0x00007fb547849b39: mov    %r8,0x38(%rsp)
  0x00007fb547849b3e: mov    %r9,0x30(%rsp)
  0x00007fb547849b43: mov    %r10,0x28(%rsp)
  0x00007fb547849b48: mov    %r11,0x20(%rsp)
  0x00007fb547849b4d: mov    %r12,0x18(%rsp)
  0x00007fb547849b52: mov    %r13,0x10(%rsp)
  0x00007fb547849b57: mov    %r14,0x8(%rsp)
  0x00007fb547849b5c: mov    %r15,(%rsp)
  0x00007fb547849b60: sub    $0xa80,%rsp
  0x00007fb547849b67: fxsave64 (%rsp)
  0x00007fb547849b6c: vzeroupper 
  0x00007fb547849b6f: vzeroupper 
  0x00007fb547849b72: mov    %rsp,0x328(%r15)
  0x00007fb547849b79: mov    0x3d0(%r15),%rbx
  0x00007fb547849b80: mov    %rbx,0x8(%rbp)
  0x00007fb547849b84: mov    %r15,%rdi
  0x00007fb547849b87: callq  0x00007fb565139040 = SafepointSynchronize::handle_polling_page_exception(JavaThread*)
  0x00007fb547849b8c: movabs $0x0,%r10
  0x00007fb547849b96: mov    %r10,0x328(%r15)
  0x00007fb547849b9d: movabs $0x0,%r10
  0x00007fb547849ba7: mov    %r10,0x330(%r15)
  0x00007fb547849bae: vzeroupper 
  0x00007fb547849bb1: cmpq   $0x0,0x8(%r15)
  0x00007fb547849bb9: je     0x00007fb547849c2a
  0x00007fb547849bbf: vzeroupper 
  0x00007fb547849bc2: fxrstor64 (%rsp)
  0x00007fb547849bc7: add    $0xa80,%rsp
  0x00007fb547849bce: mov    (%rsp),%r15
  0x00007fb547849bd2: mov    0x8(%rsp),%r14
  0x00007fb547849bd7: mov    0x10(%rsp),%r13
  0x00007fb547849bdc: mov    0x18(%rsp),%r12
  0x00007fb547849be1: mov    0x20(%rsp),%r11
  0x00007fb547849be6: mov    0x28(%rsp),%r10
  0x00007fb547849beb: mov    0x30(%rsp),%r9
  0x00007fb547849bf0: mov    0x38(%rsp),%r8
  0x00007fb547849bf5: mov    0x40(%rsp),%rdi
  0x00007fb547849bfa: mov    0x48(%rsp),%rsi
  0x00007fb547849bff: mov    0x50(%rsp),%rbp
  0x00007fb547849c04: mov    0x60(%rsp),%rbx
  0x00007fb547849c09: mov    0x68(%rsp),%rdx
  0x00007fb547849c0e: mov    0x70(%rsp),%rcx
  0x00007fb547849c13: mov    0x78(%rsp),%rax
  0x00007fb547849c18: add    $0x80,%rsp
  0x00007fb547849c1f: add    $0x8,%rsp
  0x00007fb547849c23: popfq  
  0x00007fb547849c24: pop    %rbp
  0x00007fb547849c25: jmpq   0x00007fb547800c00
  0x00007fb547849c2a: cmp    0x8(%rbp),%rbx
  0x00007fb547849c2e: jne    0x00007fb547849c60
  0x00007fb547849c30: cmpb   $0x41,(%rbx)
  0x00007fb547849c33: jne    0x00007fb547849c3d
  0x00007fb547849c39: add    $0x1,%rbx
  0x00007fb547849c3d: movzbq 0x1(%rbx),%rcx
  0x00007fb547849c42: and    $0x7,%rcx
  0x00007fb547849c46: sub    $0x4,%rcx
  0x00007fb547849c4a: cmp    $0x1,%rcx
  0x00007fb547849c4e: ja     0x00007fb547849c58
  0x00007fb547849c54: add    $0x1,%rbx
  0x00007fb547849c58: add    $0x2,%rbx
  0x00007fb547849c5c: mov    %rbx,0x8(%rbp)
  0x00007fb547849c60: vzeroupper 
  0x00007fb547849c63: fxrstor64 (%rsp)
  0x00007fb547849c68: add    $0xa80,%rsp
  0x00007fb547849c6f: mov    (%rsp),%r15
  0x00007fb547849c73: mov    0x8(%rsp),%r14
  0x00007fb547849c78: mov    0x10(%rsp),%r13
  0x00007fb547849c7d: mov    0x18(%rsp),%r12
  0x00007fb547849c82: mov    0x20(%rsp),%r11
  0x00007fb547849c87: mov    0x28(%rsp),%r10
  0x00007fb547849c8c: mov    0x30(%rsp),%r9
  0x00007fb547849c91: mov    0x38(%rsp),%r8
  0x00007fb547849c96: mov    0x40(%rsp),%rdi
  0x00007fb547849c9b: mov    0x48(%rsp),%rsi
  0x00007fb547849ca0: mov    0x50(%rsp),%rbp
  0x00007fb547849ca5: mov    0x60(%rsp),%rbx
  0x00007fb547849caa: mov    0x68(%rsp),%rdx
  0x00007fb547849caf: mov    0x70(%rsp),%rcx
  0x00007fb547849cb4: mov    0x78(%rsp),%rax
  0x00007fb547849cb9: add    $0x80,%rsp
  0x00007fb547849cc0: add    $0x8,%rsp
  0x00007fb547849cc4: popfq  
  0x00007fb547849cc5: pop    %rbp
  0x00007fb547849cc6: retq   
  0x00007fb547849cc7: hlt    

Decoding SafepointBlob 0x00007fb547849790
  0x00007fb547849800: push   %rbp
  0x00007fb547849801: mov    %rsp,%rbp
  0x00007fb547849804: pushfq 
  0x00007fb547849805: sub    $0x8,%rsp
  0x00007fb547849809: mov    %rsp,-0x28(%rsp)
  0x00007fb54784980e: sub    $0x80,%rsp
  0x00007fb547849815: mov    %rax,0x78(%rsp)
  0x00007fb54784981a: mov    %rcx,0x70(%rsp)
  0x00007fb54784981f: mov    %rdx,0x68(%rsp)
  0x00007fb547849824: mov    %rbx,0x60(%rsp)
  0x00007fb547849829: mov    %rbp,0x50(%rsp)
  0x00007fb54784982e: mov    %rsi,0x48(%rsp)
  0x00007fb547849833: mov    %rdi,0x40(%rsp)
  0x00007fb547849838: mov    %r8,0x38(%rsp)
  0x00007fb54784983d: mov    %r9,0x30(%rsp)
  0x00007fb547849842: mov    %r10,0x28(%rsp)
  0x00007fb547849847: mov    %r11,0x20(%rsp)
  0x00007fb54784984c: mov    %r12,0x18(%rsp)
  0x00007fb547849851: mov    %r13,0x10(%rsp)
  0x00007fb547849856: mov    %r14,0x8(%rsp)
  0x00007fb54784985b: mov    %r15,(%rsp)
  0x00007fb54784985f: sub    $0xa80,%rsp
  0x00007fb547849866: fxsave64 (%rsp)
  0x00007fb54784986b: vzeroupper 
  0x00007fb54784986e: vzeroupper 
  0x00007fb547849871: mov    %rsp,0x328(%r15)
  0x00007fb547849878: mov    %r15,%rdi
  0x00007fb54784987b: callq  0x00007fb565139040 = SafepointSynchronize::handle_polling_page_exception(JavaThread*)
  0x00007fb547849880: movabs $0x0,%r10
  0x00007fb54784988a: mov    %r10,0x328(%r15)
  0x00007fb547849891: movabs $0x0,%r10
  0x00007fb54784989b: mov    %r10,0x330(%r15)
  0x00007fb5478498a2: vzeroupper 
  0x00007fb5478498a5: cmpq   $0x0,0x8(%r15)
  0x00007fb5478498ad: je     0x00007fb54784991e
  0x00007fb5478498b3: vzeroupper 
  0x00007fb5478498b6: fxrstor64 (%rsp)
  0x00007fb5478498bb: add    $0xa80,%rsp
  0x00007fb5478498c2: mov    (%rsp),%r15
  0x00007fb5478498c6: mov    0x8(%rsp),%r14
  0x00007fb5478498cb: mov    0x10(%rsp),%r13
  0x00007fb5478498d0: mov    0x18(%rsp),%r12
  0x00007fb5478498d5: mov    0x20(%rsp),%r11
  0x00007fb5478498da: mov    0x28(%rsp),%r10
  0x00007fb5478498df: mov    0x30(%rsp),%r9
  0x00007fb5478498e4: mov    0x38(%rsp),%r8
  0x00007fb5478498e9: mov    0x40(%rsp),%rdi
  0x00007fb5478498ee: mov    0x48(%rsp),%rsi
  0x00007fb5478498f3: mov    0x50(%rsp),%rbp
  0x00007fb5478498f8: mov    0x60(%rsp),%rbx
  0x00007fb5478498fd: mov    0x68(%rsp),%rdx
  0x00007fb547849902: mov    0x70(%rsp),%rcx
  0x00007fb547849907: mov    0x78(%rsp),%rax
  0x00007fb54784990c: add    $0x80,%rsp
  0x00007fb547849913: add    $0x8,%rsp
  0x00007fb547849917: popfq  
  0x00007fb547849918: pop    %rbp
  0x00007fb547849919: jmpq   0x00007fb547800c00
  0x00007fb54784991e: vzeroupper 
  0x00007fb547849921: fxrstor64 (%rsp)
  0x00007fb547849926: add    $0xa80,%rsp
  0x00007fb54784992d: mov    (%rsp),%r15
  0x00007fb547849931: mov    0x8(%rsp),%r14
  0x00007fb547849936: mov    0x10(%rsp),%r13
  0x00007fb54784993b: mov    0x18(%rsp),%r12
  0x00007fb547849940: mov    0x20(%rsp),%r11
  0x00007fb547849945: mov    0x28(%rsp),%r10
  0x00007fb54784994a: mov    0x30(%rsp),%r9
  0x00007fb54784994f: mov    0x38(%rsp),%r8
  0x00007fb547849954: mov    0x40(%rsp),%rdi
  0x00007fb547849959: mov    0x48(%rsp),%rsi
  0x00007fb54784995e: mov    0x50(%rsp),%rbp
  0x00007fb547849963: mov    0x60(%rsp),%rbx
  0x00007fb547849968: mov    0x68(%rsp),%rdx
  0x00007fb54784996d: mov    0x70(%rsp),%rcx
  0x00007fb547849972: mov    0x78(%rsp),%rax
  0x00007fb547849977: add    $0x80,%rsp
  0x00007fb54784997e: add    $0x8,%rsp
  0x00007fb547849982: popfq  
  0x00007fb547849983: pop    %rbp
  0x00007fb547849984: retq   
  0x00007fb547849985: hlt    
  0x00007fb547849986: hlt    
  0x00007fb547849987: hlt    

Decoding DeoptimizationBlob 0x00007fb54784a110
  0x00007fb54784a1a0: push   %rbp
  0x00007fb54784a1a1: mov    %rsp,%rbp
  0x00007fb54784a1a4: pushfq 
  0x00007fb54784a1a5: sub    $0x8,%rsp
  0x00007fb54784a1a9: mov    %rsp,-0x28(%rsp)
  0x00007fb54784a1ae: sub    $0x80,%rsp
  0x00007fb54784a1b5: mov    %rax,0x78(%rsp)
  0x00007fb54784a1ba: mov    %rcx,0x70(%rsp)
  0x00007fb54784a1bf: mov    %rdx,0x68(%rsp)
  0x00007fb54784a1c4: mov    %rbx,0x60(%rsp)
  0x00007fb54784a1c9: mov    %rbp,0x50(%rsp)
  0x00007fb54784a1ce: mov    %rsi,0x48(%rsp)
  0x00007fb54784a1d3: mov    %rdi,0x40(%rsp)
  0x00007fb54784a1d8: mov    %r8,0x38(%rsp)
  0x00007fb54784a1dd: mov    %r9,0x30(%rsp)
  0x00007fb54784a1e2: mov    %r10,0x28(%rsp)
  0x00007fb54784a1e7: mov    %r11,0x20(%rsp)
  0x00007fb54784a1ec: mov    %r12,0x18(%rsp)
  0x00007fb54784a1f1: mov    %r13,0x10(%rsp)
  0x00007fb54784a1f6: mov    %r14,0x8(%rsp)
  0x00007fb54784a1fb: mov    %r15,(%rsp)
  0x00007fb54784a1ff: sub    $0xa80,%rsp
  0x00007fb54784a206: fxsave64 (%rsp)
  0x00007fb54784a20b: vextractf128 $0x1,%ymm0,0x240(%rsp)
  0x00007fb54784a216: vextractf128 $0x1,%ymm1,0x250(%rsp)
  0x00007fb54784a221: vextractf128 $0x1,%ymm2,0x260(%rsp)
  0x00007fb54784a22c: vextractf128 $0x1,%ymm3,0x270(%rsp)
  0x00007fb54784a237: vextractf128 $0x1,%ymm4,0x280(%rsp)
  0x00007fb54784a242: vextractf128 $0x1,%ymm5,0x290(%rsp)
  0x00007fb54784a24d: vextractf128 $0x1,%ymm6,0x2a0(%rsp)
  0x00007fb54784a258: vextractf128 $0x1,%ymm7,0x2b0(%rsp)
  0x00007fb54784a263: vextractf128 $0x1,%ymm8,0x2c0(%rsp)
  0x00007fb54784a26e: vextractf128 $0x1,%ymm9,0x2d0(%rsp)
  0x00007fb54784a279: vextractf128 $0x1,%ymm10,0x2e0(%rsp)
  0x00007fb54784a284: vextractf128 $0x1,%ymm11,0x2f0(%rsp)
  0x00007fb54784a28f: vextractf128 $0x1,%ymm12,0x300(%rsp)
  0x00007fb54784a29a: vextractf128 $0x1,%ymm13,0x310(%rsp)
  0x00007fb54784a2a5: vextractf128 $0x1,%ymm14,0x320(%rsp)
  0x00007fb54784a2b0: vextractf128 $0x1,%ymm15,0x330(%rsp)
  0x00007fb54784a2bb: vzeroupper 
  0x00007fb54784a2be: mov    $0x0,%r14d
  0x00007fb54784a2c4: jmpq   0x00007fb54784a53f
  0x00007fb54784a2c9: push   %rbp
  0x00007fb54784a2ca: mov    %rsp,%rbp
  0x00007fb54784a2cd: pushfq 
  0x00007fb54784a2ce: sub    $0x8,%rsp
  0x00007fb54784a2d2: mov    %rsp,-0x28(%rsp)
  0x00007fb54784a2d7: sub    $0x80,%rsp
  0x00007fb54784a2de: mov    %rax,0x78(%rsp)
  0x00007fb54784a2e3: mov    %rcx,0x70(%rsp)
  0x00007fb54784a2e8: mov    %rdx,0x68(%rsp)
  0x00007fb54784a2ed: mov    %rbx,0x60(%rsp)
  0x00007fb54784a2f2: mov    %rbp,0x50(%rsp)
  0x00007fb54784a2f7: mov    %rsi,0x48(%rsp)
  0x00007fb54784a2fc: mov    %rdi,0x40(%rsp)
  0x00007fb54784a301: mov    %r8,0x38(%rsp)
  0x00007fb54784a306: mov    %r9,0x30(%rsp)
  0x00007fb54784a30b: mov    %r10,0x28(%rsp)
  0x00007fb54784a310: mov    %r11,0x20(%rsp)
  0x00007fb54784a315: mov    %r12,0x18(%rsp)
  0x00007fb54784a31a: mov    %r13,0x10(%rsp)
  0x00007fb54784a31f: mov    %r14,0x8(%rsp)
  0x00007fb54784a324: mov    %r15,(%rsp)
  0x00007fb54784a328: sub    $0xa80,%rsp
  0x00007fb54784a32f: fxsave64 (%rsp)
  0x00007fb54784a334: vextractf128 $0x1,%ymm0,0x240(%rsp)
  0x00007fb54784a33f: vextractf128 $0x1,%ymm1,0x250(%rsp)
  0x00007fb54784a34a: vextractf128 $0x1,%ymm2,0x260(%rsp)
  0x00007fb54784a355: vextractf128 $0x1,%ymm3,0x270(%rsp)
  0x00007fb54784a360: vextractf128 $0x1,%ymm4,0x280(%rsp)
  0x00007fb54784a36b: vextractf128 $0x1,%ymm5,0x290(%rsp)
  0x00007fb54784a376: vextractf128 $0x1,%ymm6,0x2a0(%rsp)
  0x00007fb54784a381: vextractf128 $0x1,%ymm7,0x2b0(%rsp)
  0x00007fb54784a38c: vextractf128 $0x1,%ymm8,0x2c0(%rsp)
  0x00007fb54784a397: vextractf128 $0x1,%ymm9,0x2d0(%rsp)
  0x00007fb54784a3a2: vextractf128 $0x1,%ymm10,0x2e0(%rsp)
  0x00007fb54784a3ad: vextractf128 $0x1,%ymm11,0x2f0(%rsp)
  0x00007fb54784a3b8: vextractf128 $0x1,%ymm12,0x300(%rsp)
  0x00007fb54784a3c3: vextractf128 $0x1,%ymm13,0x310(%rsp)
  0x00007fb54784a3ce: vextractf128 $0x1,%ymm14,0x320(%rsp)
  0x00007fb54784a3d9: vextractf128 $0x1,%ymm15,0x330(%rsp)
  0x00007fb54784a3e4: vzeroupper 
  0x00007fb54784a3e7: mov    $0x3,%r14d
  0x00007fb54784a3ed: jmpq   0x00007fb54784a53f
  0x00007fb54784a3f2: mov    %rdx,0x448(%r15)
  0x00007fb54784a3f9: mov    %rax,0x440(%r15)
  0x00007fb54784a400: pushq  $0x0
  0x00007fb54784a405: push   %rbp
  0x00007fb54784a406: mov    %rsp,%rbp
  0x00007fb54784a409: pushfq 
  0x00007fb54784a40a: sub    $0x8,%rsp
  0x00007fb54784a40e: mov    %rsp,-0x28(%rsp)
  0x00007fb54784a413: sub    $0x80,%rsp
  0x00007fb54784a41a: mov    %rax,0x78(%rsp)
  0x00007fb54784a41f: mov    %rcx,0x70(%rsp)
  0x00007fb54784a424: mov    %rdx,0x68(%rsp)
  0x00007fb54784a429: mov    %rbx,0x60(%rsp)
  0x00007fb54784a42e: mov    %rbp,0x50(%rsp)
  0x00007fb54784a433: mov    %rsi,0x48(%rsp)
  0x00007fb54784a438: mov    %rdi,0x40(%rsp)
  0x00007fb54784a43d: mov    %r8,0x38(%rsp)
  0x00007fb54784a442: mov    %r9,0x30(%rsp)
  0x00007fb54784a447: mov    %r10,0x28(%rsp)
  0x00007fb54784a44c: mov    %r11,0x20(%rsp)
  0x00007fb54784a451: mov    %r12,0x18(%rsp)
  0x00007fb54784a456: mov    %r13,0x10(%rsp)
  0x00007fb54784a45b: mov    %r14,0x8(%rsp)
  0x00007fb54784a460: mov    %r15,(%rsp)
  0x00007fb54784a464: sub    $0xa80,%rsp
  0x00007fb54784a46b: fxsave64 (%rsp)
  0x00007fb54784a470: vextractf128 $0x1,%ymm0,0x240(%rsp)
  0x00007fb54784a47b: vextractf128 $0x1,%ymm1,0x250(%rsp)
  0x00007fb54784a486: vextractf128 $0x1,%ymm2,0x260(%rsp)
  0x00007fb54784a491: vextractf128 $0x1,%ymm3,0x270(%rsp)
  0x00007fb54784a49c: vextractf128 $0x1,%ymm4,0x280(%rsp)
  0x00007fb54784a4a7: vextractf128 $0x1,%ymm5,0x290(%rsp)
  0x00007fb54784a4b2: vextractf128 $0x1,%ymm6,0x2a0(%rsp)
  0x00007fb54784a4bd: vextractf128 $0x1,%ymm7,0x2b0(%rsp)
  0x00007fb54784a4c8: vextractf128 $0x1,%ymm8,0x2c0(%rsp)
  0x00007fb54784a4d3: vextractf128 $0x1,%ymm9,0x2d0(%rsp)
  0x00007fb54784a4de: vextractf128 $0x1,%ymm10,0x2e0(%rsp)
  0x00007fb54784a4e9: vextractf128 $0x1,%ymm11,0x2f0(%rsp)
  0x00007fb54784a4f4: vextractf128 $0x1,%ymm12,0x300(%rsp)
  0x00007fb54784a4ff: vextractf128 $0x1,%ymm13,0x310(%rsp)
  0x00007fb54784a50a: vextractf128 $0x1,%ymm14,0x320(%rsp)
  0x00007fb54784a515: vextractf128 $0x1,%ymm15,0x330(%rsp)
  0x00007fb54784a520: vzeroupper 
  0x00007fb54784a523: mov    $0x1,%r14d
  0x00007fb54784a529: mov    0x448(%r15),%rdx
  0x00007fb54784a530: mov    %rdx,0x8(%rbp)
  0x00007fb54784a534: movq   $0x0,0x448(%r15)
  0x00007fb54784a53f: vzeroupper 
  0x00007fb54784a542: mov    %rsp,0x328(%r15)
  0x00007fb54784a549: mov    %r15,%rdi
  0x00007fb54784a54c: mov    %r14d,%esi
  0x00007fb54784a54f: callq  0x00007fb564aeaac0 = Deoptimization::fetch_unroll_info(JavaThread*, int)
  0x00007fb54784a554: movabs $0x0,%r10
  0x00007fb54784a55e: mov    %r10,0x328(%r15)
  0x00007fb54784a565: movabs $0x0,%r10
  0x00007fb54784a56f: mov    %r10,0x330(%r15)
  0x00007fb54784a576: vzeroupper 
  0x00007fb54784a579: mov    %rax,%rdi
  0x00007fb54784a57c: mov    0x3c(%rdi),%r14d
  0x00007fb54784a580: cmp    $0x1,%r14d
  0x00007fb54784a584: jne    0x00007fb54784a5be
  0x00007fb54784a58a: mov    0x440(%r15),%rax
  0x00007fb54784a591: mov    0x448(%r15),%rdx
  0x00007fb54784a598: movq   $0x0,0x440(%r15)
  0x00007fb54784a5a3: movq   $0x0,0x448(%r15)
  0x00007fb54784a5ae: mov    %rax,0xaf8(%rsp)
  0x00007fb54784a5b6: mov    %rdx,0xae8(%rsp)
  0x00007fb54784a5be: vmovsd 0xa0(%rsp),%xmm0
  0x00007fb54784a5c7: mov    0xaf8(%rsp),%rax
  0x00007fb54784a5cf: mov    0xae8(%rsp),%rdx
  0x00007fb54784a5d7: add    $0xb18,%rsp
  0x00007fb54784a5de: mov    (%rdi),%ecx
  0x00007fb54784a5e0: add    %rcx,%rsp
  0x00007fb54784a5e3: mov    0x30(%rdi),%rbp
  0x00007fb54784a5e7: mov    0x18(%rdi),%rcx
  0x00007fb54784a5eb: add    $0x8,%rsp
  0x00007fb54784a5ef: mov    0x10(%rdi),%rsi
  0x00007fb54784a5f3: mov    0x8(%rdi),%edx
  0x00007fb54784a5f6: mov    %rsp,%r8
  0x00007fb54784a5f9: mov    0x4(%rdi),%ebx
  0x00007fb54784a5fc: sub    %rbx,%rsp
  0x00007fb54784a5ff: mov    (%rsi),%rbx
  0x00007fb54784a602: sub    $0x10,%rbx
  0x00007fb54784a606: rex.W pushq (%rcx)
  0x00007fb54784a609: push   %rbp
  0x00007fb54784a60a: mov    %rsp,%rbp
  0x00007fb54784a60d: sub    %rbx,%rsp
  0x00007fb54784a610: movq   $0x0,-0x10(%rbp)
  0x00007fb54784a618: mov    %r8,-0x8(%rbp)
  0x00007fb54784a61c: mov    %rsp,%r8
  0x00007fb54784a61f: add    $0x8,%rsi
  0x00007fb54784a623: add    $0x8,%rcx
  0x00007fb54784a627: dec    %edx
  0x00007fb54784a629: jne    0x00007fb54784a5ff
  0x00007fb54784a62b: rex.W pushq (%rcx)
  0x00007fb54784a62e: push   %rbp
  0x00007fb54784a62f: mov    %rsp,%rbp
  0x00007fb54784a632: sub    $0xb10,%rsp
  0x00007fb54784a639: vmovsd %xmm0,0xa0(%rsp)
  0x00007fb54784a642: mov    %rax,0xaf8(%rsp)
  0x00007fb54784a64a: vzeroupper 
  0x00007fb54784a64d: mov    %rbp,0x338(%r15)
  0x00007fb54784a654: movabs $0x7fb54784a64a,%r10
  0x00007fb54784a65e: mov    %r10,0x330(%r15)
  0x00007fb54784a665: mov    %rsp,0x328(%r15)
  0x00007fb54784a66c: and    $0xfffffffffffffff0,%rsp
  0x00007fb54784a670: mov    %r15,%rdi
  0x00007fb54784a673: mov    %r14d,%esi
  0x00007fb54784a676: callq  0x00007fb564ae4570 = Deoptimization::unpack_frames(JavaThread*, int)
  0x00007fb54784a67b: mov    0x328(%r15),%rsp
  0x00007fb54784a682: movabs $0x0,%r10
  0x00007fb54784a68c: mov    %r10,0x328(%r15)
  0x00007fb54784a693: movabs $0x0,%r10
  0x00007fb54784a69d: mov    %r10,0x338(%r15)
  0x00007fb54784a6a4: movabs $0x0,%r10
  0x00007fb54784a6ae: mov    %r10,0x330(%r15)
  0x00007fb54784a6b5: vzeroupper 
  0x00007fb54784a6b8: vmovsd 0xa0(%rsp),%xmm0
  0x00007fb54784a6c1: mov    0xaf8(%rsp),%rax
  0x00007fb54784a6c9: mov    0xae8(%rsp),%rdx
  0x00007fb54784a6d1: leaveq 
  0x00007fb54784a6d2: retq   
  0x00007fb54784a6d3: hlt    
  0x00007fb54784a6d4: hlt    
  0x00007fb54784a6d5: hlt    
  0x00007fb54784a6d6: hlt    
  0x00007fb54784a6d7: hlt    

Decoding UncommonTrapBlob 0x00007fb547849d90
  0x00007fb547849e00: sub    $0x8,%rsp
  0x00007fb547849e04: mov    %rbp,(%rsp)
  0x00007fb547849e08: mov    %esi,%esi
  0x00007fb547849e0a: vzeroupper 
  0x00007fb547849e0d: mov    %rsp,0x328(%r15)
  0x00007fb547849e14: mov    %r15,%rdi
  0x00007fb547849e17: mov    $0x2,%edx
  0x00007fb547849e1c: callq  0x00007fb564aeab30 = Deoptimization::uncommon_trap(JavaThread*, int, int)
  0x00007fb547849e21: movabs $0x0,%r10
  0x00007fb547849e2b: mov    %r10,0x328(%r15)
  0x00007fb547849e32: movabs $0x0,%r10
  0x00007fb547849e3c: mov    %r10,0x330(%r15)
  0x00007fb547849e43: vzeroupper 
  0x00007fb547849e46: mov    %rax,%rdi
  0x00007fb547849e49: add    $0x8,%rsp
  0x00007fb547849e4d: mov    (%rdi),%ecx
  0x00007fb547849e4f: add    %rcx,%rsp
  0x00007fb547849e52: mov    0x30(%rdi),%rbp
  0x00007fb547849e56: mov    0x18(%rdi),%rcx
  0x00007fb547849e5a: add    $0x8,%rsp
  0x00007fb547849e5e: mov    0x10(%rdi),%rsi
  0x00007fb547849e62: mov    0x8(%rdi),%edx
  0x00007fb547849e65: mov    %rsp,%r8
  0x00007fb547849e68: mov    0x4(%rdi),%ebx
  0x00007fb547849e6b: sub    %rbx,%rsp
  0x00007fb547849e6e: mov    (%rsi),%rbx
  0x00007fb547849e71: sub    $0x10,%rbx
  0x00007fb547849e75: rex.W pushq (%rcx)
  0x00007fb547849e78: push   %rbp
  0x00007fb547849e79: mov    %rsp,%rbp
  0x00007fb547849e7c: sub    %rbx,%rsp
  0x00007fb547849e7f: mov    %r8,-0x8(%rbp)
  0x00007fb547849e83: movq   $0x0,-0x10(%rbp)
  0x00007fb547849e8b: mov    %rsp,%r8
  0x00007fb547849e8e: add    $0x8,%rsi
  0x00007fb547849e92: add    $0x8,%rcx
  0x00007fb547849e96: dec    %edx
  0x00007fb547849e98: jne    0x00007fb547849e6e
  0x00007fb547849e9a: rex.W pushq (%rcx)
  0x00007fb547849e9d: push   %rbp
  0x00007fb547849e9e: mov    %rsp,%rbp
  0x00007fb547849ea1: sub    $0x0,%rsp
  0x00007fb547849ea5: vzeroupper 
  0x00007fb547849ea8: mov    %rbp,0x338(%r15)
  0x00007fb547849eaf: movabs $0x7fb547849ea5,%r10
  0x00007fb547849eb9: mov    %r10,0x330(%r15)
  0x00007fb547849ec0: mov    %rsp,0x328(%r15)
  0x00007fb547849ec7: and    $0xfffffffffffffff0,%rsp
  0x00007fb547849ecb: mov    %r15,%rdi
  0x00007fb547849ece: mov    $0x2,%esi
  0x00007fb547849ed3: callq  0x00007fb564ae4570 = Deoptimization::unpack_frames(JavaThread*, int)
  0x00007fb547849ed8: movabs $0x0,%r10
  0x00007fb547849ee2: mov    %r10,0x328(%r15)
  0x00007fb547849ee9: movabs $0x0,%r10
  0x00007fb547849ef3: mov    %r10,0x338(%r15)
  0x00007fb547849efa: movabs $0x0,%r10
  0x00007fb547849f04: mov    %r10,0x330(%r15)
  0x00007fb547849f0b: vzeroupper 
  0x00007fb547849f0e: leaveq 
  0x00007fb547849f0f: retq   

Decoding RuntimeStub - AbstractMethodError throw_exception 0x00007fb54782e590
  0x00007fb54782e600: push   %rbp
  0x00007fb54782e601: mov    %rsp,%rbp
  0x00007fb54782e604: sub    $0x0,%rsp
  0x00007fb54782e608: vzeroupper 
  0x00007fb54782e60b: mov    %rbp,0x338(%r15)
  0x00007fb54782e612: movabs $0x7fb54782e608,%r10
  0x00007fb54782e61c: mov    %r10,0x330(%r15)
  0x00007fb54782e623: mov    %rsp,0x328(%r15)
  0x00007fb54782e62a: and    $0xfffffffffffffff0,%rsp
  0x00007fb54782e62e: mov    %r15,%rdi
  0x00007fb54782e631: callq  0x00007fb565149d90 = SharedRuntime::throw_AbstractMethodError(JavaThread*)
  0x00007fb54782e636: movabs $0x0,%r10
  0x00007fb54782e640: mov    %r10,0x328(%r15)
  0x00007fb54782e647: movabs $0x0,%r10
  0x00007fb54782e651: mov    %r10,0x338(%r15)
  0x00007fb54782e658: movabs $0x0,%r10
  0x00007fb54782e662: mov    %r10,0x330(%r15)
  0x00007fb54782e669: vzeroupper 
  0x00007fb54782e66c: leaveq 
  0x00007fb54782e66d: jmpq   Stub::forward exception
  0x00007fb54782e672: hlt    
  0x00007fb54782e673: hlt    
  0x00007fb54782e674: hlt    
  0x00007fb54782e675: hlt    
  0x00007fb54782e676: hlt    
  0x00007fb54782e677: hlt    

Decoding RuntimeStub - IncompatibleClassChangeError throw_exception 0x00007fb54782e290
  0x00007fb54782e300: push   %rbp
  0x00007fb54782e301: mov    %rsp,%rbp
  0x00007fb54782e304: sub    $0x0,%rsp
  0x00007fb54782e308: vzeroupper 
  0x00007fb54782e30b: mov    %rbp,0x338(%r15)
  0x00007fb54782e312: movabs $0x7fb54782e308,%r10
  0x00007fb54782e31c: mov    %r10,0x330(%r15)
  0x00007fb54782e323: mov    %rsp,0x328(%r15)
  0x00007fb54782e32a: and    $0xfffffffffffffff0,%rsp
  0x00007fb54782e32e: mov    %r15,%rdi
  0x00007fb54782e331: callq  0x00007fb565149f00 = SharedRuntime::throw_IncompatibleClassChangeError(JavaThread*)
  0x00007fb54782e336: movabs $0x0,%r10
  0x00007fb54782e340: mov    %r10,0x328(%r15)
  0x00007fb54782e347: movabs $0x0,%r10
  0x00007fb54782e351: mov    %r10,0x338(%r15)
  0x00007fb54782e358: movabs $0x0,%r10
  0x00007fb54782e362: mov    %r10,0x330(%r15)
  0x00007fb54782e369: vzeroupper 
  0x00007fb54782e36c: leaveq 
  0x00007fb54782e36d: jmpq   Stub::forward exception
  0x00007fb54782e372: hlt    
  0x00007fb54782e373: hlt    
  0x00007fb54782e374: hlt    
  0x00007fb54782e375: hlt    
  0x00007fb54782e376: hlt    
  0x00007fb54782e377: hlt    

Decoding RuntimeStub - NullPointerException at call throw_exception 0x00007fb54782df90
  0x00007fb54782e000: push   %rbp
  0x00007fb54782e001: mov    %rsp,%rbp
  0x00007fb54782e004: sub    $0x0,%rsp
  0x00007fb54782e008: vzeroupper 
  0x00007fb54782e00b: mov    %rbp,0x338(%r15)
  0x00007fb54782e012: movabs $0x7fb54782e008,%r10
  0x00007fb54782e01c: mov    %r10,0x330(%r15)
  0x00007fb54782e023: mov    %rsp,0x328(%r15)
  0x00007fb54782e02a: and    $0xfffffffffffffff0,%rsp
  0x00007fb54782e02e: mov    %r15,%rdi
  0x00007fb54782e031: callq  0x00007fb56514a370 = SharedRuntime::throw_NullPointerException_at_call(JavaThread*)
  0x00007fb54782e036: movabs $0x0,%r10
  0x00007fb54782e040: mov    %r10,0x328(%r15)
  0x00007fb54782e047: movabs $0x0,%r10
  0x00007fb54782e051: mov    %r10,0x338(%r15)
  0x00007fb54782e058: movabs $0x0,%r10
  0x00007fb54782e062: mov    %r10,0x330(%r15)
  0x00007fb54782e069: vzeroupper 
  0x00007fb54782e06c: leaveq 
  0x00007fb54782e06d: jmpq   Stub::forward exception
  0x00007fb54782e072: hlt    
  0x00007fb54782e073: hlt    
  0x00007fb54782e074: hlt    
  0x00007fb54782e075: hlt    
  0x00007fb54782e076: hlt    
  0x00007fb54782e077: hlt    

StubRoutines::f2i_fixup [0x00007fb54782ec80, 0x00007fb54782ecb8[ (56 bytes)
  0x00007fb54782ec80: push   %rax
  0x00007fb54782ec81: push   %rcx
  0x00007fb54782ec82: push   %rdx
  0x00007fb54782ec83: push   %rsi
  0x00007fb54782ec84: mov    $0x7f800000,%eax
  0x00007fb54782ec89: xor    %ecx,%ecx
  0x00007fb54782ec8b: mov    0x28(%rsp),%edx
  0x00007fb54782ec8f: mov    %edx,%esi
  0x00007fb54782ec91: and    $0x7fffffff,%esi
  0x00007fb54782ec97: cmp    %esi,%eax
  0x00007fb54782ec99: js     Stub::f2i_fixup+46 0x00007fb54782ecae
  0x00007fb54782ec9f: test   %edx,%edx
  0x00007fb54782eca1: mov    $0x80000000,%ecx
  0x00007fb54782eca6: mov    $0x7fffffff,%eax
  0x00007fb54782ecab: cmovns %eax,%ecx
  0x00007fb54782ecae: mov    %rcx,0x28(%rsp)
  0x00007fb54782ecb3: pop    %rsi
  0x00007fb54782ecb4: pop    %rdx
  0x00007fb54782ecb5: pop    %rcx
  0x00007fb54782ecb6: pop    %rax
  0x00007fb54782ecb7: retq   

StubRoutines::f2l_fixup [0x00007fb54782ecb8, 0x00007fb54782ecfb[ (67 bytes)
  0x00007fb54782ecb8: push   %rax
  0x00007fb54782ecb9: push   %rcx
  0x00007fb54782ecba: push   %rdx
  0x00007fb54782ecbb: push   %rsi
  0x00007fb54782ecbc: mov    $0x7f800000,%eax
  0x00007fb54782ecc1: xor    %ecx,%ecx
  0x00007fb54782ecc3: mov    0x28(%rsp),%edx
  0x00007fb54782ecc7: mov    %edx,%esi
  0x00007fb54782ecc9: and    $0x7fffffff,%esi
  0x00007fb54782eccf: cmp    %esi,%eax
  0x00007fb54782ecd1: js     Stub::f2l_fixup+57 0x00007fb54782ecf1
  0x00007fb54782ecd7: test   %edx,%edx
  0x00007fb54782ecd9: movabs $0x8000000000000000,%rcx
  0x00007fb54782ece3: movabs $0x7fffffffffffffff,%rax
  0x00007fb54782eced: cmovns %rax,%rcx
  0x00007fb54782ecf1: mov    %rcx,0x28(%rsp)
  0x00007fb54782ecf6: pop    %rsi
  0x00007fb54782ecf7: pop    %rdx
  0x00007fb54782ecf8: pop    %rcx
  0x00007fb54782ecf9: pop    %rax
  0x00007fb54782ecfa: retq   

StubRoutines::d2i_fixup [0x00007fb54782ecfb, 0x00007fb54782ed4b[ (80 bytes)
  0x00007fb54782ecfb: push   %rax
  0x00007fb54782ecfc: push   %rcx
  0x00007fb54782ecfd: push   %rdx
  0x00007fb54782ecfe: push   %rsi
  0x00007fb54782ecff: push   %rdi
  0x00007fb54782ed00: mov    $0x7ff00000,%eax
  0x00007fb54782ed05: mov    0x30(%rsp),%rdx
  0x00007fb54782ed0a: mov    %edx,%ecx
  0x00007fb54782ed0c: mov    %rdx,%rsi
  0x00007fb54782ed0f: mov    %rdx,%rdi
  0x00007fb54782ed12: neg    %ecx
  0x00007fb54782ed14: shr    $0x20,%rsi
  0x00007fb54782ed18: or     %edx,%ecx
  0x00007fb54782ed1a: and    $0x7fffffff,%esi
  0x00007fb54782ed20: xor    %edx,%edx
  0x00007fb54782ed22: shr    $0x1f,%ecx
  0x00007fb54782ed25: or     %ecx,%esi
  0x00007fb54782ed27: cmp    %esi,%eax
  0x00007fb54782ed29: js     Stub::d2i_fixup+69 0x00007fb54782ed40
  0x00007fb54782ed2f: test   %rdi,%rdi
  0x00007fb54782ed32: mov    $0x80000000,%edx
  0x00007fb54782ed37: mov    $0x7fffffff,%eax
  0x00007fb54782ed3c: cmovns %rax,%rdx
  0x00007fb54782ed40: mov    %rdx,0x30(%rsp)
  0x00007fb54782ed45: pop    %rdi
  0x00007fb54782ed46: pop    %rsi
  0x00007fb54782ed47: pop    %rdx
  0x00007fb54782ed48: pop    %rcx
  0x00007fb54782ed49: pop    %rax
  0x00007fb54782ed4a: retq   

StubRoutines::d2l_fixup [0x00007fb54782ed4b, 0x00007fb54782eda5[ (90 bytes)
  0x00007fb54782ed4b: push   %rax
  0x00007fb54782ed4c: push   %rcx
  0x00007fb54782ed4d: push   %rdx
  0x00007fb54782ed4e: push   %rsi
  0x00007fb54782ed4f: push   %rdi
  0x00007fb54782ed50: mov    $0x7ff00000,%eax
  0x00007fb54782ed55: mov    0x30(%rsp),%rdx
  0x00007fb54782ed5a: mov    %edx,%ecx
  0x00007fb54782ed5c: mov    %rdx,%rsi
  0x00007fb54782ed5f: mov    %rdx,%rdi
  0x00007fb54782ed62: neg    %ecx
  0x00007fb54782ed64: shr    $0x20,%rsi
  0x00007fb54782ed68: or     %edx,%ecx
  0x00007fb54782ed6a: and    $0x7fffffff,%esi
  0x00007fb54782ed70: xor    %edx,%edx
  0x00007fb54782ed72: shr    $0x1f,%ecx
  0x00007fb54782ed75: or     %ecx,%esi
  0x00007fb54782ed77: cmp    %esi,%eax
  0x00007fb54782ed79: js     Stub::d2l_fixup+79 0x00007fb54782ed9a
  0x00007fb54782ed7f: test   %rdi,%rdi
  0x00007fb54782ed82: movabs $0x8000000000000000,%rdx
  0x00007fb54782ed8c: movabs $0x7fffffffffffffff,%rax
  0x00007fb54782ed96: cmovns %rax,%rdx
  0x00007fb54782ed9a: mov    %rdx,0x30(%rsp)
  0x00007fb54782ed9f: pop    %rdi
  0x00007fb54782eda0: pop    %rsi
  0x00007fb54782eda1: pop    %rdx
  0x00007fb54782eda2: pop    %rcx
  0x00007fb54782eda3: pop    %rax
  0x00007fb54782eda4: retq   

StubRoutines::float_sign_mask [0x00007fb54782edc0, 0x00007fb54782edd0[ (16 bytes)
  0x00007fb54782edc0: (bad)  
  0x00007fb54782edc1: (bad)  
  0x00007fb54782edc2: (bad)  
  0x00007fb54782edc3: jg     Stub::float_sign_mask+4 0x00007fb54782edc4
  0x00007fb54782edc5: (bad)  
  0x00007fb54782edc6: (bad)  
  0x00007fb54782edc7: jg     Stub::float_sign_mask+8 0x00007fb54782edc8
  0x00007fb54782edc9: (bad)  
  0x00007fb54782edca: (bad)  
  0x00007fb54782edcb: jg     Stub::float_sign_mask+12 0x00007fb54782edcc
  0x00007fb54782edcd: (bad)  
  0x00007fb54782edce: (bad)  
  0x00007fb54782edcf: .byte 0x7f

StubRoutines::float_sign_flip [0x00007fb54782ede0, 0x00007fb54782edf0[ (16 bytes)
  0x00007fb54782ede0: add    %al,(%rax)
  0x00007fb54782ede2: add    %al,-0x80000000(%rax)
  0x00007fb54782ede8: add    %al,(%rax)
  0x00007fb54782edea: add    %al,-0x80000000(%rax)

StubRoutines::double_sign_mask [0x00007fb54782ee00, 0x00007fb54782ee10[ (16 bytes)
  0x00007fb54782ee00: (bad)  
  0x00007fb54782ee01: (bad)  
  0x00007fb54782ee02: (bad)  
  0x00007fb54782ee03: (bad)  
  0x00007fb54782ee04: (bad)  
  0x00007fb54782ee05: (bad)  
  0x00007fb54782ee06: (bad)  
  0x00007fb54782ee07: jg     Stub::double_sign_mask+8 0x00007fb54782ee08
  0x00007fb54782ee09: (bad)  
  0x00007fb54782ee0a: (bad)  
  0x00007fb54782ee0b: (bad)  
  0x00007fb54782ee0c: (bad)  
  0x00007fb54782ee0d: (bad)  
  0x00007fb54782ee0e: (bad)  
  0x00007fb54782ee0f: .byte 0x7f

StubRoutines::double_sign_flip [0x00007fb54782ee20, 0x00007fb54782ee30[ (16 bytes)
  0x00007fb54782ee20: add    %al,(%rax)
  0x00007fb54782ee22: add    %al,(%rax)
  0x00007fb54782ee24: add    %al,(%rax)
  0x00007fb54782ee26: add    %al,0x0(%rax)
  0x00007fb54782ee2c: add    %al,(%rax)
  0x00007fb54782ee2e: .byte 0x0
  0x00007fb54782ee2f: .byte 0x80

StubRoutines::vector_float_sign_mask [0x00007fb54782ee40, 0x00007fb54782ee80[ (64 bytes)
  0x00007fb54782ee40: (bad)  
  0x00007fb54782ee41: (bad)  
  0x00007fb54782ee42: (bad)  
  0x00007fb54782ee43: jg     Stub::vector_float_sign_mask+4 0x00007fb54782ee44
  0x00007fb54782ee45: (bad)  
  0x00007fb54782ee46: (bad)  
  0x00007fb54782ee47: jg     Stub::vector_float_sign_mask+8 0x00007fb54782ee48
  0x00007fb54782ee49: (bad)  
  0x00007fb54782ee4a: (bad)  
  0x00007fb54782ee4b: jg     Stub::vector_float_sign_mask+12 0x00007fb54782ee4c
  0x00007fb54782ee4d: (bad)  
  0x00007fb54782ee4e: (bad)  
  0x00007fb54782ee4f: jg     Stub::vector_float_sign_mask+16 0x00007fb54782ee50
  0x00007fb54782ee51: (bad)  
  0x00007fb54782ee52: (bad)  
  0x00007fb54782ee53: jg     Stub::vector_float_sign_mask+20 0x00007fb54782ee54
  0x00007fb54782ee55: (bad)  
  0x00007fb54782ee56: (bad)  
  0x00007fb54782ee57: jg     Stub::vector_float_sign_mask+24 0x00007fb54782ee58
  0x00007fb54782ee59: (bad)  
  0x00007fb54782ee5a: (bad)  
  0x00007fb54782ee5b: jg     Stub::vector_float_sign_mask+28 0x00007fb54782ee5c
  0x00007fb54782ee5d: (bad)  
  0x00007fb54782ee5e: (bad)  
  0x00007fb54782ee5f: jg     Stub::vector_float_sign_mask+32 0x00007fb54782ee60
  0x00007fb54782ee61: (bad)  
  0x00007fb54782ee62: (bad)  
  0x00007fb54782ee63: jg     Stub::vector_float_sign_mask+36 0x00007fb54782ee64
  0x00007fb54782ee65: (bad)  
  0x00007fb54782ee66: (bad)  
  0x00007fb54782ee67: jg     Stub::vector_float_sign_mask+40 0x00007fb54782ee68
  0x00007fb54782ee69: (bad)  
  0x00007fb54782ee6a: (bad)  
  0x00007fb54782ee6b: jg     Stub::vector_float_sign_mask+44 0x00007fb54782ee6c
  0x00007fb54782ee6d: (bad)  
  0x00007fb54782ee6e: (bad)  
  0x00007fb54782ee6f: jg     Stub::vector_float_sign_mask+48 0x00007fb54782ee70
  0x00007fb54782ee71: (bad)  
  0x00007fb54782ee72: (bad)  
  0x00007fb54782ee73: jg     Stub::vector_float_sign_mask+52 0x00007fb54782ee74
  0x00007fb54782ee75: (bad)  
  0x00007fb54782ee76: (bad)  
  0x00007fb54782ee77: jg     Stub::vector_float_sign_mask+56 0x00007fb54782ee78
  0x00007fb54782ee79: (bad)  
  0x00007fb54782ee7a: (bad)  
  0x00007fb54782ee7b: jg     Stub::vector_float_sign_mask+60 0x00007fb54782ee7c
  0x00007fb54782ee7d: (bad)  
  0x00007fb54782ee7e: (bad)  
  0x00007fb54782ee7f: .byte 0x7f

StubRoutines::vector_float_sign_flip [0x00007fb54782ee80, 0x00007fb54782eec0[ (64 bytes)
  0x00007fb54782ee80: add    %al,(%rax)
  0x00007fb54782ee82: add    %al,-0x80000000(%rax)
  0x00007fb54782ee88: add    %al,(%rax)
  0x00007fb54782ee8a: add    %al,-0x80000000(%rax)
  0x00007fb54782ee90: add    %al,(%rax)
  0x00007fb54782ee92: add    %al,-0x80000000(%rax)
  0x00007fb54782ee98: add    %al,(%rax)
  0x00007fb54782ee9a: add    %al,-0x80000000(%rax)
  0x00007fb54782eea0: add    %al,(%rax)
  0x00007fb54782eea2: add    %al,-0x80000000(%rax)
  0x00007fb54782eea8: add    %al,(%rax)
  0x00007fb54782eeaa: add    %al,-0x80000000(%rax)
  0x00007fb54782eeb0: add    %al,(%rax)
  0x00007fb54782eeb2: add    %al,-0x80000000(%rax)
  0x00007fb54782eeb8: add    %al,(%rax)
  0x00007fb54782eeba: add    %al,-0x80000000(%rax)

StubRoutines::vector_double_sign_mask [0x00007fb54782eec0, 0x00007fb54782ef00[ (64 bytes)
  0x00007fb54782eec0: (bad)  
  0x00007fb54782eec1: (bad)  
  0x00007fb54782eec2: (bad)  
  0x00007fb54782eec3: (bad)  
  0x00007fb54782eec4: (bad)  
  0x00007fb54782eec5: (bad)  
  0x00007fb54782eec6: (bad)  
  0x00007fb54782eec7: jg     Stub::vector_double_sign_mask+8 0x00007fb54782eec8
  0x00007fb54782eec9: (bad)  
  0x00007fb54782eeca: (bad)  
  0x00007fb54782eecb: (bad)  
  0x00007fb54782eecc: (bad)  
  0x00007fb54782eecd: (bad)  
  0x00007fb54782eece: (bad)  
  0x00007fb54782eecf: jg     Stub::vector_double_sign_mask+16 0x00007fb54782eed0
  0x00007fb54782eed1: (bad)  
  0x00007fb54782eed2: (bad)  
  0x00007fb54782eed3: (bad)  
  0x00007fb54782eed4: (bad)  
  0x00007fb54782eed5: (bad)  
  0x00007fb54782eed6: (bad)  
  0x00007fb54782eed7: jg     Stub::vector_double_sign_mask+24 0x00007fb54782eed8
  0x00007fb54782eed9: (bad)  
  0x00007fb54782eeda: (bad)  
  0x00007fb54782eedb: (bad)  
  0x00007fb54782eedc: (bad)  
  0x00007fb54782eedd: (bad)  
  0x00007fb54782eede: (bad)  
  0x00007fb54782eedf: jg     Stub::vector_double_sign_mask+32 0x00007fb54782eee0
  0x00007fb54782eee1: (bad)  
  0x00007fb54782eee2: (bad)  
  0x00007fb54782eee3: (bad)  
  0x00007fb54782eee4: (bad)  
  0x00007fb54782eee5: (bad)  
  0x00007fb54782eee6: (bad)  
  0x00007fb54782eee7: jg     Stub::vector_double_sign_mask+40 0x00007fb54782eee8
  0x00007fb54782eee9: (bad)  
  0x00007fb54782eeea: (bad)  
  0x00007fb54782eeeb: (bad)  
  0x00007fb54782eeec: (bad)  
  0x00007fb54782eeed: (bad)  
  0x00007fb54782eeee: (bad)  
  0x00007fb54782eeef: jg     Stub::vector_double_sign_mask+48 0x00007fb54782eef0
  0x00007fb54782eef1: (bad)  
  0x00007fb54782eef2: (bad)  
  0x00007fb54782eef3: (bad)  
  0x00007fb54782eef4: (bad)  
  0x00007fb54782eef5: (bad)  
  0x00007fb54782eef6: (bad)  
  0x00007fb54782eef7: jg     Stub::vector_double_sign_mask+56 0x00007fb54782eef8
  0x00007fb54782eef9: (bad)  
  0x00007fb54782eefa: (bad)  
  0x00007fb54782eefb: (bad)  
  0x00007fb54782eefc: (bad)  
  0x00007fb54782eefd: (bad)  
  0x00007fb54782eefe: (bad)  
  0x00007fb54782eeff: .byte 0x7f

StubRoutines::vector_double_sign_flip [0x00007fb54782ef00, 0x00007fb54782ef40[ (64 bytes)
  0x00007fb54782ef00: add    %al,(%rax)
  0x00007fb54782ef02: add    %al,(%rax)
  0x00007fb54782ef04: add    %al,(%rax)
  0x00007fb54782ef06: add    %al,0x0(%rax)
  0x00007fb54782ef0c: add    %al,(%rax)
  0x00007fb54782ef0e: add    %al,0x0(%rax)
  0x00007fb54782ef14: add    %al,(%rax)
  0x00007fb54782ef16: add    %al,0x0(%rax)
  0x00007fb54782ef1c: add    %al,(%rax)
  0x00007fb54782ef1e: add    %al,0x0(%rax)
  0x00007fb54782ef24: add    %al,(%rax)
  0x00007fb54782ef26: add    %al,0x0(%rax)
  0x00007fb54782ef2c: add    %al,(%rax)
  0x00007fb54782ef2e: add    %al,0x0(%rax)
  0x00007fb54782ef34: add    %al,(%rax)
  0x00007fb54782ef36: add    %al,0x0(%rax)
  0x00007fb54782ef3c: add    %al,(%rax)
  0x00007fb54782ef3e: .byte 0x0
  0x00007fb54782ef3f: .byte 0x80

StubRoutines::vector_short_to_byte_mask [0x00007fb54782ef40, 0x00007fb54782ef80[ (64 bytes)
  0x00007fb54782ef40: incl   (%rax)
  0x00007fb54782ef42: incl   (%rax)
  0x00007fb54782ef44: incl   (%rax)
  0x00007fb54782ef46: incl   (%rax)
  0x00007fb54782ef48: incl   (%rax)
  0x00007fb54782ef4a: incl   (%rax)
  0x00007fb54782ef4c: incl   (%rax)
  0x00007fb54782ef4e: incl   (%rax)
  0x00007fb54782ef50: incl   (%rax)
  0x00007fb54782ef52: incl   (%rax)
  0x00007fb54782ef54: incl   (%rax)
  0x00007fb54782ef56: incl   (%rax)
  0x00007fb54782ef58: incl   (%rax)
  0x00007fb54782ef5a: incl   (%rax)
  0x00007fb54782ef5c: incl   (%rax)
  0x00007fb54782ef5e: incl   (%rax)
  0x00007fb54782ef60: incl   (%rax)
  0x00007fb54782ef62: incl   (%rax)
  0x00007fb54782ef64: incl   (%rax)
  0x00007fb54782ef66: incl   (%rax)
  0x00007fb54782ef68: incl   (%rax)
  0x00007fb54782ef6a: incl   (%rax)
  0x00007fb54782ef6c: incl   (%rax)
  0x00007fb54782ef6e: incl   (%rax)
  0x00007fb54782ef70: incl   (%rax)
  0x00007fb54782ef72: incl   (%rax)
  0x00007fb54782ef74: incl   (%rax)
  0x00007fb54782ef76: incl   (%rax)
  0x00007fb54782ef78: incl   (%rax)
  0x00007fb54782ef7a: incl   (%rax)
  0x00007fb54782ef7c: incl   (%rax)
  0x00007fb54782ef7e: incl   (%rax)

StubRoutines::vector_byte_perm_mask [0x00007fb54782ef80, 0x00007fb54782efc0[ (64 bytes)
  0x00007fb54782ef80: add    %eax,(%rax)
  0x00007fb54782ef82: add    %al,(%rax)
  0x00007fb54782ef84: add    %al,(%rax)
  0x00007fb54782ef86: add    %al,(%rax)
  0x00007fb54782ef88: add    (%rax),%eax
  0x00007fb54782ef8a: add    %al,(%rax)
  0x00007fb54782ef8c: add    %al,(%rax)
  0x00007fb54782ef8e: add    %al,(%rax)
  0x00007fb54782ef90: add    $0x0,%eax
  0x00007fb54782ef95: add    %al,(%rax)
  0x00007fb54782ef97: add    %al,(%rdi)
  0x00007fb54782ef99: add    %al,(%rax)
  0x00007fb54782ef9b: add    %al,(%rax)
  0x00007fb54782ef9d: add    %al,(%rax)
  0x00007fb54782ef9f: add    %al,(%rax)
  0x00007fb54782efa1: add    %al,(%rax)
  0x00007fb54782efa3: add    %al,(%rax)
  0x00007fb54782efa5: add    %al,(%rax)
  0x00007fb54782efa7: add    %al,(%rdx)
  0x00007fb54782efa9: add    %al,(%rax)
  0x00007fb54782efab: add    %al,(%rax)
  0x00007fb54782efad: add    %al,(%rax)
  0x00007fb54782efaf: add    %al,(%rax,%rax,1)
  0x00007fb54782efb2: add    %al,(%rax)
  0x00007fb54782efb4: add    %al,(%rax)
  0x00007fb54782efb6: add    %al,(%rax)
  0x00007fb54782efb8: (bad)  
  0x00007fb54782efb9: add    %al,(%rax)
  0x00007fb54782efbb: add    %al,(%rax)
  0x00007fb54782efbd: add    %al,(%rax)
  0x00007fb54782efbf: .byte 0x0

StubRoutines::vector_long_sign_mask [0x00007fb54782efc0, 0x00007fb54782f000[ (64 bytes)
  0x00007fb54782efc0: add    %al,(%rax)
  0x00007fb54782efc2: add    %al,(%rax)
  0x00007fb54782efc4: add    %al,(%rax)
  0x00007fb54782efc6: add    %al,0x0(%rax)
  0x00007fb54782efcc: add    %al,(%rax)
  0x00007fb54782efce: add    %al,0x0(%rax)
  0x00007fb54782efd4: add    %al,(%rax)
  0x00007fb54782efd6: add    %al,0x0(%rax)
  0x00007fb54782efdc: add    %al,(%rax)
  0x00007fb54782efde: add    %al,0x0(%rax)
  0x00007fb54782efe4: add    %al,(%rax)
  0x00007fb54782efe6: add    %al,0x0(%rax)
  0x00007fb54782efec: add    %al,(%rax)
  0x00007fb54782efee: add    %al,0x0(%rax)
  0x00007fb54782eff4: add    %al,(%rax)
  0x00007fb54782eff6: add    %al,0x0(%rax)
  0x00007fb54782effc: add    %al,(%rax)
  0x00007fb54782effe: .byte 0x0
  0x00007fb54782efff: .byte 0x80

StubRoutines::verify_oop [0x00007fb54782f000, 0x00007fb54782f14c[ (332 bytes)
  0x00007fb54782f000: pushfq 
  0x00007fb54782f001: incl   0x1e177889(%rip)        # 0x00007fb5659a6890
  0x00007fb54782f007: push   %r12
  0x00007fb54782f009: push   %rdx
  0x00007fb54782f00a: push   %rcx
  0x00007fb54782f00b: mov    0x30(%rsp),%rax
  0x00007fb54782f010: test   %rax,%rax
  0x00007fb54782f013: je     Stub::verify_oop+91 0x00007fb54782f05b
  0x00007fb54782f019: mov    %rax,%rdx
  0x00007fb54782f01c: movabs $0x0,%rcx
  0x00007fb54782f026: and    %rcx,%rdx
  0x00007fb54782f029: movabs $0x0,%rcx
  0x00007fb54782f033: cmp    %rcx,%rdx
  0x00007fb54782f036: jne    Stub::verify_oop+109 0x00007fb54782f06d
  0x00007fb54782f03c: xor    %r12,%r12
  0x00007fb54782f03f: mov    0x8(%rax),%eax
  0x00007fb54782f042: movabs $0x800000000,%r12
  0x00007fb54782f04c: add    %r12,%rax
  0x00007fb54782f04f: xor    %r12,%r12
  0x00007fb54782f052: test   %rax,%rax
  0x00007fb54782f055: je     Stub::verify_oop+109 0x00007fb54782f06d
  0x00007fb54782f05b: mov    0x38(%rsp),%rax
  0x00007fb54782f060: mov    0x40(%rsp),%r10
  0x00007fb54782f065: pop    %rcx
  0x00007fb54782f066: pop    %rdx
  0x00007fb54782f067: pop    %r12
  0x00007fb54782f069: popfq  
  0x00007fb54782f06a: retq   $0x20
  0x00007fb54782f06d: mov    0x38(%rsp),%rax
  0x00007fb54782f072: mov    0x40(%rsp),%r10
  0x00007fb54782f077: pop    %rcx
  0x00007fb54782f078: pop    %rdx
  0x00007fb54782f079: pop    %r12
  0x00007fb54782f07b: popfq  
  0x00007fb54782f07c: mov    %rsp,-0x28(%rsp)
  0x00007fb54782f081: sub    $0x80,%rsp
  0x00007fb54782f088: mov    %rax,0x78(%rsp)
  0x00007fb54782f08d: mov    %rcx,0x70(%rsp)
  0x00007fb54782f092: mov    %rdx,0x68(%rsp)
  0x00007fb54782f097: mov    %rbx,0x60(%rsp)
  0x00007fb54782f09c: mov    %rbp,0x50(%rsp)
  0x00007fb54782f0a1: mov    %rsi,0x48(%rsp)
  0x00007fb54782f0a6: mov    %rdi,0x40(%rsp)
  0x00007fb54782f0ab: mov    %r8,0x38(%rsp)
  0x00007fb54782f0b0: mov    %r9,0x30(%rsp)
  0x00007fb54782f0b5: mov    %r10,0x28(%rsp)
  0x00007fb54782f0ba: mov    %r11,0x20(%rsp)
  0x00007fb54782f0bf: mov    %r12,0x18(%rsp)
  0x00007fb54782f0c4: mov    %r13,0x10(%rsp)
  0x00007fb54782f0c9: mov    %r14,0x8(%rsp)
  0x00007fb54782f0ce: mov    %r15,(%rsp)
  0x00007fb54782f0d2: mov    0x88(%rsp),%rdi
  0x00007fb54782f0da: mov    0x80(%rsp),%rsi
  0x00007fb54782f0e2: mov    %rsp,%rdx
  0x00007fb54782f0e5: mov    %rsp,%r12
  0x00007fb54782f0e8: sub    $0x0,%rsp
  0x00007fb54782f0ec: and    $0xfffffffffffffff0,%rsp
  0x00007fb54782f0f0: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb54782f0f5: mov    %r12,%rsp
  0x00007fb54782f0f8: mov    (%rsp),%r15
  0x00007fb54782f0fc: mov    0x8(%rsp),%r14
  0x00007fb54782f101: mov    0x10(%rsp),%r13
  0x00007fb54782f106: mov    0x18(%rsp),%r12
  0x00007fb54782f10b: mov    0x20(%rsp),%r11
  0x00007fb54782f110: mov    0x28(%rsp),%r10
  0x00007fb54782f115: mov    0x30(%rsp),%r9
  0x00007fb54782f11a: mov    0x38(%rsp),%r8
  0x00007fb54782f11f: mov    0x40(%rsp),%rdi
  0x00007fb54782f124: mov    0x48(%rsp),%rsi
  0x00007fb54782f129: mov    0x50(%rsp),%rbp
  0x00007fb54782f12e: mov    0x60(%rsp),%rbx
  0x00007fb54782f133: mov    0x68(%rsp),%rdx
  0x00007fb54782f138: mov    0x70(%rsp),%rcx
  0x00007fb54782f13d: mov    0x78(%rsp),%rax
  0x00007fb54782f142: add    $0x80,%rsp
  0x00007fb54782f149: retq   $0x20

StubRoutines::jbyte_disjoint_arraycopy [0x00007fb54782f160, 0x00007fb54782f21b[ (187 bytes)
  0x00007fb54782f160: push   %rbp
  0x00007fb54782f161: mov    %rsp,%rbp
  0x00007fb54782f164: mov    %rdx,%rcx
  0x00007fb54782f167: shr    $0x3,%rdx
  0x00007fb54782f16b: lea    -0x8(%rdi,%rdx,8),%rdi
  0x00007fb54782f170: lea    -0x8(%rsi,%rdx,8),%rsi
  0x00007fb54782f175: neg    %rdx
  0x00007fb54782f178: jmpq   Stub::jbyte_disjoint_arraycopy+136 0x00007fb54782f1e8
  0x00007fb54782f17d: mov    0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f182: mov    %rax,0x8(%rsi,%rdx,8)
  0x00007fb54782f187: inc    %rdx
  0x00007fb54782f18a: jne    Stub::jbyte_disjoint_arraycopy+29 0x00007fb54782f17d
  0x00007fb54782f18c: test   $0x4,%ecx
  0x00007fb54782f192: je     Stub::jbyte_disjoint_arraycopy+66 0x00007fb54782f1a2
  0x00007fb54782f194: mov    0x8(%rdi),%eax
  0x00007fb54782f197: mov    %eax,0x8(%rsi)
  0x00007fb54782f19a: add    $0x4,%rdi
  0x00007fb54782f19e: add    $0x4,%rsi
  0x00007fb54782f1a2: test   $0x2,%ecx
  0x00007fb54782f1a8: je     Stub::jbyte_disjoint_arraycopy+90 0x00007fb54782f1ba
  0x00007fb54782f1aa: mov    0x8(%rdi),%ax
  0x00007fb54782f1ae: mov    %ax,0x8(%rsi)
  0x00007fb54782f1b2: add    $0x2,%rdi
  0x00007fb54782f1b6: add    $0x2,%rsi
  0x00007fb54782f1ba: test   $0x1,%ecx
  0x00007fb54782f1c0: je     Stub::jbyte_disjoint_arraycopy+104 0x00007fb54782f1c8
  0x00007fb54782f1c2: mov    0x8(%rdi),%al
  0x00007fb54782f1c5: mov    %al,0x8(%rsi)
  0x00007fb54782f1c8: xor    %rax,%rax
  0x00007fb54782f1cb: vzeroupper 
  0x00007fb54782f1ce: leaveq 
  0x00007fb54782f1cf: retq   
  0x00007fb54782f1d0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  0x00007fb54782f1d6: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  0x00007fb54782f1dc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  0x00007fb54782f1e2: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
  0x00007fb54782f1e8: add    $0x8,%rdx
  0x00007fb54782f1ec: jle    Stub::jbyte_disjoint_arraycopy+112 0x00007fb54782f1d0
  0x00007fb54782f1ee: sub    $0x4,%rdx
  0x00007fb54782f1f2: jg     Stub::jbyte_disjoint_arraycopy+164 0x00007fb54782f204
  0x00007fb54782f1f4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0x00007fb54782f1fa: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
  0x00007fb54782f200: add    $0x4,%rdx
  0x00007fb54782f204: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f208: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f20c: sub    $0x4,%rdx
  0x00007fb54782f210: jl     Stub::jbyte_disjoint_arraycopy+29 0x00007fb54782f17d
  0x00007fb54782f216: jmpq   Stub::jbyte_disjoint_arraycopy+44 0x00007fb54782f18c

StubRoutines::jbyte_arraycopy [0x00007fb54782f220, 0x00007fb54782f2e6[ (198 bytes)
  0x00007fb54782f220: push   %rbp
  0x00007fb54782f221: mov    %rsp,%rbp
  0x00007fb54782f224: cmp    %rdi,%rsi
  0x00007fb54782f227: lea    (%rdi,%rdx,1),%rax
  0x00007fb54782f22b: jbe    Stub::jbyte_disjoint_arraycopy+4 0x00007fb54782f164
  0x00007fb54782f231: cmp    %rax,%rsi
  0x00007fb54782f234: jae    Stub::jbyte_disjoint_arraycopy+4 0x00007fb54782f164
  0x00007fb54782f23a: mov    %rdx,%rcx
  0x00007fb54782f23d: shr    $0x3,%rdx
  0x00007fb54782f241: test   $0x1,%ecx
  0x00007fb54782f247: je     Stub::jbyte_arraycopy+56 0x00007fb54782f258
  0x00007fb54782f24d: mov    -0x1(%rdi,%rcx,1),%al
  0x00007fb54782f251: mov    %al,-0x1(%rsi,%rcx,1)
  0x00007fb54782f255: dec    %rcx
  0x00007fb54782f258: test   $0x2,%ecx
  0x00007fb54782f25e: je     Stub::jbyte_arraycopy+78 0x00007fb54782f26e
  0x00007fb54782f264: mov    -0x2(%rdi,%rcx,1),%ax
  0x00007fb54782f269: mov    %ax,-0x2(%rsi,%rcx,1)
  0x00007fb54782f26e: test   $0x4,%ecx
  0x00007fb54782f274: je     Stub::jbyte_arraycopy+150 0x00007fb54782f2b6
  0x00007fb54782f27a: mov    (%rdi,%rdx,8),%eax
  0x00007fb54782f27d: mov    %eax,(%rsi,%rdx,8)
  0x00007fb54782f280: jmpq   Stub::jbyte_arraycopy+150 0x00007fb54782f2b6
  0x00007fb54782f285: mov    -0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f28a: mov    %rax,-0x8(%rsi,%rdx,8)
  0x00007fb54782f28f: dec    %rdx
  0x00007fb54782f292: jne    Stub::jbyte_arraycopy+101 0x00007fb54782f285
  0x00007fb54782f294: xor    %rax,%rax
  0x00007fb54782f297: vzeroupper 
  0x00007fb54782f29a: leaveq 
  0x00007fb54782f29b: retq   
  0x00007fb54782f29c: nopl   0x0(%rax)
  0x00007fb54782f2a0: vmovdqu 0x20(%rdi,%rdx,8),%ymm0
  0x00007fb54782f2a6: vmovdqu %ymm0,0x20(%rsi,%rdx,8)
  0x00007fb54782f2ac: vmovdqu (%rdi,%rdx,8),%ymm1
  0x00007fb54782f2b1: vmovdqu %ymm1,(%rsi,%rdx,8)
  0x00007fb54782f2b6: sub    $0x8,%rdx
  0x00007fb54782f2ba: jge    Stub::jbyte_arraycopy+128 0x00007fb54782f2a0
  0x00007fb54782f2bc: add    $0x4,%rdx
  0x00007fb54782f2c0: jl     Stub::jbyte_arraycopy+176 0x00007fb54782f2d0
  0x00007fb54782f2c2: vmovdqu (%rdi,%rdx,8),%ymm0
  0x00007fb54782f2c7: vmovdqu %ymm0,(%rsi,%rdx,8)
  0x00007fb54782f2cc: sub    $0x4,%rdx
  0x00007fb54782f2d0: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f2d4: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f2d8: add    $0x4,%rdx
  0x00007fb54782f2dc: jg     Stub::jbyte_arraycopy+101 0x00007fb54782f285
  0x00007fb54782f2de: xor    %rax,%rax
  0x00007fb54782f2e1: vzeroupper 
  0x00007fb54782f2e4: leaveq 
  0x00007fb54782f2e5: retq   

StubRoutines::jshort_disjoint_arraycopy [0x00007fb54782f300, 0x00007fb54782f3a8[ (168 bytes)
  0x00007fb54782f300: push   %rbp
  0x00007fb54782f301: mov    %rsp,%rbp
  0x00007fb54782f304: mov    %rdx,%rcx
  0x00007fb54782f307: shr    $0x2,%rdx
  0x00007fb54782f30b: lea    -0x8(%rdi,%rdx,8),%rdi
  0x00007fb54782f310: lea    -0x8(%rsi,%rdx,8),%rsi
  0x00007fb54782f315: neg    %rdx
  0x00007fb54782f318: jmpq   Stub::jshort_disjoint_arraycopy+120 0x00007fb54782f378
  0x00007fb54782f31d: mov    0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f322: mov    %rax,0x8(%rsi,%rdx,8)
  0x00007fb54782f327: inc    %rdx
  0x00007fb54782f32a: jne    Stub::jshort_disjoint_arraycopy+29 0x00007fb54782f31d
  0x00007fb54782f32c: test   $0x2,%ecx
  0x00007fb54782f332: je     Stub::jshort_disjoint_arraycopy+66 0x00007fb54782f342
  0x00007fb54782f334: mov    0x8(%rdi),%eax
  0x00007fb54782f337: mov    %eax,0x8(%rsi)
  0x00007fb54782f33a: add    $0x4,%rdi
  0x00007fb54782f33e: add    $0x4,%rsi
  0x00007fb54782f342: test   $0x1,%ecx
  0x00007fb54782f348: je     Stub::jshort_disjoint_arraycopy+82 0x00007fb54782f352
  0x00007fb54782f34a: mov    0x8(%rdi),%ax
  0x00007fb54782f34e: mov    %ax,0x8(%rsi)
  0x00007fb54782f352: xor    %rax,%rax
  0x00007fb54782f355: vzeroupper 
  0x00007fb54782f358: leaveq 
  0x00007fb54782f359: retq   
  0x00007fb54782f35a: nopw   0x0(%rax,%rax,1)
  0x00007fb54782f360: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  0x00007fb54782f366: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  0x00007fb54782f36c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  0x00007fb54782f372: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
  0x00007fb54782f378: add    $0x8,%rdx
  0x00007fb54782f37c: jle    Stub::jshort_disjoint_arraycopy+96 0x00007fb54782f360
  0x00007fb54782f37e: sub    $0x4,%rdx
  0x00007fb54782f382: jg     Stub::jshort_disjoint_arraycopy+148 0x00007fb54782f394
  0x00007fb54782f384: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0x00007fb54782f38a: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
  0x00007fb54782f390: add    $0x4,%rdx
  0x00007fb54782f394: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f398: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f39c: sub    $0x4,%rdx
  0x00007fb54782f3a0: jl     Stub::jshort_disjoint_arraycopy+29 0x00007fb54782f31d
  0x00007fb54782f3a6: jmp    Stub::jshort_disjoint_arraycopy+44 0x00007fb54782f32c

StubRoutines::jshort_arraycopy [0x00007fb54782f3c0, 0x00007fb54782f476[ (182 bytes)
  0x00007fb54782f3c0: push   %rbp
  0x00007fb54782f3c1: mov    %rsp,%rbp
  0x00007fb54782f3c4: cmp    %rdi,%rsi
  0x00007fb54782f3c7: lea    (%rdi,%rdx,2),%rax
  0x00007fb54782f3cb: jbe    Stub::jshort_disjoint_arraycopy+4 0x00007fb54782f304
  0x00007fb54782f3d1: cmp    %rax,%rsi
  0x00007fb54782f3d4: jae    Stub::jshort_disjoint_arraycopy+4 0x00007fb54782f304
  0x00007fb54782f3da: mov    %rdx,%rcx
  0x00007fb54782f3dd: shr    $0x2,%rdx
  0x00007fb54782f3e1: test   $0x1,%ecx
  0x00007fb54782f3e7: je     Stub::jshort_arraycopy+51 0x00007fb54782f3f3
  0x00007fb54782f3e9: mov    -0x2(%rdi,%rcx,2),%ax
  0x00007fb54782f3ee: mov    %ax,-0x2(%rsi,%rcx,2)
  0x00007fb54782f3f3: test   $0x2,%ecx
  0x00007fb54782f3f9: je     Stub::jshort_arraycopy+134 0x00007fb54782f446
  0x00007fb54782f3ff: mov    (%rdi,%rdx,8),%eax
  0x00007fb54782f402: mov    %eax,(%rsi,%rdx,8)
  0x00007fb54782f405: jmpq   Stub::jshort_arraycopy+134 0x00007fb54782f446
  0x00007fb54782f40a: mov    -0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f40f: mov    %rax,-0x8(%rsi,%rdx,8)
  0x00007fb54782f414: dec    %rdx
  0x00007fb54782f417: jne    Stub::jshort_arraycopy+74 0x00007fb54782f40a
  0x00007fb54782f419: xor    %rax,%rax
  0x00007fb54782f41c: vzeroupper 
  0x00007fb54782f41f: leaveq 
  0x00007fb54782f420: retq   
  0x00007fb54782f421: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782f42c: data16 data16 xchg %ax,%ax
  0x00007fb54782f430: vmovdqu 0x20(%rdi,%rdx,8),%ymm0
  0x00007fb54782f436: vmovdqu %ymm0,0x20(%rsi,%rdx,8)
  0x00007fb54782f43c: vmovdqu (%rdi,%rdx,8),%ymm1
  0x00007fb54782f441: vmovdqu %ymm1,(%rsi,%rdx,8)
  0x00007fb54782f446: sub    $0x8,%rdx
  0x00007fb54782f44a: jge    Stub::jshort_arraycopy+112 0x00007fb54782f430
  0x00007fb54782f44c: add    $0x4,%rdx
  0x00007fb54782f450: jl     Stub::jshort_arraycopy+160 0x00007fb54782f460
  0x00007fb54782f452: vmovdqu (%rdi,%rdx,8),%ymm0
  0x00007fb54782f457: vmovdqu %ymm0,(%rsi,%rdx,8)
  0x00007fb54782f45c: sub    $0x4,%rdx
  0x00007fb54782f460: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f464: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f468: add    $0x4,%rdx
  0x00007fb54782f46c: jg     Stub::jshort_arraycopy+74 0x00007fb54782f40a
  0x00007fb54782f46e: xor    %rax,%rax
  0x00007fb54782f471: vzeroupper 
  0x00007fb54782f474: leaveq 
  0x00007fb54782f475: retq   

StubRoutines::jint_disjoint_arraycopy [0x00007fb54782f480, 0x00007fb54782f514[ (148 bytes)
  0x00007fb54782f480: push   %rbp
  0x00007fb54782f481: mov    %rsp,%rbp
  0x00007fb54782f484: mov    %rdx,%rcx
  0x00007fb54782f487: shr    $0x1,%rdx
  0x00007fb54782f48b: lea    -0x8(%rdi,%rdx,8),%rdi
  0x00007fb54782f490: lea    -0x8(%rsi,%rdx,8),%rsi
  0x00007fb54782f495: neg    %rdx
  0x00007fb54782f498: jmpq   Stub::jint_disjoint_arraycopy+104 0x00007fb54782f4e8
  0x00007fb54782f49d: mov    0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f4a2: mov    %rax,0x8(%rsi,%rdx,8)
  0x00007fb54782f4a7: inc    %rdx
  0x00007fb54782f4aa: jne    Stub::jint_disjoint_arraycopy+29 0x00007fb54782f49d
  0x00007fb54782f4ac: test   $0x1,%ecx
  0x00007fb54782f4b2: je     Stub::jint_disjoint_arraycopy+58 0x00007fb54782f4ba
  0x00007fb54782f4b4: mov    0x8(%rdi),%eax
  0x00007fb54782f4b7: mov    %eax,0x8(%rsi)
  0x00007fb54782f4ba: vzeroupper 
  0x00007fb54782f4bd: xor    %rax,%rax
  0x00007fb54782f4c0: leaveq 
  0x00007fb54782f4c1: retq   
  0x00007fb54782f4c2: data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782f4cc: data16 data16 xchg %ax,%ax
  0x00007fb54782f4d0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  0x00007fb54782f4d6: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  0x00007fb54782f4dc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  0x00007fb54782f4e2: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
  0x00007fb54782f4e8: add    $0x8,%rdx
  0x00007fb54782f4ec: jle    Stub::jint_disjoint_arraycopy+80 0x00007fb54782f4d0
  0x00007fb54782f4ee: sub    $0x4,%rdx
  0x00007fb54782f4f2: jg     Stub::jint_disjoint_arraycopy+132 0x00007fb54782f504
  0x00007fb54782f4f4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0x00007fb54782f4fa: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
  0x00007fb54782f500: add    $0x4,%rdx
  0x00007fb54782f504: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f508: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f50c: sub    $0x4,%rdx
  0x00007fb54782f510: jl     Stub::jint_disjoint_arraycopy+29 0x00007fb54782f49d
  0x00007fb54782f512: jmp    Stub::jint_disjoint_arraycopy+44 0x00007fb54782f4ac

StubRoutines::jint_arraycopy [0x00007fb54782f520, 0x00007fb54782f5c6[ (166 bytes)
  0x00007fb54782f520: push   %rbp
  0x00007fb54782f521: mov    %rsp,%rbp
  0x00007fb54782f524: cmp    %rdi,%rsi
  0x00007fb54782f527: lea    (%rdi,%rdx,4),%rax
  0x00007fb54782f52b: jbe    Stub::jint_disjoint_arraycopy+4 0x00007fb54782f484
  0x00007fb54782f531: cmp    %rax,%rsi
  0x00007fb54782f534: jae    Stub::jint_disjoint_arraycopy+4 0x00007fb54782f484
  0x00007fb54782f53a: mov    %rdx,%rcx
  0x00007fb54782f53d: shr    $0x1,%rdx
  0x00007fb54782f541: test   $0x1,%ecx
  0x00007fb54782f547: je     Stub::jint_arraycopy+118 0x00007fb54782f596
  0x00007fb54782f54d: mov    -0x4(%rdi,%rcx,4),%eax
  0x00007fb54782f551: mov    %eax,-0x4(%rsi,%rcx,4)
  0x00007fb54782f555: jmpq   Stub::jint_arraycopy+118 0x00007fb54782f596
  0x00007fb54782f55a: mov    -0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f55f: mov    %rax,-0x8(%rsi,%rdx,8)
  0x00007fb54782f564: dec    %rdx
  0x00007fb54782f567: jne    Stub::jint_arraycopy+58 0x00007fb54782f55a
  0x00007fb54782f569: xor    %rax,%rax
  0x00007fb54782f56c: vzeroupper 
  0x00007fb54782f56f: leaveq 
  0x00007fb54782f570: retq   
  0x00007fb54782f571: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782f57c: data16 data16 xchg %ax,%ax
  0x00007fb54782f580: vmovdqu 0x20(%rdi,%rdx,8),%ymm0
  0x00007fb54782f586: vmovdqu %ymm0,0x20(%rsi,%rdx,8)
  0x00007fb54782f58c: vmovdqu (%rdi,%rdx,8),%ymm1
  0x00007fb54782f591: vmovdqu %ymm1,(%rsi,%rdx,8)
  0x00007fb54782f596: sub    $0x8,%rdx
  0x00007fb54782f59a: jge    Stub::jint_arraycopy+96 0x00007fb54782f580
  0x00007fb54782f59c: add    $0x4,%rdx
  0x00007fb54782f5a0: jl     Stub::jint_arraycopy+144 0x00007fb54782f5b0
  0x00007fb54782f5a2: vmovdqu (%rdi,%rdx,8),%ymm0
  0x00007fb54782f5a7: vmovdqu %ymm0,(%rsi,%rdx,8)
  0x00007fb54782f5ac: sub    $0x4,%rdx
  0x00007fb54782f5b0: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f5b4: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f5b8: add    $0x4,%rdx
  0x00007fb54782f5bc: jg     Stub::jint_arraycopy+58 0x00007fb54782f55a
  0x00007fb54782f5be: xor    %rax,%rax
  0x00007fb54782f5c1: vzeroupper 
  0x00007fb54782f5c4: leaveq 
  0x00007fb54782f5c5: retq   

StubRoutines::jlong_disjoint_arraycopy [0x00007fb54782f5e0, 0x00007fb54782f65a[ (122 bytes)
  0x00007fb54782f5e0: push   %rbp
  0x00007fb54782f5e1: mov    %rsp,%rbp
  0x00007fb54782f5e4: lea    -0x8(%rdi,%rdx,8),%rdi
  0x00007fb54782f5e9: lea    -0x8(%rsi,%rdx,8),%rcx
  0x00007fb54782f5ee: neg    %rdx
  0x00007fb54782f5f1: jmpq   Stub::jlong_disjoint_arraycopy+72 0x00007fb54782f628
  0x00007fb54782f5f6: mov    0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f5fb: mov    %rax,0x8(%rcx,%rdx,8)
  0x00007fb54782f600: inc    %rdx
  0x00007fb54782f603: jne    Stub::jlong_disjoint_arraycopy+22 0x00007fb54782f5f6
  0x00007fb54782f605: xor    %rax,%rax
  0x00007fb54782f608: vzeroupper 
  0x00007fb54782f60b: leaveq 
  0x00007fb54782f60c: retq   
  0x00007fb54782f60d: data16 xchg %ax,%ax
  0x00007fb54782f610: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  0x00007fb54782f616: vmovdqu %ymm0,-0x38(%rcx,%rdx,8)
  0x00007fb54782f61c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  0x00007fb54782f622: vmovdqu %ymm1,-0x18(%rcx,%rdx,8)
  0x00007fb54782f628: add    $0x8,%rdx
  0x00007fb54782f62c: jle    Stub::jlong_disjoint_arraycopy+48 0x00007fb54782f610
  0x00007fb54782f62e: sub    $0x4,%rdx
  0x00007fb54782f632: jg     Stub::jlong_disjoint_arraycopy+100 0x00007fb54782f644
  0x00007fb54782f634: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0x00007fb54782f63a: vmovdqu %ymm0,-0x18(%rcx,%rdx,8)
  0x00007fb54782f640: add    $0x4,%rdx
  0x00007fb54782f644: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f648: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f64c: sub    $0x4,%rdx
  0x00007fb54782f650: jl     Stub::jlong_disjoint_arraycopy+22 0x00007fb54782f5f6
  0x00007fb54782f652: vzeroupper 
  0x00007fb54782f655: xor    %rax,%rax
  0x00007fb54782f658: leaveq 
  0x00007fb54782f659: retq   

StubRoutines::jlong_arraycopy [0x00007fb54782f660, 0x00007fb54782f6e6[ (134 bytes)
  0x00007fb54782f660: push   %rbp
  0x00007fb54782f661: mov    %rsp,%rbp
  0x00007fb54782f664: cmp    %rdi,%rsi
  0x00007fb54782f667: lea    (%rdi,%rdx,8),%rax
  0x00007fb54782f66b: jbe    Stub::jlong_disjoint_arraycopy+4 0x00007fb54782f5e4
  0x00007fb54782f671: cmp    %rax,%rsi
  0x00007fb54782f674: jae    Stub::jlong_disjoint_arraycopy+4 0x00007fb54782f5e4
  0x00007fb54782f67a: jmpq   Stub::jlong_arraycopy+86 0x00007fb54782f6b6
  0x00007fb54782f67f: mov    -0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f684: mov    %rax,-0x8(%rsi,%rdx,8)
  0x00007fb54782f689: dec    %rdx
  0x00007fb54782f68c: jne    Stub::jlong_arraycopy+31 0x00007fb54782f67f
  0x00007fb54782f68e: xor    %rax,%rax
  0x00007fb54782f691: vzeroupper 
  0x00007fb54782f694: leaveq 
  0x00007fb54782f695: retq   
  0x00007fb54782f696: data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782f6a0: vmovdqu 0x20(%rdi,%rdx,8),%ymm0
  0x00007fb54782f6a6: vmovdqu %ymm0,0x20(%rsi,%rdx,8)
  0x00007fb54782f6ac: vmovdqu (%rdi,%rdx,8),%ymm1
  0x00007fb54782f6b1: vmovdqu %ymm1,(%rsi,%rdx,8)
  0x00007fb54782f6b6: sub    $0x8,%rdx
  0x00007fb54782f6ba: jge    Stub::jlong_arraycopy+64 0x00007fb54782f6a0
  0x00007fb54782f6bc: add    $0x4,%rdx
  0x00007fb54782f6c0: jl     Stub::jlong_arraycopy+112 0x00007fb54782f6d0
  0x00007fb54782f6c2: vmovdqu (%rdi,%rdx,8),%ymm0
  0x00007fb54782f6c7: vmovdqu %ymm0,(%rsi,%rdx,8)
  0x00007fb54782f6cc: sub    $0x4,%rdx
  0x00007fb54782f6d0: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f6d4: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f6d8: add    $0x4,%rdx
  0x00007fb54782f6dc: jg     Stub::jlong_arraycopy+31 0x00007fb54782f67f
  0x00007fb54782f6de: vzeroupper 
  0x00007fb54782f6e1: xor    %rax,%rax
  0x00007fb54782f6e4: leaveq 
  0x00007fb54782f6e5: retq   

StubRoutines::oop_disjoint_arraycopy [0x00007fb54782f700, 0x00007fb54782f93b[ (571 bytes)
  0x00007fb54782f700: push   %rbp
  0x00007fb54782f701: mov    %rsp,%rbp
  0x00007fb54782f704: mov    %rsi,%r11
  0x00007fb54782f707: cmpb   $0x0,0x30(%r15)
  0x00007fb54782f70c: je     Stub::oop_disjoint_arraycopy+226 0x00007fb54782f7e2
  0x00007fb54782f712: mov    %rsp,-0x28(%rsp)
  0x00007fb54782f717: sub    $0x80,%rsp
  0x00007fb54782f71e: mov    %rax,0x78(%rsp)
  0x00007fb54782f723: mov    %rcx,0x70(%rsp)
  0x00007fb54782f728: mov    %rdx,0x68(%rsp)
  0x00007fb54782f72d: mov    %rbx,0x60(%rsp)
  0x00007fb54782f732: mov    %rbp,0x50(%rsp)
  0x00007fb54782f737: mov    %rsi,0x48(%rsp)
  0x00007fb54782f73c: mov    %rdi,0x40(%rsp)
  0x00007fb54782f741: mov    %r8,0x38(%rsp)
  0x00007fb54782f746: mov    %r9,0x30(%rsp)
  0x00007fb54782f74b: mov    %r10,0x28(%rsp)
  0x00007fb54782f750: mov    %r11,0x20(%rsp)
  0x00007fb54782f755: mov    %r12,0x18(%rsp)
  0x00007fb54782f75a: mov    %r13,0x10(%rsp)
  0x00007fb54782f75f: mov    %r14,0x8(%rsp)
  0x00007fb54782f764: mov    %r15,(%rsp)
  0x00007fb54782f768: mov    %rsi,%rdi
  0x00007fb54782f76b: mov    %rdx,%rsi
  0x00007fb54782f76e: test   $0xf,%esp
  0x00007fb54782f774: je     Stub::oop_disjoint_arraycopy+140 0x00007fb54782f78c
  0x00007fb54782f77a: sub    $0x8,%rsp
  0x00007fb54782f77e: callq  0x00007fb564baa3c0 = G1BarrierSetRuntime::write_ref_array_pre_narrow_oop_entry(unsigned int*, unsigned long)
  0x00007fb54782f783: add    $0x8,%rsp
  0x00007fb54782f787: jmpq   Stub::oop_disjoint_arraycopy+145 0x00007fb54782f791
  0x00007fb54782f78c: callq  0x00007fb564baa3c0 = G1BarrierSetRuntime::write_ref_array_pre_narrow_oop_entry(unsigned int*, unsigned long)
  0x00007fb54782f791: mov    (%rsp),%r15
  0x00007fb54782f795: mov    0x8(%rsp),%r14
  0x00007fb54782f79a: mov    0x10(%rsp),%r13
  0x00007fb54782f79f: mov    0x18(%rsp),%r12
  0x00007fb54782f7a4: mov    0x20(%rsp),%r11
  0x00007fb54782f7a9: mov    0x28(%rsp),%r10
  0x00007fb54782f7ae: mov    0x30(%rsp),%r9
  0x00007fb54782f7b3: mov    0x38(%rsp),%r8
  0x00007fb54782f7b8: mov    0x40(%rsp),%rdi
  0x00007fb54782f7bd: mov    0x48(%rsp),%rsi
  0x00007fb54782f7c2: mov    0x50(%rsp),%rbp
  0x00007fb54782f7c7: mov    0x60(%rsp),%rbx
  0x00007fb54782f7cc: mov    0x68(%rsp),%rdx
  0x00007fb54782f7d1: mov    0x70(%rsp),%rcx
  0x00007fb54782f7d6: mov    0x78(%rsp),%rax
  0x00007fb54782f7db: add    $0x80,%rsp
  0x00007fb54782f7e2: mov    %rdx,%rcx
  0x00007fb54782f7e5: shr    $0x1,%rdx
  0x00007fb54782f7e9: lea    -0x8(%rdi,%rdx,8),%rdi
  0x00007fb54782f7ee: lea    -0x8(%rsi,%rdx,8),%rsi
  0x00007fb54782f7f3: neg    %rdx
  0x00007fb54782f7f6: jmpq   Stub::oop_disjoint_arraycopy+520 0x00007fb54782f908
  0x00007fb54782f7fb: mov    0x8(%rdi,%rdx,8),%rax
  0x00007fb54782f800: mov    %rax,0x8(%rsi,%rdx,8)
  0x00007fb54782f805: inc    %rdx
  0x00007fb54782f808: jne    Stub::oop_disjoint_arraycopy+251 0x00007fb54782f7fb
  0x00007fb54782f80a: test   $0x1,%ecx
  0x00007fb54782f810: je     Stub::oop_disjoint_arraycopy+280 0x00007fb54782f818
  0x00007fb54782f812: mov    0x8(%rdi),%eax
  0x00007fb54782f815: mov    %eax,0x8(%rsi)
  0x00007fb54782f818: mov    %rsp,-0x28(%rsp)
  0x00007fb54782f81d: sub    $0x80,%rsp
  0x00007fb54782f824: mov    %rax,0x78(%rsp)
  0x00007fb54782f829: mov    %rcx,0x70(%rsp)
  0x00007fb54782f82e: mov    %rdx,0x68(%rsp)
  0x00007fb54782f833: mov    %rbx,0x60(%rsp)
  0x00007fb54782f838: mov    %rbp,0x50(%rsp)
  0x00007fb54782f83d: mov    %rsi,0x48(%rsp)
  0x00007fb54782f842: mov    %rdi,0x40(%rsp)
  0x00007fb54782f847: mov    %r8,0x38(%rsp)
  0x00007fb54782f84c: mov    %r9,0x30(%rsp)
  0x00007fb54782f851: mov    %r10,0x28(%rsp)
  0x00007fb54782f856: mov    %r11,0x20(%rsp)
  0x00007fb54782f85b: mov    %r12,0x18(%rsp)
  0x00007fb54782f860: mov    %r13,0x10(%rsp)
  0x00007fb54782f865: mov    %r14,0x8(%rsp)
  0x00007fb54782f86a: mov    %r15,(%rsp)
  0x00007fb54782f86e: mov    %r11,%rdi
  0x00007fb54782f871: mov    %rcx,%rsi
  0x00007fb54782f874: test   $0xf,%esp
  0x00007fb54782f87a: je     Stub::oop_disjoint_arraycopy+402 0x00007fb54782f892
  0x00007fb54782f880: sub    $0x8,%rsp
  0x00007fb54782f884: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54782f889: add    $0x8,%rsp
  0x00007fb54782f88d: jmpq   Stub::oop_disjoint_arraycopy+407 0x00007fb54782f897
  0x00007fb54782f892: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54782f897: mov    (%rsp),%r15
  0x00007fb54782f89b: mov    0x8(%rsp),%r14
  0x00007fb54782f8a0: mov    0x10(%rsp),%r13
  0x00007fb54782f8a5: mov    0x18(%rsp),%r12
  0x00007fb54782f8aa: mov    0x20(%rsp),%r11
  0x00007fb54782f8af: mov    0x28(%rsp),%r10
  0x00007fb54782f8b4: mov    0x30(%rsp),%r9
  0x00007fb54782f8b9: mov    0x38(%rsp),%r8
  0x00007fb54782f8be: mov    0x40(%rsp),%rdi
  0x00007fb54782f8c3: mov    0x48(%rsp),%rsi
  0x00007fb54782f8c8: mov    0x50(%rsp),%rbp
  0x00007fb54782f8cd: mov    0x60(%rsp),%rbx
  0x00007fb54782f8d2: mov    0x68(%rsp),%rdx
  0x00007fb54782f8d7: mov    0x70(%rsp),%rcx
  0x00007fb54782f8dc: mov    0x78(%rsp),%rax
  0x00007fb54782f8e1: add    $0x80,%rsp
  0x00007fb54782f8e8: vzeroupper 
  0x00007fb54782f8eb: xor    %rax,%rax
  0x00007fb54782f8ee: leaveq 
  0x00007fb54782f8ef: retq   
  0x00007fb54782f8f0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  0x00007fb54782f8f6: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  0x00007fb54782f8fc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  0x00007fb54782f902: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
  0x00007fb54782f908: add    $0x8,%rdx
  0x00007fb54782f90c: jle    Stub::oop_disjoint_arraycopy+496 0x00007fb54782f8f0
  0x00007fb54782f90e: sub    $0x4,%rdx
  0x00007fb54782f912: jg     Stub::oop_disjoint_arraycopy+548 0x00007fb54782f924
  0x00007fb54782f914: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0x00007fb54782f91a: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
  0x00007fb54782f920: add    $0x4,%rdx
  0x00007fb54782f924: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782f928: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782f92c: sub    $0x4,%rdx
  0x00007fb54782f930: jl     Stub::oop_disjoint_arraycopy+251 0x00007fb54782f7fb
  0x00007fb54782f936: jmpq   Stub::oop_disjoint_arraycopy+266 0x00007fb54782f80a

StubRoutines::oop_arraycopy [0x00007fb54782f940, 0x00007fb54782fb96[ (598 bytes)
  0x00007fb54782f940: push   %rbp
  0x00007fb54782f941: mov    %rsp,%rbp
  0x00007fb54782f944: cmp    %rdi,%rsi
  0x00007fb54782f947: lea    (%rdi,%rdx,4),%rax
  0x00007fb54782f94b: jbe    Stub::oop_disjoint_arraycopy+4 0x00007fb54782f704
  0x00007fb54782f951: cmp    %rax,%rsi
  0x00007fb54782f954: jae    Stub::oop_disjoint_arraycopy+4 0x00007fb54782f704
  0x00007fb54782f95a: cmpb   $0x0,0x30(%r15)
  0x00007fb54782f95f: je     Stub::oop_arraycopy+245 0x00007fb54782fa35
  0x00007fb54782f965: mov    %rsp,-0x28(%rsp)
  0x00007fb54782f96a: sub    $0x80,%rsp
  0x00007fb54782f971: mov    %rax,0x78(%rsp)
  0x00007fb54782f976: mov    %rcx,0x70(%rsp)
  0x00007fb54782f97b: mov    %rdx,0x68(%rsp)
  0x00007fb54782f980: mov    %rbx,0x60(%rsp)
  0x00007fb54782f985: mov    %rbp,0x50(%rsp)
  0x00007fb54782f98a: mov    %rsi,0x48(%rsp)
  0x00007fb54782f98f: mov    %rdi,0x40(%rsp)
  0x00007fb54782f994: mov    %r8,0x38(%rsp)
  0x00007fb54782f999: mov    %r9,0x30(%rsp)
  0x00007fb54782f99e: mov    %r10,0x28(%rsp)
  0x00007fb54782f9a3: mov    %r11,0x20(%rsp)
  0x00007fb54782f9a8: mov    %r12,0x18(%rsp)
  0x00007fb54782f9ad: mov    %r13,0x10(%rsp)
  0x00007fb54782f9b2: mov    %r14,0x8(%rsp)
  0x00007fb54782f9b7: mov    %r15,(%rsp)
  0x00007fb54782f9bb: mov    %rsi,%rdi
  0x00007fb54782f9be: mov    %rdx,%rsi
  0x00007fb54782f9c1: test   $0xf,%esp
  0x00007fb54782f9c7: je     Stub::oop_arraycopy+159 0x00007fb54782f9df
  0x00007fb54782f9cd: sub    $0x8,%rsp
  0x00007fb54782f9d1: callq  0x00007fb564baa3c0 = G1BarrierSetRuntime::write_ref_array_pre_narrow_oop_entry(unsigned int*, unsigned long)
  0x00007fb54782f9d6: add    $0x8,%rsp
  0x00007fb54782f9da: jmpq   Stub::oop_arraycopy+164 0x00007fb54782f9e4
  0x00007fb54782f9df: callq  0x00007fb564baa3c0 = G1BarrierSetRuntime::write_ref_array_pre_narrow_oop_entry(unsigned int*, unsigned long)
  0x00007fb54782f9e4: mov    (%rsp),%r15
  0x00007fb54782f9e8: mov    0x8(%rsp),%r14
  0x00007fb54782f9ed: mov    0x10(%rsp),%r13
  0x00007fb54782f9f2: mov    0x18(%rsp),%r12
  0x00007fb54782f9f7: mov    0x20(%rsp),%r11
  0x00007fb54782f9fc: mov    0x28(%rsp),%r10
  0x00007fb54782fa01: mov    0x30(%rsp),%r9
  0x00007fb54782fa06: mov    0x38(%rsp),%r8
  0x00007fb54782fa0b: mov    0x40(%rsp),%rdi
  0x00007fb54782fa10: mov    0x48(%rsp),%rsi
  0x00007fb54782fa15: mov    0x50(%rsp),%rbp
  0x00007fb54782fa1a: mov    0x60(%rsp),%rbx
  0x00007fb54782fa1f: mov    0x68(%rsp),%rdx
  0x00007fb54782fa24: mov    0x70(%rsp),%rcx
  0x00007fb54782fa29: mov    0x78(%rsp),%rax
  0x00007fb54782fa2e: add    $0x80,%rsp
  0x00007fb54782fa35: mov    %rdx,%rcx
  0x00007fb54782fa38: shr    $0x1,%rdx
  0x00007fb54782fa3c: test   $0x1,%ecx
  0x00007fb54782fa42: je     Stub::oop_arraycopy+342 0x00007fb54782fa96
  0x00007fb54782fa48: mov    -0x4(%rdi,%rcx,4),%eax
  0x00007fb54782fa4c: mov    %eax,-0x4(%rsi,%rcx,4)
  0x00007fb54782fa50: jmpq   Stub::oop_arraycopy+342 0x00007fb54782fa96
  0x00007fb54782fa55: mov    -0x8(%rdi,%rdx,8),%rax
  0x00007fb54782fa5a: mov    %rax,-0x8(%rsi,%rdx,8)
  0x00007fb54782fa5f: dec    %rdx
  0x00007fb54782fa62: jne    Stub::oop_arraycopy+277 0x00007fb54782fa55
  0x00007fb54782fa64: jmpq   Stub::oop_arraycopy+382 0x00007fb54782fabe
  0x00007fb54782fa69: xor    %rax,%rax
  0x00007fb54782fa6c: vzeroupper 
  0x00007fb54782fa6f: leaveq 
  0x00007fb54782fa70: retq   
  0x00007fb54782fa71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782fa7c: data16 data16 xchg %ax,%ax
  0x00007fb54782fa80: vmovdqu 0x20(%rdi,%rdx,8),%ymm0
  0x00007fb54782fa86: vmovdqu %ymm0,0x20(%rsi,%rdx,8)
  0x00007fb54782fa8c: vmovdqu (%rdi,%rdx,8),%ymm1
  0x00007fb54782fa91: vmovdqu %ymm1,(%rsi,%rdx,8)
  0x00007fb54782fa96: sub    $0x8,%rdx
  0x00007fb54782fa9a: jge    Stub::oop_arraycopy+320 0x00007fb54782fa80
  0x00007fb54782fa9c: add    $0x4,%rdx
  0x00007fb54782faa0: jl     Stub::oop_arraycopy+368 0x00007fb54782fab0
  0x00007fb54782faa2: vmovdqu (%rdi,%rdx,8),%ymm0
  0x00007fb54782faa7: vmovdqu %ymm0,(%rsi,%rdx,8)
  0x00007fb54782faac: sub    $0x4,%rdx
  0x00007fb54782fab0: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782fab4: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782fab8: add    $0x4,%rdx
  0x00007fb54782fabc: jg     Stub::oop_arraycopy+277 0x00007fb54782fa55
  0x00007fb54782fabe: mov    %rsp,-0x28(%rsp)
  0x00007fb54782fac3: sub    $0x80,%rsp
  0x00007fb54782faca: mov    %rax,0x78(%rsp)
  0x00007fb54782facf: mov    %rcx,0x70(%rsp)
  0x00007fb54782fad4: mov    %rdx,0x68(%rsp)
  0x00007fb54782fad9: mov    %rbx,0x60(%rsp)
  0x00007fb54782fade: mov    %rbp,0x50(%rsp)
  0x00007fb54782fae3: mov    %rsi,0x48(%rsp)
  0x00007fb54782fae8: mov    %rdi,0x40(%rsp)
  0x00007fb54782faed: mov    %r8,0x38(%rsp)
  0x00007fb54782faf2: mov    %r9,0x30(%rsp)
  0x00007fb54782faf7: mov    %r10,0x28(%rsp)
  0x00007fb54782fafc: mov    %r11,0x20(%rsp)
  0x00007fb54782fb01: mov    %r12,0x18(%rsp)
  0x00007fb54782fb06: mov    %r13,0x10(%rsp)
  0x00007fb54782fb0b: mov    %r14,0x8(%rsp)
  0x00007fb54782fb10: mov    %r15,(%rsp)
  0x00007fb54782fb14: mov    %rsi,%rdi
  0x00007fb54782fb17: mov    %rcx,%rsi
  0x00007fb54782fb1a: test   $0xf,%esp
  0x00007fb54782fb20: je     Stub::oop_arraycopy+504 0x00007fb54782fb38
  0x00007fb54782fb26: sub    $0x8,%rsp
  0x00007fb54782fb2a: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54782fb2f: add    $0x8,%rsp
  0x00007fb54782fb33: jmpq   Stub::oop_arraycopy+509 0x00007fb54782fb3d
  0x00007fb54782fb38: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54782fb3d: mov    (%rsp),%r15
  0x00007fb54782fb41: mov    0x8(%rsp),%r14
  0x00007fb54782fb46: mov    0x10(%rsp),%r13
  0x00007fb54782fb4b: mov    0x18(%rsp),%r12
  0x00007fb54782fb50: mov    0x20(%rsp),%r11
  0x00007fb54782fb55: mov    0x28(%rsp),%r10
  0x00007fb54782fb5a: mov    0x30(%rsp),%r9
  0x00007fb54782fb5f: mov    0x38(%rsp),%r8
  0x00007fb54782fb64: mov    0x40(%rsp),%rdi
  0x00007fb54782fb69: mov    0x48(%rsp),%rsi
  0x00007fb54782fb6e: mov    0x50(%rsp),%rbp
  0x00007fb54782fb73: mov    0x60(%rsp),%rbx
  0x00007fb54782fb78: mov    0x68(%rsp),%rdx
  0x00007fb54782fb7d: mov    0x70(%rsp),%rcx
  0x00007fb54782fb82: mov    0x78(%rsp),%rax
  0x00007fb54782fb87: add    $0x80,%rsp
  0x00007fb54782fb8e: xor    %rax,%rax
  0x00007fb54782fb91: vzeroupper 
  0x00007fb54782fb94: leaveq 
  0x00007fb54782fb95: retq   

StubRoutines::oop_disjoint_arraycopy_uninit [0x00007fb54782fba0, 0x00007fb54782fd0b[ (363 bytes)
  0x00007fb54782fba0: push   %rbp
  0x00007fb54782fba1: mov    %rsp,%rbp
  0x00007fb54782fba4: mov    %rsi,%r11
  0x00007fb54782fba7: mov    %rdx,%rcx
  0x00007fb54782fbaa: shr    $0x1,%rdx
  0x00007fb54782fbae: lea    -0x8(%rdi,%rdx,8),%rdi
  0x00007fb54782fbb3: lea    -0x8(%rsi,%rdx,8),%rsi
  0x00007fb54782fbb8: neg    %rdx
  0x00007fb54782fbbb: jmpq   Stub::oop_disjoint_arraycopy_uninit+312 0x00007fb54782fcd8
  0x00007fb54782fbc0: mov    0x8(%rdi,%rdx,8),%rax
  0x00007fb54782fbc5: mov    %rax,0x8(%rsi,%rdx,8)
  0x00007fb54782fbca: inc    %rdx
  0x00007fb54782fbcd: jne    Stub::oop_disjoint_arraycopy_uninit+32 0x00007fb54782fbc0
  0x00007fb54782fbcf: test   $0x1,%ecx
  0x00007fb54782fbd5: je     Stub::oop_disjoint_arraycopy_uninit+61 0x00007fb54782fbdd
  0x00007fb54782fbd7: mov    0x8(%rdi),%eax
  0x00007fb54782fbda: mov    %eax,0x8(%rsi)
  0x00007fb54782fbdd: mov    %rsp,-0x28(%rsp)
  0x00007fb54782fbe2: sub    $0x80,%rsp
  0x00007fb54782fbe9: mov    %rax,0x78(%rsp)
  0x00007fb54782fbee: mov    %rcx,0x70(%rsp)
  0x00007fb54782fbf3: mov    %rdx,0x68(%rsp)
  0x00007fb54782fbf8: mov    %rbx,0x60(%rsp)
  0x00007fb54782fbfd: mov    %rbp,0x50(%rsp)
  0x00007fb54782fc02: mov    %rsi,0x48(%rsp)
  0x00007fb54782fc07: mov    %rdi,0x40(%rsp)
  0x00007fb54782fc0c: mov    %r8,0x38(%rsp)
  0x00007fb54782fc11: mov    %r9,0x30(%rsp)
  0x00007fb54782fc16: mov    %r10,0x28(%rsp)
  0x00007fb54782fc1b: mov    %r11,0x20(%rsp)
  0x00007fb54782fc20: mov    %r12,0x18(%rsp)
  0x00007fb54782fc25: mov    %r13,0x10(%rsp)
  0x00007fb54782fc2a: mov    %r14,0x8(%rsp)
  0x00007fb54782fc2f: mov    %r15,(%rsp)
  0x00007fb54782fc33: mov    %r11,%rdi
  0x00007fb54782fc36: mov    %rcx,%rsi
  0x00007fb54782fc39: test   $0xf,%esp
  0x00007fb54782fc3f: je     Stub::oop_disjoint_arraycopy_uninit+183 0x00007fb54782fc57
  0x00007fb54782fc45: sub    $0x8,%rsp
  0x00007fb54782fc49: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54782fc4e: add    $0x8,%rsp
  0x00007fb54782fc52: jmpq   Stub::oop_disjoint_arraycopy_uninit+188 0x00007fb54782fc5c
  0x00007fb54782fc57: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54782fc5c: mov    (%rsp),%r15
  0x00007fb54782fc60: mov    0x8(%rsp),%r14
  0x00007fb54782fc65: mov    0x10(%rsp),%r13
  0x00007fb54782fc6a: mov    0x18(%rsp),%r12
  0x00007fb54782fc6f: mov    0x20(%rsp),%r11
  0x00007fb54782fc74: mov    0x28(%rsp),%r10
  0x00007fb54782fc79: mov    0x30(%rsp),%r9
  0x00007fb54782fc7e: mov    0x38(%rsp),%r8
  0x00007fb54782fc83: mov    0x40(%rsp),%rdi
  0x00007fb54782fc88: mov    0x48(%rsp),%rsi
  0x00007fb54782fc8d: mov    0x50(%rsp),%rbp
  0x00007fb54782fc92: mov    0x60(%rsp),%rbx
  0x00007fb54782fc97: mov    0x68(%rsp),%rdx
  0x00007fb54782fc9c: mov    0x70(%rsp),%rcx
  0x00007fb54782fca1: mov    0x78(%rsp),%rax
  0x00007fb54782fca6: add    $0x80,%rsp
  0x00007fb54782fcad: vzeroupper 
  0x00007fb54782fcb0: xor    %rax,%rax
  0x00007fb54782fcb3: leaveq 
  0x00007fb54782fcb4: retq   
  0x00007fb54782fcb5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782fcc0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  0x00007fb54782fcc6: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  0x00007fb54782fccc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  0x00007fb54782fcd2: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
  0x00007fb54782fcd8: add    $0x8,%rdx
  0x00007fb54782fcdc: jle    Stub::oop_disjoint_arraycopy_uninit+288 0x00007fb54782fcc0
  0x00007fb54782fcde: sub    $0x4,%rdx
  0x00007fb54782fce2: jg     Stub::oop_disjoint_arraycopy_uninit+340 0x00007fb54782fcf4
  0x00007fb54782fce4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0x00007fb54782fcea: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
  0x00007fb54782fcf0: add    $0x4,%rdx
  0x00007fb54782fcf4: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782fcf8: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782fcfc: sub    $0x4,%rdx
  0x00007fb54782fd00: jl     Stub::oop_disjoint_arraycopy_uninit+32 0x00007fb54782fbc0
  0x00007fb54782fd06: jmpq   Stub::oop_disjoint_arraycopy_uninit+47 0x00007fb54782fbcf

StubRoutines::oop_arraycopy_uninit [0x00007fb54782fd20, 0x00007fb54782fe96[ (374 bytes)
  0x00007fb54782fd20: push   %rbp
  0x00007fb54782fd21: mov    %rsp,%rbp
  0x00007fb54782fd24: cmp    %rdi,%rsi
  0x00007fb54782fd27: lea    (%rdi,%rdx,4),%rax
  0x00007fb54782fd2b: jbe    Stub::oop_disjoint_arraycopy_uninit+4 0x00007fb54782fba4
  0x00007fb54782fd31: cmp    %rax,%rsi
  0x00007fb54782fd34: jae    Stub::oop_disjoint_arraycopy_uninit+4 0x00007fb54782fba4
  0x00007fb54782fd3a: mov    %rdx,%rcx
  0x00007fb54782fd3d: shr    $0x1,%rdx
  0x00007fb54782fd41: test   $0x1,%ecx
  0x00007fb54782fd47: je     Stub::oop_arraycopy_uninit+118 0x00007fb54782fd96
  0x00007fb54782fd4d: mov    -0x4(%rdi,%rcx,4),%eax
  0x00007fb54782fd51: mov    %eax,-0x4(%rsi,%rcx,4)
  0x00007fb54782fd55: jmpq   Stub::oop_arraycopy_uninit+118 0x00007fb54782fd96
  0x00007fb54782fd5a: mov    -0x8(%rdi,%rdx,8),%rax
  0x00007fb54782fd5f: mov    %rax,-0x8(%rsi,%rdx,8)
  0x00007fb54782fd64: dec    %rdx
  0x00007fb54782fd67: jne    Stub::oop_arraycopy_uninit+58 0x00007fb54782fd5a
  0x00007fb54782fd69: jmpq   Stub::oop_arraycopy_uninit+158 0x00007fb54782fdbe
  0x00007fb54782fd6e: xor    %rax,%rax
  0x00007fb54782fd71: vzeroupper 
  0x00007fb54782fd74: leaveq 
  0x00007fb54782fd75: retq   
  0x00007fb54782fd76: data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782fd80: vmovdqu 0x20(%rdi,%rdx,8),%ymm0
  0x00007fb54782fd86: vmovdqu %ymm0,0x20(%rsi,%rdx,8)
  0x00007fb54782fd8c: vmovdqu (%rdi,%rdx,8),%ymm1
  0x00007fb54782fd91: vmovdqu %ymm1,(%rsi,%rdx,8)
  0x00007fb54782fd96: sub    $0x8,%rdx
  0x00007fb54782fd9a: jge    Stub::oop_arraycopy_uninit+96 0x00007fb54782fd80
  0x00007fb54782fd9c: add    $0x4,%rdx
  0x00007fb54782fda0: jl     Stub::oop_arraycopy_uninit+144 0x00007fb54782fdb0
  0x00007fb54782fda2: vmovdqu (%rdi,%rdx,8),%ymm0
  0x00007fb54782fda7: vmovdqu %ymm0,(%rsi,%rdx,8)
  0x00007fb54782fdac: sub    $0x4,%rdx
  0x00007fb54782fdb0: vpxor  %ymm0,%ymm0,%ymm0
  0x00007fb54782fdb4: vpxor  %ymm1,%ymm1,%ymm1
  0x00007fb54782fdb8: add    $0x4,%rdx
  0x00007fb54782fdbc: jg     Stub::oop_arraycopy_uninit+58 0x00007fb54782fd5a
  0x00007fb54782fdbe: mov    %rsp,-0x28(%rsp)
  0x00007fb54782fdc3: sub    $0x80,%rsp
  0x00007fb54782fdca: mov    %rax,0x78(%rsp)
  0x00007fb54782fdcf: mov    %rcx,0x70(%rsp)
  0x00007fb54782fdd4: mov    %rdx,0x68(%rsp)
  0x00007fb54782fdd9: mov    %rbx,0x60(%rsp)
  0x00007fb54782fdde: mov    %rbp,0x50(%rsp)
  0x00007fb54782fde3: mov    %rsi,0x48(%rsp)
  0x00007fb54782fde8: mov    %rdi,0x40(%rsp)
  0x00007fb54782fded: mov    %r8,0x38(%rsp)
  0x00007fb54782fdf2: mov    %r9,0x30(%rsp)
  0x00007fb54782fdf7: mov    %r10,0x28(%rsp)
  0x00007fb54782fdfc: mov    %r11,0x20(%rsp)
  0x00007fb54782fe01: mov    %r12,0x18(%rsp)
  0x00007fb54782fe06: mov    %r13,0x10(%rsp)
  0x00007fb54782fe0b: mov    %r14,0x8(%rsp)
  0x00007fb54782fe10: mov    %r15,(%rsp)
  0x00007fb54782fe14: mov    %rsi,%rdi
  0x00007fb54782fe17: mov    %rcx,%rsi
  0x00007fb54782fe1a: test   $0xf,%esp
  0x00007fb54782fe20: je     Stub::oop_arraycopy_uninit+280 0x00007fb54782fe38
  0x00007fb54782fe26: sub    $0x8,%rsp
  0x00007fb54782fe2a: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54782fe2f: add    $0x8,%rsp
  0x00007fb54782fe33: jmpq   Stub::oop_arraycopy_uninit+285 0x00007fb54782fe3d
  0x00007fb54782fe38: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54782fe3d: mov    (%rsp),%r15
  0x00007fb54782fe41: mov    0x8(%rsp),%r14
  0x00007fb54782fe46: mov    0x10(%rsp),%r13
  0x00007fb54782fe4b: mov    0x18(%rsp),%r12
  0x00007fb54782fe50: mov    0x20(%rsp),%r11
  0x00007fb54782fe55: mov    0x28(%rsp),%r10
  0x00007fb54782fe5a: mov    0x30(%rsp),%r9
  0x00007fb54782fe5f: mov    0x38(%rsp),%r8
  0x00007fb54782fe64: mov    0x40(%rsp),%rdi
  0x00007fb54782fe69: mov    0x48(%rsp),%rsi
  0x00007fb54782fe6e: mov    0x50(%rsp),%rbp
  0x00007fb54782fe73: mov    0x60(%rsp),%rbx
  0x00007fb54782fe78: mov    0x68(%rsp),%rdx
  0x00007fb54782fe7d: mov    0x70(%rsp),%rcx
  0x00007fb54782fe82: mov    0x78(%rsp),%rax
  0x00007fb54782fe87: add    $0x80,%rsp
  0x00007fb54782fe8e: xor    %rax,%rax
  0x00007fb54782fe91: vzeroupper 
  0x00007fb54782fe94: leaveq 
  0x00007fb54782fe95: retq   

StubRoutines::checkcast_arraycopy [0x00007fb54782fea0, 0x00007fb547830105[ (613 bytes)
  0x00007fb54782fea0: push   %rbp
  0x00007fb54782fea1: mov    %rsp,%rbp
  0x00007fb54782fea4: sub    $0x10,%rsp
  0x00007fb54782fea8: mov    %r13,(%rsp)
  0x00007fb54782feac: mov    %r14,0x8(%rsp)
  0x00007fb54782feb1: cmpb   $0x0,0x30(%r15)
  0x00007fb54782feb6: je     Stub::checkcast_arraycopy+236 0x00007fb54782ff8c
  0x00007fb54782febc: mov    %rsp,-0x28(%rsp)
  0x00007fb54782fec1: sub    $0x80,%rsp
  0x00007fb54782fec8: mov    %rax,0x78(%rsp)
  0x00007fb54782fecd: mov    %rcx,0x70(%rsp)
  0x00007fb54782fed2: mov    %rdx,0x68(%rsp)
  0x00007fb54782fed7: mov    %rbx,0x60(%rsp)
  0x00007fb54782fedc: mov    %rbp,0x50(%rsp)
  0x00007fb54782fee1: mov    %rsi,0x48(%rsp)
  0x00007fb54782fee6: mov    %rdi,0x40(%rsp)
  0x00007fb54782feeb: mov    %r8,0x38(%rsp)
  0x00007fb54782fef0: mov    %r9,0x30(%rsp)
  0x00007fb54782fef5: mov    %r10,0x28(%rsp)
  0x00007fb54782fefa: mov    %r11,0x20(%rsp)
  0x00007fb54782feff: mov    %r12,0x18(%rsp)
  0x00007fb54782ff04: mov    %r13,0x10(%rsp)
  0x00007fb54782ff09: mov    %r14,0x8(%rsp)
  0x00007fb54782ff0e: mov    %r15,(%rsp)
  0x00007fb54782ff12: mov    %rsi,%rdi
  0x00007fb54782ff15: mov    %rdx,%rsi
  0x00007fb54782ff18: test   $0xf,%esp
  0x00007fb54782ff1e: je     Stub::checkcast_arraycopy+150 0x00007fb54782ff36
  0x00007fb54782ff24: sub    $0x8,%rsp
  0x00007fb54782ff28: callq  0x00007fb564baa3c0 = G1BarrierSetRuntime::write_ref_array_pre_narrow_oop_entry(unsigned int*, unsigned long)
  0x00007fb54782ff2d: add    $0x8,%rsp
  0x00007fb54782ff31: jmpq   Stub::checkcast_arraycopy+155 0x00007fb54782ff3b
  0x00007fb54782ff36: callq  0x00007fb564baa3c0 = G1BarrierSetRuntime::write_ref_array_pre_narrow_oop_entry(unsigned int*, unsigned long)
  0x00007fb54782ff3b: mov    (%rsp),%r15
  0x00007fb54782ff3f: mov    0x8(%rsp),%r14
  0x00007fb54782ff44: mov    0x10(%rsp),%r13
  0x00007fb54782ff49: mov    0x18(%rsp),%r12
  0x00007fb54782ff4e: mov    0x20(%rsp),%r11
  0x00007fb54782ff53: mov    0x28(%rsp),%r10
  0x00007fb54782ff58: mov    0x30(%rsp),%r9
  0x00007fb54782ff5d: mov    0x38(%rsp),%r8
  0x00007fb54782ff62: mov    0x40(%rsp),%rdi
  0x00007fb54782ff67: mov    0x48(%rsp),%rsi
  0x00007fb54782ff6c: mov    0x50(%rsp),%rbp
  0x00007fb54782ff71: mov    0x60(%rsp),%rbx
  0x00007fb54782ff76: mov    0x68(%rsp),%rdx
  0x00007fb54782ff7b: mov    0x70(%rsp),%rcx
  0x00007fb54782ff80: mov    0x78(%rsp),%rax
  0x00007fb54782ff85: add    $0x80,%rsp
  0x00007fb54782ff8c: lea    (%rdi,%rdx,4),%rdi
  0x00007fb54782ff90: lea    (%rsi,%rdx,4),%r13
  0x00007fb54782ff94: mov    %rdx,%r14
  0x00007fb54782ff97: neg    %rdx
  0x00007fb54782ff9a: jne    Stub::checkcast_arraycopy+290 0x00007fb54782ffc2
  0x00007fb54782ffa0: xor    %rax,%rax
  0x00007fb54782ffa3: jmpq   Stub::checkcast_arraycopy+602 0x00007fb5478300fa
  0x00007fb54782ffa8: nopl   0x0(%rax,%rax,1)
  0x00007fb54782ffb0: shr    $0x3,%rax
  0x00007fb54782ffb4: mov    %eax,0x0(%r13,%rdx,4)
  0x00007fb54782ffb9: inc    %rdx
  0x00007fb54782ffbc: je     Stub::checkcast_arraycopy+391 0x00007fb547830027
  0x00007fb54782ffc2: mov    (%rdi,%rdx,4),%eax
  0x00007fb54782ffc5: shl    $0x3,%rax
  0x00007fb54782ffc9: test   %rax,%rax
  0x00007fb54782ffcc: je     Stub::checkcast_arraycopy+272 0x00007fb54782ffb0
  0x00007fb54782ffce: mov    0x8(%rax),%r11d
  0x00007fb54782ffd2: movabs $0x800000000,%r12
  0x00007fb54782ffdc: add    %r12,%r11
  0x00007fb54782ffdf: xor    %r12,%r12
  0x00007fb54782ffe2: cmp    %r8,%r11
  0x00007fb54782ffe5: je     Stub::checkcast_arraycopy+272 0x00007fb54782ffb0
  0x00007fb54782ffe7: cmp    (%r11,%rcx,1),%r8
  0x00007fb54782ffeb: je     Stub::checkcast_arraycopy+272 0x00007fb54782ffb0
  0x00007fb54782ffed: cmp    $0x20,%ecx
  0x00007fb54782fff0: jne    Stub::checkcast_arraycopy+375 0x00007fb547830017
  0x00007fb54782fff6: push   %rax
  0x00007fb54782fff7: mov    %r8,%rax
  0x00007fb54782fffa: push   %rcx
  0x00007fb54782fffb: push   %rdi
  0x00007fb54782fffc: mov    0x28(%r11),%rdi
  0x00007fb547830000: mov    (%rdi),%ecx
  0x00007fb547830002: add    $0x8,%rdi
  0x00007fb547830006: test   %rax,%rax
  0x00007fb547830009: repnz scas %es:(%rdi),%rax
  0x00007fb54783000c: pop    %rdi
  0x00007fb54783000d: pop    %rcx
  0x00007fb54783000e: pop    %rax
  0x00007fb54783000f: jne    Stub::checkcast_arraycopy+375 0x00007fb547830017
  0x00007fb547830011: mov    %r8,0x20(%r11)
  0x00007fb547830015: jmp    Stub::checkcast_arraycopy+272 0x00007fb54782ffb0
  0x00007fb547830017: add    %rdx,%r14
  0x00007fb54783001a: mov    %r14,%rax
  0x00007fb54783001d: not    %rax
  0x00007fb547830020: jne    Stub::checkcast_arraycopy+394 0x00007fb54783002a
  0x00007fb547830022: jmpq   Stub::checkcast_arraycopy+602 0x00007fb5478300fa
  0x00007fb547830027: xor    %rax,%rax
  0x00007fb54783002a: mov    %rsp,-0x28(%rsp)
  0x00007fb54783002f: sub    $0x80,%rsp
  0x00007fb547830036: mov    %rax,0x78(%rsp)
  0x00007fb54783003b: mov    %rcx,0x70(%rsp)
  0x00007fb547830040: mov    %rdx,0x68(%rsp)
  0x00007fb547830045: mov    %rbx,0x60(%rsp)
  0x00007fb54783004a: mov    %rbp,0x50(%rsp)
  0x00007fb54783004f: mov    %rsi,0x48(%rsp)
  0x00007fb547830054: mov    %rdi,0x40(%rsp)
  0x00007fb547830059: mov    %r8,0x38(%rsp)
  0x00007fb54783005e: mov    %r9,0x30(%rsp)
  0x00007fb547830063: mov    %r10,0x28(%rsp)
  0x00007fb547830068: mov    %r11,0x20(%rsp)
  0x00007fb54783006d: mov    %r12,0x18(%rsp)
  0x00007fb547830072: mov    %r13,0x10(%rsp)
  0x00007fb547830077: mov    %r14,0x8(%rsp)
  0x00007fb54783007c: mov    %r15,(%rsp)
  0x00007fb547830080: mov    %rsi,%rdi
  0x00007fb547830083: mov    %r14,%rsi
  0x00007fb547830086: test   $0xf,%esp
  0x00007fb54783008c: je     Stub::checkcast_arraycopy+516 0x00007fb5478300a4
  0x00007fb547830092: sub    $0x8,%rsp
  0x00007fb547830096: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54783009b: add    $0x8,%rsp
  0x00007fb54783009f: jmpq   Stub::checkcast_arraycopy+521 0x00007fb5478300a9
  0x00007fb5478300a4: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb5478300a9: mov    (%rsp),%r15
  0x00007fb5478300ad: mov    0x8(%rsp),%r14
  0x00007fb5478300b2: mov    0x10(%rsp),%r13
  0x00007fb5478300b7: mov    0x18(%rsp),%r12
  0x00007fb5478300bc: mov    0x20(%rsp),%r11
  0x00007fb5478300c1: mov    0x28(%rsp),%r10
  0x00007fb5478300c6: mov    0x30(%rsp),%r9
  0x00007fb5478300cb: mov    0x38(%rsp),%r8
  0x00007fb5478300d0: mov    0x40(%rsp),%rdi
  0x00007fb5478300d5: mov    0x48(%rsp),%rsi
  0x00007fb5478300da: mov    0x50(%rsp),%rbp
  0x00007fb5478300df: mov    0x60(%rsp),%rbx
  0x00007fb5478300e4: mov    0x68(%rsp),%rdx
  0x00007fb5478300e9: mov    0x70(%rsp),%rcx
  0x00007fb5478300ee: mov    0x78(%rsp),%rax
  0x00007fb5478300f3: add    $0x80,%rsp
  0x00007fb5478300fa: mov    (%rsp),%r13
  0x00007fb5478300fe: mov    0x8(%rsp),%r14
  0x00007fb547830103: leaveq 
  0x00007fb547830104: retq   

StubRoutines::checkcast_arraycopy_uninit [0x00007fb547830120, 0x00007fb5478302a5[ (389 bytes)
  0x00007fb547830120: push   %rbp
  0x00007fb547830121: mov    %rsp,%rbp
  0x00007fb547830124: sub    $0x10,%rsp
  0x00007fb547830128: mov    %r13,(%rsp)
  0x00007fb54783012c: mov    %r14,0x8(%rsp)
  0x00007fb547830131: lea    (%rdi,%rdx,4),%rdi
  0x00007fb547830135: lea    (%rsi,%rdx,4),%r13
  0x00007fb547830139: mov    %rdx,%r14
  0x00007fb54783013c: neg    %rdx
  0x00007fb54783013f: jne    Stub::checkcast_arraycopy_uninit+66 0x00007fb547830162
  0x00007fb547830145: xor    %rax,%rax
  0x00007fb547830148: jmpq   Stub::checkcast_arraycopy_uninit+378 0x00007fb54783029a
  0x00007fb54783014d: data16 xchg %ax,%ax
  0x00007fb547830150: shr    $0x3,%rax
  0x00007fb547830154: mov    %eax,0x0(%r13,%rdx,4)
  0x00007fb547830159: inc    %rdx
  0x00007fb54783015c: je     Stub::checkcast_arraycopy_uninit+167 0x00007fb5478301c7
  0x00007fb547830162: mov    (%rdi,%rdx,4),%eax
  0x00007fb547830165: shl    $0x3,%rax
  0x00007fb547830169: test   %rax,%rax
  0x00007fb54783016c: je     Stub::checkcast_arraycopy_uninit+48 0x00007fb547830150
  0x00007fb54783016e: mov    0x8(%rax),%r11d
  0x00007fb547830172: movabs $0x800000000,%r12
  0x00007fb54783017c: add    %r12,%r11
  0x00007fb54783017f: xor    %r12,%r12
  0x00007fb547830182: cmp    %r8,%r11
  0x00007fb547830185: je     Stub::checkcast_arraycopy_uninit+48 0x00007fb547830150
  0x00007fb547830187: cmp    (%r11,%rcx,1),%r8
  0x00007fb54783018b: je     Stub::checkcast_arraycopy_uninit+48 0x00007fb547830150
  0x00007fb54783018d: cmp    $0x20,%ecx
  0x00007fb547830190: jne    Stub::checkcast_arraycopy_uninit+151 0x00007fb5478301b7
  0x00007fb547830196: push   %rax
  0x00007fb547830197: mov    %r8,%rax
  0x00007fb54783019a: push   %rcx
  0x00007fb54783019b: push   %rdi
  0x00007fb54783019c: mov    0x28(%r11),%rdi
  0x00007fb5478301a0: mov    (%rdi),%ecx
  0x00007fb5478301a2: add    $0x8,%rdi
  0x00007fb5478301a6: test   %rax,%rax
  0x00007fb5478301a9: repnz scas %es:(%rdi),%rax
  0x00007fb5478301ac: pop    %rdi
  0x00007fb5478301ad: pop    %rcx
  0x00007fb5478301ae: pop    %rax
  0x00007fb5478301af: jne    Stub::checkcast_arraycopy_uninit+151 0x00007fb5478301b7
  0x00007fb5478301b1: mov    %r8,0x20(%r11)
  0x00007fb5478301b5: jmp    Stub::checkcast_arraycopy_uninit+48 0x00007fb547830150
  0x00007fb5478301b7: add    %rdx,%r14
  0x00007fb5478301ba: mov    %r14,%rax
  0x00007fb5478301bd: not    %rax
  0x00007fb5478301c0: jne    Stub::checkcast_arraycopy_uninit+170 0x00007fb5478301ca
  0x00007fb5478301c2: jmpq   Stub::checkcast_arraycopy_uninit+378 0x00007fb54783029a
  0x00007fb5478301c7: xor    %rax,%rax
  0x00007fb5478301ca: mov    %rsp,-0x28(%rsp)
  0x00007fb5478301cf: sub    $0x80,%rsp
  0x00007fb5478301d6: mov    %rax,0x78(%rsp)
  0x00007fb5478301db: mov    %rcx,0x70(%rsp)
  0x00007fb5478301e0: mov    %rdx,0x68(%rsp)
  0x00007fb5478301e5: mov    %rbx,0x60(%rsp)
  0x00007fb5478301ea: mov    %rbp,0x50(%rsp)
  0x00007fb5478301ef: mov    %rsi,0x48(%rsp)
  0x00007fb5478301f4: mov    %rdi,0x40(%rsp)
  0x00007fb5478301f9: mov    %r8,0x38(%rsp)
  0x00007fb5478301fe: mov    %r9,0x30(%rsp)
  0x00007fb547830203: mov    %r10,0x28(%rsp)
  0x00007fb547830208: mov    %r11,0x20(%rsp)
  0x00007fb54783020d: mov    %r12,0x18(%rsp)
  0x00007fb547830212: mov    %r13,0x10(%rsp)
  0x00007fb547830217: mov    %r14,0x8(%rsp)
  0x00007fb54783021c: mov    %r15,(%rsp)
  0x00007fb547830220: mov    %rsi,%rdi
  0x00007fb547830223: mov    %r14,%rsi
  0x00007fb547830226: test   $0xf,%esp
  0x00007fb54783022c: je     Stub::checkcast_arraycopy_uninit+292 0x00007fb547830244
  0x00007fb547830232: sub    $0x8,%rsp
  0x00007fb547830236: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb54783023b: add    $0x8,%rsp
  0x00007fb54783023f: jmpq   Stub::checkcast_arraycopy_uninit+297 0x00007fb547830249
  0x00007fb547830244: callq  0x00007fb564baa3f0 = G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long)
  0x00007fb547830249: mov    (%rsp),%r15
  0x00007fb54783024d: mov    0x8(%rsp),%r14
  0x00007fb547830252: mov    0x10(%rsp),%r13
  0x00007fb547830257: mov    0x18(%rsp),%r12
  0x00007fb54783025c: mov    0x20(%rsp),%r11
  0x00007fb547830261: mov    0x28(%rsp),%r10
  0x00007fb547830266: mov    0x30(%rsp),%r9
  0x00007fb54783026b: mov    0x38(%rsp),%r8
  0x00007fb547830270: mov    0x40(%rsp),%rdi
  0x00007fb547830275: mov    0x48(%rsp),%rsi
  0x00007fb54783027a: mov    0x50(%rsp),%rbp
  0x00007fb54783027f: mov    0x60(%rsp),%rbx
  0x00007fb547830284: mov    0x68(%rsp),%rdx
  0x00007fb547830289: mov    0x70(%rsp),%rcx
  0x00007fb54783028e: mov    0x78(%rsp),%rax
  0x00007fb547830293: add    $0x80,%rsp
  0x00007fb54783029a: mov    (%rsp),%r13
  0x00007fb54783029e: mov    0x8(%rsp),%r14
  0x00007fb5478302a3: leaveq 
  0x00007fb5478302a4: retq   

StubRoutines::unsafe_arraycopy [0x00007fb5478302c0, 0x00007fb5478302fb[ (59 bytes)
  0x00007fb5478302c0: push   %rbp
  0x00007fb5478302c1: mov    %rsp,%rbp
  0x00007fb5478302c4: mov    %rdi,%rax
  0x00007fb5478302c7: or     %rsi,%rax
  0x00007fb5478302ca: or     %rdx,%rax
  0x00007fb5478302cd: test   $0x7,%al
  0x00007fb5478302d0: je     Stub::unsafe_arraycopy+50 0x00007fb5478302f2
  0x00007fb5478302d2: test   $0x3,%al
  0x00007fb5478302d5: je     Stub::unsafe_arraycopy+41 0x00007fb5478302e9
  0x00007fb5478302d7: test   $0x1,%al
  0x00007fb5478302da: jne    Stub::jbyte_arraycopy+4 0x00007fb54782f224
  0x00007fb5478302e0: shr    $0x1,%rdx
  0x00007fb5478302e4: jmpq   Stub::jshort_arraycopy+4 0x00007fb54782f3c4
  0x00007fb5478302e9: shr    $0x2,%rdx
  0x00007fb5478302ed: jmpq   Stub::jint_arraycopy+4 0x00007fb54782f524
  0x00007fb5478302f2: shr    $0x3,%rdx
  0x00007fb5478302f6: jmpq   Stub::jlong_arraycopy+4 0x00007fb54782f664

StubRoutines::generic_arraycopy [0x00007fb5478302fb, 0x00007fb5478304f0[ (501 bytes)
  0x00007fb5478302fb: jmpq   Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830300: push   %rbp
  0x00007fb547830301: mov    %rsp,%rbp
  0x00007fb547830304: test   %rdi,%rdi
  0x00007fb547830307: je     Stub::generic_arraycopy
  0x00007fb547830309: test   %esi,%esi
  0x00007fb54783030b: js     Stub::generic_arraycopy
  0x00007fb54783030d: test   %rdx,%rdx
  0x00007fb547830310: je     Stub::generic_arraycopy
  0x00007fb547830312: test   %ecx,%ecx
  0x00007fb547830314: js     Stub::generic_arraycopy
  0x00007fb547830316: mov    %r8d,%r11d
  0x00007fb547830319: test   %r11d,%r11d
  0x00007fb54783031c: js     Stub::generic_arraycopy
  0x00007fb54783031e: mov    0x8(%rdi),%r10d
  0x00007fb547830322: movabs $0x800000000,%r12
  0x00007fb54783032c: add    %r12,%r10
  0x00007fb54783032f: xor    %r12,%r12
  0x00007fb547830332: cmpl   $0x80100c02,0x8(%r10)
  0x00007fb54783033a: je     Stub::generic_arraycopy+250 0x00007fb5478303f5
  0x00007fb547830340: mov    0x8(%rdx),%eax
  0x00007fb547830343: movabs $0x800000000,%r12
  0x00007fb54783034d: add    %r12,%rax
  0x00007fb547830350: xor    %r12,%r12
  0x00007fb547830353: cmp    %rax,%r10
  0x00007fb547830356: jne    Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb54783035c: mov    0x8(%r10),%eax
  0x00007fb547830360: cmp    $0x0,%eax
  0x00007fb547830363: jge    Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830369: mov    %r11d,%r10d
  0x00007fb54783036c: add    %esi,%r10d
  0x00007fb54783036f: cmp    0xc(%rdi),%r10d
  0x00007fb547830373: ja     Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830379: mov    %r11d,%r10d
  0x00007fb54783037c: add    %ecx,%r10d
  0x00007fb54783037f: cmp    0xc(%rdx),%r10d
  0x00007fb547830383: ja     Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830389: movslq %esi,%rsi
  0x00007fb54783038c: movslq %ecx,%rcx
  0x00007fb54783038f: mov    %eax,%r10d
  0x00007fb547830392: shr    $0x10,%r10d
  0x00007fb547830396: and    $0xff,%r10
  0x00007fb54783039d: add    %r10,%rdi
  0x00007fb5478303a0: add    %r10,%rdx
  0x00007fb5478303a3: and    $0x3f,%eax
  0x00007fb5478303a6: cmp    $0x0,%eax
  0x00007fb5478303a9: jne    Stub::generic_arraycopy+192 0x00007fb5478303bb
  0x00007fb5478303ab: lea    (%rdi,%rsi,1),%rdi
  0x00007fb5478303af: lea    (%rdx,%rcx,1),%rsi
  0x00007fb5478303b3: movslq %r11d,%rdx
  0x00007fb5478303b6: jmpq   Stub::jbyte_arraycopy+4 0x00007fb54782f224
  0x00007fb5478303bb: cmp    $0x1,%eax
  0x00007fb5478303be: jne    Stub::generic_arraycopy+213 0x00007fb5478303d0
  0x00007fb5478303c0: lea    (%rdi,%rsi,2),%rdi
  0x00007fb5478303c4: lea    (%rdx,%rcx,2),%rsi
  0x00007fb5478303c8: movslq %r11d,%rdx
  0x00007fb5478303cb: jmpq   Stub::jshort_arraycopy+4 0x00007fb54782f3c4
  0x00007fb5478303d0: cmp    $0x2,%eax
  0x00007fb5478303d3: jne    Stub::generic_arraycopy+234 0x00007fb5478303e5
  0x00007fb5478303d5: lea    (%rdi,%rsi,4),%rdi
  0x00007fb5478303d9: lea    (%rdx,%rcx,4),%rsi
  0x00007fb5478303dd: movslq %r11d,%rdx
  0x00007fb5478303e0: jmpq   Stub::jint_arraycopy+4 0x00007fb54782f524
  0x00007fb5478303e5: lea    (%rdi,%rsi,8),%rdi
  0x00007fb5478303e9: lea    (%rdx,%rcx,8),%rsi
  0x00007fb5478303ed: movslq %r11d,%rdx
  0x00007fb5478303f0: jmpq   Stub::jlong_arraycopy+4 0x00007fb54782f664
  0x00007fb5478303f5: mov    0x8(%rdx),%eax
  0x00007fb5478303f8: movabs $0x800000000,%r12
  0x00007fb547830402: add    %r12,%rax
  0x00007fb547830405: xor    %r12,%r12
  0x00007fb547830408: cmp    %rax,%r10
  0x00007fb54783040b: jne    Stub::generic_arraycopy+334 0x00007fb547830449
  0x00007fb547830411: mov    %r11d,%r10d
  0x00007fb547830414: add    %esi,%r10d
  0x00007fb547830417: cmp    0xc(%rdi),%r10d
  0x00007fb54783041b: ja     Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830421: mov    %r11d,%r10d
  0x00007fb547830424: add    %ecx,%r10d
  0x00007fb547830427: cmp    0xc(%rdx),%r10d
  0x00007fb54783042b: ja     Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830431: movslq %esi,%rsi
  0x00007fb547830434: movslq %ecx,%rcx
  0x00007fb547830437: lea    0x10(%rdi,%rsi,4),%rdi
  0x00007fb54783043c: lea    0x10(%rdx,%rcx,4),%rsi
  0x00007fb547830441: movslq %r11d,%rdx
  0x00007fb547830444: jmpq   Stub::oop_arraycopy+4 0x00007fb54782f944
  0x00007fb547830449: cmpl   $0x80100c02,0x8(%rax)
  0x00007fb547830450: jne    Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830456: mov    %r11d,%eax
  0x00007fb547830459: add    %esi,%eax
  0x00007fb54783045b: cmp    0xc(%rdi),%eax
  0x00007fb54783045e: ja     Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830464: mov    %r11d,%eax
  0x00007fb547830467: add    %ecx,%eax
  0x00007fb547830469: cmp    0xc(%rdx),%eax
  0x00007fb54783046c: ja     Stub::generic_arraycopy+493 0x00007fb5478304e8
  0x00007fb547830472: movslq %esi,%rsi
  0x00007fb547830475: movslq %ecx,%rcx
  0x00007fb547830478: mov    0x8(%rdx),%r11d
  0x00007fb54783047c: movabs $0x800000000,%r12
  0x00007fb547830486: add    %r12,%r11
  0x00007fb547830489: xor    %r12,%r12
  0x00007fb54783048c: lea    0x10(%rdi,%rsi,4),%rdi
  0x00007fb547830491: lea    0x10(%rdx,%rcx,4),%rsi
  0x00007fb547830496: mov    %r8d,%edx
  0x00007fb547830499: mov    0x10(%r11),%ecx
  0x00007fb54783049d: cmp    %r11,%r10
  0x00007fb5478304a0: je     Stub::generic_arraycopy+329 0x00007fb547830444
  0x00007fb5478304a2: cmp    (%r10,%rcx,1),%r11
  0x00007fb5478304a6: je     Stub::generic_arraycopy+329 0x00007fb547830444
  0x00007fb5478304a8: cmp    $0x20,%ecx
  0x00007fb5478304ab: jne    Stub::generic_arraycopy+474 0x00007fb5478304d5
  0x00007fb5478304b1: push   %rax
  0x00007fb5478304b2: mov    %r11,%rax
  0x00007fb5478304b5: push   %rcx
  0x00007fb5478304b6: push   %rdi
  0x00007fb5478304b7: mov    0x28(%r10),%rdi
  0x00007fb5478304bb: mov    (%rdi),%ecx
  0x00007fb5478304bd: add    $0x8,%rdi
  0x00007fb5478304c1: test   %rax,%rax
  0x00007fb5478304c4: repnz scas %es:(%rdi),%rax
  0x00007fb5478304c7: pop    %rdi
  0x00007fb5478304c8: pop    %rcx
  0x00007fb5478304c9: pop    %rax
  0x00007fb5478304ca: jne    Stub::generic_arraycopy+474 0x00007fb5478304d5
  0x00007fb5478304cc: mov    %r11,0x20(%r10)
  0x00007fb5478304d0: jmpq   Stub::generic_arraycopy+329 0x00007fb547830444
  0x00007fb5478304d5: mov    0xe8(%r11),%r11
  0x00007fb5478304dc: mov    0x10(%r11),%ecx
  0x00007fb5478304e0: mov    %r11,%r8
  0x00007fb5478304e3: jmpq   Stub::checkcast_arraycopy+4 0x00007fb54782fea4
  0x00007fb5478304e8: xor    %rax,%rax
  0x00007fb5478304eb: not    %rax
  0x00007fb5478304ee: leaveq 
  0x00007fb5478304ef: retq   

StubRoutines::jbyte_fill [0x00007fb547830500, 0x00007fb5478305ac[ (172 bytes)
  0x00007fb547830500: push   %rbp
  0x00007fb547830501: mov    %rsp,%rbp
  0x00007fb547830504: and    $0xff,%esi
  0x00007fb54783050a: mov    %esi,%eax
  0x00007fb54783050c: shl    $0x8,%eax
  0x00007fb54783050f: or     %eax,%esi
  0x00007fb547830511: mov    %esi,%eax
  0x00007fb547830513: shl    $0x10,%eax
  0x00007fb547830516: or     %eax,%esi
  0x00007fb547830518: cmp    $0x8,%edx
  0x00007fb54783051b: jb     Stub::jbyte_fill+127 0x00007fb54783057f
  0x00007fb547830521: vmovd  %esi,%xmm0
  0x00007fb547830525: vpbroadcastd %xmm0,%ymm0
  0x00007fb54783052a: sub    $0x40,%edx
  0x00007fb54783052d: jl     Stub::jbyte_fill+82 0x00007fb547830552
  0x00007fb547830533: nopw   0x0(%rax,%rax,1)
  0x00007fb54783053c: data16 data16 xchg %ax,%ax
  0x00007fb547830540: vmovdqu %ymm0,(%rdi)
  0x00007fb547830544: vmovdqu %ymm0,0x20(%rdi)
  0x00007fb547830549: add    $0x40,%rdi
  0x00007fb54783054d: sub    $0x40,%edx
  0x00007fb547830550: jge    Stub::jbyte_fill+64 0x00007fb547830540
  0x00007fb547830552: add    $0x20,%edx
  0x00007fb547830555: jl     Stub::jbyte_fill+98 0x00007fb547830562
  0x00007fb547830557: vmovdqu %ymm0,(%rdi)
  0x00007fb54783055b: add    $0x20,%rdi
  0x00007fb54783055f: sub    $0x20,%edx
  0x00007fb547830562: vmovd  %esi,%xmm0
  0x00007fb547830566: vpshufd $0x0,%xmm0,%xmm0
  0x00007fb54783056b: add    $0x20,%edx
  0x00007fb54783056e: je     Stub::jbyte_fill+167 0x00007fb5478305a7
  0x00007fb547830570: jmp    Stub::jbyte_fill+122 0x00007fb54783057a
  0x00007fb547830572: vmovq  %xmm0,(%rdi)
  0x00007fb547830576: add    $0x8,%rdi
  0x00007fb54783057a: sub    $0x8,%edx
  0x00007fb54783057d: jge    Stub::jbyte_fill+114 0x00007fb547830572
  0x00007fb54783057f: test   $0x4,%edx
  0x00007fb547830585: je     Stub::jbyte_fill+141 0x00007fb54783058d
  0x00007fb547830587: mov    %esi,(%rdi)
  0x00007fb547830589: add    $0x4,%rdi
  0x00007fb54783058d: test   $0x2,%edx
  0x00007fb547830593: je     Stub::jbyte_fill+156 0x00007fb54783059c
  0x00007fb547830595: mov    %si,(%rdi)
  0x00007fb547830598: add    $0x2,%rdi
  0x00007fb54783059c: test   $0x1,%edx
  0x00007fb5478305a2: je     Stub::jbyte_fill+167 0x00007fb5478305a7
  0x00007fb5478305a4: mov    %sil,(%rdi)
  0x00007fb5478305a7: vzeroupper 
  0x00007fb5478305aa: leaveq 
  0x00007fb5478305ab: retq   

StubRoutines::jshort_fill [0x00007fb5478305c0, 0x00007fb54783064d[ (141 bytes)
  0x00007fb5478305c0: push   %rbp
  0x00007fb5478305c1: mov    %rsp,%rbp
  0x00007fb5478305c4: and    $0xffff,%esi
  0x00007fb5478305ca: mov    %esi,%eax
  0x00007fb5478305cc: shl    $0x10,%eax
  0x00007fb5478305cf: or     %eax,%esi
  0x00007fb5478305d1: cmp    $0x4,%edx
  0x00007fb5478305d4: jb     Stub::jshort_fill+111 0x00007fb54783062f
  0x00007fb5478305da: vmovd  %esi,%xmm0
  0x00007fb5478305de: vpbroadcastd %xmm0,%ymm0
  0x00007fb5478305e3: sub    $0x20,%edx
  0x00007fb5478305e6: jl     Stub::jshort_fill+66 0x00007fb547830602
  0x00007fb5478305ec: nopl   0x0(%rax)
  0x00007fb5478305f0: vmovdqu %ymm0,(%rdi)
  0x00007fb5478305f4: vmovdqu %ymm0,0x20(%rdi)
  0x00007fb5478305f9: add    $0x40,%rdi
  0x00007fb5478305fd: sub    $0x20,%edx
  0x00007fb547830600: jge    Stub::jshort_fill+48 0x00007fb5478305f0
  0x00007fb547830602: add    $0x10,%edx
  0x00007fb547830605: jl     Stub::jshort_fill+82 0x00007fb547830612
  0x00007fb547830607: vmovdqu %ymm0,(%rdi)
  0x00007fb54783060b: add    $0x20,%rdi
  0x00007fb54783060f: sub    $0x10,%edx
  0x00007fb547830612: vmovd  %esi,%xmm0
  0x00007fb547830616: vpshufd $0x0,%xmm0,%xmm0
  0x00007fb54783061b: add    $0x10,%edx
  0x00007fb54783061e: je     Stub::jshort_fill+136 0x00007fb547830648
  0x00007fb547830620: jmp    Stub::jshort_fill+106 0x00007fb54783062a
  0x00007fb547830622: vmovq  %xmm0,(%rdi)
  0x00007fb547830626: add    $0x8,%rdi
  0x00007fb54783062a: sub    $0x4,%edx
  0x00007fb54783062d: jge    Stub::jshort_fill+98 0x00007fb547830622
  0x00007fb54783062f: test   $0x2,%edx
  0x00007fb547830635: je     Stub::jshort_fill+125 0x00007fb54783063d
  0x00007fb547830637: mov    %esi,(%rdi)
  0x00007fb547830639: add    $0x4,%rdi
  0x00007fb54783063d: test   $0x1,%edx
  0x00007fb547830643: je     Stub::jshort_fill+136 0x00007fb547830648
  0x00007fb547830645: mov    %si,(%rdi)
  0x00007fb547830648: vzeroupper 
  0x00007fb54783064b: leaveq 
  0x00007fb54783064c: retq   

StubRoutines::jint_fill [0x00007fb547830660, 0x00007fb5478306ce[ (110 bytes)
  0x00007fb547830660: push   %rbp
  0x00007fb547830661: mov    %rsp,%rbp
  0x00007fb547830664: cmp    $0x2,%edx
  0x00007fb547830667: jb     Stub::jint_fill+95 0x00007fb5478306bf
  0x00007fb54783066d: vmovd  %esi,%xmm0
  0x00007fb547830671: vpbroadcastd %xmm0,%ymm0
  0x00007fb547830676: sub    $0x10,%edx
  0x00007fb547830679: jl     Stub::jint_fill+50 0x00007fb547830692
  0x00007fb54783067f: nop
  0x00007fb547830680: vmovdqu %ymm0,(%rdi)
  0x00007fb547830684: vmovdqu %ymm0,0x20(%rdi)
  0x00007fb547830689: add    $0x40,%rdi
  0x00007fb54783068d: sub    $0x10,%edx
  0x00007fb547830690: jge    Stub::jint_fill+32 0x00007fb547830680
  0x00007fb547830692: add    $0x8,%edx
  0x00007fb547830695: jl     Stub::jint_fill+66 0x00007fb5478306a2
  0x00007fb547830697: vmovdqu %ymm0,(%rdi)
  0x00007fb54783069b: add    $0x20,%rdi
  0x00007fb54783069f: sub    $0x8,%edx
  0x00007fb5478306a2: vmovd  %esi,%xmm0
  0x00007fb5478306a6: vpshufd $0x0,%xmm0,%xmm0
  0x00007fb5478306ab: add    $0x8,%edx
  0x00007fb5478306ae: je     Stub::jint_fill+105 0x00007fb5478306c9
  0x00007fb5478306b0: jmp    Stub::jint_fill+90 0x00007fb5478306ba
  0x00007fb5478306b2: vmovq  %xmm0,(%rdi)
  0x00007fb5478306b6: add    $0x8,%rdi
  0x00007fb5478306ba: sub    $0x2,%edx
  0x00007fb5478306bd: jge    Stub::jint_fill+82 0x00007fb5478306b2
  0x00007fb5478306bf: test   $0x1,%edx
  0x00007fb5478306c5: je     Stub::jint_fill+105 0x00007fb5478306c9
  0x00007fb5478306c7: mov    %esi,(%rdi)
  0x00007fb5478306c9: vzeroupper 
  0x00007fb5478306cc: leaveq 
  0x00007fb5478306cd: retq   

StubRoutines::arrayof_jbyte_fill [0x00007fb5478306e0, 0x00007fb54783078c[ (172 bytes)
  0x00007fb5478306e0: push   %rbp
  0x00007fb5478306e1: mov    %rsp,%rbp
  0x00007fb5478306e4: and    $0xff,%esi
  0x00007fb5478306ea: mov    %esi,%eax
  0x00007fb5478306ec: shl    $0x8,%eax
  0x00007fb5478306ef: or     %eax,%esi
  0x00007fb5478306f1: mov    %esi,%eax
  0x00007fb5478306f3: shl    $0x10,%eax
  0x00007fb5478306f6: or     %eax,%esi
  0x00007fb5478306f8: cmp    $0x8,%edx
  0x00007fb5478306fb: jb     Stub::arrayof_jbyte_fill+127 0x00007fb54783075f
  0x00007fb547830701: vmovd  %esi,%xmm0
  0x00007fb547830705: vpbroadcastd %xmm0,%ymm0
  0x00007fb54783070a: sub    $0x40,%edx
  0x00007fb54783070d: jl     Stub::arrayof_jbyte_fill+82 0x00007fb547830732
  0x00007fb547830713: nopw   0x0(%rax,%rax,1)
  0x00007fb54783071c: data16 data16 xchg %ax,%ax
  0x00007fb547830720: vmovdqu %ymm0,(%rdi)
  0x00007fb547830724: vmovdqu %ymm0,0x20(%rdi)
  0x00007fb547830729: add    $0x40,%rdi
  0x00007fb54783072d: sub    $0x40,%edx
  0x00007fb547830730: jge    Stub::arrayof_jbyte_fill+64 0x00007fb547830720
  0x00007fb547830732: add    $0x20,%edx
  0x00007fb547830735: jl     Stub::arrayof_jbyte_fill+98 0x00007fb547830742
  0x00007fb547830737: vmovdqu %ymm0,(%rdi)
  0x00007fb54783073b: add    $0x20,%rdi
  0x00007fb54783073f: sub    $0x20,%edx
  0x00007fb547830742: vmovd  %esi,%xmm0
  0x00007fb547830746: vpshufd $0x0,%xmm0,%xmm0
  0x00007fb54783074b: add    $0x20,%edx
  0x00007fb54783074e: je     Stub::arrayof_jbyte_fill+167 0x00007fb547830787
  0x00007fb547830750: jmp    Stub::arrayof_jbyte_fill+122 0x00007fb54783075a
  0x00007fb547830752: vmovq  %xmm0,(%rdi)
  0x00007fb547830756: add    $0x8,%rdi
  0x00007fb54783075a: sub    $0x8,%edx
  0x00007fb54783075d: jge    Stub::arrayof_jbyte_fill+114 0x00007fb547830752
  0x00007fb54783075f: test   $0x4,%edx
  0x00007fb547830765: je     Stub::arrayof_jbyte_fill+141 0x00007fb54783076d
  0x00007fb547830767: mov    %esi,(%rdi)
  0x00007fb547830769: add    $0x4,%rdi
  0x00007fb54783076d: test   $0x2,%edx
  0x00007fb547830773: je     Stub::arrayof_jbyte_fill+156 0x00007fb54783077c
  0x00007fb547830775: mov    %si,(%rdi)
  0x00007fb547830778: add    $0x2,%rdi
  0x00007fb54783077c: test   $0x1,%edx
  0x00007fb547830782: je     Stub::arrayof_jbyte_fill+167 0x00007fb547830787
  0x00007fb547830784: mov    %sil,(%rdi)
  0x00007fb547830787: vzeroupper 
  0x00007fb54783078a: leaveq 
  0x00007fb54783078b: retq   

StubRoutines::arrayof_jshort_fill [0x00007fb5478307a0, 0x00007fb54783082d[ (141 bytes)
  0x00007fb5478307a0: push   %rbp
  0x00007fb5478307a1: mov    %rsp,%rbp
  0x00007fb5478307a4: and    $0xffff,%esi
  0x00007fb5478307aa: mov    %esi,%eax
  0x00007fb5478307ac: shl    $0x10,%eax
  0x00007fb5478307af: or     %eax,%esi
  0x00007fb5478307b1: cmp    $0x4,%edx
  0x00007fb5478307b4: jb     Stub::arrayof_jshort_fill+111 0x00007fb54783080f
  0x00007fb5478307ba: vmovd  %esi,%xmm0
  0x00007fb5478307be: vpbroadcastd %xmm0,%ymm0
  0x00007fb5478307c3: sub    $0x20,%edx
  0x00007fb5478307c6: jl     Stub::arrayof_jshort_fill+66 0x00007fb5478307e2
  0x00007fb5478307cc: nopl   0x0(%rax)
  0x00007fb5478307d0: vmovdqu %ymm0,(%rdi)
  0x00007fb5478307d4: vmovdqu %ymm0,0x20(%rdi)
  0x00007fb5478307d9: add    $0x40,%rdi
  0x00007fb5478307dd: sub    $0x20,%edx
  0x00007fb5478307e0: jge    Stub::arrayof_jshort_fill+48 0x00007fb5478307d0
  0x00007fb5478307e2: add    $0x10,%edx
  0x00007fb5478307e5: jl     Stub::arrayof_jshort_fill+82 0x00007fb5478307f2
  0x00007fb5478307e7: vmovdqu %ymm0,(%rdi)
  0x00007fb5478307eb: add    $0x20,%rdi
  0x00007fb5478307ef: sub    $0x10,%edx
  0x00007fb5478307f2: vmovd  %esi,%xmm0
  0x00007fb5478307f6: vpshufd $0x0,%xmm0,%xmm0
  0x00007fb5478307fb: add    $0x10,%edx
  0x00007fb5478307fe: je     Stub::arrayof_jshort_fill+136 0x00007fb547830828
  0x00007fb547830800: jmp    Stub::arrayof_jshort_fill+106 0x00007fb54783080a
  0x00007fb547830802: vmovq  %xmm0,(%rdi)
  0x00007fb547830806: add    $0x8,%rdi
  0x00007fb54783080a: sub    $0x4,%edx
  0x00007fb54783080d: jge    Stub::arrayof_jshort_fill+98 0x00007fb547830802
  0x00007fb54783080f: test   $0x2,%edx
  0x00007fb547830815: je     Stub::arrayof_jshort_fill+125 0x00007fb54783081d
  0x00007fb547830817: mov    %esi,(%rdi)
  0x00007fb547830819: add    $0x4,%rdi
  0x00007fb54783081d: test   $0x1,%edx
  0x00007fb547830823: je     Stub::arrayof_jshort_fill+136 0x00007fb547830828
  0x00007fb547830825: mov    %si,(%rdi)
  0x00007fb547830828: vzeroupper 
  0x00007fb54783082b: leaveq 
  0x00007fb54783082c: retq   

StubRoutines::arrayof_jint_fill [0x00007fb547830840, 0x00007fb5478308ae[ (110 bytes)
  0x00007fb547830840: push   %rbp
  0x00007fb547830841: mov    %rsp,%rbp
  0x00007fb547830844: cmp    $0x2,%edx
  0x00007fb547830847: jb     Stub::arrayof_jint_fill+95 0x00007fb54783089f
  0x00007fb54783084d: vmovd  %esi,%xmm0
  0x00007fb547830851: vpbroadcastd %xmm0,%ymm0
  0x00007fb547830856: sub    $0x10,%edx
  0x00007fb547830859: jl     Stub::arrayof_jint_fill+50 0x00007fb547830872
  0x00007fb54783085f: nop
  0x00007fb547830860: vmovdqu %ymm0,(%rdi)
  0x00007fb547830864: vmovdqu %ymm0,0x20(%rdi)
  0x00007fb547830869: add    $0x40,%rdi
  0x00007fb54783086d: sub    $0x10,%edx
  0x00007fb547830870: jge    Stub::arrayof_jint_fill+32 0x00007fb547830860
  0x00007fb547830872: add    $0x8,%edx
  0x00007fb547830875: jl     Stub::arrayof_jint_fill+66 0x00007fb547830882
  0x00007fb547830877: vmovdqu %ymm0,(%rdi)
  0x00007fb54783087b: add    $0x20,%rdi
  0x00007fb54783087f: sub    $0x8,%edx
  0x00007fb547830882: vmovd  %esi,%xmm0
  0x00007fb547830886: vpshufd $0x0,%xmm0,%xmm0
  0x00007fb54783088b: add    $0x8,%edx
  0x00007fb54783088e: je     Stub::arrayof_jint_fill+105 0x00007fb5478308a9
  0x00007fb547830890: jmp    Stub::arrayof_jint_fill+90 0x00007fb54783089a
  0x00007fb547830892: vmovq  %xmm0,(%rdi)
  0x00007fb547830896: add    $0x8,%rdi
  0x00007fb54783089a: sub    $0x2,%edx
  0x00007fb54783089d: jge    Stub::arrayof_jint_fill+82 0x00007fb547830892
  0x00007fb54783089f: test   $0x1,%edx
  0x00007fb5478308a5: je     Stub::arrayof_jint_fill+105 0x00007fb5478308a9
  0x00007fb5478308a7: mov    %esi,(%rdi)
  0x00007fb5478308a9: vzeroupper 
  0x00007fb5478308ac: leaveq 
  0x00007fb5478308ad: retq   

StubRoutines::key_shuffle_mask [0x00007fb5478308b0, 0x00007fb5478308c0[ (16 bytes)
  0x00007fb5478308b0: add    (%rdx),%eax
  0x00007fb5478308b2: add    %eax,(%rax)
  0x00007fb5478308b4: (bad)  
  0x00007fb5478308b5: (bad)  
  0x00007fb5478308b6: add    $0x90a0b04,%eax
  0x00007fb5478308bb: or     %cl,(%rdi)
  0x00007fb5478308bd: (bad)  
  0x00007fb5478308be: .byte 0xd
  0x00007fb5478308bf: .byte 0xc

StubRoutines::aescrypt_encryptBlock [0x00007fb5478308c0, 0x00007fb5478309da[ (282 bytes)
  0x00007fb5478308c0: push   %rbp
  0x00007fb5478308c1: mov    %rsp,%rbp
  0x00007fb5478308c4: mov    -0x4(%rdx),%eax
  0x00007fb5478308c7: vmovdqu -0x1f(%rip),%xmm1        # Stub::key_shuffle_mask
  0x00007fb5478308cf: vmovdqu (%rdi),%xmm0
  0x00007fb5478308d3: vmovdqu (%rdx),%xmm2
  0x00007fb5478308d7: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb5478308dc: vpxor  %xmm2,%xmm0,%xmm0
  0x00007fb5478308e0: vmovdqu 0x10(%rdx),%xmm2
  0x00007fb5478308e5: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb5478308ea: vmovdqu 0x20(%rdx),%xmm3
  0x00007fb5478308ef: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478308f4: vmovdqu 0x30(%rdx),%xmm4
  0x00007fb5478308f9: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb5478308fe: vmovdqu 0x40(%rdx),%xmm5
  0x00007fb547830903: vpshufb %xmm1,%xmm5,%xmm5
  0x00007fb547830908: vaesenc %xmm2,%xmm0,%xmm0
  0x00007fb54783090d: vaesenc %xmm3,%xmm0,%xmm0
  0x00007fb547830912: vaesenc %xmm4,%xmm0,%xmm0
  0x00007fb547830917: vaesenc %xmm5,%xmm0,%xmm0
  0x00007fb54783091c: vmovdqu 0x50(%rdx),%xmm2
  0x00007fb547830921: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb547830926: vmovdqu 0x60(%rdx),%xmm3
  0x00007fb54783092b: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547830930: vmovdqu 0x70(%rdx),%xmm4
  0x00007fb547830935: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb54783093a: vmovdqu 0x80(%rdx),%xmm5
  0x00007fb547830942: vpshufb %xmm1,%xmm5,%xmm5
  0x00007fb547830947: vaesenc %xmm2,%xmm0,%xmm0
  0x00007fb54783094c: vaesenc %xmm3,%xmm0,%xmm0
  0x00007fb547830951: vaesenc %xmm4,%xmm0,%xmm0
  0x00007fb547830956: vaesenc %xmm5,%xmm0,%xmm0
  0x00007fb54783095b: vmovdqu 0x90(%rdx),%xmm2
  0x00007fb547830963: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb547830968: vmovdqu 0xa0(%rdx),%xmm3
  0x00007fb547830970: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547830975: cmp    $0x2c,%eax
  0x00007fb547830978: je     Stub::aescrypt_encryptBlock+263 0x00007fb5478309c7
  0x00007fb54783097a: vaesenc %xmm2,%xmm0,%xmm0
  0x00007fb54783097f: vaesenc %xmm3,%xmm0,%xmm0
  0x00007fb547830984: vmovdqu 0xb0(%rdx),%xmm2
  0x00007fb54783098c: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb547830991: vmovdqu 0xc0(%rdx),%xmm3
  0x00007fb547830999: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783099e: cmp    $0x34,%eax
  0x00007fb5478309a1: je     Stub::aescrypt_encryptBlock+263 0x00007fb5478309c7
  0x00007fb5478309a3: vaesenc %xmm2,%xmm0,%xmm0
  0x00007fb5478309a8: vaesenc %xmm3,%xmm0,%xmm0
  0x00007fb5478309ad: vmovdqu 0xd0(%rdx),%xmm2
  0x00007fb5478309b5: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb5478309ba: vmovdqu 0xe0(%rdx),%xmm3
  0x00007fb5478309c2: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478309c7: vaesenc %xmm2,%xmm0,%xmm0
  0x00007fb5478309cc: vaesenclast %xmm3,%xmm0,%xmm0
  0x00007fb5478309d1: vmovdqu %xmm0,(%rsi)
  0x00007fb5478309d5: xor    %rax,%rax
  0x00007fb5478309d8: leaveq 
  0x00007fb5478309d9: retq   

StubRoutines::aescrypt_decryptBlock [0x00007fb5478309e0, 0x00007fb547830afa[ (282 bytes)
  0x00007fb5478309e0: push   %rbp
  0x00007fb5478309e1: mov    %rsp,%rbp
  0x00007fb5478309e4: mov    -0x4(%rdx),%eax
  0x00007fb5478309e7: vmovdqu -0x13f(%rip),%xmm1        # Stub::key_shuffle_mask
  0x00007fb5478309ef: vmovdqu (%rdi),%xmm0
  0x00007fb5478309f3: vmovdqu 0x10(%rdx),%xmm2
  0x00007fb5478309f8: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb5478309fd: vmovdqu 0x20(%rdx),%xmm3
  0x00007fb547830a02: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547830a07: vmovdqu 0x30(%rdx),%xmm4
  0x00007fb547830a0c: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547830a11: vmovdqu 0x40(%rdx),%xmm5
  0x00007fb547830a16: vpshufb %xmm1,%xmm5,%xmm5
  0x00007fb547830a1b: vpxor  %xmm2,%xmm0,%xmm0
  0x00007fb547830a1f: vaesdec %xmm3,%xmm0,%xmm0
  0x00007fb547830a24: vaesdec %xmm4,%xmm0,%xmm0
  0x00007fb547830a29: vaesdec %xmm5,%xmm0,%xmm0
  0x00007fb547830a2e: vmovdqu 0x50(%rdx),%xmm2
  0x00007fb547830a33: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb547830a38: vmovdqu 0x60(%rdx),%xmm3
  0x00007fb547830a3d: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547830a42: vmovdqu 0x70(%rdx),%xmm4
  0x00007fb547830a47: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547830a4c: vmovdqu 0x80(%rdx),%xmm5
  0x00007fb547830a54: vpshufb %xmm1,%xmm5,%xmm5
  0x00007fb547830a59: vaesdec %xmm2,%xmm0,%xmm0
  0x00007fb547830a5e: vaesdec %xmm3,%xmm0,%xmm0
  0x00007fb547830a63: vaesdec %xmm4,%xmm0,%xmm0
  0x00007fb547830a68: vaesdec %xmm5,%xmm0,%xmm0
  0x00007fb547830a6d: vmovdqu 0x90(%rdx),%xmm2
  0x00007fb547830a75: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb547830a7a: vmovdqu 0xa0(%rdx),%xmm3
  0x00007fb547830a82: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547830a87: vmovdqu (%rdx),%xmm4
  0x00007fb547830a8b: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547830a90: cmp    $0x2c,%eax
  0x00007fb547830a93: je     Stub::aescrypt_decryptBlock+258 0x00007fb547830ae2
  0x00007fb547830a95: vaesdec %xmm2,%xmm0,%xmm0
  0x00007fb547830a9a: vaesdec %xmm3,%xmm0,%xmm0
  0x00007fb547830a9f: vmovdqu 0xb0(%rdx),%xmm2
  0x00007fb547830aa7: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb547830aac: vmovdqu 0xc0(%rdx),%xmm3
  0x00007fb547830ab4: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547830ab9: cmp    $0x34,%eax
  0x00007fb547830abc: je     Stub::aescrypt_decryptBlock+258 0x00007fb547830ae2
  0x00007fb547830abe: vaesdec %xmm2,%xmm0,%xmm0
  0x00007fb547830ac3: vaesdec %xmm3,%xmm0,%xmm0
  0x00007fb547830ac8: vmovdqu 0xd0(%rdx),%xmm2
  0x00007fb547830ad0: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb547830ad5: vmovdqu 0xe0(%rdx),%xmm3
  0x00007fb547830add: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547830ae2: vaesdec %xmm2,%xmm0,%xmm0
  0x00007fb547830ae7: vaesdec %xmm3,%xmm0,%xmm0
  0x00007fb547830aec: vaesdeclast %xmm4,%xmm0,%xmm0
  0x00007fb547830af1: vmovdqu %xmm0,(%rsi)
  0x00007fb547830af5: xor    %rax,%rax
  0x00007fb547830af8: leaveq 
  0x00007fb547830af9: retq   

StubRoutines::cipherBlockChaining_encryptAESCrypt [0x00007fb547830b00, 0x00007fb547830d28[ (552 bytes)
  0x00007fb547830b00: push   %rbp
  0x00007fb547830b01: mov    %rsp,%rbp
  0x00007fb547830b04: push   %r8
  0x00007fb547830b06: vmovdqu -0x25e(%rip),%xmm1        # Stub::key_shuffle_mask
  0x00007fb547830b0e: vmovdqu (%rdx),%xmm2
  0x00007fb547830b12: vpshufb %xmm1,%xmm2,%xmm2
  0x00007fb547830b17: vmovdqu 0x10(%rdx),%xmm3
  0x00007fb547830b1c: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547830b21: vmovdqu 0x20(%rdx),%xmm4
  0x00007fb547830b26: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547830b2b: vmovdqu 0x30(%rdx),%xmm5
  0x00007fb547830b30: vpshufb %xmm1,%xmm5,%xmm5
  0x00007fb547830b35: vmovdqu 0x40(%rdx),%xmm6
  0x00007fb547830b3a: vpshufb %xmm1,%xmm6,%xmm6
  0x00007fb547830b3f: vmovdqu 0x50(%rdx),%xmm7
  0x00007fb547830b44: vpshufb %xmm1,%xmm7,%xmm7
  0x00007fb547830b49: vmovdqu 0x60(%rdx),%xmm8
  0x00007fb547830b4e: vpshufb %xmm1,%xmm8,%xmm8
  0x00007fb547830b53: vmovdqu 0x70(%rdx),%xmm9
  0x00007fb547830b58: vpshufb %xmm1,%xmm9,%xmm9
  0x00007fb547830b5d: vmovdqu 0x80(%rdx),%xmm10
  0x00007fb547830b65: vpshufb %xmm1,%xmm10,%xmm10
  0x00007fb547830b6a: vmovdqu 0x90(%rdx),%xmm11
  0x00007fb547830b72: vpshufb %xmm1,%xmm11,%xmm11
  0x00007fb547830b77: vmovdqu 0xa0(%rdx),%xmm12
  0x00007fb547830b7f: vpshufb %xmm1,%xmm12,%xmm12
  0x00007fb547830b84: vmovdqu (%rcx),%xmm0
  0x00007fb547830b88: mov    -0x4(%rdx),%eax
  0x00007fb547830b8b: cmp    $0x2c,%eax
  0x00007fb547830b8e: jne    Stub::cipherBlockChaining_encryptAESCrypt+245 0x00007fb547830bf5
  0x00007fb547830b94: movabs $0x0,%rax
  0x00007fb547830b9e: xchg   %ax,%ax
  0x00007fb547830ba0: vmovdqu (%rdi,%rax,1),%xmm1
  0x00007fb547830ba5: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547830ba9: vpxor  %xmm2,%xmm0,%xmm0
  0x00007fb547830bad: vaesenc %xmm3,%xmm0,%xmm0
  0x00007fb547830bb2: vaesenc %xmm4,%xmm0,%xmm0
  0x00007fb547830bb7: vaesenc %xmm5,%xmm0,%xmm0
  0x00007fb547830bbc: vaesenc %xmm6,%xmm0,%xmm0
  0x00007fb547830bc1: vaesenc %xmm7,%xmm0,%xmm0
  0x00007fb547830bc6: vaesenc %xmm8,%xmm0,%xmm0
  0x00007fb547830bcb: vaesenc %xmm9,%xmm0,%xmm0
  0x00007fb547830bd0: vaesenc %xmm10,%xmm0,%xmm0
  0x00007fb547830bd5: vaesenc %xmm11,%xmm0,%xmm0
  0x00007fb547830bda: vaesenclast %xmm12,%xmm0,%xmm0
  0x00007fb547830bdf: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb547830be4: add    $0x10,%rax
  0x00007fb547830be8: sub    $0x10,%r8
  0x00007fb547830bec: jne    Stub::cipherBlockChaining_encryptAESCrypt+160 0x00007fb547830ba0
  0x00007fb547830bee: vmovdqu %xmm0,(%rcx)
  0x00007fb547830bf2: pop    %rax
  0x00007fb547830bf3: leaveq 
  0x00007fb547830bf4: retq   
  0x00007fb547830bf5: vmovdqu 0xb0(%rdx),%xmm13
  0x00007fb547830bfd: vpshufb %xmm1,%xmm13,%xmm13
  0x00007fb547830c02: vmovdqu 0xc0(%rdx),%xmm14
  0x00007fb547830c0a: vpshufb %xmm1,%xmm14,%xmm14
  0x00007fb547830c0f: cmp    $0x34,%eax
  0x00007fb547830c12: jne    Stub::cipherBlockChaining_encryptAESCrypt+397 0x00007fb547830c8d
  0x00007fb547830c18: movabs $0x0,%rax
  0x00007fb547830c22: data16 nopw 0x0(%rax,%rax,1)
  0x00007fb547830c2c: data16 data16 xchg %ax,%ax
  0x00007fb547830c30: vmovdqu (%rdi,%rax,1),%xmm1
  0x00007fb547830c35: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547830c39: vpxor  %xmm2,%xmm0,%xmm0
  0x00007fb547830c3d: vaesenc %xmm3,%xmm0,%xmm0
  0x00007fb547830c42: vaesenc %xmm4,%xmm0,%xmm0
  0x00007fb547830c47: vaesenc %xmm5,%xmm0,%xmm0
  0x00007fb547830c4c: vaesenc %xmm6,%xmm0,%xmm0
  0x00007fb547830c51: vaesenc %xmm7,%xmm0,%xmm0
  0x00007fb547830c56: vaesenc %xmm8,%xmm0,%xmm0
  0x00007fb547830c5b: vaesenc %xmm9,%xmm0,%xmm0
  0x00007fb547830c60: vaesenc %xmm10,%xmm0,%xmm0
  0x00007fb547830c65: vaesenc %xmm11,%xmm0,%xmm0
  0x00007fb547830c6a: vaesenc %xmm12,%xmm0,%xmm0
  0x00007fb547830c6f: vaesenc %xmm13,%xmm0,%xmm0
  0x00007fb547830c74: vaesenclast %xmm14,%xmm0,%xmm0
  0x00007fb547830c79: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb547830c7e: add    $0x10,%rax
  0x00007fb547830c82: sub    $0x10,%r8
  0x00007fb547830c86: jne    Stub::cipherBlockChaining_encryptAESCrypt+304 0x00007fb547830c30
  0x00007fb547830c88: jmpq   Stub::cipherBlockChaining_encryptAESCrypt+238 0x00007fb547830bee
  0x00007fb547830c8d: vmovdqu 0xd0(%rdx),%xmm15
  0x00007fb547830c95: vpshufb %xmm1,%xmm15,%xmm15
  0x00007fb547830c9a: movabs $0x0,%rax
  0x00007fb547830ca4: nopl   0x0(%rax,%rax,1)
  0x00007fb547830cac: data16 data16 xchg %ax,%ax
  0x00007fb547830cb0: vmovdqu (%rdi,%rax,1),%xmm1
  0x00007fb547830cb5: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547830cb9: vpxor  %xmm2,%xmm0,%xmm0
  0x00007fb547830cbd: vaesenc %xmm3,%xmm0,%xmm0
  0x00007fb547830cc2: vaesenc %xmm4,%xmm0,%xmm0
  0x00007fb547830cc7: vaesenc %xmm5,%xmm0,%xmm0
  0x00007fb547830ccc: vaesenc %xmm6,%xmm0,%xmm0
  0x00007fb547830cd1: vaesenc %xmm7,%xmm0,%xmm0
  0x00007fb547830cd6: vaesenc %xmm8,%xmm0,%xmm0
  0x00007fb547830cdb: vaesenc %xmm9,%xmm0,%xmm0
  0x00007fb547830ce0: vaesenc %xmm10,%xmm0,%xmm0
  0x00007fb547830ce5: vaesenc %xmm11,%xmm0,%xmm0
  0x00007fb547830cea: vaesenc %xmm12,%xmm0,%xmm0
  0x00007fb547830cef: vaesenc %xmm13,%xmm0,%xmm0
  0x00007fb547830cf4: vaesenc %xmm14,%xmm0,%xmm0
  0x00007fb547830cf9: vaesenc %xmm15,%xmm0,%xmm0
  0x00007fb547830cfe: vmovdqu 0xe0(%rdx),%xmm1
  0x00007fb547830d06: vpshufb -0x45f(%rip),%xmm1,%xmm1        # Stub::key_shuffle_mask
  0x00007fb547830d0f: vaesenclast %xmm1,%xmm0,%xmm0
  0x00007fb547830d14: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb547830d19: add    $0x10,%rax
  0x00007fb547830d1d: sub    $0x10,%r8
  0x00007fb547830d21: jne    Stub::cipherBlockChaining_encryptAESCrypt+432 0x00007fb547830cb0
  0x00007fb547830d23: jmpq   Stub::cipherBlockChaining_encryptAESCrypt+238 0x00007fb547830bee

StubRoutines::cipherBlockChaining_decryptAESCrypt [0x00007fb547830d40, 0x00007fb547831509[ (1993 bytes)
  0x00007fb547830d40: push   %rbp
  0x00007fb547830d41: mov    %rsp,%rbp
  0x00007fb547830d44: push   %r8
  0x00007fb547830d46: push   %rbx
  0x00007fb547830d47: vmovdqu -0x49f(%rip),%xmm1        # Stub::key_shuffle_mask
  0x00007fb547830d4f: vmovdqu 0x10(%rdx),%xmm5
  0x00007fb547830d54: vpshufb %xmm1,%xmm5,%xmm5
  0x00007fb547830d59: vmovdqu 0x20(%rdx),%xmm6
  0x00007fb547830d5e: vpshufb %xmm1,%xmm6,%xmm6
  0x00007fb547830d63: vmovdqu 0x30(%rdx),%xmm7
  0x00007fb547830d68: vpshufb %xmm1,%xmm7,%xmm7
  0x00007fb547830d6d: vmovdqu 0x40(%rdx),%xmm8
  0x00007fb547830d72: vpshufb %xmm1,%xmm8,%xmm8
  0x00007fb547830d77: vmovdqu 0x50(%rdx),%xmm9
  0x00007fb547830d7c: vpshufb %xmm1,%xmm9,%xmm9
  0x00007fb547830d81: vmovdqu 0x60(%rdx),%xmm10
  0x00007fb547830d86: vpshufb %xmm1,%xmm10,%xmm10
  0x00007fb547830d8b: vmovdqu 0x70(%rdx),%xmm11
  0x00007fb547830d90: vpshufb %xmm1,%xmm11,%xmm11
  0x00007fb547830d95: vmovdqu 0x80(%rdx),%xmm12
  0x00007fb547830d9d: vpshufb %xmm1,%xmm12,%xmm12
  0x00007fb547830da2: vmovdqu 0x90(%rdx),%xmm13
  0x00007fb547830daa: vpshufb %xmm1,%xmm13,%xmm13
  0x00007fb547830daf: vmovdqu 0xa0(%rdx),%xmm14
  0x00007fb547830db7: vpshufb %xmm1,%xmm14,%xmm14
  0x00007fb547830dbc: vmovdqu (%rdx),%xmm15
  0x00007fb547830dc0: vpshufb %xmm1,%xmm15,%xmm15
  0x00007fb547830dc5: vmovdqu (%rcx),%xmm1
  0x00007fb547830dc9: xor    %rax,%rax
  0x00007fb547830dcc: mov    -0x4(%rdx),%ebx
  0x00007fb547830dcf: cmp    $0x34,%ebx
  0x00007fb547830dd2: je     Stub::cipherBlockChaining_decryptAESCrypt+603 0x00007fb547830f9b
  0x00007fb547830dd8: cmp    $0x3c,%ebx
  0x00007fb547830ddb: je     Stub::cipherBlockChaining_decryptAESCrypt+1221 0x00007fb547831205
  0x00007fb547830de1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb547830dec: data16 data16 xchg %ax,%ax
  0x00007fb547830df0: cmp    $0x40,%r8
  0x00007fb547830df4: jl     Stub::cipherBlockChaining_decryptAESCrypt+500 0x00007fb547830f34
  0x00007fb547830dfa: vmovdqu (%rdi,%rax,1),%xmm0
  0x00007fb547830dff: vmovdqu 0x10(%rdi,%rax,1),%xmm2
  0x00007fb547830e05: vmovdqu 0x20(%rdi,%rax,1),%xmm3
  0x00007fb547830e0b: vmovdqu 0x30(%rdi,%rax,1),%xmm4
  0x00007fb547830e11: vpxor  %xmm5,%xmm0,%xmm0
  0x00007fb547830e15: vpxor  %xmm5,%xmm2,%xmm2
  0x00007fb547830e19: vpxor  %xmm5,%xmm3,%xmm3
  0x00007fb547830e1d: vpxor  %xmm5,%xmm4,%xmm4
  0x00007fb547830e21: vaesdec %xmm6,%xmm0,%xmm0
  0x00007fb547830e26: vaesdec %xmm6,%xmm2,%xmm2
  0x00007fb547830e2b: vaesdec %xmm6,%xmm3,%xmm3
  0x00007fb547830e30: vaesdec %xmm6,%xmm4,%xmm4
  0x00007fb547830e35: vaesdec %xmm7,%xmm0,%xmm0
  0x00007fb547830e3a: vaesdec %xmm7,%xmm2,%xmm2
  0x00007fb547830e3f: vaesdec %xmm7,%xmm3,%xmm3
  0x00007fb547830e44: vaesdec %xmm7,%xmm4,%xmm4
  0x00007fb547830e49: vaesdec %xmm8,%xmm0,%xmm0
  0x00007fb547830e4e: vaesdec %xmm8,%xmm2,%xmm2
  0x00007fb547830e53: vaesdec %xmm8,%xmm3,%xmm3
  0x00007fb547830e58: vaesdec %xmm8,%xmm4,%xmm4
  0x00007fb547830e5d: vaesdec %xmm9,%xmm0,%xmm0
  0x00007fb547830e62: vaesdec %xmm9,%xmm2,%xmm2
  0x00007fb547830e67: vaesdec %xmm9,%xmm3,%xmm3
  0x00007fb547830e6c: vaesdec %xmm9,%xmm4,%xmm4
  0x00007fb547830e71: vaesdec %xmm10,%xmm0,%xmm0
  0x00007fb547830e76: vaesdec %xmm10,%xmm2,%xmm2
  0x00007fb547830e7b: vaesdec %xmm10,%xmm3,%xmm3
  0x00007fb547830e80: vaesdec %xmm10,%xmm4,%xmm4
  0x00007fb547830e85: vaesdec %xmm11,%xmm0,%xmm0
  0x00007fb547830e8a: vaesdec %xmm11,%xmm2,%xmm2
  0x00007fb547830e8f: vaesdec %xmm11,%xmm3,%xmm3
  0x00007fb547830e94: vaesdec %xmm11,%xmm4,%xmm4
  0x00007fb547830e99: vaesdec %xmm12,%xmm0,%xmm0
  0x00007fb547830e9e: vaesdec %xmm12,%xmm2,%xmm2
  0x00007fb547830ea3: vaesdec %xmm12,%xmm3,%xmm3
  0x00007fb547830ea8: vaesdec %xmm12,%xmm4,%xmm4
  0x00007fb547830ead: vaesdec %xmm13,%xmm0,%xmm0
  0x00007fb547830eb2: vaesdec %xmm13,%xmm2,%xmm2
  0x00007fb547830eb7: vaesdec %xmm13,%xmm3,%xmm3
  0x00007fb547830ebc: vaesdec %xmm13,%xmm4,%xmm4
  0x00007fb547830ec1: vaesdec %xmm14,%xmm0,%xmm0
  0x00007fb547830ec6: vaesdec %xmm14,%xmm2,%xmm2
  0x00007fb547830ecb: vaesdec %xmm14,%xmm3,%xmm3
  0x00007fb547830ed0: vaesdec %xmm14,%xmm4,%xmm4
  0x00007fb547830ed5: vaesdeclast %xmm15,%xmm0,%xmm0
  0x00007fb547830eda: vaesdeclast %xmm15,%xmm2,%xmm2
  0x00007fb547830edf: vaesdeclast %xmm15,%xmm3,%xmm3
  0x00007fb547830ee4: vaesdeclast %xmm15,%xmm4,%xmm4
  0x00007fb547830ee9: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547830eed: vmovdqu (%rdi,%rax,1),%xmm1
  0x00007fb547830ef2: vpxor  %xmm1,%xmm2,%xmm2
  0x00007fb547830ef6: vmovdqu 0x10(%rdi,%rax,1),%xmm1
  0x00007fb547830efc: vpxor  %xmm1,%xmm3,%xmm3
  0x00007fb547830f00: vmovdqu 0x20(%rdi,%rax,1),%xmm1
  0x00007fb547830f06: vpxor  %xmm1,%xmm4,%xmm4
  0x00007fb547830f0a: vmovdqu 0x30(%rdi,%rax,1),%xmm1
  0x00007fb547830f10: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb547830f15: vmovdqu %xmm2,0x10(%rsi,%rax,1)
  0x00007fb547830f1b: vmovdqu %xmm3,0x20(%rsi,%rax,1)
  0x00007fb547830f21: vmovdqu %xmm4,0x30(%rsi,%rax,1)
  0x00007fb547830f27: add    $0x40,%rax
  0x00007fb547830f2b: sub    $0x40,%r8
  0x00007fb547830f2f: jmpq   Stub::cipherBlockChaining_decryptAESCrypt+176 0x00007fb547830df0
  0x00007fb547830f34: cmp    $0x0,%r8
  0x00007fb547830f38: je     Stub::cipherBlockChaining_decryptAESCrypt+1985 0x00007fb547831501
  0x00007fb547830f3e: xchg   %ax,%ax
  0x00007fb547830f40: vmovdqu (%rdi,%rax,1),%xmm0
  0x00007fb547830f45: vmovdqa %xmm0,%xmm2
  0x00007fb547830f49: vpxor  %xmm5,%xmm0,%xmm0
  0x00007fb547830f4d: vaesdec %xmm6,%xmm0,%xmm0
  0x00007fb547830f52: vaesdec %xmm7,%xmm0,%xmm0
  0x00007fb547830f57: vaesdec %xmm8,%xmm0,%xmm0
  0x00007fb547830f5c: vaesdec %xmm9,%xmm0,%xmm0
  0x00007fb547830f61: vaesdec %xmm10,%xmm0,%xmm0
  0x00007fb547830f66: vaesdec %xmm11,%xmm0,%xmm0
  0x00007fb547830f6b: vaesdec %xmm12,%xmm0,%xmm0
  0x00007fb547830f70: vaesdec %xmm13,%xmm0,%xmm0
  0x00007fb547830f75: vaesdec %xmm14,%xmm0,%xmm0
  0x00007fb547830f7a: vaesdeclast %xmm15,%xmm0,%xmm0
  0x00007fb547830f7f: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547830f83: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb547830f88: vmovdqa %xmm2,%xmm1
  0x00007fb547830f8c: add    $0x10,%rax
  0x00007fb547830f90: sub    $0x10,%r8
  0x00007fb547830f94: jne    Stub::cipherBlockChaining_decryptAESCrypt+512 0x00007fb547830f40
  0x00007fb547830f96: jmpq   Stub::cipherBlockChaining_decryptAESCrypt+1985 0x00007fb547831501
  0x00007fb547830f9b: cmp    $0x40,%r8
  0x00007fb547830f9f: jl     Stub::cipherBlockChaining_decryptAESCrypt+1075 0x00007fb547831173
  0x00007fb547830fa5: sub    $0x30,%rsp
  0x00007fb547830fa9: vmovdqu %xmm15,(%rsp)
  0x00007fb547830fae: vmovdqu 0xb0(%rdx),%xmm15
  0x00007fb547830fb6: vpshufb -0x70f(%rip),%xmm15,%xmm15        # Stub::key_shuffle_mask
  0x00007fb547830fbf: vmovdqu %xmm15,0x10(%rsp)
  0x00007fb547830fc5: vmovdqu 0xc0(%rdx),%xmm1
  0x00007fb547830fcd: vpshufb -0x726(%rip),%xmm1,%xmm1        # Stub::key_shuffle_mask
  0x00007fb547830fd6: vmovdqu %xmm1,0x20(%rsp)
  0x00007fb547830fdc: nopl   0x0(%rax)
  0x00007fb547830fe0: cmp    $0x40,%r8
  0x00007fb547830fe4: jl     Stub::cipherBlockChaining_decryptAESCrypt+1061 0x00007fb547831165
  0x00007fb547830fea: vmovdqu 0x10(%rsp),%xmm15
  0x00007fb547830ff0: vmovdqu 0x20(%rsp),%xmm1
  0x00007fb547830ff6: vmovdqu (%rdi,%rax,1),%xmm0
  0x00007fb547830ffb: vmovdqu 0x10(%rdi,%rax,1),%xmm2
  0x00007fb547831001: vmovdqu 0x20(%rdi,%rax,1),%xmm3
  0x00007fb547831007: vmovdqu 0x30(%rdi,%rax,1),%xmm4
  0x00007fb54783100d: vpxor  %xmm5,%xmm0,%xmm0
  0x00007fb547831011: vpxor  %xmm5,%xmm2,%xmm2
  0x00007fb547831015: vpxor  %xmm5,%xmm3,%xmm3
  0x00007fb547831019: vpxor  %xmm5,%xmm4,%xmm4
  0x00007fb54783101d: vaesdec %xmm6,%xmm0,%xmm0
  0x00007fb547831022: vaesdec %xmm6,%xmm2,%xmm2
  0x00007fb547831027: vaesdec %xmm6,%xmm3,%xmm3
  0x00007fb54783102c: vaesdec %xmm6,%xmm4,%xmm4
  0x00007fb547831031: vaesdec %xmm7,%xmm0,%xmm0
  0x00007fb547831036: vaesdec %xmm7,%xmm2,%xmm2
  0x00007fb54783103b: vaesdec %xmm7,%xmm3,%xmm3
  0x00007fb547831040: vaesdec %xmm7,%xmm4,%xmm4
  0x00007fb547831045: vaesdec %xmm8,%xmm0,%xmm0
  0x00007fb54783104a: vaesdec %xmm8,%xmm2,%xmm2
  0x00007fb54783104f: vaesdec %xmm8,%xmm3,%xmm3
  0x00007fb547831054: vaesdec %xmm8,%xmm4,%xmm4
  0x00007fb547831059: vaesdec %xmm9,%xmm0,%xmm0
  0x00007fb54783105e: vaesdec %xmm9,%xmm2,%xmm2
  0x00007fb547831063: vaesdec %xmm9,%xmm3,%xmm3
  0x00007fb547831068: vaesdec %xmm9,%xmm4,%xmm4
  0x00007fb54783106d: vaesdec %xmm10,%xmm0,%xmm0
  0x00007fb547831072: vaesdec %xmm10,%xmm2,%xmm2
  0x00007fb547831077: vaesdec %xmm10,%xmm3,%xmm3
  0x00007fb54783107c: vaesdec %xmm10,%xmm4,%xmm4
  0x00007fb547831081: vaesdec %xmm11,%xmm0,%xmm0
  0x00007fb547831086: vaesdec %xmm11,%xmm2,%xmm2
  0x00007fb54783108b: vaesdec %xmm11,%xmm3,%xmm3
  0x00007fb547831090: vaesdec %xmm11,%xmm4,%xmm4
  0x00007fb547831095: vaesdec %xmm12,%xmm0,%xmm0
  0x00007fb54783109a: vaesdec %xmm12,%xmm2,%xmm2
  0x00007fb54783109f: vaesdec %xmm12,%xmm3,%xmm3
  0x00007fb5478310a4: vaesdec %xmm12,%xmm4,%xmm4
  0x00007fb5478310a9: vaesdec %xmm13,%xmm0,%xmm0
  0x00007fb5478310ae: vaesdec %xmm13,%xmm2,%xmm2
  0x00007fb5478310b3: vaesdec %xmm13,%xmm3,%xmm3
  0x00007fb5478310b8: vaesdec %xmm13,%xmm4,%xmm4
  0x00007fb5478310bd: vaesdec %xmm14,%xmm0,%xmm0
  0x00007fb5478310c2: vaesdec %xmm14,%xmm2,%xmm2
  0x00007fb5478310c7: vaesdec %xmm14,%xmm3,%xmm3
  0x00007fb5478310cc: vaesdec %xmm14,%xmm4,%xmm4
  0x00007fb5478310d1: vaesdec %xmm15,%xmm0,%xmm0
  0x00007fb5478310d6: vaesdec %xmm15,%xmm2,%xmm2
  0x00007fb5478310db: vaesdec %xmm15,%xmm3,%xmm3
  0x00007fb5478310e0: vaesdec %xmm15,%xmm4,%xmm4
  0x00007fb5478310e5: vmovdqu (%rsp),%xmm15
  0x00007fb5478310ea: vaesdec %xmm1,%xmm0,%xmm0
  0x00007fb5478310ef: vaesdec %xmm1,%xmm2,%xmm2
  0x00007fb5478310f4: vaesdec %xmm1,%xmm3,%xmm3
  0x00007fb5478310f9: vaesdec %xmm1,%xmm4,%xmm4
  0x00007fb5478310fe: vmovdqu (%rcx),%xmm1
  0x00007fb547831102: vaesdeclast %xmm15,%xmm0,%xmm0
  0x00007fb547831107: vaesdeclast %xmm15,%xmm2,%xmm2
  0x00007fb54783110c: vaesdeclast %xmm15,%xmm3,%xmm3
  0x00007fb547831111: vaesdeclast %xmm15,%xmm4,%xmm4
  0x00007fb547831116: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb54783111a: vmovdqu (%rdi,%rax,1),%xmm1
  0x00007fb54783111f: vpxor  %xmm1,%xmm2,%xmm2
  0x00007fb547831123: vmovdqu 0x10(%rdi,%rax,1),%xmm1
  0x00007fb547831129: vpxor  %xmm1,%xmm3,%xmm3
  0x00007fb54783112d: vmovdqu 0x20(%rdi,%rax,1),%xmm1
  0x00007fb547831133: vpxor  %xmm1,%xmm4,%xmm4
  0x00007fb547831137: vmovdqu 0x30(%rdi,%rax,1),%xmm1
  0x00007fb54783113d: vmovdqu %xmm1,(%rcx)
  0x00007fb547831141: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb547831146: vmovdqu %xmm2,0x10(%rsi,%rax,1)
  0x00007fb54783114c: vmovdqu %xmm3,0x20(%rsi,%rax,1)
  0x00007fb547831152: vmovdqu %xmm4,0x30(%rsi,%rax,1)
  0x00007fb547831158: add    $0x40,%rax
  0x00007fb54783115c: sub    $0x40,%r8
  0x00007fb547831160: jmpq   Stub::cipherBlockChaining_decryptAESCrypt+672 0x00007fb547830fe0
  0x00007fb547831165: add    $0x30,%rsp
  0x00007fb547831169: cmp    $0x0,%r8
  0x00007fb54783116d: je     Stub::cipherBlockChaining_decryptAESCrypt+1985 0x00007fb547831501
  0x00007fb547831173: vmovdqu 0xb0(%rdx),%xmm3
  0x00007fb54783117b: vpshufb -0x8d4(%rip),%xmm3,%xmm3        # Stub::key_shuffle_mask
  0x00007fb547831184: vmovdqu 0xc0(%rdx),%xmm4
  0x00007fb54783118c: vpshufb -0x8e5(%rip),%xmm4,%xmm4        # Stub::key_shuffle_mask
  0x00007fb547831195: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb5478311a0: vmovdqu (%rdi,%rax,1),%xmm0
  0x00007fb5478311a5: vmovdqa %xmm0,%xmm2
  0x00007fb5478311a9: vpxor  %xmm5,%xmm0,%xmm0
  0x00007fb5478311ad: vaesdec %xmm6,%xmm0,%xmm0
  0x00007fb5478311b2: vaesdec %xmm7,%xmm0,%xmm0
  0x00007fb5478311b7: vaesdec %xmm8,%xmm0,%xmm0
  0x00007fb5478311bc: vaesdec %xmm9,%xmm0,%xmm0
  0x00007fb5478311c1: vaesdec %xmm10,%xmm0,%xmm0
  0x00007fb5478311c6: vaesdec %xmm11,%xmm0,%xmm0
  0x00007fb5478311cb: vaesdec %xmm12,%xmm0,%xmm0
  0x00007fb5478311d0: vaesdec %xmm13,%xmm0,%xmm0
  0x00007fb5478311d5: vaesdec %xmm14,%xmm0,%xmm0
  0x00007fb5478311da: vaesdec %xmm3,%xmm0,%xmm0
  0x00007fb5478311df: vaesdec %xmm4,%xmm0,%xmm0
  0x00007fb5478311e4: vaesdeclast %xmm15,%xmm0,%xmm0
  0x00007fb5478311e9: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb5478311ed: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb5478311f2: vmovdqa %xmm2,%xmm1
  0x00007fb5478311f6: add    $0x10,%rax
  0x00007fb5478311fa: sub    $0x10,%r8
  0x00007fb5478311fe: jne    Stub::cipherBlockChaining_decryptAESCrypt+1120 0x00007fb5478311a0
  0x00007fb547831200: jmpq   Stub::cipherBlockChaining_decryptAESCrypt+1985 0x00007fb547831501
  0x00007fb547831205: cmp    $0x40,%r8
  0x00007fb547831209: jl     Stub::cipherBlockChaining_decryptAESCrypt+1799 0x00007fb547831447
  0x00007fb54783120f: sub    $0x50,%rsp
  0x00007fb547831213: vmovdqu %xmm15,(%rsp)
  0x00007fb547831218: vmovdqu 0xd0(%rdx),%xmm15
  0x00007fb547831220: vpshufb -0x979(%rip),%xmm15,%xmm15        # Stub::key_shuffle_mask
  0x00007fb547831229: vmovdqu %xmm15,0x30(%rsp)
  0x00007fb54783122f: vmovdqu 0xe0(%rdx),%xmm1
  0x00007fb547831237: vpshufb -0x990(%rip),%xmm1,%xmm1        # Stub::key_shuffle_mask
  0x00007fb547831240: vmovdqu %xmm1,0x40(%rsp)
  0x00007fb547831246: vmovdqu 0xb0(%rdx),%xmm15
  0x00007fb54783124e: vpshufb -0x9a7(%rip),%xmm15,%xmm15        # Stub::key_shuffle_mask
  0x00007fb547831257: vmovdqu %xmm15,0x10(%rsp)
  0x00007fb54783125d: vmovdqu 0xc0(%rdx),%xmm1
  0x00007fb547831265: vpshufb -0x9be(%rip),%xmm1,%xmm1        # Stub::key_shuffle_mask
  0x00007fb54783126e: vmovdqu %xmm1,0x20(%rsp)
  0x00007fb547831274: nopl   0x0(%rax,%rax,1)
  0x00007fb54783127c: data16 data16 xchg %ax,%ax
  0x00007fb547831280: cmp    $0x40,%r8
  0x00007fb547831284: jl     Stub::cipherBlockChaining_decryptAESCrypt+1785 0x00007fb547831439
  0x00007fb54783128a: vmovdqu 0x10(%rsp),%xmm15
  0x00007fb547831290: vmovdqu 0x20(%rsp),%xmm1
  0x00007fb547831296: vmovdqu (%rdi,%rax,1),%xmm0
  0x00007fb54783129b: vmovdqu 0x10(%rdi,%rax,1),%xmm2
  0x00007fb5478312a1: vmovdqu 0x20(%rdi,%rax,1),%xmm3
  0x00007fb5478312a7: vmovdqu 0x30(%rdi,%rax,1),%xmm4
  0x00007fb5478312ad: vpxor  %xmm5,%xmm0,%xmm0
  0x00007fb5478312b1: vpxor  %xmm5,%xmm2,%xmm2
  0x00007fb5478312b5: vpxor  %xmm5,%xmm3,%xmm3
  0x00007fb5478312b9: vpxor  %xmm5,%xmm4,%xmm4
  0x00007fb5478312bd: vaesdec %xmm6,%xmm0,%xmm0
  0x00007fb5478312c2: vaesdec %xmm6,%xmm2,%xmm2
  0x00007fb5478312c7: vaesdec %xmm6,%xmm3,%xmm3
  0x00007fb5478312cc: vaesdec %xmm6,%xmm4,%xmm4
  0x00007fb5478312d1: vaesdec %xmm7,%xmm0,%xmm0
  0x00007fb5478312d6: vaesdec %xmm7,%xmm2,%xmm2
  0x00007fb5478312db: vaesdec %xmm7,%xmm3,%xmm3
  0x00007fb5478312e0: vaesdec %xmm7,%xmm4,%xmm4
  0x00007fb5478312e5: vaesdec %xmm8,%xmm0,%xmm0
  0x00007fb5478312ea: vaesdec %xmm8,%xmm2,%xmm2
  0x00007fb5478312ef: vaesdec %xmm8,%xmm3,%xmm3
  0x00007fb5478312f4: vaesdec %xmm8,%xmm4,%xmm4
  0x00007fb5478312f9: vaesdec %xmm9,%xmm0,%xmm0
  0x00007fb5478312fe: vaesdec %xmm9,%xmm2,%xmm2
  0x00007fb547831303: vaesdec %xmm9,%xmm3,%xmm3
  0x00007fb547831308: vaesdec %xmm9,%xmm4,%xmm4
  0x00007fb54783130d: vaesdec %xmm10,%xmm0,%xmm0
  0x00007fb547831312: vaesdec %xmm10,%xmm2,%xmm2
  0x00007fb547831317: vaesdec %xmm10,%xmm3,%xmm3
  0x00007fb54783131c: vaesdec %xmm10,%xmm4,%xmm4
  0x00007fb547831321: vaesdec %xmm11,%xmm0,%xmm0
  0x00007fb547831326: vaesdec %xmm11,%xmm2,%xmm2
  0x00007fb54783132b: vaesdec %xmm11,%xmm3,%xmm3
  0x00007fb547831330: vaesdec %xmm11,%xmm4,%xmm4
  0x00007fb547831335: vaesdec %xmm12,%xmm0,%xmm0
  0x00007fb54783133a: vaesdec %xmm12,%xmm2,%xmm2
  0x00007fb54783133f: vaesdec %xmm12,%xmm3,%xmm3
  0x00007fb547831344: vaesdec %xmm12,%xmm4,%xmm4
  0x00007fb547831349: vaesdec %xmm13,%xmm0,%xmm0
  0x00007fb54783134e: vaesdec %xmm13,%xmm2,%xmm2
  0x00007fb547831353: vaesdec %xmm13,%xmm3,%xmm3
  0x00007fb547831358: vaesdec %xmm13,%xmm4,%xmm4
  0x00007fb54783135d: vaesdec %xmm14,%xmm0,%xmm0
  0x00007fb547831362: vaesdec %xmm14,%xmm2,%xmm2
  0x00007fb547831367: vaesdec %xmm14,%xmm3,%xmm3
  0x00007fb54783136c: vaesdec %xmm14,%xmm4,%xmm4
  0x00007fb547831371: vaesdec %xmm15,%xmm0,%xmm0
  0x00007fb547831376: vaesdec %xmm15,%xmm2,%xmm2
  0x00007fb54783137b: vaesdec %xmm15,%xmm3,%xmm3
  0x00007fb547831380: vaesdec %xmm15,%xmm4,%xmm4
  0x00007fb547831385: vaesdec %xmm1,%xmm0,%xmm0
  0x00007fb54783138a: vaesdec %xmm1,%xmm2,%xmm2
  0x00007fb54783138f: vaesdec %xmm1,%xmm3,%xmm3
  0x00007fb547831394: vaesdec %xmm1,%xmm4,%xmm4
  0x00007fb547831399: vmovdqu 0x30(%rsp),%xmm15
  0x00007fb54783139f: vmovdqu 0x40(%rsp),%xmm1
  0x00007fb5478313a5: vaesdec %xmm15,%xmm0,%xmm0
  0x00007fb5478313aa: vaesdec %xmm15,%xmm2,%xmm2
  0x00007fb5478313af: vaesdec %xmm15,%xmm3,%xmm3
  0x00007fb5478313b4: vaesdec %xmm15,%xmm4,%xmm4
  0x00007fb5478313b9: vmovdqu (%rsp),%xmm15
  0x00007fb5478313be: vaesdec %xmm1,%xmm0,%xmm0
  0x00007fb5478313c3: vaesdec %xmm1,%xmm2,%xmm2
  0x00007fb5478313c8: vaesdec %xmm1,%xmm3,%xmm3
  0x00007fb5478313cd: vaesdec %xmm1,%xmm4,%xmm4
  0x00007fb5478313d2: vmovdqu (%rcx),%xmm1
  0x00007fb5478313d6: vaesdeclast %xmm15,%xmm0,%xmm0
  0x00007fb5478313db: vaesdeclast %xmm15,%xmm2,%xmm2
  0x00007fb5478313e0: vaesdeclast %xmm15,%xmm3,%xmm3
  0x00007fb5478313e5: vaesdeclast %xmm15,%xmm4,%xmm4
  0x00007fb5478313ea: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb5478313ee: vmovdqu (%rdi,%rax,1),%xmm1
  0x00007fb5478313f3: vpxor  %xmm1,%xmm2,%xmm2
  0x00007fb5478313f7: vmovdqu 0x10(%rdi,%rax,1),%xmm1
  0x00007fb5478313fd: vpxor  %xmm1,%xmm3,%xmm3
  0x00007fb547831401: vmovdqu 0x20(%rdi,%rax,1),%xmm1
  0x00007fb547831407: vpxor  %xmm1,%xmm4,%xmm4
  0x00007fb54783140b: vmovdqu 0x30(%rdi,%rax,1),%xmm1
  0x00007fb547831411: vmovdqu %xmm1,(%rcx)
  0x00007fb547831415: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb54783141a: vmovdqu %xmm2,0x10(%rsi,%rax,1)
  0x00007fb547831420: vmovdqu %xmm3,0x20(%rsi,%rax,1)
  0x00007fb547831426: vmovdqu %xmm4,0x30(%rsi,%rax,1)
  0x00007fb54783142c: add    $0x40,%rax
  0x00007fb547831430: sub    $0x40,%r8
  0x00007fb547831434: jmpq   Stub::cipherBlockChaining_decryptAESCrypt+1344 0x00007fb547831280
  0x00007fb547831439: add    $0x50,%rsp
  0x00007fb54783143d: cmp    $0x0,%r8
  0x00007fb547831441: je     Stub::cipherBlockChaining_decryptAESCrypt+1985 0x00007fb547831501
  0x00007fb547831447: vmovdqu 0xb0(%rdx),%xmm3
  0x00007fb54783144f: vpshufb -0xba8(%rip),%xmm3,%xmm3        # Stub::key_shuffle_mask
  0x00007fb547831458: nopl   0x0(%rax,%rax,1)
  0x00007fb547831460: vmovdqu (%rdi,%rax,1),%xmm0
  0x00007fb547831465: vmovdqa %xmm0,%xmm2
  0x00007fb547831469: vpxor  %xmm5,%xmm0,%xmm0
  0x00007fb54783146d: vaesdec %xmm6,%xmm0,%xmm0
  0x00007fb547831472: vaesdec %xmm7,%xmm0,%xmm0
  0x00007fb547831477: vaesdec %xmm8,%xmm0,%xmm0
  0x00007fb54783147c: vaesdec %xmm9,%xmm0,%xmm0
  0x00007fb547831481: vaesdec %xmm10,%xmm0,%xmm0
  0x00007fb547831486: vaesdec %xmm11,%xmm0,%xmm0
  0x00007fb54783148b: vaesdec %xmm12,%xmm0,%xmm0
  0x00007fb547831490: vaesdec %xmm13,%xmm0,%xmm0
  0x00007fb547831495: vaesdec %xmm14,%xmm0,%xmm0
  0x00007fb54783149a: vaesdec %xmm3,%xmm0,%xmm0
  0x00007fb54783149f: vmovdqu 0xc0(%rdx),%xmm4
  0x00007fb5478314a7: vpshufb -0xc00(%rip),%xmm4,%xmm4        # Stub::key_shuffle_mask
  0x00007fb5478314b0: vaesdec %xmm4,%xmm0,%xmm0
  0x00007fb5478314b5: vmovdqu 0xd0(%rdx),%xmm4
  0x00007fb5478314bd: vpshufb -0xc16(%rip),%xmm4,%xmm4        # Stub::key_shuffle_mask
  0x00007fb5478314c6: vaesdec %xmm4,%xmm0,%xmm0
  0x00007fb5478314cb: vmovdqu 0xe0(%rdx),%xmm4
  0x00007fb5478314d3: vpshufb -0xc2c(%rip),%xmm4,%xmm4        # Stub::key_shuffle_mask
  0x00007fb5478314dc: vaesdec %xmm4,%xmm0,%xmm0
  0x00007fb5478314e1: vaesdeclast %xmm15,%xmm0,%xmm0
  0x00007fb5478314e6: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb5478314ea: vmovdqu %xmm0,(%rsi,%rax,1)
  0x00007fb5478314ef: vmovdqa %xmm2,%xmm1
  0x00007fb5478314f3: add    $0x10,%rax
  0x00007fb5478314f7: sub    $0x10,%r8
  0x00007fb5478314fb: jne    Stub::cipherBlockChaining_decryptAESCrypt+1824 0x00007fb547831460
  0x00007fb547831501: vmovdqu %xmm1,(%rcx)
  0x00007fb547831505: pop    %rbx
  0x00007fb547831506: pop    %rax
  0x00007fb547831507: leaveq 
  0x00007fb547831508: retq   

StubRoutines::counter_shuffle_mask [0x00007fb547831510, 0x00007fb547831520[ (16 bytes)
  0x00007fb547831510: femms  
  0x00007fb547831512: or     $0x90a0b0c,%eax
  0x00007fb547831517: or     %al,(%rdi)
  0x00007fb547831519: (bad)  
  0x00007fb54783151a: add    $0x1020304,%eax
  0x00007fb54783151f: .byte 0x0

StubRoutines::counterMode_AESCrypt [0x00007fb547831520, 0x00007fb547832711[ (4593 bytes)
  0x00007fb547831520: push   %rbp
  0x00007fb547831521: mov    %rsp,%rbp
  0x00007fb547831524: push   %r8
  0x00007fb547831526: mov    0x10(%rbp),%r10
  0x00007fb54783152a: mov    (%r10),%r11d
  0x00007fb54783152d: push   %rbx
  0x00007fb54783152e: vmovdqu (%rcx),%xmm2
  0x00007fb547831532: vmovdqu -0x2a(%rip),%xmm0        # Stub::counter_shuffle_mask
  0x00007fb54783153a: vpshufb %xmm0,%xmm2,%xmm2
  0x00007fb54783153f: movabs $0x0,%rax
  0x00007fb547831549: cmp    $0x10,%r11
  0x00007fb54783154d: jae    Stub::counterMode_AESCrypt+85 0x00007fb547831575
  0x00007fb547831553: cmp    $0x0,%r8
  0x00007fb547831557: jle    Stub::counterMode_AESCrypt+85 0x00007fb547831575
  0x00007fb54783155d: mov    (%r9,%r11,1),%bl
  0x00007fb547831561: xor    (%rdi,%rax,1),%bl
  0x00007fb547831564: mov    %bl,(%rsi,%rax,1)
  0x00007fb547831567: add    $0x1,%rax
  0x00007fb54783156b: add    $0x1,%r11
  0x00007fb54783156f: sub    $0x1,%r8
  0x00007fb547831573: jmp    Stub::counterMode_AESCrypt+41 0x00007fb547831549
  0x00007fb547831575: mov    %r11d,(%r10)
  0x00007fb547831578: vmovdqu -0xcd0(%rip),%xmm1        # Stub::key_shuffle_mask
  0x00007fb547831580: mov    -0x4(%rdx),%ebx
  0x00007fb547831583: cmp    $0x34,%ebx
  0x00007fb547831586: je     Stub::counterMode_AESCrypt+1488 0x00007fb547831af0
  0x00007fb54783158c: cmp    $0x3c,%ebx
  0x00007fb54783158f: je     Stub::counterMode_AESCrypt+2976 0x00007fb5478320c0
  0x00007fb547831595: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb5478315a0: cmp    $0x60,%r8
  0x00007fb5478315a4: jl     Stub::counterMode_AESCrypt+976 0x00007fb5478318f0
  0x00007fb5478315aa: vmovdqu (%rdx),%xmm3
  0x00007fb5478315ae: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478315b3: vmovdqa %xmm2,%xmm5
  0x00007fb5478315b7: vmovdqa %xmm2,%xmm6
  0x00007fb5478315bb: vmovdqa %xmm2,%xmm7
  0x00007fb5478315bf: vmovdqa %xmm2,%xmm8
  0x00007fb5478315c3: vmovdqa %xmm2,%xmm9
  0x00007fb5478315c7: vmovdqa %xmm2,%xmm10
  0x00007fb5478315cb: vpextrq $0x0,%xmm6,%rbx
  0x00007fb5478315d1: add    $0x1,%rbx
  0x00007fb5478315d5: vpinsrq $0x0,%rbx,%xmm6,%xmm6
  0x00007fb5478315db: jae    Stub::counterMode_AESCrypt+209 0x00007fb5478315f1
  0x00007fb5478315e1: vpextrq $0x1,%xmm6,%rbx
  0x00007fb5478315e7: add    $0x1,%rbx
  0x00007fb5478315eb: vpinsrq $0x1,%rbx,%xmm6,%xmm6
  0x00007fb5478315f1: vpextrq $0x0,%xmm7,%rbx
  0x00007fb5478315f7: add    $0x2,%rbx
  0x00007fb5478315fb: vpinsrq $0x0,%rbx,%xmm7,%xmm7
  0x00007fb547831601: jae    Stub::counterMode_AESCrypt+247 0x00007fb547831617
  0x00007fb547831607: vpextrq $0x1,%xmm7,%rbx
  0x00007fb54783160d: add    $0x1,%rbx
  0x00007fb547831611: vpinsrq $0x1,%rbx,%xmm7,%xmm7
  0x00007fb547831617: vpextrq $0x0,%xmm8,%rbx
  0x00007fb54783161d: add    $0x3,%rbx
  0x00007fb547831621: vpinsrq $0x0,%rbx,%xmm8,%xmm8
  0x00007fb547831627: jae    Stub::counterMode_AESCrypt+285 0x00007fb54783163d
  0x00007fb54783162d: vpextrq $0x1,%xmm8,%rbx
  0x00007fb547831633: add    $0x1,%rbx
  0x00007fb547831637: vpinsrq $0x1,%rbx,%xmm8,%xmm8
  0x00007fb54783163d: vpextrq $0x0,%xmm9,%rbx
  0x00007fb547831643: add    $0x4,%rbx
  0x00007fb547831647: vpinsrq $0x0,%rbx,%xmm9,%xmm9
  0x00007fb54783164d: jae    Stub::counterMode_AESCrypt+323 0x00007fb547831663
  0x00007fb547831653: vpextrq $0x1,%xmm9,%rbx
  0x00007fb547831659: add    $0x1,%rbx
  0x00007fb54783165d: vpinsrq $0x1,%rbx,%xmm9,%xmm9
  0x00007fb547831663: vpextrq $0x0,%xmm10,%rbx
  0x00007fb547831669: add    $0x5,%rbx
  0x00007fb54783166d: vpinsrq $0x0,%rbx,%xmm10,%xmm10
  0x00007fb547831673: jae    Stub::counterMode_AESCrypt+361 0x00007fb547831689
  0x00007fb547831679: vpextrq $0x1,%xmm10,%rbx
  0x00007fb54783167f: add    $0x1,%rbx
  0x00007fb547831683: vpinsrq $0x1,%rbx,%xmm10,%xmm10
  0x00007fb547831689: vpextrq $0x0,%xmm2,%rbx
  0x00007fb54783168f: add    $0x6,%rbx
  0x00007fb547831693: vpinsrq $0x0,%rbx,%xmm2,%xmm2
  0x00007fb547831699: jae    Stub::counterMode_AESCrypt+399 0x00007fb5478316af
  0x00007fb54783169f: vpextrq $0x1,%xmm2,%rbx
  0x00007fb5478316a5: add    $0x1,%rbx
  0x00007fb5478316a9: vpinsrq $0x1,%rbx,%xmm2,%xmm2
  0x00007fb5478316af: vpshufb %xmm0,%xmm5,%xmm5
  0x00007fb5478316b4: vpshufb %xmm0,%xmm6,%xmm6
  0x00007fb5478316b9: vpshufb %xmm0,%xmm7,%xmm7
  0x00007fb5478316be: vpshufb %xmm0,%xmm8,%xmm8
  0x00007fb5478316c3: vpshufb %xmm0,%xmm9,%xmm9
  0x00007fb5478316c8: vpshufb %xmm0,%xmm10,%xmm10
  0x00007fb5478316cd: vpxor  %xmm3,%xmm5,%xmm5
  0x00007fb5478316d1: vpxor  %xmm3,%xmm6,%xmm6
  0x00007fb5478316d5: vpxor  %xmm3,%xmm7,%xmm7
  0x00007fb5478316d9: vpxor  %xmm3,%xmm8,%xmm8
  0x00007fb5478316dd: vpxor  %xmm3,%xmm9,%xmm9
  0x00007fb5478316e1: vpxor  %xmm3,%xmm10,%xmm10
  0x00007fb5478316e5: vmovdqu 0x10(%rdx),%xmm4
  0x00007fb5478316ea: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb5478316ef: vmovdqu 0x20(%rdx),%xmm3
  0x00007fb5478316f4: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478316f9: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb5478316fe: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547831703: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831708: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb54783170d: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831712: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831717: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb54783171c: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547831721: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547831726: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb54783172b: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547831730: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547831735: vmovdqu 0x30(%rdx),%xmm4
  0x00007fb54783173a: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb54783173f: vmovdqu 0x40(%rdx),%xmm3
  0x00007fb547831744: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831749: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb54783174e: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547831753: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831758: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb54783175d: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831762: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831767: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb54783176c: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547831771: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547831776: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb54783177b: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547831780: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547831785: vmovdqu 0x50(%rdx),%xmm4
  0x00007fb54783178a: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb54783178f: vmovdqu 0x60(%rdx),%xmm3
  0x00007fb547831794: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831799: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb54783179e: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb5478317a3: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb5478317a8: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb5478317ad: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb5478317b2: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb5478317b7: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478317bc: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb5478317c1: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb5478317c6: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb5478317cb: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb5478317d0: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb5478317d5: vmovdqu 0x70(%rdx),%xmm4
  0x00007fb5478317da: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb5478317df: vmovdqu 0x80(%rdx),%xmm3
  0x00007fb5478317e7: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478317ec: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb5478317f1: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb5478317f6: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb5478317fb: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547831800: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831805: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb54783180a: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb54783180f: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547831814: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547831819: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb54783181e: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547831823: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547831828: vmovdqu 0x90(%rdx),%xmm4
  0x00007fb547831830: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547831835: vmovdqu 0xa0(%rdx),%xmm3
  0x00007fb54783183d: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831842: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547831847: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb54783184c: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831851: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547831856: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb54783185b: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831860: vaesenclast %xmm3,%xmm5,%xmm5
  0x00007fb547831865: vaesenclast %xmm3,%xmm6,%xmm6
  0x00007fb54783186a: vaesenclast %xmm3,%xmm7,%xmm7
  0x00007fb54783186f: vaesenclast %xmm3,%xmm8,%xmm8
  0x00007fb547831874: vaesenclast %xmm3,%xmm9,%xmm9
  0x00007fb547831879: vaesenclast %xmm3,%xmm10,%xmm10
  0x00007fb54783187e: vmovdqu (%rdi,%rax,1),%xmm11
  0x00007fb547831883: vmovdqu 0x10(%rdi,%rax,1),%xmm12
  0x00007fb547831889: vmovdqu 0x20(%rdi,%rax,1),%xmm13
  0x00007fb54783188f: vmovdqu 0x30(%rdi,%rax,1),%xmm14
  0x00007fb547831895: vmovdqu 0x40(%rdi,%rax,1),%xmm3
  0x00007fb54783189b: vmovdqu 0x50(%rdi,%rax,1),%xmm4
  0x00007fb5478318a1: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb5478318a6: vpxor  %xmm12,%xmm6,%xmm6
  0x00007fb5478318ab: vpxor  %xmm13,%xmm7,%xmm7
  0x00007fb5478318b0: vpxor  %xmm14,%xmm8,%xmm8
  0x00007fb5478318b5: vpxor  %xmm3,%xmm9,%xmm9
  0x00007fb5478318b9: vpxor  %xmm4,%xmm10,%xmm10
  0x00007fb5478318bd: vmovdqu %xmm5,(%rsi,%rax,1)
  0x00007fb5478318c2: vmovdqu %xmm6,0x10(%rsi,%rax,1)
  0x00007fb5478318c8: vmovdqu %xmm7,0x20(%rsi,%rax,1)
  0x00007fb5478318ce: vmovdqu %xmm8,0x30(%rsi,%rax,1)
  0x00007fb5478318d4: vmovdqu %xmm9,0x40(%rsi,%rax,1)
  0x00007fb5478318da: vmovdqu %xmm10,0x50(%rsi,%rax,1)
  0x00007fb5478318e0: add    $0x60,%rax
  0x00007fb5478318e4: sub    $0x60,%r8
  0x00007fb5478318e8: jmpq   Stub::counterMode_AESCrypt+128 0x00007fb5478315a0
  0x00007fb5478318ed: data16 xchg %ax,%ax
  0x00007fb5478318f0: cmp    $0x0,%r8
  0x00007fb5478318f4: jle    Stub::counterMode_AESCrypt+4580 0x00007fb547832704
  0x00007fb5478318fa: vmovdqu (%rdx),%xmm3
  0x00007fb5478318fe: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831903: vmovdqa %xmm2,%xmm5
  0x00007fb547831907: vpextrq $0x0,%xmm2,%rbx
  0x00007fb54783190d: add    $0x1,%rbx
  0x00007fb547831911: vpinsrq $0x0,%rbx,%xmm2,%xmm2
  0x00007fb547831917: jae    Stub::counterMode_AESCrypt+1037 0x00007fb54783192d
  0x00007fb54783191d: vpextrq $0x1,%xmm2,%rbx
  0x00007fb547831923: add    $0x1,%rbx
  0x00007fb547831927: vpinsrq $0x1,%rbx,%xmm2,%xmm2
  0x00007fb54783192d: vpshufb %xmm0,%xmm5,%xmm5
  0x00007fb547831932: vpxor  %xmm3,%xmm5,%xmm5
  0x00007fb547831936: vmovdqu 0x10(%rdx),%xmm3
  0x00007fb54783193b: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831940: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831945: vmovdqu 0x20(%rdx),%xmm3
  0x00007fb54783194a: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783194f: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831954: vmovdqu 0x30(%rdx),%xmm3
  0x00007fb547831959: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783195e: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831963: vmovdqu 0x40(%rdx),%xmm3
  0x00007fb547831968: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783196d: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831972: vmovdqu 0x50(%rdx),%xmm3
  0x00007fb547831977: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783197c: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831981: vmovdqu 0x60(%rdx),%xmm3
  0x00007fb547831986: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783198b: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831990: vmovdqu 0x70(%rdx),%xmm3
  0x00007fb547831995: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783199a: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb54783199f: vmovdqu 0x80(%rdx),%xmm3
  0x00007fb5478319a7: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478319ac: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478319b1: vmovdqu 0x90(%rdx),%xmm3
  0x00007fb5478319b9: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478319be: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478319c3: vmovdqu 0xa0(%rdx),%xmm3
  0x00007fb5478319cb: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478319d0: vaesenclast %xmm3,%xmm5,%xmm5
  0x00007fb5478319d5: cmp    $0x10,%r8
  0x00007fb5478319d9: jl     Stub::counterMode_AESCrypt+1243 0x00007fb5478319fb
  0x00007fb5478319df: vmovdqu (%rdi,%rax,1),%xmm11
  0x00007fb5478319e4: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb5478319e9: vmovdqu %xmm5,(%rsi,%rax,1)
  0x00007fb5478319ee: add    $0x10,%rax
  0x00007fb5478319f2: sub    $0x10,%r8
  0x00007fb5478319f6: jmpq   Stub::counterMode_AESCrypt+976 0x00007fb5478318f0
  0x00007fb5478319fb: add    %r8,%rax
  0x00007fb5478319fe: test   $0x8,%r8
  0x00007fb547831a05: je     Stub::counterMode_AESCrypt+1270 0x00007fb547831a16
  0x00007fb547831a0b: sub    $0x8,%rax
  0x00007fb547831a0f: vpinsrq $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547831a16: test   $0x4,%r8
  0x00007fb547831a1d: je     Stub::counterMode_AESCrypt+1300 0x00007fb547831a34
  0x00007fb547831a23: sub    $0x4,%rax
  0x00007fb547831a27: vpslldq $0x4,%xmm11,%xmm11
  0x00007fb547831a2d: vpinsrd $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547831a34: test   $0x2,%r8
  0x00007fb547831a3b: je     Stub::counterMode_AESCrypt+1329 0x00007fb547831a51
  0x00007fb547831a41: sub    $0x2,%rax
  0x00007fb547831a45: vpslldq $0x2,%xmm11,%xmm11
  0x00007fb547831a4b: vpinsrw $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547831a51: test   $0x1,%r8
  0x00007fb547831a58: je     Stub::counterMode_AESCrypt+1359 0x00007fb547831a6f
  0x00007fb547831a5e: sub    $0x1,%rax
  0x00007fb547831a62: vpslldq $0x1,%xmm11,%xmm11
  0x00007fb547831a68: vpinsrb $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547831a6f: vmovdqu %xmm5,(%r9)
  0x00007fb547831a74: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb547831a79: test   $0x8,%r8
  0x00007fb547831a80: je     Stub::counterMode_AESCrypt+1398 0x00007fb547831a96
  0x00007fb547831a86: vpextrq $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb547831a8d: vpsrldq $0x8,%xmm5,%xmm5
  0x00007fb547831a92: add    $0x8,%rax
  0x00007fb547831a96: test   $0x4,%r8
  0x00007fb547831a9d: je     Stub::counterMode_AESCrypt+1427 0x00007fb547831ab3
  0x00007fb547831aa3: vpextrd $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb547831aaa: vpsrldq $0x4,%xmm5,%xmm5
  0x00007fb547831aaf: add    $0x4,%rax
  0x00007fb547831ab3: test   $0x2,%r8
  0x00007fb547831aba: je     Stub::counterMode_AESCrypt+1456 0x00007fb547831ad0
  0x00007fb547831ac0: vpextrw $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb547831ac7: vpsrldq $0x2,%xmm5,%xmm5
  0x00007fb547831acc: add    $0x2,%rax
  0x00007fb547831ad0: test   $0x1,%r8
  0x00007fb547831ad7: je     Stub::counterMode_AESCrypt+1476 0x00007fb547831ae4
  0x00007fb547831add: vpextrb $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb547831ae4: mov    %r8d,(%r10)
  0x00007fb547831ae7: jmpq   Stub::counterMode_AESCrypt+4580 0x00007fb547832704
  0x00007fb547831aec: nopl   0x0(%rax)
  0x00007fb547831af0: cmp    $0x60,%r8
  0x00007fb547831af4: jl     Stub::counterMode_AESCrypt+2432 0x00007fb547831ea0
  0x00007fb547831afa: vmovdqu (%rdx),%xmm3
  0x00007fb547831afe: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831b03: vmovdqa %xmm2,%xmm5
  0x00007fb547831b07: vmovdqa %xmm2,%xmm6
  0x00007fb547831b0b: vmovdqa %xmm2,%xmm7
  0x00007fb547831b0f: vmovdqa %xmm2,%xmm8
  0x00007fb547831b13: vmovdqa %xmm2,%xmm9
  0x00007fb547831b17: vmovdqa %xmm2,%xmm10
  0x00007fb547831b1b: vpextrq $0x0,%xmm6,%rbx
  0x00007fb547831b21: add    $0x1,%rbx
  0x00007fb547831b25: vpinsrq $0x0,%rbx,%xmm6,%xmm6
  0x00007fb547831b2b: jae    Stub::counterMode_AESCrypt+1569 0x00007fb547831b41
  0x00007fb547831b31: vpextrq $0x1,%xmm6,%rbx
  0x00007fb547831b37: add    $0x1,%rbx
  0x00007fb547831b3b: vpinsrq $0x1,%rbx,%xmm6,%xmm6
  0x00007fb547831b41: vpextrq $0x0,%xmm7,%rbx
  0x00007fb547831b47: add    $0x2,%rbx
  0x00007fb547831b4b: vpinsrq $0x0,%rbx,%xmm7,%xmm7
  0x00007fb547831b51: jae    Stub::counterMode_AESCrypt+1607 0x00007fb547831b67
  0x00007fb547831b57: vpextrq $0x1,%xmm7,%rbx
  0x00007fb547831b5d: add    $0x1,%rbx
  0x00007fb547831b61: vpinsrq $0x1,%rbx,%xmm7,%xmm7
  0x00007fb547831b67: vpextrq $0x0,%xmm8,%rbx
  0x00007fb547831b6d: add    $0x3,%rbx
  0x00007fb547831b71: vpinsrq $0x0,%rbx,%xmm8,%xmm8
  0x00007fb547831b77: jae    Stub::counterMode_AESCrypt+1645 0x00007fb547831b8d
  0x00007fb547831b7d: vpextrq $0x1,%xmm8,%rbx
  0x00007fb547831b83: add    $0x1,%rbx
  0x00007fb547831b87: vpinsrq $0x1,%rbx,%xmm8,%xmm8
  0x00007fb547831b8d: vpextrq $0x0,%xmm9,%rbx
  0x00007fb547831b93: add    $0x4,%rbx
  0x00007fb547831b97: vpinsrq $0x0,%rbx,%xmm9,%xmm9
  0x00007fb547831b9d: jae    Stub::counterMode_AESCrypt+1683 0x00007fb547831bb3
  0x00007fb547831ba3: vpextrq $0x1,%xmm9,%rbx
  0x00007fb547831ba9: add    $0x1,%rbx
  0x00007fb547831bad: vpinsrq $0x1,%rbx,%xmm9,%xmm9
  0x00007fb547831bb3: vpextrq $0x0,%xmm10,%rbx
  0x00007fb547831bb9: add    $0x5,%rbx
  0x00007fb547831bbd: vpinsrq $0x0,%rbx,%xmm10,%xmm10
  0x00007fb547831bc3: jae    Stub::counterMode_AESCrypt+1721 0x00007fb547831bd9
  0x00007fb547831bc9: vpextrq $0x1,%xmm10,%rbx
  0x00007fb547831bcf: add    $0x1,%rbx
  0x00007fb547831bd3: vpinsrq $0x1,%rbx,%xmm10,%xmm10
  0x00007fb547831bd9: vpextrq $0x0,%xmm2,%rbx
  0x00007fb547831bdf: add    $0x6,%rbx
  0x00007fb547831be3: vpinsrq $0x0,%rbx,%xmm2,%xmm2
  0x00007fb547831be9: jae    Stub::counterMode_AESCrypt+1759 0x00007fb547831bff
  0x00007fb547831bef: vpextrq $0x1,%xmm2,%rbx
  0x00007fb547831bf5: add    $0x1,%rbx
  0x00007fb547831bf9: vpinsrq $0x1,%rbx,%xmm2,%xmm2
  0x00007fb547831bff: vpshufb %xmm0,%xmm5,%xmm5
  0x00007fb547831c04: vpshufb %xmm0,%xmm6,%xmm6
  0x00007fb547831c09: vpshufb %xmm0,%xmm7,%xmm7
  0x00007fb547831c0e: vpshufb %xmm0,%xmm8,%xmm8
  0x00007fb547831c13: vpshufb %xmm0,%xmm9,%xmm9
  0x00007fb547831c18: vpshufb %xmm0,%xmm10,%xmm10
  0x00007fb547831c1d: vpxor  %xmm3,%xmm5,%xmm5
  0x00007fb547831c21: vpxor  %xmm3,%xmm6,%xmm6
  0x00007fb547831c25: vpxor  %xmm3,%xmm7,%xmm7
  0x00007fb547831c29: vpxor  %xmm3,%xmm8,%xmm8
  0x00007fb547831c2d: vpxor  %xmm3,%xmm9,%xmm9
  0x00007fb547831c31: vpxor  %xmm3,%xmm10,%xmm10
  0x00007fb547831c35: vmovdqu 0x10(%rdx),%xmm4
  0x00007fb547831c3a: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547831c3f: vmovdqu 0x20(%rdx),%xmm3
  0x00007fb547831c44: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831c49: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547831c4e: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547831c53: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831c58: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547831c5d: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831c62: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831c67: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831c6c: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547831c71: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547831c76: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb547831c7b: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547831c80: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547831c85: vmovdqu 0x30(%rdx),%xmm4
  0x00007fb547831c8a: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547831c8f: vmovdqu 0x40(%rdx),%xmm3
  0x00007fb547831c94: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831c99: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547831c9e: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547831ca3: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831ca8: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547831cad: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831cb2: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831cb7: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831cbc: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547831cc1: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547831cc6: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb547831ccb: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547831cd0: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547831cd5: vmovdqu 0x50(%rdx),%xmm4
  0x00007fb547831cda: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547831cdf: vmovdqu 0x60(%rdx),%xmm3
  0x00007fb547831ce4: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831ce9: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547831cee: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547831cf3: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831cf8: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547831cfd: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831d02: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831d07: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831d0c: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547831d11: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547831d16: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb547831d1b: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547831d20: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547831d25: vmovdqu 0x70(%rdx),%xmm4
  0x00007fb547831d2a: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547831d2f: vmovdqu 0x80(%rdx),%xmm3
  0x00007fb547831d37: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831d3c: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547831d41: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547831d46: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831d4b: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547831d50: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831d55: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831d5a: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831d5f: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547831d64: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547831d69: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb547831d6e: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547831d73: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547831d78: vmovdqu 0x90(%rdx),%xmm4
  0x00007fb547831d80: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547831d85: vmovdqu 0xa0(%rdx),%xmm3
  0x00007fb547831d8d: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831d92: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547831d97: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547831d9c: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831da1: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547831da6: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831dab: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831db0: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831db5: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547831dba: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547831dbf: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb547831dc4: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547831dc9: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547831dce: vmovdqu 0xb0(%rdx),%xmm4
  0x00007fb547831dd6: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547831ddb: vmovdqu 0xc0(%rdx),%xmm3
  0x00007fb547831de3: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831de8: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547831ded: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547831df2: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547831df7: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547831dfc: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547831e01: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547831e06: vaesenclast %xmm3,%xmm5,%xmm5
  0x00007fb547831e0b: vaesenclast %xmm3,%xmm6,%xmm6
  0x00007fb547831e10: vaesenclast %xmm3,%xmm7,%xmm7
  0x00007fb547831e15: vaesenclast %xmm3,%xmm8,%xmm8
  0x00007fb547831e1a: vaesenclast %xmm3,%xmm9,%xmm9
  0x00007fb547831e1f: vaesenclast %xmm3,%xmm10,%xmm10
  0x00007fb547831e24: vmovdqu (%rdi,%rax,1),%xmm11
  0x00007fb547831e29: vmovdqu 0x10(%rdi,%rax,1),%xmm12
  0x00007fb547831e2f: vmovdqu 0x20(%rdi,%rax,1),%xmm13
  0x00007fb547831e35: vmovdqu 0x30(%rdi,%rax,1),%xmm14
  0x00007fb547831e3b: vmovdqu 0x40(%rdi,%rax,1),%xmm3
  0x00007fb547831e41: vmovdqu 0x50(%rdi,%rax,1),%xmm4
  0x00007fb547831e47: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb547831e4c: vpxor  %xmm12,%xmm6,%xmm6
  0x00007fb547831e51: vpxor  %xmm13,%xmm7,%xmm7
  0x00007fb547831e56: vpxor  %xmm14,%xmm8,%xmm8
  0x00007fb547831e5b: vpxor  %xmm3,%xmm9,%xmm9
  0x00007fb547831e5f: vpxor  %xmm4,%xmm10,%xmm10
  0x00007fb547831e63: vmovdqu %xmm5,(%rsi,%rax,1)
  0x00007fb547831e68: vmovdqu %xmm6,0x10(%rsi,%rax,1)
  0x00007fb547831e6e: vmovdqu %xmm7,0x20(%rsi,%rax,1)
  0x00007fb547831e74: vmovdqu %xmm8,0x30(%rsi,%rax,1)
  0x00007fb547831e7a: vmovdqu %xmm9,0x40(%rsi,%rax,1)
  0x00007fb547831e80: vmovdqu %xmm10,0x50(%rsi,%rax,1)
  0x00007fb547831e86: add    $0x60,%rax
  0x00007fb547831e8a: sub    $0x60,%r8
  0x00007fb547831e8e: jmpq   Stub::counterMode_AESCrypt+1488 0x00007fb547831af0
  0x00007fb547831e93: nopw   0x0(%rax,%rax,1)
  0x00007fb547831e9c: data16 data16 xchg %ax,%ax
  0x00007fb547831ea0: cmp    $0x0,%r8
  0x00007fb547831ea4: jle    Stub::counterMode_AESCrypt+4580 0x00007fb547832704
  0x00007fb547831eaa: vmovdqu (%rdx),%xmm3
  0x00007fb547831eae: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831eb3: vmovdqa %xmm2,%xmm5
  0x00007fb547831eb7: vpextrq $0x0,%xmm2,%rbx
  0x00007fb547831ebd: add    $0x1,%rbx
  0x00007fb547831ec1: vpinsrq $0x0,%rbx,%xmm2,%xmm2
  0x00007fb547831ec7: jae    Stub::counterMode_AESCrypt+2493 0x00007fb547831edd
  0x00007fb547831ecd: vpextrq $0x1,%xmm2,%rbx
  0x00007fb547831ed3: add    $0x1,%rbx
  0x00007fb547831ed7: vpinsrq $0x1,%rbx,%xmm2,%xmm2
  0x00007fb547831edd: vpshufb %xmm0,%xmm5,%xmm5
  0x00007fb547831ee2: vpxor  %xmm3,%xmm5,%xmm5
  0x00007fb547831ee6: vmovdqu 0x10(%rdx),%xmm3
  0x00007fb547831eeb: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831ef0: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831ef5: vmovdqu 0x20(%rdx),%xmm3
  0x00007fb547831efa: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831eff: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f04: vmovdqu 0x30(%rdx),%xmm3
  0x00007fb547831f09: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f0e: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f13: vmovdqu 0x40(%rdx),%xmm3
  0x00007fb547831f18: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f1d: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f22: vmovdqu 0x50(%rdx),%xmm3
  0x00007fb547831f27: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f2c: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f31: vmovdqu 0x60(%rdx),%xmm3
  0x00007fb547831f36: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f3b: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f40: vmovdqu 0x70(%rdx),%xmm3
  0x00007fb547831f45: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f4a: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f4f: vmovdqu 0x80(%rdx),%xmm3
  0x00007fb547831f57: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f5c: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f61: vmovdqu 0x90(%rdx),%xmm3
  0x00007fb547831f69: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f6e: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f73: vmovdqu 0xa0(%rdx),%xmm3
  0x00007fb547831f7b: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f80: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f85: vmovdqu 0xb0(%rdx),%xmm3
  0x00007fb547831f8d: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831f92: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547831f97: vmovdqu 0xc0(%rdx),%xmm3
  0x00007fb547831f9f: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547831fa4: vaesenclast %xmm3,%xmm5,%xmm5
  0x00007fb547831fa9: cmp    $0x10,%r8
  0x00007fb547831fad: jl     Stub::counterMode_AESCrypt+2735 0x00007fb547831fcf
  0x00007fb547831fb3: vmovdqu (%rdi,%rax,1),%xmm11
  0x00007fb547831fb8: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb547831fbd: vmovdqu %xmm5,(%rsi,%rax,1)
  0x00007fb547831fc2: add    $0x10,%rax
  0x00007fb547831fc6: sub    $0x10,%r8
  0x00007fb547831fca: jmpq   Stub::counterMode_AESCrypt+2432 0x00007fb547831ea0
  0x00007fb547831fcf: add    %r8,%rax
  0x00007fb547831fd2: test   $0x8,%r8
  0x00007fb547831fd9: je     Stub::counterMode_AESCrypt+2762 0x00007fb547831fea
  0x00007fb547831fdf: sub    $0x8,%rax
  0x00007fb547831fe3: vpinsrq $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547831fea: test   $0x4,%r8
  0x00007fb547831ff1: je     Stub::counterMode_AESCrypt+2792 0x00007fb547832008
  0x00007fb547831ff7: sub    $0x4,%rax
  0x00007fb547831ffb: vpslldq $0x4,%xmm11,%xmm11
  0x00007fb547832001: vpinsrd $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547832008: test   $0x2,%r8
  0x00007fb54783200f: je     Stub::counterMode_AESCrypt+2821 0x00007fb547832025
  0x00007fb547832015: sub    $0x2,%rax
  0x00007fb547832019: vpslldq $0x2,%xmm11,%xmm11
  0x00007fb54783201f: vpinsrw $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547832025: test   $0x1,%r8
  0x00007fb54783202c: je     Stub::counterMode_AESCrypt+2851 0x00007fb547832043
  0x00007fb547832032: sub    $0x1,%rax
  0x00007fb547832036: vpslldq $0x1,%xmm11,%xmm11
  0x00007fb54783203c: vpinsrb $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547832043: vmovdqu %xmm5,(%r9)
  0x00007fb547832048: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb54783204d: test   $0x8,%r8
  0x00007fb547832054: je     Stub::counterMode_AESCrypt+2890 0x00007fb54783206a
  0x00007fb54783205a: vpextrq $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb547832061: vpsrldq $0x8,%xmm5,%xmm5
  0x00007fb547832066: add    $0x8,%rax
  0x00007fb54783206a: test   $0x4,%r8
  0x00007fb547832071: je     Stub::counterMode_AESCrypt+2919 0x00007fb547832087
  0x00007fb547832077: vpextrd $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb54783207e: vpsrldq $0x4,%xmm5,%xmm5
  0x00007fb547832083: add    $0x4,%rax
  0x00007fb547832087: test   $0x2,%r8
  0x00007fb54783208e: je     Stub::counterMode_AESCrypt+2948 0x00007fb5478320a4
  0x00007fb547832094: vpextrw $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb54783209b: vpsrldq $0x2,%xmm5,%xmm5
  0x00007fb5478320a0: add    $0x2,%rax
  0x00007fb5478320a4: test   $0x1,%r8
  0x00007fb5478320ab: je     Stub::counterMode_AESCrypt+2968 0x00007fb5478320b8
  0x00007fb5478320b1: vpextrb $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb5478320b8: mov    %r8d,(%r10)
  0x00007fb5478320bb: jmpq   Stub::counterMode_AESCrypt+4580 0x00007fb547832704
  0x00007fb5478320c0: cmp    $0x60,%r8
  0x00007fb5478320c4: jl     Stub::counterMode_AESCrypt+4000 0x00007fb5478324c0
  0x00007fb5478320ca: vmovdqu (%rdx),%xmm3
  0x00007fb5478320ce: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478320d3: vmovdqa %xmm2,%xmm5
  0x00007fb5478320d7: vmovdqa %xmm2,%xmm6
  0x00007fb5478320db: vmovdqa %xmm2,%xmm7
  0x00007fb5478320df: vmovdqa %xmm2,%xmm8
  0x00007fb5478320e3: vmovdqa %xmm2,%xmm9
  0x00007fb5478320e7: vmovdqa %xmm2,%xmm10
  0x00007fb5478320eb: vpextrq $0x0,%xmm6,%rbx
  0x00007fb5478320f1: add    $0x1,%rbx
  0x00007fb5478320f5: vpinsrq $0x0,%rbx,%xmm6,%xmm6
  0x00007fb5478320fb: jae    Stub::counterMode_AESCrypt+3057 0x00007fb547832111
  0x00007fb547832101: vpextrq $0x1,%xmm6,%rbx
  0x00007fb547832107: add    $0x1,%rbx
  0x00007fb54783210b: vpinsrq $0x1,%rbx,%xmm6,%xmm6
  0x00007fb547832111: vpextrq $0x0,%xmm7,%rbx
  0x00007fb547832117: add    $0x2,%rbx
  0x00007fb54783211b: vpinsrq $0x0,%rbx,%xmm7,%xmm7
  0x00007fb547832121: jae    Stub::counterMode_AESCrypt+3095 0x00007fb547832137
  0x00007fb547832127: vpextrq $0x1,%xmm7,%rbx
  0x00007fb54783212d: add    $0x1,%rbx
  0x00007fb547832131: vpinsrq $0x1,%rbx,%xmm7,%xmm7
  0x00007fb547832137: vpextrq $0x0,%xmm8,%rbx
  0x00007fb54783213d: add    $0x3,%rbx
  0x00007fb547832141: vpinsrq $0x0,%rbx,%xmm8,%xmm8
  0x00007fb547832147: jae    Stub::counterMode_AESCrypt+3133 0x00007fb54783215d
  0x00007fb54783214d: vpextrq $0x1,%xmm8,%rbx
  0x00007fb547832153: add    $0x1,%rbx
  0x00007fb547832157: vpinsrq $0x1,%rbx,%xmm8,%xmm8
  0x00007fb54783215d: vpextrq $0x0,%xmm9,%rbx
  0x00007fb547832163: add    $0x4,%rbx
  0x00007fb547832167: vpinsrq $0x0,%rbx,%xmm9,%xmm9
  0x00007fb54783216d: jae    Stub::counterMode_AESCrypt+3171 0x00007fb547832183
  0x00007fb547832173: vpextrq $0x1,%xmm9,%rbx
  0x00007fb547832179: add    $0x1,%rbx
  0x00007fb54783217d: vpinsrq $0x1,%rbx,%xmm9,%xmm9
  0x00007fb547832183: vpextrq $0x0,%xmm10,%rbx
  0x00007fb547832189: add    $0x5,%rbx
  0x00007fb54783218d: vpinsrq $0x0,%rbx,%xmm10,%xmm10
  0x00007fb547832193: jae    Stub::counterMode_AESCrypt+3209 0x00007fb5478321a9
  0x00007fb547832199: vpextrq $0x1,%xmm10,%rbx
  0x00007fb54783219f: add    $0x1,%rbx
  0x00007fb5478321a3: vpinsrq $0x1,%rbx,%xmm10,%xmm10
  0x00007fb5478321a9: vpextrq $0x0,%xmm2,%rbx
  0x00007fb5478321af: add    $0x6,%rbx
  0x00007fb5478321b3: vpinsrq $0x0,%rbx,%xmm2,%xmm2
  0x00007fb5478321b9: jae    Stub::counterMode_AESCrypt+3247 0x00007fb5478321cf
  0x00007fb5478321bf: vpextrq $0x1,%xmm2,%rbx
  0x00007fb5478321c5: add    $0x1,%rbx
  0x00007fb5478321c9: vpinsrq $0x1,%rbx,%xmm2,%xmm2
  0x00007fb5478321cf: vpshufb %xmm0,%xmm5,%xmm5
  0x00007fb5478321d4: vpshufb %xmm0,%xmm6,%xmm6
  0x00007fb5478321d9: vpshufb %xmm0,%xmm7,%xmm7
  0x00007fb5478321de: vpshufb %xmm0,%xmm8,%xmm8
  0x00007fb5478321e3: vpshufb %xmm0,%xmm9,%xmm9
  0x00007fb5478321e8: vpshufb %xmm0,%xmm10,%xmm10
  0x00007fb5478321ed: vpxor  %xmm3,%xmm5,%xmm5
  0x00007fb5478321f1: vpxor  %xmm3,%xmm6,%xmm6
  0x00007fb5478321f5: vpxor  %xmm3,%xmm7,%xmm7
  0x00007fb5478321f9: vpxor  %xmm3,%xmm8,%xmm8
  0x00007fb5478321fd: vpxor  %xmm3,%xmm9,%xmm9
  0x00007fb547832201: vpxor  %xmm3,%xmm10,%xmm10
  0x00007fb547832205: vmovdqu 0x10(%rdx),%xmm4
  0x00007fb54783220a: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb54783220f: vmovdqu 0x20(%rdx),%xmm3
  0x00007fb547832214: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547832219: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb54783221e: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547832223: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547832228: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb54783222d: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547832232: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547832237: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb54783223c: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547832241: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547832246: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb54783224b: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547832250: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547832255: vmovdqu 0x30(%rdx),%xmm4
  0x00007fb54783225a: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb54783225f: vmovdqu 0x40(%rdx),%xmm3
  0x00007fb547832264: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547832269: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb54783226e: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547832273: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547832278: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb54783227d: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547832282: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547832287: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb54783228c: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547832291: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547832296: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb54783229b: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb5478322a0: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb5478322a5: vmovdqu 0x50(%rdx),%xmm4
  0x00007fb5478322aa: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb5478322af: vmovdqu 0x60(%rdx),%xmm3
  0x00007fb5478322b4: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478322b9: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb5478322be: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb5478322c3: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb5478322c8: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb5478322cd: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb5478322d2: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb5478322d7: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478322dc: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb5478322e1: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb5478322e6: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb5478322eb: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb5478322f0: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb5478322f5: vmovdqu 0x70(%rdx),%xmm4
  0x00007fb5478322fa: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb5478322ff: vmovdqu 0x80(%rdx),%xmm3
  0x00007fb547832307: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783230c: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547832311: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547832316: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb54783231b: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547832320: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547832325: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb54783232a: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb54783232f: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb547832334: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb547832339: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb54783233e: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547832343: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb547832348: vmovdqu 0x90(%rdx),%xmm4
  0x00007fb547832350: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547832355: vmovdqu 0xa0(%rdx),%xmm3
  0x00007fb54783235d: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547832362: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547832367: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb54783236c: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb547832371: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547832376: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb54783237b: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb547832380: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832385: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb54783238a: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb54783238f: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb547832394: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb547832399: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb54783239e: vmovdqu 0xb0(%rdx),%xmm4
  0x00007fb5478323a6: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb5478323ab: vmovdqu 0xc0(%rdx),%xmm3
  0x00007fb5478323b3: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478323b8: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb5478323bd: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb5478323c2: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb5478323c7: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb5478323cc: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb5478323d1: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb5478323d6: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478323db: vaesenc %xmm3,%xmm6,%xmm6
  0x00007fb5478323e0: vaesenc %xmm3,%xmm7,%xmm7
  0x00007fb5478323e5: vaesenc %xmm3,%xmm8,%xmm8
  0x00007fb5478323ea: vaesenc %xmm3,%xmm9,%xmm9
  0x00007fb5478323ef: vaesenc %xmm3,%xmm10,%xmm10
  0x00007fb5478323f4: vmovdqu 0xd0(%rdx),%xmm4
  0x00007fb5478323fc: vpshufb %xmm1,%xmm4,%xmm4
  0x00007fb547832401: vmovdqu 0xe0(%rdx),%xmm3
  0x00007fb547832409: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783240e: vaesenc %xmm4,%xmm5,%xmm5
  0x00007fb547832413: vaesenc %xmm4,%xmm6,%xmm6
  0x00007fb547832418: vaesenc %xmm4,%xmm7,%xmm7
  0x00007fb54783241d: vaesenc %xmm4,%xmm8,%xmm8
  0x00007fb547832422: vaesenc %xmm4,%xmm9,%xmm9
  0x00007fb547832427: vaesenc %xmm4,%xmm10,%xmm10
  0x00007fb54783242c: vaesenclast %xmm3,%xmm5,%xmm5
  0x00007fb547832431: vaesenclast %xmm3,%xmm6,%xmm6
  0x00007fb547832436: vaesenclast %xmm3,%xmm7,%xmm7
  0x00007fb54783243b: vaesenclast %xmm3,%xmm8,%xmm8
  0x00007fb547832440: vaesenclast %xmm3,%xmm9,%xmm9
  0x00007fb547832445: vaesenclast %xmm3,%xmm10,%xmm10
  0x00007fb54783244a: vmovdqu (%rdi,%rax,1),%xmm11
  0x00007fb54783244f: vmovdqu 0x10(%rdi,%rax,1),%xmm12
  0x00007fb547832455: vmovdqu 0x20(%rdi,%rax,1),%xmm13
  0x00007fb54783245b: vmovdqu 0x30(%rdi,%rax,1),%xmm14
  0x00007fb547832461: vmovdqu 0x40(%rdi,%rax,1),%xmm3
  0x00007fb547832467: vmovdqu 0x50(%rdi,%rax,1),%xmm4
  0x00007fb54783246d: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb547832472: vpxor  %xmm12,%xmm6,%xmm6
  0x00007fb547832477: vpxor  %xmm13,%xmm7,%xmm7
  0x00007fb54783247c: vpxor  %xmm14,%xmm8,%xmm8
  0x00007fb547832481: vpxor  %xmm3,%xmm9,%xmm9
  0x00007fb547832485: vpxor  %xmm4,%xmm10,%xmm10
  0x00007fb547832489: vmovdqu %xmm5,(%rsi,%rax,1)
  0x00007fb54783248e: vmovdqu %xmm6,0x10(%rsi,%rax,1)
  0x00007fb547832494: vmovdqu %xmm7,0x20(%rsi,%rax,1)
  0x00007fb54783249a: vmovdqu %xmm8,0x30(%rsi,%rax,1)
  0x00007fb5478324a0: vmovdqu %xmm9,0x40(%rsi,%rax,1)
  0x00007fb5478324a6: vmovdqu %xmm10,0x50(%rsi,%rax,1)
  0x00007fb5478324ac: add    $0x60,%rax
  0x00007fb5478324b0: sub    $0x60,%r8
  0x00007fb5478324b4: jmpq   Stub::counterMode_AESCrypt+2976 0x00007fb5478320c0
  0x00007fb5478324b9: nopl   0x0(%rax)
  0x00007fb5478324c0: cmp    $0x0,%r8
  0x00007fb5478324c4: jle    Stub::counterMode_AESCrypt+4580 0x00007fb547832704
  0x00007fb5478324ca: vmovdqu (%rdx),%xmm3
  0x00007fb5478324ce: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478324d3: vmovdqa %xmm2,%xmm5
  0x00007fb5478324d7: vpextrq $0x0,%xmm2,%rbx
  0x00007fb5478324dd: add    $0x1,%rbx
  0x00007fb5478324e1: vpinsrq $0x0,%rbx,%xmm2,%xmm2
  0x00007fb5478324e7: jae    Stub::counterMode_AESCrypt+4061 0x00007fb5478324fd
  0x00007fb5478324ed: vpextrq $0x1,%xmm2,%rbx
  0x00007fb5478324f3: add    $0x1,%rbx
  0x00007fb5478324f7: vpinsrq $0x1,%rbx,%xmm2,%xmm2
  0x00007fb5478324fd: vpshufb %xmm0,%xmm5,%xmm5
  0x00007fb547832502: vpxor  %xmm3,%xmm5,%xmm5
  0x00007fb547832506: vmovdqu 0x10(%rdx),%xmm3
  0x00007fb54783250b: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb547832510: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832515: vmovdqu 0x20(%rdx),%xmm3
  0x00007fb54783251a: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783251f: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832524: vmovdqu 0x30(%rdx),%xmm3
  0x00007fb547832529: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783252e: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832533: vmovdqu 0x40(%rdx),%xmm3
  0x00007fb547832538: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783253d: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832542: vmovdqu 0x50(%rdx),%xmm3
  0x00007fb547832547: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783254c: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832551: vmovdqu 0x60(%rdx),%xmm3
  0x00007fb547832556: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783255b: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832560: vmovdqu 0x70(%rdx),%xmm3
  0x00007fb547832565: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783256a: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb54783256f: vmovdqu 0x80(%rdx),%xmm3
  0x00007fb547832577: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783257c: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832581: vmovdqu 0x90(%rdx),%xmm3
  0x00007fb547832589: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb54783258e: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb547832593: vmovdqu 0xa0(%rdx),%xmm3
  0x00007fb54783259b: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478325a0: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478325a5: vmovdqu 0xb0(%rdx),%xmm3
  0x00007fb5478325ad: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478325b2: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478325b7: vmovdqu 0xc0(%rdx),%xmm3
  0x00007fb5478325bf: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478325c4: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478325c9: vmovdqu 0xd0(%rdx),%xmm3
  0x00007fb5478325d1: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478325d6: vaesenc %xmm3,%xmm5,%xmm5
  0x00007fb5478325db: vmovdqu 0xe0(%rdx),%xmm3
  0x00007fb5478325e3: vpshufb %xmm1,%xmm3,%xmm3
  0x00007fb5478325e8: vaesenclast %xmm3,%xmm5,%xmm5
  0x00007fb5478325ed: cmp    $0x10,%r8
  0x00007fb5478325f1: jl     Stub::counterMode_AESCrypt+4339 0x00007fb547832613
  0x00007fb5478325f7: vmovdqu (%rdi,%rax,1),%xmm11
  0x00007fb5478325fc: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb547832601: vmovdqu %xmm5,(%rsi,%rax,1)
  0x00007fb547832606: add    $0x10,%rax
  0x00007fb54783260a: sub    $0x10,%r8
  0x00007fb54783260e: jmpq   Stub::counterMode_AESCrypt+4000 0x00007fb5478324c0
  0x00007fb547832613: add    %r8,%rax
  0x00007fb547832616: test   $0x8,%r8
  0x00007fb54783261d: je     Stub::counterMode_AESCrypt+4366 0x00007fb54783262e
  0x00007fb547832623: sub    $0x8,%rax
  0x00007fb547832627: vpinsrq $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb54783262e: test   $0x4,%r8
  0x00007fb547832635: je     Stub::counterMode_AESCrypt+4396 0x00007fb54783264c
  0x00007fb54783263b: sub    $0x4,%rax
  0x00007fb54783263f: vpslldq $0x4,%xmm11,%xmm11
  0x00007fb547832645: vpinsrd $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb54783264c: test   $0x2,%r8
  0x00007fb547832653: je     Stub::counterMode_AESCrypt+4425 0x00007fb547832669
  0x00007fb547832659: sub    $0x2,%rax
  0x00007fb54783265d: vpslldq $0x2,%xmm11,%xmm11
  0x00007fb547832663: vpinsrw $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547832669: test   $0x1,%r8
  0x00007fb547832670: je     Stub::counterMode_AESCrypt+4455 0x00007fb547832687
  0x00007fb547832676: sub    $0x1,%rax
  0x00007fb54783267a: vpslldq $0x1,%xmm11,%xmm11
  0x00007fb547832680: vpinsrb $0x0,(%rdi,%rax,1),%xmm11,%xmm11
  0x00007fb547832687: vmovdqu %xmm5,(%r9)
  0x00007fb54783268c: vpxor  %xmm11,%xmm5,%xmm5
  0x00007fb547832691: test   $0x8,%r8
  0x00007fb547832698: je     Stub::counterMode_AESCrypt+4494 0x00007fb5478326ae
  0x00007fb54783269e: vpextrq $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb5478326a5: vpsrldq $0x8,%xmm5,%xmm5
  0x00007fb5478326aa: add    $0x8,%rax
  0x00007fb5478326ae: test   $0x4,%r8
  0x00007fb5478326b5: je     Stub::counterMode_AESCrypt+4523 0x00007fb5478326cb
  0x00007fb5478326bb: vpextrd $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb5478326c2: vpsrldq $0x4,%xmm5,%xmm5
  0x00007fb5478326c7: add    $0x4,%rax
  0x00007fb5478326cb: test   $0x2,%r8
  0x00007fb5478326d2: je     Stub::counterMode_AESCrypt+4552 0x00007fb5478326e8
  0x00007fb5478326d8: vpextrw $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb5478326df: vpsrldq $0x2,%xmm5,%xmm5
  0x00007fb5478326e4: add    $0x2,%rax
  0x00007fb5478326e8: test   $0x1,%r8
  0x00007fb5478326ef: je     Stub::counterMode_AESCrypt+4572 0x00007fb5478326fc
  0x00007fb5478326f5: vpextrb $0x0,%xmm5,(%rsi,%rax,1)
  0x00007fb5478326fc: mov    %r8d,(%r10)
  0x00007fb5478326ff: jmpq   Stub::counterMode_AESCrypt+4580 0x00007fb547832704
  0x00007fb547832704: vpshufb %xmm0,%xmm2,%xmm2
  0x00007fb547832709: vmovdqu %xmm2,(%rcx)
  0x00007fb54783270d: pop    %rbx
  0x00007fb54783270e: pop    %rax
  0x00007fb54783270f: leaveq 
  0x00007fb547832710: retq   

StubRoutines::pshuffle_byte_flip_mask [0x00007fb547832740, 0x00007fb5478327a0[ (96 bytes)
  0x00007fb547832740: add    (%rdx),%eax
  0x00007fb547832742: add    %eax,(%rax)
  0x00007fb547832744: (bad)  
  0x00007fb547832745: (bad)  
  0x00007fb547832746: add    $0x90a0b04,%eax
  0x00007fb54783274b: or     %cl,(%rdi)
  0x00007fb54783274d: (bad)  
  0x00007fb54783274e: or     $0x102030c,%eax
  0x00007fb547832753: add    %al,(%rdi)
  0x00007fb547832755: (bad)  
  0x00007fb547832756: add    $0x90a0b04,%eax
  0x00007fb54783275b: or     %cl,(%rdi)
  0x00007fb54783275d: (bad)  
  0x00007fb54783275e: or     $0x201000c,%eax
  0x00007fb547832763: add    (%rax),%ecx
  0x00007fb547832765: or     %ecx,(%rdx)
  0x00007fb547832767: or     %edi,%edi
  0x00007fb547832769: (bad)  
  0x00007fb54783276a: (bad)  
  0x00007fb54783276b: (bad)  
  0x00007fb54783276c: (bad)  
  0x00007fb54783276d: (bad)  
  0x00007fb54783276e: (bad)  
  0x00007fb54783276f: incl   (%rax)
  0x00007fb547832771: add    %eax,(%rdx)
  0x00007fb547832773: add    (%rax),%ecx
  0x00007fb547832775: or     %ecx,(%rdx)
  0x00007fb547832777: or     %edi,%edi
  0x00007fb547832779: (bad)  
  0x00007fb54783277a: (bad)  
  0x00007fb54783277b: (bad)  
  0x00007fb54783277c: (bad)  
  0x00007fb54783277d: (bad)  
  0x00007fb54783277e: (bad)  
  0x00007fb54783277f: (bad)  
  0x00007fb547832780: (bad)  
  0x00007fb547832781: (bad)  
  0x00007fb547832782: (bad)  
  0x00007fb547832783: (bad)  
  0x00007fb547832784: (bad)  
  0x00007fb547832785: (bad)  
  0x00007fb547832786: (bad)  
  0x00007fb547832787: incl   (%rax)
  0x00007fb547832789: add    %eax,(%rdx)
  0x00007fb54783278b: add    (%rax),%ecx
  0x00007fb54783278d: or     %ecx,(%rdx)
  0x00007fb54783278f: or     %edi,%edi
  0x00007fb547832791: (bad)  
  0x00007fb547832792: (bad)  
  0x00007fb547832793: (bad)  
  0x00007fb547832794: (bad)  
  0x00007fb547832795: (bad)  
  0x00007fb547832796: (bad)  
  0x00007fb547832797: incl   (%rax)
  0x00007fb547832799: add    %eax,(%rdx)
  0x00007fb54783279b: add    (%rax),%ecx
  0x00007fb54783279d: or     %ecx,(%rdx)
  0x00007fb54783279f: .byte 0xb

StubRoutines::sha256_implCompress [0x00007fb5478327a0, 0x00007fb5478338cf[ (4399 bytes)
  0x00007fb5478327a0: push   %rbp
  0x00007fb5478327a1: mov    %rsp,%rbp
  0x00007fb5478327a4: sub    $0x20,%rsp
  0x00007fb5478327a8: push   %rcx
  0x00007fb5478327a9: push   %rdx
  0x00007fb5478327aa: push   %rbx
  0x00007fb5478327ab: push   %rbp
  0x00007fb5478327ac: push   %r12
  0x00007fb5478327ae: push   %r13
  0x00007fb5478327b0: push   %r14
  0x00007fb5478327b2: push   %r15
  0x00007fb5478327b4: mov    %rsp,%rax
  0x00007fb5478327b7: sub    $0x220,%rsp
  0x00007fb5478327be: and    $0xffffffffffffffe0,%rsp
  0x00007fb5478327c2: mov    %rax,0x218(%rsp)
  0x00007fb5478327ca: mov    %rcx,%r9
  0x00007fb5478327cd: mov    %rdx,%r8
  0x00007fb5478327d0: mov    %rsi,%rdx
  0x00007fb5478327d3: mov    %rdi,%rcx
  0x00007fb5478327d6: lea    (%rcx),%rcx
  0x00007fb5478327d9: mov    %rdx,%rdx
  0x00007fb5478327dc: xor    %r8,%r8
  0x00007fb5478327df: add    $0x40,%r8
  0x00007fb5478327e3: lea    -0x40(%rcx,%r8,1),%r8
  0x00007fb5478327e8: mov    %r8,0x200(%rsp)
  0x00007fb5478327f0: cmp    %r8,%rcx
  0x00007fb5478327f3: je     Stub::sha256_implCompress+4309 0x00007fb547833875
  0x00007fb5478327f9: mov    (%rdx),%eax
  0x00007fb5478327fb: mov    0x4(%rdx),%ebx
  0x00007fb5478327fe: mov    0x8(%rdx),%edi
  0x00007fb547832801: mov    0xc(%rdx),%esi
  0x00007fb547832804: mov    0x10(%rdx),%r8d
  0x00007fb547832808: mov    0x14(%rdx),%r9d
  0x00007fb54783280c: mov    0x1c(%rdx),%r11d
  0x00007fb547832810: vmovdqu -0xd8(%rip),%ymm13        # Stub::pshuffle_byte_flip_mask
  0x00007fb547832818: vmovdqu -0xc0(%rip),%ymm10        # Stub::pshuffle_byte_flip_mask+32 0x00007fb547832760
  0x00007fb547832820: vmovdqu -0xa8(%rip),%ymm12        # Stub::pshuffle_byte_flip_mask+64 0x00007fb547832780
  0x00007fb547832828: mov    0x18(%rdx),%r10d
  0x00007fb54783282c: mov    %rdx,0x210(%rsp)
  0x00007fb547832834: movabs $0x7fb5659a6900,%rbp
  0x00007fb54783283e: vmovdqu (%rcx),%ymm0
  0x00007fb547832842: vmovdqu 0x20(%rcx),%ymm1
  0x00007fb547832847: vmovdqu 0x40(%rcx),%ymm2
  0x00007fb54783284c: vmovdqu 0x60(%rcx),%ymm3
  0x00007fb547832851: vpshufb %ymm13,%ymm0,%ymm0
  0x00007fb547832856: vpshufb %ymm13,%ymm1,%ymm1
  0x00007fb54783285b: vpshufb %ymm13,%ymm2,%ymm2
  0x00007fb547832860: vpshufb %ymm13,%ymm3,%ymm3
  0x00007fb547832865: vperm2i128 $0x20,%ymm2,%ymm0,%ymm4
  0x00007fb54783286b: vperm2i128 $0x31,%ymm2,%ymm0,%ymm5
  0x00007fb547832871: vperm2i128 $0x20,%ymm3,%ymm1,%ymm6
  0x00007fb547832877: vperm2i128 $0x31,%ymm3,%ymm1,%ymm7
  0x00007fb54783287d: add    $0x40,%rcx
  0x00007fb547832881: mov    %rcx,0x208(%rsp)
  0x00007fb547832889: xor    %rdx,%rdx
  0x00007fb54783288c: nopl   0x0(%rax)
  0x00007fb547832890: vpaddd 0x0(%rbp,%rdx,1),%ymm4,%ymm9
  0x00007fb547832896: vmovdqu %ymm9,(%rsp,%rdx,1)
  0x00007fb54783289b: mov    %eax,%ecx
  0x00007fb54783289d: rorx   $0x19,%r8d,%r13d
  0x00007fb5478328a3: rorx   $0xb,%r8d,%r14d
  0x00007fb5478328a9: add    (%rsp,%rdx,1),%r11d
  0x00007fb5478328ad: or     %edi,%ecx
  0x00007fb5478328af: mov    %r9d,%r15d
  0x00007fb5478328b2: rorx   $0xd,%eax,%r12d
  0x00007fb5478328b8: xor    %r14d,%r13d
  0x00007fb5478328bb: xor    %r10d,%r15d
  0x00007fb5478328be: rorx   $0x6,%r8d,%r14d
  0x00007fb5478328c4: and    %r8d,%r15d
  0x00007fb5478328c7: xor    %r14d,%r13d
  0x00007fb5478328ca: rorx   $0x16,%eax,%r14d
  0x00007fb5478328d0: add    %r11d,%esi
  0x00007fb5478328d3: and    %ebx,%ecx
  0x00007fb5478328d5: xor    %r12d,%r14d
  0x00007fb5478328d8: rorx   $0x2,%eax,%r12d
  0x00007fb5478328de: xor    %r10d,%r15d
  0x00007fb5478328e1: xor    %r12d,%r14d
  0x00007fb5478328e4: mov    %eax,%r12d
  0x00007fb5478328e7: and    %edi,%r12d
  0x00007fb5478328ea: add    %r13d,%r15d
  0x00007fb5478328ed: or     %r12d,%ecx
  0x00007fb5478328f0: add    %r14d,%r11d
  0x00007fb5478328f3: add    %r15d,%esi
  0x00007fb5478328f6: add    %r15d,%r11d
  0x00007fb5478328f9: add    %ecx,%r11d
  0x00007fb5478328fc: vpalignr $0x4,%ymm6,%ymm7,%ymm0
  0x00007fb547832902: vpaddd %ymm4,%ymm0,%ymm0
  0x00007fb547832906: vpalignr $0x4,%ymm4,%ymm5,%ymm1
  0x00007fb54783290c: vpsrld $0x7,%ymm1,%ymm2
  0x00007fb547832911: vpslld $0x19,%ymm1,%ymm3
  0x00007fb547832916: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb54783291a: vpsrld $0x12,%ymm1,%ymm2
  0x00007fb54783291f: mov    %r11d,%ecx
  0x00007fb547832922: rorx   $0x19,%esi,%r13d
  0x00007fb547832928: rorx   $0xb,%esi,%r14d
  0x00007fb54783292e: add    0x4(%rsp,%rdx,1),%r10d
  0x00007fb547832933: or     %ebx,%ecx
  0x00007fb547832935: mov    %r8d,%r15d
  0x00007fb547832938: rorx   $0xd,%r11d,%r12d
  0x00007fb54783293e: xor    %r14d,%r13d
  0x00007fb547832941: xor    %r9d,%r15d
  0x00007fb547832944: rorx   $0x6,%esi,%r14d
  0x00007fb54783294a: and    %esi,%r15d
  0x00007fb54783294d: xor    %r14d,%r13d
  0x00007fb547832950: rorx   $0x16,%r11d,%r14d
  0x00007fb547832956: add    %r10d,%edi
  0x00007fb547832959: and    %eax,%ecx
  0x00007fb54783295b: xor    %r12d,%r14d
  0x00007fb54783295e: rorx   $0x2,%r11d,%r12d
  0x00007fb547832964: xor    %r9d,%r15d
  0x00007fb547832967: xor    %r12d,%r14d
  0x00007fb54783296a: mov    %r11d,%r12d
  0x00007fb54783296d: and    %ebx,%r12d
  0x00007fb547832970: add    %r13d,%r15d
  0x00007fb547832973: or     %r12d,%ecx
  0x00007fb547832976: add    %r14d,%r10d
  0x00007fb547832979: add    %r15d,%edi
  0x00007fb54783297c: add    %r15d,%r10d
  0x00007fb54783297f: add    %ecx,%r10d
  0x00007fb547832982: vpsrld $0x3,%ymm1,%ymm8
  0x00007fb547832987: vpslld $0xe,%ymm1,%ymm1
  0x00007fb54783298c: vpxor  %ymm1,%ymm3,%ymm3
  0x00007fb547832990: vpxor  %ymm2,%ymm3,%ymm3
  0x00007fb547832994: vpxor  %ymm8,%ymm3,%ymm1
  0x00007fb547832999: vpshufd $0xfa,%ymm7,%ymm2
  0x00007fb54783299e: vpaddd %ymm1,%ymm0,%ymm0
  0x00007fb5478329a2: vpsrld $0xa,%ymm2,%ymm8
  0x00007fb5478329a7: mov    %r10d,%ecx
  0x00007fb5478329aa: rorx   $0x19,%edi,%r13d
  0x00007fb5478329b0: rorx   $0xb,%edi,%r14d
  0x00007fb5478329b6: add    0x8(%rsp,%rdx,1),%r9d
  0x00007fb5478329bb: or     %eax,%ecx
  0x00007fb5478329bd: mov    %esi,%r15d
  0x00007fb5478329c0: rorx   $0xd,%r10d,%r12d
  0x00007fb5478329c6: xor    %r14d,%r13d
  0x00007fb5478329c9: xor    %r8d,%r15d
  0x00007fb5478329cc: rorx   $0x6,%edi,%r14d
  0x00007fb5478329d2: and    %edi,%r15d
  0x00007fb5478329d5: xor    %r14d,%r13d
  0x00007fb5478329d8: rorx   $0x16,%r10d,%r14d
  0x00007fb5478329de: add    %r9d,%ebx
  0x00007fb5478329e1: and    %r11d,%ecx
  0x00007fb5478329e4: xor    %r12d,%r14d
  0x00007fb5478329e7: rorx   $0x2,%r10d,%r12d
  0x00007fb5478329ed: xor    %r8d,%r15d
  0x00007fb5478329f0: xor    %r12d,%r14d
  0x00007fb5478329f3: mov    %r10d,%r12d
  0x00007fb5478329f6: and    %eax,%r12d
  0x00007fb5478329f9: add    %r13d,%r15d
  0x00007fb5478329fc: or     %r12d,%ecx
  0x00007fb5478329ff: add    %r14d,%r9d
  0x00007fb547832a02: add    %r15d,%ebx
  0x00007fb547832a05: add    %r15d,%r9d
  0x00007fb547832a08: add    %ecx,%r9d
  0x00007fb547832a0b: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547832a10: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547832a15: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547832a19: vpxor  %ymm2,%ymm8,%ymm8
  0x00007fb547832a1d: vpshufb %ymm10,%ymm8,%ymm8
  0x00007fb547832a22: vpaddd %ymm8,%ymm0,%ymm0
  0x00007fb547832a27: vpshufd $0x50,%ymm0,%ymm2
  0x00007fb547832a2c: mov    %r9d,%ecx
  0x00007fb547832a2f: rorx   $0x19,%ebx,%r13d
  0x00007fb547832a35: rorx   $0xb,%ebx,%r14d
  0x00007fb547832a3b: add    0xc(%rsp,%rdx,1),%r8d
  0x00007fb547832a40: or     %r11d,%ecx
  0x00007fb547832a43: mov    %edi,%r15d
  0x00007fb547832a46: rorx   $0xd,%r9d,%r12d
  0x00007fb547832a4c: xor    %r14d,%r13d
  0x00007fb547832a4f: xor    %esi,%r15d
  0x00007fb547832a52: rorx   $0x6,%ebx,%r14d
  0x00007fb547832a58: and    %ebx,%r15d
  0x00007fb547832a5b: xor    %r14d,%r13d
  0x00007fb547832a5e: rorx   $0x16,%r9d,%r14d
  0x00007fb547832a64: add    %r8d,%eax
  0x00007fb547832a67: and    %r10d,%ecx
  0x00007fb547832a6a: xor    %r12d,%r14d
  0x00007fb547832a6d: rorx   $0x2,%r9d,%r12d
  0x00007fb547832a73: xor    %esi,%r15d
  0x00007fb547832a76: xor    %r12d,%r14d
  0x00007fb547832a79: mov    %r9d,%r12d
  0x00007fb547832a7c: and    %r11d,%r12d
  0x00007fb547832a7f: add    %r13d,%r15d
  0x00007fb547832a82: or     %r12d,%ecx
  0x00007fb547832a85: add    %r14d,%r8d
  0x00007fb547832a88: add    %r15d,%eax
  0x00007fb547832a8b: add    %r15d,%r8d
  0x00007fb547832a8e: add    %ecx,%r8d
  0x00007fb547832a91: vpsrld $0xa,%ymm2,%ymm11
  0x00007fb547832a96: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547832a9b: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547832aa0: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547832aa4: vpxor  %ymm2,%ymm11,%ymm11
  0x00007fb547832aa8: vpshufb %ymm12,%ymm11,%ymm11
  0x00007fb547832aad: vpaddd %ymm0,%ymm11,%ymm4
  0x00007fb547832ab1: vpaddd 0x20(%rbp,%rdx,1),%ymm5,%ymm9
  0x00007fb547832ab7: vmovdqu %ymm9,0x20(%rsp,%rdx,1)
  0x00007fb547832abd: mov    %r8d,%ecx
  0x00007fb547832ac0: rorx   $0x19,%eax,%r13d
  0x00007fb547832ac6: rorx   $0xb,%eax,%r14d
  0x00007fb547832acc: add    0x20(%rsp,%rdx,1),%esi
  0x00007fb547832ad0: or     %r10d,%ecx
  0x00007fb547832ad3: mov    %ebx,%r15d
  0x00007fb547832ad6: rorx   $0xd,%r8d,%r12d
  0x00007fb547832adc: xor    %r14d,%r13d
  0x00007fb547832adf: xor    %edi,%r15d
  0x00007fb547832ae2: rorx   $0x6,%eax,%r14d
  0x00007fb547832ae8: and    %eax,%r15d
  0x00007fb547832aeb: xor    %r14d,%r13d
  0x00007fb547832aee: rorx   $0x16,%r8d,%r14d
  0x00007fb547832af4: add    %esi,%r11d
  0x00007fb547832af7: and    %r9d,%ecx
  0x00007fb547832afa: xor    %r12d,%r14d
  0x00007fb547832afd: rorx   $0x2,%r8d,%r12d
  0x00007fb547832b03: xor    %edi,%r15d
  0x00007fb547832b06: xor    %r12d,%r14d
  0x00007fb547832b09: mov    %r8d,%r12d
  0x00007fb547832b0c: and    %r10d,%r12d
  0x00007fb547832b0f: add    %r13d,%r15d
  0x00007fb547832b12: or     %r12d,%ecx
  0x00007fb547832b15: add    %r14d,%esi
  0x00007fb547832b18: add    %r15d,%r11d
  0x00007fb547832b1b: add    %r15d,%esi
  0x00007fb547832b1e: add    %ecx,%esi
  0x00007fb547832b20: vpalignr $0x4,%ymm7,%ymm4,%ymm0
  0x00007fb547832b26: vpaddd %ymm5,%ymm0,%ymm0
  0x00007fb547832b2a: vpalignr $0x4,%ymm5,%ymm6,%ymm1
  0x00007fb547832b30: vpsrld $0x7,%ymm1,%ymm2
  0x00007fb547832b35: vpslld $0x19,%ymm1,%ymm3
  0x00007fb547832b3a: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547832b3e: vpsrld $0x12,%ymm1,%ymm2
  0x00007fb547832b43: mov    %esi,%ecx
  0x00007fb547832b45: rorx   $0x19,%r11d,%r13d
  0x00007fb547832b4b: rorx   $0xb,%r11d,%r14d
  0x00007fb547832b51: add    0x24(%rsp,%rdx,1),%edi
  0x00007fb547832b55: or     %r9d,%ecx
  0x00007fb547832b58: mov    %eax,%r15d
  0x00007fb547832b5b: rorx   $0xd,%esi,%r12d
  0x00007fb547832b61: xor    %r14d,%r13d
  0x00007fb547832b64: xor    %ebx,%r15d
  0x00007fb547832b67: rorx   $0x6,%r11d,%r14d
  0x00007fb547832b6d: and    %r11d,%r15d
  0x00007fb547832b70: xor    %r14d,%r13d
  0x00007fb547832b73: rorx   $0x16,%esi,%r14d
  0x00007fb547832b79: add    %edi,%r10d
  0x00007fb547832b7c: and    %r8d,%ecx
  0x00007fb547832b7f: xor    %r12d,%r14d
  0x00007fb547832b82: rorx   $0x2,%esi,%r12d
  0x00007fb547832b88: xor    %ebx,%r15d
  0x00007fb547832b8b: xor    %r12d,%r14d
  0x00007fb547832b8e: mov    %esi,%r12d
  0x00007fb547832b91: and    %r9d,%r12d
  0x00007fb547832b94: add    %r13d,%r15d
  0x00007fb547832b97: or     %r12d,%ecx
  0x00007fb547832b9a: add    %r14d,%edi
  0x00007fb547832b9d: add    %r15d,%r10d
  0x00007fb547832ba0: add    %r15d,%edi
  0x00007fb547832ba3: add    %ecx,%edi
  0x00007fb547832ba5: vpsrld $0x3,%ymm1,%ymm8
  0x00007fb547832baa: vpslld $0xe,%ymm1,%ymm1
  0x00007fb547832baf: vpxor  %ymm1,%ymm3,%ymm3
  0x00007fb547832bb3: vpxor  %ymm2,%ymm3,%ymm3
  0x00007fb547832bb7: vpxor  %ymm8,%ymm3,%ymm1
  0x00007fb547832bbc: vpshufd $0xfa,%ymm4,%ymm2
  0x00007fb547832bc1: vpaddd %ymm1,%ymm0,%ymm0
  0x00007fb547832bc5: vpsrld $0xa,%ymm2,%ymm8
  0x00007fb547832bca: mov    %edi,%ecx
  0x00007fb547832bcc: rorx   $0x19,%r10d,%r13d
  0x00007fb547832bd2: rorx   $0xb,%r10d,%r14d
  0x00007fb547832bd8: add    0x28(%rsp,%rdx,1),%ebx
  0x00007fb547832bdc: or     %r8d,%ecx
  0x00007fb547832bdf: mov    %r11d,%r15d
  0x00007fb547832be2: rorx   $0xd,%edi,%r12d
  0x00007fb547832be8: xor    %r14d,%r13d
  0x00007fb547832beb: xor    %eax,%r15d
  0x00007fb547832bee: rorx   $0x6,%r10d,%r14d
  0x00007fb547832bf4: and    %r10d,%r15d
  0x00007fb547832bf7: xor    %r14d,%r13d
  0x00007fb547832bfa: rorx   $0x16,%edi,%r14d
  0x00007fb547832c00: add    %ebx,%r9d
  0x00007fb547832c03: and    %esi,%ecx
  0x00007fb547832c05: xor    %r12d,%r14d
  0x00007fb547832c08: rorx   $0x2,%edi,%r12d
  0x00007fb547832c0e: xor    %eax,%r15d
  0x00007fb547832c11: xor    %r12d,%r14d
  0x00007fb547832c14: mov    %edi,%r12d
  0x00007fb547832c17: and    %r8d,%r12d
  0x00007fb547832c1a: add    %r13d,%r15d
  0x00007fb547832c1d: or     %r12d,%ecx
  0x00007fb547832c20: add    %r14d,%ebx
  0x00007fb547832c23: add    %r15d,%r9d
  0x00007fb547832c26: add    %r15d,%ebx
  0x00007fb547832c29: add    %ecx,%ebx
  0x00007fb547832c2b: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547832c30: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547832c35: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547832c39: vpxor  %ymm2,%ymm8,%ymm8
  0x00007fb547832c3d: vpshufb %ymm10,%ymm8,%ymm8
  0x00007fb547832c42: vpaddd %ymm8,%ymm0,%ymm0
  0x00007fb547832c47: vpshufd $0x50,%ymm0,%ymm2
  0x00007fb547832c4c: mov    %ebx,%ecx
  0x00007fb547832c4e: rorx   $0x19,%r9d,%r13d
  0x00007fb547832c54: rorx   $0xb,%r9d,%r14d
  0x00007fb547832c5a: add    0x2c(%rsp,%rdx,1),%eax
  0x00007fb547832c5e: or     %esi,%ecx
  0x00007fb547832c60: mov    %r10d,%r15d
  0x00007fb547832c63: rorx   $0xd,%ebx,%r12d
  0x00007fb547832c69: xor    %r14d,%r13d
  0x00007fb547832c6c: xor    %r11d,%r15d
  0x00007fb547832c6f: rorx   $0x6,%r9d,%r14d
  0x00007fb547832c75: and    %r9d,%r15d
  0x00007fb547832c78: xor    %r14d,%r13d
  0x00007fb547832c7b: rorx   $0x16,%ebx,%r14d
  0x00007fb547832c81: add    %eax,%r8d
  0x00007fb547832c84: and    %edi,%ecx
  0x00007fb547832c86: xor    %r12d,%r14d
  0x00007fb547832c89: rorx   $0x2,%ebx,%r12d
  0x00007fb547832c8f: xor    %r11d,%r15d
  0x00007fb547832c92: xor    %r12d,%r14d
  0x00007fb547832c95: mov    %ebx,%r12d
  0x00007fb547832c98: and    %esi,%r12d
  0x00007fb547832c9b: add    %r13d,%r15d
  0x00007fb547832c9e: or     %r12d,%ecx
  0x00007fb547832ca1: add    %r14d,%eax
  0x00007fb547832ca4: add    %r15d,%r8d
  0x00007fb547832ca7: add    %r15d,%eax
  0x00007fb547832caa: add    %ecx,%eax
  0x00007fb547832cac: vpsrld $0xa,%ymm2,%ymm11
  0x00007fb547832cb1: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547832cb6: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547832cbb: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547832cbf: vpxor  %ymm2,%ymm11,%ymm11
  0x00007fb547832cc3: vpshufb %ymm12,%ymm11,%ymm11
  0x00007fb547832cc8: vpaddd %ymm0,%ymm11,%ymm5
  0x00007fb547832ccc: vpaddd 0x40(%rbp,%rdx,1),%ymm6,%ymm9
  0x00007fb547832cd2: vmovdqu %ymm9,0x40(%rsp,%rdx,1)
  0x00007fb547832cd8: mov    %eax,%ecx
  0x00007fb547832cda: rorx   $0x19,%r8d,%r13d
  0x00007fb547832ce0: rorx   $0xb,%r8d,%r14d
  0x00007fb547832ce6: add    0x40(%rsp,%rdx,1),%r11d
  0x00007fb547832ceb: or     %edi,%ecx
  0x00007fb547832ced: mov    %r9d,%r15d
  0x00007fb547832cf0: rorx   $0xd,%eax,%r12d
  0x00007fb547832cf6: xor    %r14d,%r13d
  0x00007fb547832cf9: xor    %r10d,%r15d
  0x00007fb547832cfc: rorx   $0x6,%r8d,%r14d
  0x00007fb547832d02: and    %r8d,%r15d
  0x00007fb547832d05: xor    %r14d,%r13d
  0x00007fb547832d08: rorx   $0x16,%eax,%r14d
  0x00007fb547832d0e: add    %r11d,%esi
  0x00007fb547832d11: and    %ebx,%ecx
  0x00007fb547832d13: xor    %r12d,%r14d
  0x00007fb547832d16: rorx   $0x2,%eax,%r12d
  0x00007fb547832d1c: xor    %r10d,%r15d
  0x00007fb547832d1f: xor    %r12d,%r14d
  0x00007fb547832d22: mov    %eax,%r12d
  0x00007fb547832d25: and    %edi,%r12d
  0x00007fb547832d28: add    %r13d,%r15d
  0x00007fb547832d2b: or     %r12d,%ecx
  0x00007fb547832d2e: add    %r14d,%r11d
  0x00007fb547832d31: add    %r15d,%esi
  0x00007fb547832d34: add    %r15d,%r11d
  0x00007fb547832d37: add    %ecx,%r11d
  0x00007fb547832d3a: vpalignr $0x4,%ymm4,%ymm5,%ymm0
  0x00007fb547832d40: vpaddd %ymm6,%ymm0,%ymm0
  0x00007fb547832d44: vpalignr $0x4,%ymm6,%ymm7,%ymm1
  0x00007fb547832d4a: vpsrld $0x7,%ymm1,%ymm2
  0x00007fb547832d4f: vpslld $0x19,%ymm1,%ymm3
  0x00007fb547832d54: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547832d58: vpsrld $0x12,%ymm1,%ymm2
  0x00007fb547832d5d: mov    %r11d,%ecx
  0x00007fb547832d60: rorx   $0x19,%esi,%r13d
  0x00007fb547832d66: rorx   $0xb,%esi,%r14d
  0x00007fb547832d6c: add    0x44(%rsp,%rdx,1),%r10d
  0x00007fb547832d71: or     %ebx,%ecx
  0x00007fb547832d73: mov    %r8d,%r15d
  0x00007fb547832d76: rorx   $0xd,%r11d,%r12d
  0x00007fb547832d7c: xor    %r14d,%r13d
  0x00007fb547832d7f: xor    %r9d,%r15d
  0x00007fb547832d82: rorx   $0x6,%esi,%r14d
  0x00007fb547832d88: and    %esi,%r15d
  0x00007fb547832d8b: xor    %r14d,%r13d
  0x00007fb547832d8e: rorx   $0x16,%r11d,%r14d
  0x00007fb547832d94: add    %r10d,%edi
  0x00007fb547832d97: and    %eax,%ecx
  0x00007fb547832d99: xor    %r12d,%r14d
  0x00007fb547832d9c: rorx   $0x2,%r11d,%r12d
  0x00007fb547832da2: xor    %r9d,%r15d
  0x00007fb547832da5: xor    %r12d,%r14d
  0x00007fb547832da8: mov    %r11d,%r12d
  0x00007fb547832dab: and    %ebx,%r12d
  0x00007fb547832dae: add    %r13d,%r15d
  0x00007fb547832db1: or     %r12d,%ecx
  0x00007fb547832db4: add    %r14d,%r10d
  0x00007fb547832db7: add    %r15d,%edi
  0x00007fb547832dba: add    %r15d,%r10d
  0x00007fb547832dbd: add    %ecx,%r10d
  0x00007fb547832dc0: vpsrld $0x3,%ymm1,%ymm8
  0x00007fb547832dc5: vpslld $0xe,%ymm1,%ymm1
  0x00007fb547832dca: vpxor  %ymm1,%ymm3,%ymm3
  0x00007fb547832dce: vpxor  %ymm2,%ymm3,%ymm3
  0x00007fb547832dd2: vpxor  %ymm8,%ymm3,%ymm1
  0x00007fb547832dd7: vpshufd $0xfa,%ymm5,%ymm2
  0x00007fb547832ddc: vpaddd %ymm1,%ymm0,%ymm0
  0x00007fb547832de0: vpsrld $0xa,%ymm2,%ymm8
  0x00007fb547832de5: mov    %r10d,%ecx
  0x00007fb547832de8: rorx   $0x19,%edi,%r13d
  0x00007fb547832dee: rorx   $0xb,%edi,%r14d
  0x00007fb547832df4: add    0x48(%rsp,%rdx,1),%r9d
  0x00007fb547832df9: or     %eax,%ecx
  0x00007fb547832dfb: mov    %esi,%r15d
  0x00007fb547832dfe: rorx   $0xd,%r10d,%r12d
  0x00007fb547832e04: xor    %r14d,%r13d
  0x00007fb547832e07: xor    %r8d,%r15d
  0x00007fb547832e0a: rorx   $0x6,%edi,%r14d
  0x00007fb547832e10: and    %edi,%r15d
  0x00007fb547832e13: xor    %r14d,%r13d
  0x00007fb547832e16: rorx   $0x16,%r10d,%r14d
  0x00007fb547832e1c: add    %r9d,%ebx
  0x00007fb547832e1f: and    %r11d,%ecx
  0x00007fb547832e22: xor    %r12d,%r14d
  0x00007fb547832e25: rorx   $0x2,%r10d,%r12d
  0x00007fb547832e2b: xor    %r8d,%r15d
  0x00007fb547832e2e: xor    %r12d,%r14d
  0x00007fb547832e31: mov    %r10d,%r12d
  0x00007fb547832e34: and    %eax,%r12d
  0x00007fb547832e37: add    %r13d,%r15d
  0x00007fb547832e3a: or     %r12d,%ecx
  0x00007fb547832e3d: add    %r14d,%r9d
  0x00007fb547832e40: add    %r15d,%ebx
  0x00007fb547832e43: add    %r15d,%r9d
  0x00007fb547832e46: add    %ecx,%r9d
  0x00007fb547832e49: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547832e4e: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547832e53: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547832e57: vpxor  %ymm2,%ymm8,%ymm8
  0x00007fb547832e5b: vpshufb %ymm10,%ymm8,%ymm8
  0x00007fb547832e60: vpaddd %ymm8,%ymm0,%ymm0
  0x00007fb547832e65: vpshufd $0x50,%ymm0,%ymm2
  0x00007fb547832e6a: mov    %r9d,%ecx
  0x00007fb547832e6d: rorx   $0x19,%ebx,%r13d
  0x00007fb547832e73: rorx   $0xb,%ebx,%r14d
  0x00007fb547832e79: add    0x4c(%rsp,%rdx,1),%r8d
  0x00007fb547832e7e: or     %r11d,%ecx
  0x00007fb547832e81: mov    %edi,%r15d
  0x00007fb547832e84: rorx   $0xd,%r9d,%r12d
  0x00007fb547832e8a: xor    %r14d,%r13d
  0x00007fb547832e8d: xor    %esi,%r15d
  0x00007fb547832e90: rorx   $0x6,%ebx,%r14d
  0x00007fb547832e96: and    %ebx,%r15d
  0x00007fb547832e99: xor    %r14d,%r13d
  0x00007fb547832e9c: rorx   $0x16,%r9d,%r14d
  0x00007fb547832ea2: add    %r8d,%eax
  0x00007fb547832ea5: and    %r10d,%ecx
  0x00007fb547832ea8: xor    %r12d,%r14d
  0x00007fb547832eab: rorx   $0x2,%r9d,%r12d
  0x00007fb547832eb1: xor    %esi,%r15d
  0x00007fb547832eb4: xor    %r12d,%r14d
  0x00007fb547832eb7: mov    %r9d,%r12d
  0x00007fb547832eba: and    %r11d,%r12d
  0x00007fb547832ebd: add    %r13d,%r15d
  0x00007fb547832ec0: or     %r12d,%ecx
  0x00007fb547832ec3: add    %r14d,%r8d
  0x00007fb547832ec6: add    %r15d,%eax
  0x00007fb547832ec9: add    %r15d,%r8d
  0x00007fb547832ecc: add    %ecx,%r8d
  0x00007fb547832ecf: vpsrld $0xa,%ymm2,%ymm11
  0x00007fb547832ed4: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547832ed9: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547832ede: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547832ee2: vpxor  %ymm2,%ymm11,%ymm11
  0x00007fb547832ee6: vpshufb %ymm12,%ymm11,%ymm11
  0x00007fb547832eeb: vpaddd %ymm0,%ymm11,%ymm6
  0x00007fb547832eef: vpaddd 0x60(%rbp,%rdx,1),%ymm7,%ymm9
  0x00007fb547832ef5: vmovdqu %ymm9,0x60(%rsp,%rdx,1)
  0x00007fb547832efb: mov    %r8d,%ecx
  0x00007fb547832efe: rorx   $0x19,%eax,%r13d
  0x00007fb547832f04: rorx   $0xb,%eax,%r14d
  0x00007fb547832f0a: add    0x60(%rsp,%rdx,1),%esi
  0x00007fb547832f0e: or     %r10d,%ecx
  0x00007fb547832f11: mov    %ebx,%r15d
  0x00007fb547832f14: rorx   $0xd,%r8d,%r12d
  0x00007fb547832f1a: xor    %r14d,%r13d
  0x00007fb547832f1d: xor    %edi,%r15d
  0x00007fb547832f20: rorx   $0x6,%eax,%r14d
  0x00007fb547832f26: and    %eax,%r15d
  0x00007fb547832f29: xor    %r14d,%r13d
  0x00007fb547832f2c: rorx   $0x16,%r8d,%r14d
  0x00007fb547832f32: add    %esi,%r11d
  0x00007fb547832f35: and    %r9d,%ecx
  0x00007fb547832f38: xor    %r12d,%r14d
  0x00007fb547832f3b: rorx   $0x2,%r8d,%r12d
  0x00007fb547832f41: xor    %edi,%r15d
  0x00007fb547832f44: xor    %r12d,%r14d
  0x00007fb547832f47: mov    %r8d,%r12d
  0x00007fb547832f4a: and    %r10d,%r12d
  0x00007fb547832f4d: add    %r13d,%r15d
  0x00007fb547832f50: or     %r12d,%ecx
  0x00007fb547832f53: add    %r14d,%esi
  0x00007fb547832f56: add    %r15d,%r11d
  0x00007fb547832f59: add    %r15d,%esi
  0x00007fb547832f5c: add    %ecx,%esi
  0x00007fb547832f5e: vpalignr $0x4,%ymm5,%ymm6,%ymm0
  0x00007fb547832f64: vpaddd %ymm7,%ymm0,%ymm0
  0x00007fb547832f68: vpalignr $0x4,%ymm7,%ymm4,%ymm1
  0x00007fb547832f6e: vpsrld $0x7,%ymm1,%ymm2
  0x00007fb547832f73: vpslld $0x19,%ymm1,%ymm3
  0x00007fb547832f78: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547832f7c: vpsrld $0x12,%ymm1,%ymm2
  0x00007fb547832f81: mov    %esi,%ecx
  0x00007fb547832f83: rorx   $0x19,%r11d,%r13d
  0x00007fb547832f89: rorx   $0xb,%r11d,%r14d
  0x00007fb547832f8f: add    0x64(%rsp,%rdx,1),%edi
  0x00007fb547832f93: or     %r9d,%ecx
  0x00007fb547832f96: mov    %eax,%r15d
  0x00007fb547832f99: rorx   $0xd,%esi,%r12d
  0x00007fb547832f9f: xor    %r14d,%r13d
  0x00007fb547832fa2: xor    %ebx,%r15d
  0x00007fb547832fa5: rorx   $0x6,%r11d,%r14d
  0x00007fb547832fab: and    %r11d,%r15d
  0x00007fb547832fae: xor    %r14d,%r13d
  0x00007fb547832fb1: rorx   $0x16,%esi,%r14d
  0x00007fb547832fb7: add    %edi,%r10d
  0x00007fb547832fba: and    %r8d,%ecx
  0x00007fb547832fbd: xor    %r12d,%r14d
  0x00007fb547832fc0: rorx   $0x2,%esi,%r12d
  0x00007fb547832fc6: xor    %ebx,%r15d
  0x00007fb547832fc9: xor    %r12d,%r14d
  0x00007fb547832fcc: mov    %esi,%r12d
  0x00007fb547832fcf: and    %r9d,%r12d
  0x00007fb547832fd2: add    %r13d,%r15d
  0x00007fb547832fd5: or     %r12d,%ecx
  0x00007fb547832fd8: add    %r14d,%edi
  0x00007fb547832fdb: add    %r15d,%r10d
  0x00007fb547832fde: add    %r15d,%edi
  0x00007fb547832fe1: add    %ecx,%edi
  0x00007fb547832fe3: vpsrld $0x3,%ymm1,%ymm8
  0x00007fb547832fe8: vpslld $0xe,%ymm1,%ymm1
  0x00007fb547832fed: vpxor  %ymm1,%ymm3,%ymm3
  0x00007fb547832ff1: vpxor  %ymm2,%ymm3,%ymm3
  0x00007fb547832ff5: vpxor  %ymm8,%ymm3,%ymm1
  0x00007fb547832ffa: vpshufd $0xfa,%ymm6,%ymm2
  0x00007fb547832fff: vpaddd %ymm1,%ymm0,%ymm0
  0x00007fb547833003: vpsrld $0xa,%ymm2,%ymm8
  0x00007fb547833008: mov    %edi,%ecx
  0x00007fb54783300a: rorx   $0x19,%r10d,%r13d
  0x00007fb547833010: rorx   $0xb,%r10d,%r14d
  0x00007fb547833016: add    0x68(%rsp,%rdx,1),%ebx
  0x00007fb54783301a: or     %r8d,%ecx
  0x00007fb54783301d: mov    %r11d,%r15d
  0x00007fb547833020: rorx   $0xd,%edi,%r12d
  0x00007fb547833026: xor    %r14d,%r13d
  0x00007fb547833029: xor    %eax,%r15d
  0x00007fb54783302c: rorx   $0x6,%r10d,%r14d
  0x00007fb547833032: and    %r10d,%r15d
  0x00007fb547833035: xor    %r14d,%r13d
  0x00007fb547833038: rorx   $0x16,%edi,%r14d
  0x00007fb54783303e: add    %ebx,%r9d
  0x00007fb547833041: and    %esi,%ecx
  0x00007fb547833043: xor    %r12d,%r14d
  0x00007fb547833046: rorx   $0x2,%edi,%r12d
  0x00007fb54783304c: xor    %eax,%r15d
  0x00007fb54783304f: xor    %r12d,%r14d
  0x00007fb547833052: mov    %edi,%r12d
  0x00007fb547833055: and    %r8d,%r12d
  0x00007fb547833058: add    %r13d,%r15d
  0x00007fb54783305b: or     %r12d,%ecx
  0x00007fb54783305e: add    %r14d,%ebx
  0x00007fb547833061: add    %r15d,%r9d
  0x00007fb547833064: add    %r15d,%ebx
  0x00007fb547833067: add    %ecx,%ebx
  0x00007fb547833069: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb54783306e: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547833073: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547833077: vpxor  %ymm2,%ymm8,%ymm8
  0x00007fb54783307b: vpshufb %ymm10,%ymm8,%ymm8
  0x00007fb547833080: vpaddd %ymm8,%ymm0,%ymm0
  0x00007fb547833085: vpshufd $0x50,%ymm0,%ymm2
  0x00007fb54783308a: mov    %ebx,%ecx
  0x00007fb54783308c: rorx   $0x19,%r9d,%r13d
  0x00007fb547833092: rorx   $0xb,%r9d,%r14d
  0x00007fb547833098: add    0x6c(%rsp,%rdx,1),%eax
  0x00007fb54783309c: or     %esi,%ecx
  0x00007fb54783309e: mov    %r10d,%r15d
  0x00007fb5478330a1: rorx   $0xd,%ebx,%r12d
  0x00007fb5478330a7: xor    %r14d,%r13d
  0x00007fb5478330aa: xor    %r11d,%r15d
  0x00007fb5478330ad: rorx   $0x6,%r9d,%r14d
  0x00007fb5478330b3: and    %r9d,%r15d
  0x00007fb5478330b6: xor    %r14d,%r13d
  0x00007fb5478330b9: rorx   $0x16,%ebx,%r14d
  0x00007fb5478330bf: add    %eax,%r8d
  0x00007fb5478330c2: and    %edi,%ecx
  0x00007fb5478330c4: xor    %r12d,%r14d
  0x00007fb5478330c7: rorx   $0x2,%ebx,%r12d
  0x00007fb5478330cd: xor    %r11d,%r15d
  0x00007fb5478330d0: xor    %r12d,%r14d
  0x00007fb5478330d3: mov    %ebx,%r12d
  0x00007fb5478330d6: and    %esi,%r12d
  0x00007fb5478330d9: add    %r13d,%r15d
  0x00007fb5478330dc: or     %r12d,%ecx
  0x00007fb5478330df: add    %r14d,%eax
  0x00007fb5478330e2: add    %r15d,%r8d
  0x00007fb5478330e5: add    %r15d,%eax
  0x00007fb5478330e8: add    %ecx,%eax
  0x00007fb5478330ea: vpsrld $0xa,%ymm2,%ymm11
  0x00007fb5478330ef: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb5478330f4: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb5478330f9: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb5478330fd: vpxor  %ymm2,%ymm11,%ymm11
  0x00007fb547833101: vpshufb %ymm12,%ymm11,%ymm11
  0x00007fb547833106: vpaddd %ymm0,%ymm11,%ymm7
  0x00007fb54783310a: add    $0x80,%rdx
  0x00007fb547833111: cmp    $0x180,%rdx
  0x00007fb547833118: jb     Stub::sha256_implCompress+240 0x00007fb547832890
  0x00007fb54783311e: vpaddd 0x0(%rbp,%rdx,1),%ymm4,%ymm9
  0x00007fb547833124: vmovdqu %ymm9,(%rsp,%rdx,1)
  0x00007fb547833129: mov    %r9d,%r15d
  0x00007fb54783312c: rorx   $0x19,%r8d,%r13d
  0x00007fb547833132: rorx   $0xb,%r8d,%r14d
  0x00007fb547833138: xor    %r10d,%r15d
  0x00007fb54783313b: xor    %r14d,%r13d
  0x00007fb54783313e: rorx   $0x6,%r8d,%r14d
  0x00007fb547833144: and    %r8d,%r15d
  0x00007fb547833147: xor    %r14d,%r13d
  0x00007fb54783314a: rorx   $0xd,%eax,%r12d
  0x00007fb547833150: xor    %r10d,%r15d
  0x00007fb547833153: rorx   $0x16,%eax,%r14d
  0x00007fb547833159: mov    %eax,%ecx
  0x00007fb54783315b: xor    %r12d,%r14d
  0x00007fb54783315e: rorx   $0x2,%eax,%r12d
  0x00007fb547833164: add    (%rsp,%rdx,1),%r11d
  0x00007fb547833168: or     %edi,%ecx
  0x00007fb54783316a: xor    %r12d,%r14d
  0x00007fb54783316d: mov    %eax,%r12d
  0x00007fb547833170: and    %ebx,%ecx
  0x00007fb547833172: and    %edi,%r12d
  0x00007fb547833175: add    %r13d,%r15d
  0x00007fb547833178: add    %r11d,%esi
  0x00007fb54783317b: or     %r12d,%ecx
  0x00007fb54783317e: add    %r14d,%r11d
  0x00007fb547833181: add    %r15d,%esi
  0x00007fb547833184: add    %r15d,%r11d
  0x00007fb547833187: mov    %r8d,%r15d
  0x00007fb54783318a: rorx   $0x19,%esi,%r13d
  0x00007fb547833190: rorx   $0xb,%esi,%r14d
  0x00007fb547833196: xor    %r9d,%r15d
  0x00007fb547833199: xor    %r14d,%r13d
  0x00007fb54783319c: rorx   $0x6,%esi,%r14d
  0x00007fb5478331a2: and    %esi,%r15d
  0x00007fb5478331a5: add    %ecx,%r11d
  0x00007fb5478331a8: xor    %r14d,%r13d
  0x00007fb5478331ab: rorx   $0xd,%r11d,%r12d
  0x00007fb5478331b1: xor    %r9d,%r15d
  0x00007fb5478331b4: rorx   $0x16,%r11d,%r14d
  0x00007fb5478331ba: mov    %r11d,%ecx
  0x00007fb5478331bd: xor    %r12d,%r14d
  0x00007fb5478331c0: rorx   $0x2,%r11d,%r12d
  0x00007fb5478331c6: add    0x4(%rsp,%rdx,1),%r10d
  0x00007fb5478331cb: or     %ebx,%ecx
  0x00007fb5478331cd: xor    %r12d,%r14d
  0x00007fb5478331d0: mov    %r11d,%r12d
  0x00007fb5478331d3: and    %eax,%ecx
  0x00007fb5478331d5: and    %ebx,%r12d
  0x00007fb5478331d8: add    %r13d,%r15d
  0x00007fb5478331db: add    %r10d,%edi
  0x00007fb5478331de: or     %r12d,%ecx
  0x00007fb5478331e1: add    %r14d,%r10d
  0x00007fb5478331e4: add    %r15d,%edi
  0x00007fb5478331e7: add    %r15d,%r10d
  0x00007fb5478331ea: mov    %esi,%r15d
  0x00007fb5478331ed: rorx   $0x19,%edi,%r13d
  0x00007fb5478331f3: rorx   $0xb,%edi,%r14d
  0x00007fb5478331f9: xor    %r8d,%r15d
  0x00007fb5478331fc: xor    %r14d,%r13d
  0x00007fb5478331ff: rorx   $0x6,%edi,%r14d
  0x00007fb547833205: and    %edi,%r15d
  0x00007fb547833208: add    %ecx,%r10d
  0x00007fb54783320b: xor    %r14d,%r13d
  0x00007fb54783320e: rorx   $0xd,%r10d,%r12d
  0x00007fb547833214: xor    %r8d,%r15d
  0x00007fb547833217: rorx   $0x16,%r10d,%r14d
  0x00007fb54783321d: mov    %r10d,%ecx
  0x00007fb547833220: xor    %r12d,%r14d
  0x00007fb547833223: rorx   $0x2,%r10d,%r12d
  0x00007fb547833229: add    0x8(%rsp,%rdx,1),%r9d
  0x00007fb54783322e: or     %eax,%ecx
  0x00007fb547833230: xor    %r12d,%r14d
  0x00007fb547833233: mov    %r10d,%r12d
  0x00007fb547833236: and    %r11d,%ecx
  0x00007fb547833239: and    %eax,%r12d
  0x00007fb54783323c: add    %r13d,%r15d
  0x00007fb54783323f: add    %r9d,%ebx
  0x00007fb547833242: or     %r12d,%ecx
  0x00007fb547833245: add    %r14d,%r9d
  0x00007fb547833248: add    %r15d,%ebx
  0x00007fb54783324b: add    %r15d,%r9d
  0x00007fb54783324e: mov    %edi,%r15d
  0x00007fb547833251: rorx   $0x19,%ebx,%r13d
  0x00007fb547833257: rorx   $0xb,%ebx,%r14d
  0x00007fb54783325d: xor    %esi,%r15d
  0x00007fb547833260: xor    %r14d,%r13d
  0x00007fb547833263: rorx   $0x6,%ebx,%r14d
  0x00007fb547833269: and    %ebx,%r15d
  0x00007fb54783326c: add    %ecx,%r9d
  0x00007fb54783326f: xor    %r14d,%r13d
  0x00007fb547833272: rorx   $0xd,%r9d,%r12d
  0x00007fb547833278: xor    %esi,%r15d
  0x00007fb54783327b: rorx   $0x16,%r9d,%r14d
  0x00007fb547833281: mov    %r9d,%ecx
  0x00007fb547833284: xor    %r12d,%r14d
  0x00007fb547833287: rorx   $0x2,%r9d,%r12d
  0x00007fb54783328d: add    0xc(%rsp,%rdx,1),%r8d
  0x00007fb547833292: or     %r11d,%ecx
  0x00007fb547833295: xor    %r12d,%r14d
  0x00007fb547833298: mov    %r9d,%r12d
  0x00007fb54783329b: and    %r10d,%ecx
  0x00007fb54783329e: and    %r11d,%r12d
  0x00007fb5478332a1: add    %r13d,%r15d
  0x00007fb5478332a4: add    %r8d,%eax
  0x00007fb5478332a7: or     %r12d,%ecx
  0x00007fb5478332aa: add    %r14d,%r8d
  0x00007fb5478332ad: add    %r15d,%eax
  0x00007fb5478332b0: add    %r15d,%r8d
  0x00007fb5478332b3: add    %ecx,%r8d
  0x00007fb5478332b6: vpaddd 0x20(%rbp,%rdx,1),%ymm5,%ymm9
  0x00007fb5478332bc: vmovdqu %ymm9,0x20(%rsp,%rdx,1)
  0x00007fb5478332c2: mov    %ebx,%r15d
  0x00007fb5478332c5: rorx   $0x19,%eax,%r13d
  0x00007fb5478332cb: rorx   $0xb,%eax,%r14d
  0x00007fb5478332d1: xor    %edi,%r15d
  0x00007fb5478332d4: xor    %r14d,%r13d
  0x00007fb5478332d7: rorx   $0x6,%eax,%r14d
  0x00007fb5478332dd: and    %eax,%r15d
  0x00007fb5478332e0: xor    %r14d,%r13d
  0x00007fb5478332e3: rorx   $0xd,%r8d,%r12d
  0x00007fb5478332e9: xor    %edi,%r15d
  0x00007fb5478332ec: rorx   $0x16,%r8d,%r14d
  0x00007fb5478332f2: mov    %r8d,%ecx
  0x00007fb5478332f5: xor    %r12d,%r14d
  0x00007fb5478332f8: rorx   $0x2,%r8d,%r12d
  0x00007fb5478332fe: add    0x20(%rsp,%rdx,1),%esi
  0x00007fb547833302: or     %r10d,%ecx
  0x00007fb547833305: xor    %r12d,%r14d
  0x00007fb547833308: mov    %r8d,%r12d
  0x00007fb54783330b: and    %r9d,%ecx
  0x00007fb54783330e: and    %r10d,%r12d
  0x00007fb547833311: add    %r13d,%r15d
  0x00007fb547833314: add    %esi,%r11d
  0x00007fb547833317: or     %r12d,%ecx
  0x00007fb54783331a: add    %r14d,%esi
  0x00007fb54783331d: add    %r15d,%r11d
  0x00007fb547833320: add    %r15d,%esi
  0x00007fb547833323: mov    %eax,%r15d
  0x00007fb547833326: rorx   $0x19,%r11d,%r13d
  0x00007fb54783332c: rorx   $0xb,%r11d,%r14d
  0x00007fb547833332: xor    %ebx,%r15d
  0x00007fb547833335: xor    %r14d,%r13d
  0x00007fb547833338: rorx   $0x6,%r11d,%r14d
  0x00007fb54783333e: and    %r11d,%r15d
  0x00007fb547833341: add    %ecx,%esi
  0x00007fb547833343: xor    %r14d,%r13d
  0x00007fb547833346: rorx   $0xd,%esi,%r12d
  0x00007fb54783334c: xor    %ebx,%r15d
  0x00007fb54783334f: rorx   $0x16,%esi,%r14d
  0x00007fb547833355: mov    %esi,%ecx
  0x00007fb547833357: xor    %r12d,%r14d
  0x00007fb54783335a: rorx   $0x2,%esi,%r12d
  0x00007fb547833360: add    0x24(%rsp,%rdx,1),%edi
  0x00007fb547833364: or     %r9d,%ecx
  0x00007fb547833367: xor    %r12d,%r14d
  0x00007fb54783336a: mov    %esi,%r12d
  0x00007fb54783336d: and    %r8d,%ecx
  0x00007fb547833370: and    %r9d,%r12d
  0x00007fb547833373: add    %r13d,%r15d
  0x00007fb547833376: add    %edi,%r10d
  0x00007fb547833379: or     %r12d,%ecx
  0x00007fb54783337c: add    %r14d,%edi
  0x00007fb54783337f: add    %r15d,%r10d
  0x00007fb547833382: add    %r15d,%edi
  0x00007fb547833385: mov    %r11d,%r15d
  0x00007fb547833388: rorx   $0x19,%r10d,%r13d
  0x00007fb54783338e: rorx   $0xb,%r10d,%r14d
  0x00007fb547833394: xor    %eax,%r15d
  0x00007fb547833397: xor    %r14d,%r13d
  0x00007fb54783339a: rorx   $0x6,%r10d,%r14d
  0x00007fb5478333a0: and    %r10d,%r15d
  0x00007fb5478333a3: add    %ecx,%edi
  0x00007fb5478333a5: xor    %r14d,%r13d
  0x00007fb5478333a8: rorx   $0xd,%edi,%r12d
  0x00007fb5478333ae: xor    %eax,%r15d
  0x00007fb5478333b1: rorx   $0x16,%edi,%r14d
  0x00007fb5478333b7: mov    %edi,%ecx
  0x00007fb5478333b9: xor    %r12d,%r14d
  0x00007fb5478333bc: rorx   $0x2,%edi,%r12d
  0x00007fb5478333c2: add    0x28(%rsp,%rdx,1),%ebx
  0x00007fb5478333c6: or     %r8d,%ecx
  0x00007fb5478333c9: xor    %r12d,%r14d
  0x00007fb5478333cc: mov    %edi,%r12d
  0x00007fb5478333cf: and    %esi,%ecx
  0x00007fb5478333d1: and    %r8d,%r12d
  0x00007fb5478333d4: add    %r13d,%r15d
  0x00007fb5478333d7: add    %ebx,%r9d
  0x00007fb5478333da: or     %r12d,%ecx
  0x00007fb5478333dd: add    %r14d,%ebx
  0x00007fb5478333e0: add    %r15d,%r9d
  0x00007fb5478333e3: add    %r15d,%ebx
  0x00007fb5478333e6: mov    %r10d,%r15d
  0x00007fb5478333e9: rorx   $0x19,%r9d,%r13d
  0x00007fb5478333ef: rorx   $0xb,%r9d,%r14d
  0x00007fb5478333f5: xor    %r11d,%r15d
  0x00007fb5478333f8: xor    %r14d,%r13d
  0x00007fb5478333fb: rorx   $0x6,%r9d,%r14d
  0x00007fb547833401: and    %r9d,%r15d
  0x00007fb547833404: add    %ecx,%ebx
  0x00007fb547833406: xor    %r14d,%r13d
  0x00007fb547833409: rorx   $0xd,%ebx,%r12d
  0x00007fb54783340f: xor    %r11d,%r15d
  0x00007fb547833412: rorx   $0x16,%ebx,%r14d
  0x00007fb547833418: mov    %ebx,%ecx
  0x00007fb54783341a: xor    %r12d,%r14d
  0x00007fb54783341d: rorx   $0x2,%ebx,%r12d
  0x00007fb547833423: add    0x2c(%rsp,%rdx,1),%eax
  0x00007fb547833427: or     %esi,%ecx
  0x00007fb547833429: xor    %r12d,%r14d
  0x00007fb54783342c: mov    %ebx,%r12d
  0x00007fb54783342f: and    %edi,%ecx
  0x00007fb547833431: and    %esi,%r12d
  0x00007fb547833434: add    %r13d,%r15d
  0x00007fb547833437: add    %eax,%r8d
  0x00007fb54783343a: or     %r12d,%ecx
  0x00007fb54783343d: add    %r14d,%eax
  0x00007fb547833440: add    %r15d,%r8d
  0x00007fb547833443: add    %r15d,%eax
  0x00007fb547833446: add    %ecx,%eax
  0x00007fb547833448: add    $0x40,%rdx
  0x00007fb54783344c: vmovdqu %ymm6,%ymm4
  0x00007fb547833450: vmovdqu %ymm7,%ymm5
  0x00007fb547833454: cmp    $0x200,%rdx
  0x00007fb54783345b: jb     Stub::sha256_implCompress+2430 0x00007fb54783311e
  0x00007fb547833461: mov    0x210(%rsp),%rdx
  0x00007fb547833469: mov    0x208(%rsp),%rcx
  0x00007fb547833471: add    (%rdx),%eax
  0x00007fb547833473: mov    %eax,(%rdx)
  0x00007fb547833475: add    0x4(%rdx),%ebx
  0x00007fb547833478: mov    %ebx,0x4(%rdx)
  0x00007fb54783347b: add    0x8(%rdx),%edi
  0x00007fb54783347e: mov    %edi,0x8(%rdx)
  0x00007fb547833481: add    0xc(%rdx),%esi
  0x00007fb547833484: mov    %esi,0xc(%rdx)
  0x00007fb547833487: add    0x10(%rdx),%r8d
  0x00007fb54783348b: mov    %r8d,0x10(%rdx)
  0x00007fb54783348f: add    0x14(%rdx),%r9d
  0x00007fb547833493: mov    %r9d,0x14(%rdx)
  0x00007fb547833497: add    0x18(%rdx),%r10d
  0x00007fb54783349b: mov    %r10d,0x18(%rdx)
  0x00007fb54783349f: add    0x1c(%rdx),%r11d
  0x00007fb5478334a3: mov    %r11d,0x1c(%rdx)
  0x00007fb5478334a7: cmp    0x200(%rsp),%rcx
  0x00007fb5478334af: ja     Stub::sha256_implCompress+4370 0x00007fb5478338b2
  0x00007fb5478334b5: xor    %rdx,%rdx
  0x00007fb5478334b8: nopl   0x0(%rax,%rax,1)
  0x00007fb5478334c0: mov    %r9d,%r15d
  0x00007fb5478334c3: rorx   $0x19,%r8d,%r13d
  0x00007fb5478334c9: rorx   $0xb,%r8d,%r14d
  0x00007fb5478334cf: xor    %r10d,%r15d
  0x00007fb5478334d2: xor    %r14d,%r13d
  0x00007fb5478334d5: rorx   $0x6,%r8d,%r14d
  0x00007fb5478334db: and    %r8d,%r15d
  0x00007fb5478334de: xor    %r14d,%r13d
  0x00007fb5478334e1: rorx   $0xd,%eax,%r12d
  0x00007fb5478334e7: xor    %r10d,%r15d
  0x00007fb5478334ea: rorx   $0x16,%eax,%r14d
  0x00007fb5478334f0: mov    %eax,%ecx
  0x00007fb5478334f2: xor    %r12d,%r14d
  0x00007fb5478334f5: rorx   $0x2,%eax,%r12d
  0x00007fb5478334fb: add    0x10(%rsp,%rdx,1),%r11d
  0x00007fb547833500: or     %edi,%ecx
  0x00007fb547833502: xor    %r12d,%r14d
  0x00007fb547833505: mov    %eax,%r12d
  0x00007fb547833508: and    %ebx,%ecx
  0x00007fb54783350a: and    %edi,%r12d
  0x00007fb54783350d: add    %r13d,%r15d
  0x00007fb547833510: add    %r11d,%esi
  0x00007fb547833513: or     %r12d,%ecx
  0x00007fb547833516: add    %r14d,%r11d
  0x00007fb547833519: add    %r15d,%esi
  0x00007fb54783351c: add    %r15d,%r11d
  0x00007fb54783351f: mov    %r8d,%r15d
  0x00007fb547833522: rorx   $0x19,%esi,%r13d
  0x00007fb547833528: rorx   $0xb,%esi,%r14d
  0x00007fb54783352e: xor    %r9d,%r15d
  0x00007fb547833531: xor    %r14d,%r13d
  0x00007fb547833534: rorx   $0x6,%esi,%r14d
  0x00007fb54783353a: and    %esi,%r15d
  0x00007fb54783353d: add    %ecx,%r11d
  0x00007fb547833540: xor    %r14d,%r13d
  0x00007fb547833543: rorx   $0xd,%r11d,%r12d
  0x00007fb547833549: xor    %r9d,%r15d
  0x00007fb54783354c: rorx   $0x16,%r11d,%r14d
  0x00007fb547833552: mov    %r11d,%ecx
  0x00007fb547833555: xor    %r12d,%r14d
  0x00007fb547833558: rorx   $0x2,%r11d,%r12d
  0x00007fb54783355e: add    0x14(%rsp,%rdx,1),%r10d
  0x00007fb547833563: or     %ebx,%ecx
  0x00007fb547833565: xor    %r12d,%r14d
  0x00007fb547833568: mov    %r11d,%r12d
  0x00007fb54783356b: and    %eax,%ecx
  0x00007fb54783356d: and    %ebx,%r12d
  0x00007fb547833570: add    %r13d,%r15d
  0x00007fb547833573: add    %r10d,%edi
  0x00007fb547833576: or     %r12d,%ecx
  0x00007fb547833579: add    %r14d,%r10d
  0x00007fb54783357c: add    %r15d,%edi
  0x00007fb54783357f: add    %r15d,%r10d
  0x00007fb547833582: mov    %esi,%r15d
  0x00007fb547833585: rorx   $0x19,%edi,%r13d
  0x00007fb54783358b: rorx   $0xb,%edi,%r14d
  0x00007fb547833591: xor    %r8d,%r15d
  0x00007fb547833594: xor    %r14d,%r13d
  0x00007fb547833597: rorx   $0x6,%edi,%r14d
  0x00007fb54783359d: and    %edi,%r15d
  0x00007fb5478335a0: add    %ecx,%r10d
  0x00007fb5478335a3: xor    %r14d,%r13d
  0x00007fb5478335a6: rorx   $0xd,%r10d,%r12d
  0x00007fb5478335ac: xor    %r8d,%r15d
  0x00007fb5478335af: rorx   $0x16,%r10d,%r14d
  0x00007fb5478335b5: mov    %r10d,%ecx
  0x00007fb5478335b8: xor    %r12d,%r14d
  0x00007fb5478335bb: rorx   $0x2,%r10d,%r12d
  0x00007fb5478335c1: add    0x18(%rsp,%rdx,1),%r9d
  0x00007fb5478335c6: or     %eax,%ecx
  0x00007fb5478335c8: xor    %r12d,%r14d
  0x00007fb5478335cb: mov    %r10d,%r12d
  0x00007fb5478335ce: and    %r11d,%ecx
  0x00007fb5478335d1: and    %eax,%r12d
  0x00007fb5478335d4: add    %r13d,%r15d
  0x00007fb5478335d7: add    %r9d,%ebx
  0x00007fb5478335da: or     %r12d,%ecx
  0x00007fb5478335dd: add    %r14d,%r9d
  0x00007fb5478335e0: add    %r15d,%ebx
  0x00007fb5478335e3: add    %r15d,%r9d
  0x00007fb5478335e6: mov    %edi,%r15d
  0x00007fb5478335e9: rorx   $0x19,%ebx,%r13d
  0x00007fb5478335ef: rorx   $0xb,%ebx,%r14d
  0x00007fb5478335f5: xor    %esi,%r15d
  0x00007fb5478335f8: xor    %r14d,%r13d
  0x00007fb5478335fb: rorx   $0x6,%ebx,%r14d
  0x00007fb547833601: and    %ebx,%r15d
  0x00007fb547833604: add    %ecx,%r9d
  0x00007fb547833607: xor    %r14d,%r13d
  0x00007fb54783360a: rorx   $0xd,%r9d,%r12d
  0x00007fb547833610: xor    %esi,%r15d
  0x00007fb547833613: rorx   $0x16,%r9d,%r14d
  0x00007fb547833619: mov    %r9d,%ecx
  0x00007fb54783361c: xor    %r12d,%r14d
  0x00007fb54783361f: rorx   $0x2,%r9d,%r12d
  0x00007fb547833625: add    0x1c(%rsp,%rdx,1),%r8d
  0x00007fb54783362a: or     %r11d,%ecx
  0x00007fb54783362d: xor    %r12d,%r14d
  0x00007fb547833630: mov    %r9d,%r12d
  0x00007fb547833633: and    %r10d,%ecx
  0x00007fb547833636: and    %r11d,%r12d
  0x00007fb547833639: add    %r13d,%r15d
  0x00007fb54783363c: add    %r8d,%eax
  0x00007fb54783363f: or     %r12d,%ecx
  0x00007fb547833642: add    %r14d,%r8d
  0x00007fb547833645: add    %r15d,%eax
  0x00007fb547833648: add    %r15d,%r8d
  0x00007fb54783364b: add    %ecx,%r8d
  0x00007fb54783364e: mov    %ebx,%r15d
  0x00007fb547833651: rorx   $0x19,%eax,%r13d
  0x00007fb547833657: rorx   $0xb,%eax,%r14d
  0x00007fb54783365d: xor    %edi,%r15d
  0x00007fb547833660: xor    %r14d,%r13d
  0x00007fb547833663: rorx   $0x6,%eax,%r14d
  0x00007fb547833669: and    %eax,%r15d
  0x00007fb54783366c: xor    %r14d,%r13d
  0x00007fb54783366f: rorx   $0xd,%r8d,%r12d
  0x00007fb547833675: xor    %edi,%r15d
  0x00007fb547833678: rorx   $0x16,%r8d,%r14d
  0x00007fb54783367e: mov    %r8d,%ecx
  0x00007fb547833681: xor    %r12d,%r14d
  0x00007fb547833684: rorx   $0x2,%r8d,%r12d
  0x00007fb54783368a: add    0x30(%rsp,%rdx,1),%esi
  0x00007fb54783368e: or     %r10d,%ecx
  0x00007fb547833691: xor    %r12d,%r14d
  0x00007fb547833694: mov    %r8d,%r12d
  0x00007fb547833697: and    %r9d,%ecx
  0x00007fb54783369a: and    %r10d,%r12d
  0x00007fb54783369d: add    %r13d,%r15d
  0x00007fb5478336a0: add    %esi,%r11d
  0x00007fb5478336a3: or     %r12d,%ecx
  0x00007fb5478336a6: add    %r14d,%esi
  0x00007fb5478336a9: add    %r15d,%r11d
  0x00007fb5478336ac: add    %r15d,%esi
  0x00007fb5478336af: mov    %eax,%r15d
  0x00007fb5478336b2: rorx   $0x19,%r11d,%r13d
  0x00007fb5478336b8: rorx   $0xb,%r11d,%r14d
  0x00007fb5478336be: xor    %ebx,%r15d
  0x00007fb5478336c1: xor    %r14d,%r13d
  0x00007fb5478336c4: rorx   $0x6,%r11d,%r14d
  0x00007fb5478336ca: and    %r11d,%r15d
  0x00007fb5478336cd: add    %ecx,%esi
  0x00007fb5478336cf: xor    %r14d,%r13d
  0x00007fb5478336d2: rorx   $0xd,%esi,%r12d
  0x00007fb5478336d8: xor    %ebx,%r15d
  0x00007fb5478336db: rorx   $0x16,%esi,%r14d
  0x00007fb5478336e1: mov    %esi,%ecx
  0x00007fb5478336e3: xor    %r12d,%r14d
  0x00007fb5478336e6: rorx   $0x2,%esi,%r12d
  0x00007fb5478336ec: add    0x34(%rsp,%rdx,1),%edi
  0x00007fb5478336f0: or     %r9d,%ecx
  0x00007fb5478336f3: xor    %r12d,%r14d
  0x00007fb5478336f6: mov    %esi,%r12d
  0x00007fb5478336f9: and    %r8d,%ecx
  0x00007fb5478336fc: and    %r9d,%r12d
  0x00007fb5478336ff: add    %r13d,%r15d
  0x00007fb547833702: add    %edi,%r10d
  0x00007fb547833705: or     %r12d,%ecx
  0x00007fb547833708: add    %r14d,%edi
  0x00007fb54783370b: add    %r15d,%r10d
  0x00007fb54783370e: add    %r15d,%edi
  0x00007fb547833711: mov    %r11d,%r15d
  0x00007fb547833714: rorx   $0x19,%r10d,%r13d
  0x00007fb54783371a: rorx   $0xb,%r10d,%r14d
  0x00007fb547833720: xor    %eax,%r15d
  0x00007fb547833723: xor    %r14d,%r13d
  0x00007fb547833726: rorx   $0x6,%r10d,%r14d
  0x00007fb54783372c: and    %r10d,%r15d
  0x00007fb54783372f: add    %ecx,%edi
  0x00007fb547833731: xor    %r14d,%r13d
  0x00007fb547833734: rorx   $0xd,%edi,%r12d
  0x00007fb54783373a: xor    %eax,%r15d
  0x00007fb54783373d: rorx   $0x16,%edi,%r14d
  0x00007fb547833743: mov    %edi,%ecx
  0x00007fb547833745: xor    %r12d,%r14d
  0x00007fb547833748: rorx   $0x2,%edi,%r12d
  0x00007fb54783374e: add    0x38(%rsp,%rdx,1),%ebx
  0x00007fb547833752: or     %r8d,%ecx
  0x00007fb547833755: xor    %r12d,%r14d
  0x00007fb547833758: mov    %edi,%r12d
  0x00007fb54783375b: and    %esi,%ecx
  0x00007fb54783375d: and    %r8d,%r12d
  0x00007fb547833760: add    %r13d,%r15d
  0x00007fb547833763: add    %ebx,%r9d
  0x00007fb547833766: or     %r12d,%ecx
  0x00007fb547833769: add    %r14d,%ebx
  0x00007fb54783376c: add    %r15d,%r9d
  0x00007fb54783376f: add    %r15d,%ebx
  0x00007fb547833772: mov    %r10d,%r15d
  0x00007fb547833775: rorx   $0x19,%r9d,%r13d
  0x00007fb54783377b: rorx   $0xb,%r9d,%r14d
  0x00007fb547833781: xor    %r11d,%r15d
  0x00007fb547833784: xor    %r14d,%r13d
  0x00007fb547833787: rorx   $0x6,%r9d,%r14d
  0x00007fb54783378d: and    %r9d,%r15d
  0x00007fb547833790: add    %ecx,%ebx
  0x00007fb547833792: xor    %r14d,%r13d
  0x00007fb547833795: rorx   $0xd,%ebx,%r12d
  0x00007fb54783379b: xor    %r11d,%r15d
  0x00007fb54783379e: rorx   $0x16,%ebx,%r14d
  0x00007fb5478337a4: mov    %ebx,%ecx
  0x00007fb5478337a6: xor    %r12d,%r14d
  0x00007fb5478337a9: rorx   $0x2,%ebx,%r12d
  0x00007fb5478337af: add    0x3c(%rsp,%rdx,1),%eax
  0x00007fb5478337b3: or     %esi,%ecx
  0x00007fb5478337b5: xor    %r12d,%r14d
  0x00007fb5478337b8: mov    %ebx,%r12d
  0x00007fb5478337bb: and    %edi,%ecx
  0x00007fb5478337bd: and    %esi,%r12d
  0x00007fb5478337c0: add    %r13d,%r15d
  0x00007fb5478337c3: add    %eax,%r8d
  0x00007fb5478337c6: or     %r12d,%ecx
  0x00007fb5478337c9: add    %r14d,%eax
  0x00007fb5478337cc: add    %r15d,%r8d
  0x00007fb5478337cf: add    %r15d,%eax
  0x00007fb5478337d2: add    %ecx,%eax
  0x00007fb5478337d4: add    $0x40,%rdx
  0x00007fb5478337d8: cmp    $0x200,%rdx
  0x00007fb5478337df: jb     Stub::sha256_implCompress+3360 0x00007fb5478334c0
  0x00007fb5478337e5: mov    0x210(%rsp),%rdx
  0x00007fb5478337ed: mov    0x208(%rsp),%rcx
  0x00007fb5478337f5: add    $0x40,%rcx
  0x00007fb5478337f9: add    (%rdx),%eax
  0x00007fb5478337fb: mov    %eax,(%rdx)
  0x00007fb5478337fd: add    0x4(%rdx),%ebx
  0x00007fb547833800: mov    %ebx,0x4(%rdx)
  0x00007fb547833803: add    0x8(%rdx),%edi
  0x00007fb547833806: mov    %edi,0x8(%rdx)
  0x00007fb547833809: add    0xc(%rdx),%esi
  0x00007fb54783380c: mov    %esi,0xc(%rdx)
  0x00007fb54783380f: add    0x10(%rdx),%r8d
  0x00007fb547833813: mov    %r8d,0x10(%rdx)
  0x00007fb547833817: add    0x14(%rdx),%r9d
  0x00007fb54783381b: mov    %r9d,0x14(%rdx)
  0x00007fb54783381f: add    0x18(%rdx),%r10d
  0x00007fb547833823: mov    %r10d,0x18(%rdx)
  0x00007fb547833827: add    0x1c(%rdx),%r11d
  0x00007fb54783382b: mov    %r11d,0x1c(%rdx)
  0x00007fb54783382f: cmp    0x200(%rsp),%rcx
  0x00007fb547833837: jb     Stub::sha256_implCompress+148 0x00007fb547832834
  0x00007fb54783383d: ja     Stub::sha256_implCompress+4370 0x00007fb5478338b2
  0x00007fb54783383f: movabs $0x7fb5659a6900,%rbp
  0x00007fb547833849: vmovdqu (%rcx),%xmm4
  0x00007fb54783384d: vmovdqu 0x10(%rcx),%xmm5
  0x00007fb547833852: vmovdqu 0x20(%rcx),%xmm6
  0x00007fb547833857: vmovdqu 0x30(%rcx),%xmm7
  0x00007fb54783385c: vpshufb %xmm13,%xmm4,%xmm4
  0x00007fb547833861: vpshufb %xmm13,%xmm5,%xmm5
  0x00007fb547833866: vpshufb %xmm13,%xmm6,%xmm6
  0x00007fb54783386b: vpshufb %xmm13,%xmm7,%xmm7
  0x00007fb547833870: jmpq   Stub::sha256_implCompress+221 0x00007fb54783287d
  0x00007fb547833875: mov    (%rdx),%eax
  0x00007fb547833877: mov    0x4(%rdx),%ebx
  0x00007fb54783387a: mov    0x8(%rdx),%edi
  0x00007fb54783387d: mov    0xc(%rdx),%esi
  0x00007fb547833880: mov    0x10(%rdx),%r8d
  0x00007fb547833884: mov    0x14(%rdx),%r9d
  0x00007fb547833888: mov    0x1c(%rdx),%r11d
  0x00007fb54783388c: vmovdqu -0x1154(%rip),%ymm13        # Stub::pshuffle_byte_flip_mask
  0x00007fb547833894: vmovdqu -0x113c(%rip),%ymm10        # Stub::pshuffle_byte_flip_mask+32 0x00007fb547832760
  0x00007fb54783389c: vmovdqu -0x1124(%rip),%ymm12        # Stub::pshuffle_byte_flip_mask+64 0x00007fb547832780
  0x00007fb5478338a4: mov    0x18(%rdx),%r10d
  0x00007fb5478338a8: mov    %rdx,0x210(%rsp)
  0x00007fb5478338b0: jmp    Stub::sha256_implCompress+4255 0x00007fb54783383f
  0x00007fb5478338b2: mov    0x218(%rsp),%rsp
  0x00007fb5478338ba: pop    %r15
  0x00007fb5478338bc: pop    %r14
  0x00007fb5478338be: pop    %r13
  0x00007fb5478338c0: pop    %r12
  0x00007fb5478338c2: pop    %rbp
  0x00007fb5478338c3: pop    %rbx
  0x00007fb5478338c4: pop    %rdx
  0x00007fb5478338c5: pop    %rcx
  0x00007fb5478338c6: add    $0x20,%rsp
  0x00007fb5478338ca: vzeroupper 
  0x00007fb5478338cd: leaveq 
  0x00007fb5478338ce: retq   

StubRoutines::sha256_implCompressMB [0x00007fb5478338e0, 0x00007fb547834a3d[ (4445 bytes)
  0x00007fb5478338e0: push   %rbp
  0x00007fb5478338e1: mov    %rsp,%rbp
  0x00007fb5478338e4: sub    $0x20,%rsp
  0x00007fb5478338e8: push   %rcx
  0x00007fb5478338e9: push   %rdx
  0x00007fb5478338ea: push   %rbx
  0x00007fb5478338eb: push   %rbp
  0x00007fb5478338ec: push   %r12
  0x00007fb5478338ee: push   %r13
  0x00007fb5478338f0: push   %r14
  0x00007fb5478338f2: push   %r15
  0x00007fb5478338f4: mov    %rsp,%rax
  0x00007fb5478338f7: sub    $0x220,%rsp
  0x00007fb5478338fe: and    $0xffffffffffffffe0,%rsp
  0x00007fb547833902: mov    %rax,0x218(%rsp)
  0x00007fb54783390a: mov    %rcx,%r9
  0x00007fb54783390d: mov    %rdx,%r8
  0x00007fb547833910: mov    %rsi,%rdx
  0x00007fb547833913: mov    %rdi,%rcx
  0x00007fb547833916: lea    (%rcx),%rcx
  0x00007fb547833919: mov    %rdx,%rdx
  0x00007fb54783391c: xor    %rax,%rax
  0x00007fb54783391f: cmp    %r9,%r8
  0x00007fb547833922: jae    Stub::sha256_implCompressMB+78 0x00007fb54783392e
  0x00007fb547833924: add    $0x40,%r8
  0x00007fb547833928: add    $0x40,%rax
  0x00007fb54783392c: jmp    Stub::sha256_implCompressMB+63 0x00007fb54783391f
  0x00007fb54783392e: mov    %rax,%r8
  0x00007fb547833931: cmp    $0x0,%r8
  0x00007fb547833935: je     Stub::sha256_implCompressMB+4402 0x00007fb547834a12
  0x00007fb54783393b: lea    -0x40(%rcx,%r8,1),%r8
  0x00007fb547833940: mov    %r8,0x200(%rsp)
  0x00007fb547833948: cmp    %r8,%rcx
  0x00007fb54783394b: je     Stub::sha256_implCompressMB+4341 0x00007fb5478349d5
  0x00007fb547833951: mov    (%rdx),%eax
  0x00007fb547833953: mov    0x4(%rdx),%ebx
  0x00007fb547833956: mov    0x8(%rdx),%edi
  0x00007fb547833959: mov    0xc(%rdx),%esi
  0x00007fb54783395c: mov    0x10(%rdx),%r8d
  0x00007fb547833960: mov    0x14(%rdx),%r9d
  0x00007fb547833964: mov    0x1c(%rdx),%r11d
  0x00007fb547833968: vmovdqu -0x1230(%rip),%ymm13        # Stub::pshuffle_byte_flip_mask
  0x00007fb547833970: vmovdqu -0x1218(%rip),%ymm10        # Stub::pshuffle_byte_flip_mask+32 0x00007fb547832760
  0x00007fb547833978: vmovdqu -0x1200(%rip),%ymm12        # Stub::pshuffle_byte_flip_mask+64 0x00007fb547832780
  0x00007fb547833980: mov    0x18(%rdx),%r10d
  0x00007fb547833984: mov    %rdx,0x210(%rsp)
  0x00007fb54783398c: movabs $0x7fb5659a6900,%rbp
  0x00007fb547833996: vmovdqu (%rcx),%ymm0
  0x00007fb54783399a: vmovdqu 0x20(%rcx),%ymm1
  0x00007fb54783399f: vmovdqu 0x40(%rcx),%ymm2
  0x00007fb5478339a4: vmovdqu 0x60(%rcx),%ymm3
  0x00007fb5478339a9: vpshufb %ymm13,%ymm0,%ymm0
  0x00007fb5478339ae: vpshufb %ymm13,%ymm1,%ymm1
  0x00007fb5478339b3: vpshufb %ymm13,%ymm2,%ymm2
  0x00007fb5478339b8: vpshufb %ymm13,%ymm3,%ymm3
  0x00007fb5478339bd: vperm2i128 $0x20,%ymm2,%ymm0,%ymm4
  0x00007fb5478339c3: vperm2i128 $0x31,%ymm2,%ymm0,%ymm5
  0x00007fb5478339c9: vperm2i128 $0x20,%ymm3,%ymm1,%ymm6
  0x00007fb5478339cf: vperm2i128 $0x31,%ymm3,%ymm1,%ymm7
  0x00007fb5478339d5: add    $0x40,%rcx
  0x00007fb5478339d9: mov    %rcx,0x208(%rsp)
  0x00007fb5478339e1: xor    %rdx,%rdx
  0x00007fb5478339e4: nopl   0x0(%rax,%rax,1)
  0x00007fb5478339ec: data16 data16 xchg %ax,%ax
  0x00007fb5478339f0: vpaddd 0x0(%rbp,%rdx,1),%ymm4,%ymm9
  0x00007fb5478339f6: vmovdqu %ymm9,(%rsp,%rdx,1)
  0x00007fb5478339fb: mov    %eax,%ecx
  0x00007fb5478339fd: rorx   $0x19,%r8d,%r13d
  0x00007fb547833a03: rorx   $0xb,%r8d,%r14d
  0x00007fb547833a09: add    (%rsp,%rdx,1),%r11d
  0x00007fb547833a0d: or     %edi,%ecx
  0x00007fb547833a0f: mov    %r9d,%r15d
  0x00007fb547833a12: rorx   $0xd,%eax,%r12d
  0x00007fb547833a18: xor    %r14d,%r13d
  0x00007fb547833a1b: xor    %r10d,%r15d
  0x00007fb547833a1e: rorx   $0x6,%r8d,%r14d
  0x00007fb547833a24: and    %r8d,%r15d
  0x00007fb547833a27: xor    %r14d,%r13d
  0x00007fb547833a2a: rorx   $0x16,%eax,%r14d
  0x00007fb547833a30: add    %r11d,%esi
  0x00007fb547833a33: and    %ebx,%ecx
  0x00007fb547833a35: xor    %r12d,%r14d
  0x00007fb547833a38: rorx   $0x2,%eax,%r12d
  0x00007fb547833a3e: xor    %r10d,%r15d
  0x00007fb547833a41: xor    %r12d,%r14d
  0x00007fb547833a44: mov    %eax,%r12d
  0x00007fb547833a47: and    %edi,%r12d
  0x00007fb547833a4a: add    %r13d,%r15d
  0x00007fb547833a4d: or     %r12d,%ecx
  0x00007fb547833a50: add    %r14d,%r11d
  0x00007fb547833a53: add    %r15d,%esi
  0x00007fb547833a56: add    %r15d,%r11d
  0x00007fb547833a59: add    %ecx,%r11d
  0x00007fb547833a5c: vpalignr $0x4,%ymm6,%ymm7,%ymm0
  0x00007fb547833a62: vpaddd %ymm4,%ymm0,%ymm0
  0x00007fb547833a66: vpalignr $0x4,%ymm4,%ymm5,%ymm1
  0x00007fb547833a6c: vpsrld $0x7,%ymm1,%ymm2
  0x00007fb547833a71: vpslld $0x19,%ymm1,%ymm3
  0x00007fb547833a76: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547833a7a: vpsrld $0x12,%ymm1,%ymm2
  0x00007fb547833a7f: mov    %r11d,%ecx
  0x00007fb547833a82: rorx   $0x19,%esi,%r13d
  0x00007fb547833a88: rorx   $0xb,%esi,%r14d
  0x00007fb547833a8e: add    0x4(%rsp,%rdx,1),%r10d
  0x00007fb547833a93: or     %ebx,%ecx
  0x00007fb547833a95: mov    %r8d,%r15d
  0x00007fb547833a98: rorx   $0xd,%r11d,%r12d
  0x00007fb547833a9e: xor    %r14d,%r13d
  0x00007fb547833aa1: xor    %r9d,%r15d
  0x00007fb547833aa4: rorx   $0x6,%esi,%r14d
  0x00007fb547833aaa: and    %esi,%r15d
  0x00007fb547833aad: xor    %r14d,%r13d
  0x00007fb547833ab0: rorx   $0x16,%r11d,%r14d
  0x00007fb547833ab6: add    %r10d,%edi
  0x00007fb547833ab9: and    %eax,%ecx
  0x00007fb547833abb: xor    %r12d,%r14d
  0x00007fb547833abe: rorx   $0x2,%r11d,%r12d
  0x00007fb547833ac4: xor    %r9d,%r15d
  0x00007fb547833ac7: xor    %r12d,%r14d
  0x00007fb547833aca: mov    %r11d,%r12d
  0x00007fb547833acd: and    %ebx,%r12d
  0x00007fb547833ad0: add    %r13d,%r15d
  0x00007fb547833ad3: or     %r12d,%ecx
  0x00007fb547833ad6: add    %r14d,%r10d
  0x00007fb547833ad9: add    %r15d,%edi
  0x00007fb547833adc: add    %r15d,%r10d
  0x00007fb547833adf: add    %ecx,%r10d
  0x00007fb547833ae2: vpsrld $0x3,%ymm1,%ymm8
  0x00007fb547833ae7: vpslld $0xe,%ymm1,%ymm1
  0x00007fb547833aec: vpxor  %ymm1,%ymm3,%ymm3
  0x00007fb547833af0: vpxor  %ymm2,%ymm3,%ymm3
  0x00007fb547833af4: vpxor  %ymm8,%ymm3,%ymm1
  0x00007fb547833af9: vpshufd $0xfa,%ymm7,%ymm2
  0x00007fb547833afe: vpaddd %ymm1,%ymm0,%ymm0
  0x00007fb547833b02: vpsrld $0xa,%ymm2,%ymm8
  0x00007fb547833b07: mov    %r10d,%ecx
  0x00007fb547833b0a: rorx   $0x19,%edi,%r13d
  0x00007fb547833b10: rorx   $0xb,%edi,%r14d
  0x00007fb547833b16: add    0x8(%rsp,%rdx,1),%r9d
  0x00007fb547833b1b: or     %eax,%ecx
  0x00007fb547833b1d: mov    %esi,%r15d
  0x00007fb547833b20: rorx   $0xd,%r10d,%r12d
  0x00007fb547833b26: xor    %r14d,%r13d
  0x00007fb547833b29: xor    %r8d,%r15d
  0x00007fb547833b2c: rorx   $0x6,%edi,%r14d
  0x00007fb547833b32: and    %edi,%r15d
  0x00007fb547833b35: xor    %r14d,%r13d
  0x00007fb547833b38: rorx   $0x16,%r10d,%r14d
  0x00007fb547833b3e: add    %r9d,%ebx
  0x00007fb547833b41: and    %r11d,%ecx
  0x00007fb547833b44: xor    %r12d,%r14d
  0x00007fb547833b47: rorx   $0x2,%r10d,%r12d
  0x00007fb547833b4d: xor    %r8d,%r15d
  0x00007fb547833b50: xor    %r12d,%r14d
  0x00007fb547833b53: mov    %r10d,%r12d
  0x00007fb547833b56: and    %eax,%r12d
  0x00007fb547833b59: add    %r13d,%r15d
  0x00007fb547833b5c: or     %r12d,%ecx
  0x00007fb547833b5f: add    %r14d,%r9d
  0x00007fb547833b62: add    %r15d,%ebx
  0x00007fb547833b65: add    %r15d,%r9d
  0x00007fb547833b68: add    %ecx,%r9d
  0x00007fb547833b6b: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547833b70: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547833b75: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547833b79: vpxor  %ymm2,%ymm8,%ymm8
  0x00007fb547833b7d: vpshufb %ymm10,%ymm8,%ymm8
  0x00007fb547833b82: vpaddd %ymm8,%ymm0,%ymm0
  0x00007fb547833b87: vpshufd $0x50,%ymm0,%ymm2
  0x00007fb547833b8c: mov    %r9d,%ecx
  0x00007fb547833b8f: rorx   $0x19,%ebx,%r13d
  0x00007fb547833b95: rorx   $0xb,%ebx,%r14d
  0x00007fb547833b9b: add    0xc(%rsp,%rdx,1),%r8d
  0x00007fb547833ba0: or     %r11d,%ecx
  0x00007fb547833ba3: mov    %edi,%r15d
  0x00007fb547833ba6: rorx   $0xd,%r9d,%r12d
  0x00007fb547833bac: xor    %r14d,%r13d
  0x00007fb547833baf: xor    %esi,%r15d
  0x00007fb547833bb2: rorx   $0x6,%ebx,%r14d
  0x00007fb547833bb8: and    %ebx,%r15d
  0x00007fb547833bbb: xor    %r14d,%r13d
  0x00007fb547833bbe: rorx   $0x16,%r9d,%r14d
  0x00007fb547833bc4: add    %r8d,%eax
  0x00007fb547833bc7: and    %r10d,%ecx
  0x00007fb547833bca: xor    %r12d,%r14d
  0x00007fb547833bcd: rorx   $0x2,%r9d,%r12d
  0x00007fb547833bd3: xor    %esi,%r15d
  0x00007fb547833bd6: xor    %r12d,%r14d
  0x00007fb547833bd9: mov    %r9d,%r12d
  0x00007fb547833bdc: and    %r11d,%r12d
  0x00007fb547833bdf: add    %r13d,%r15d
  0x00007fb547833be2: or     %r12d,%ecx
  0x00007fb547833be5: add    %r14d,%r8d
  0x00007fb547833be8: add    %r15d,%eax
  0x00007fb547833beb: add    %r15d,%r8d
  0x00007fb547833bee: add    %ecx,%r8d
  0x00007fb547833bf1: vpsrld $0xa,%ymm2,%ymm11
  0x00007fb547833bf6: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547833bfb: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547833c00: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547833c04: vpxor  %ymm2,%ymm11,%ymm11
  0x00007fb547833c08: vpshufb %ymm12,%ymm11,%ymm11
  0x00007fb547833c0d: vpaddd %ymm0,%ymm11,%ymm4
  0x00007fb547833c11: vpaddd 0x20(%rbp,%rdx,1),%ymm5,%ymm9
  0x00007fb547833c17: vmovdqu %ymm9,0x20(%rsp,%rdx,1)
  0x00007fb547833c1d: mov    %r8d,%ecx
  0x00007fb547833c20: rorx   $0x19,%eax,%r13d
  0x00007fb547833c26: rorx   $0xb,%eax,%r14d
  0x00007fb547833c2c: add    0x20(%rsp,%rdx,1),%esi
  0x00007fb547833c30: or     %r10d,%ecx
  0x00007fb547833c33: mov    %ebx,%r15d
  0x00007fb547833c36: rorx   $0xd,%r8d,%r12d
  0x00007fb547833c3c: xor    %r14d,%r13d
  0x00007fb547833c3f: xor    %edi,%r15d
  0x00007fb547833c42: rorx   $0x6,%eax,%r14d
  0x00007fb547833c48: and    %eax,%r15d
  0x00007fb547833c4b: xor    %r14d,%r13d
  0x00007fb547833c4e: rorx   $0x16,%r8d,%r14d
  0x00007fb547833c54: add    %esi,%r11d
  0x00007fb547833c57: and    %r9d,%ecx
  0x00007fb547833c5a: xor    %r12d,%r14d
  0x00007fb547833c5d: rorx   $0x2,%r8d,%r12d
  0x00007fb547833c63: xor    %edi,%r15d
  0x00007fb547833c66: xor    %r12d,%r14d
  0x00007fb547833c69: mov    %r8d,%r12d
  0x00007fb547833c6c: and    %r10d,%r12d
  0x00007fb547833c6f: add    %r13d,%r15d
  0x00007fb547833c72: or     %r12d,%ecx
  0x00007fb547833c75: add    %r14d,%esi
  0x00007fb547833c78: add    %r15d,%r11d
  0x00007fb547833c7b: add    %r15d,%esi
  0x00007fb547833c7e: add    %ecx,%esi
  0x00007fb547833c80: vpalignr $0x4,%ymm7,%ymm4,%ymm0
  0x00007fb547833c86: vpaddd %ymm5,%ymm0,%ymm0
  0x00007fb547833c8a: vpalignr $0x4,%ymm5,%ymm6,%ymm1
  0x00007fb547833c90: vpsrld $0x7,%ymm1,%ymm2
  0x00007fb547833c95: vpslld $0x19,%ymm1,%ymm3
  0x00007fb547833c9a: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547833c9e: vpsrld $0x12,%ymm1,%ymm2
  0x00007fb547833ca3: mov    %esi,%ecx
  0x00007fb547833ca5: rorx   $0x19,%r11d,%r13d
  0x00007fb547833cab: rorx   $0xb,%r11d,%r14d
  0x00007fb547833cb1: add    0x24(%rsp,%rdx,1),%edi
  0x00007fb547833cb5: or     %r9d,%ecx
  0x00007fb547833cb8: mov    %eax,%r15d
  0x00007fb547833cbb: rorx   $0xd,%esi,%r12d
  0x00007fb547833cc1: xor    %r14d,%r13d
  0x00007fb547833cc4: xor    %ebx,%r15d
  0x00007fb547833cc7: rorx   $0x6,%r11d,%r14d
  0x00007fb547833ccd: and    %r11d,%r15d
  0x00007fb547833cd0: xor    %r14d,%r13d
  0x00007fb547833cd3: rorx   $0x16,%esi,%r14d
  0x00007fb547833cd9: add    %edi,%r10d
  0x00007fb547833cdc: and    %r8d,%ecx
  0x00007fb547833cdf: xor    %r12d,%r14d
  0x00007fb547833ce2: rorx   $0x2,%esi,%r12d
  0x00007fb547833ce8: xor    %ebx,%r15d
  0x00007fb547833ceb: xor    %r12d,%r14d
  0x00007fb547833cee: mov    %esi,%r12d
  0x00007fb547833cf1: and    %r9d,%r12d
  0x00007fb547833cf4: add    %r13d,%r15d
  0x00007fb547833cf7: or     %r12d,%ecx
  0x00007fb547833cfa: add    %r14d,%edi
  0x00007fb547833cfd: add    %r15d,%r10d
  0x00007fb547833d00: add    %r15d,%edi
  0x00007fb547833d03: add    %ecx,%edi
  0x00007fb547833d05: vpsrld $0x3,%ymm1,%ymm8
  0x00007fb547833d0a: vpslld $0xe,%ymm1,%ymm1
  0x00007fb547833d0f: vpxor  %ymm1,%ymm3,%ymm3
  0x00007fb547833d13: vpxor  %ymm2,%ymm3,%ymm3
  0x00007fb547833d17: vpxor  %ymm8,%ymm3,%ymm1
  0x00007fb547833d1c: vpshufd $0xfa,%ymm4,%ymm2
  0x00007fb547833d21: vpaddd %ymm1,%ymm0,%ymm0
  0x00007fb547833d25: vpsrld $0xa,%ymm2,%ymm8
  0x00007fb547833d2a: mov    %edi,%ecx
  0x00007fb547833d2c: rorx   $0x19,%r10d,%r13d
  0x00007fb547833d32: rorx   $0xb,%r10d,%r14d
  0x00007fb547833d38: add    0x28(%rsp,%rdx,1),%ebx
  0x00007fb547833d3c: or     %r8d,%ecx
  0x00007fb547833d3f: mov    %r11d,%r15d
  0x00007fb547833d42: rorx   $0xd,%edi,%r12d
  0x00007fb547833d48: xor    %r14d,%r13d
  0x00007fb547833d4b: xor    %eax,%r15d
  0x00007fb547833d4e: rorx   $0x6,%r10d,%r14d
  0x00007fb547833d54: and    %r10d,%r15d
  0x00007fb547833d57: xor    %r14d,%r13d
  0x00007fb547833d5a: rorx   $0x16,%edi,%r14d
  0x00007fb547833d60: add    %ebx,%r9d
  0x00007fb547833d63: and    %esi,%ecx
  0x00007fb547833d65: xor    %r12d,%r14d
  0x00007fb547833d68: rorx   $0x2,%edi,%r12d
  0x00007fb547833d6e: xor    %eax,%r15d
  0x00007fb547833d71: xor    %r12d,%r14d
  0x00007fb547833d74: mov    %edi,%r12d
  0x00007fb547833d77: and    %r8d,%r12d
  0x00007fb547833d7a: add    %r13d,%r15d
  0x00007fb547833d7d: or     %r12d,%ecx
  0x00007fb547833d80: add    %r14d,%ebx
  0x00007fb547833d83: add    %r15d,%r9d
  0x00007fb547833d86: add    %r15d,%ebx
  0x00007fb547833d89: add    %ecx,%ebx
  0x00007fb547833d8b: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547833d90: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547833d95: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547833d99: vpxor  %ymm2,%ymm8,%ymm8
  0x00007fb547833d9d: vpshufb %ymm10,%ymm8,%ymm8
  0x00007fb547833da2: vpaddd %ymm8,%ymm0,%ymm0
  0x00007fb547833da7: vpshufd $0x50,%ymm0,%ymm2
  0x00007fb547833dac: mov    %ebx,%ecx
  0x00007fb547833dae: rorx   $0x19,%r9d,%r13d
  0x00007fb547833db4: rorx   $0xb,%r9d,%r14d
  0x00007fb547833dba: add    0x2c(%rsp,%rdx,1),%eax
  0x00007fb547833dbe: or     %esi,%ecx
  0x00007fb547833dc0: mov    %r10d,%r15d
  0x00007fb547833dc3: rorx   $0xd,%ebx,%r12d
  0x00007fb547833dc9: xor    %r14d,%r13d
  0x00007fb547833dcc: xor    %r11d,%r15d
  0x00007fb547833dcf: rorx   $0x6,%r9d,%r14d
  0x00007fb547833dd5: and    %r9d,%r15d
  0x00007fb547833dd8: xor    %r14d,%r13d
  0x00007fb547833ddb: rorx   $0x16,%ebx,%r14d
  0x00007fb547833de1: add    %eax,%r8d
  0x00007fb547833de4: and    %edi,%ecx
  0x00007fb547833de6: xor    %r12d,%r14d
  0x00007fb547833de9: rorx   $0x2,%ebx,%r12d
  0x00007fb547833def: xor    %r11d,%r15d
  0x00007fb547833df2: xor    %r12d,%r14d
  0x00007fb547833df5: mov    %ebx,%r12d
  0x00007fb547833df8: and    %esi,%r12d
  0x00007fb547833dfb: add    %r13d,%r15d
  0x00007fb547833dfe: or     %r12d,%ecx
  0x00007fb547833e01: add    %r14d,%eax
  0x00007fb547833e04: add    %r15d,%r8d
  0x00007fb547833e07: add    %r15d,%eax
  0x00007fb547833e0a: add    %ecx,%eax
  0x00007fb547833e0c: vpsrld $0xa,%ymm2,%ymm11
  0x00007fb547833e11: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547833e16: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547833e1b: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547833e1f: vpxor  %ymm2,%ymm11,%ymm11
  0x00007fb547833e23: vpshufb %ymm12,%ymm11,%ymm11
  0x00007fb547833e28: vpaddd %ymm0,%ymm11,%ymm5
  0x00007fb547833e2c: vpaddd 0x40(%rbp,%rdx,1),%ymm6,%ymm9
  0x00007fb547833e32: vmovdqu %ymm9,0x40(%rsp,%rdx,1)
  0x00007fb547833e38: mov    %eax,%ecx
  0x00007fb547833e3a: rorx   $0x19,%r8d,%r13d
  0x00007fb547833e40: rorx   $0xb,%r8d,%r14d
  0x00007fb547833e46: add    0x40(%rsp,%rdx,1),%r11d
  0x00007fb547833e4b: or     %edi,%ecx
  0x00007fb547833e4d: mov    %r9d,%r15d
  0x00007fb547833e50: rorx   $0xd,%eax,%r12d
  0x00007fb547833e56: xor    %r14d,%r13d
  0x00007fb547833e59: xor    %r10d,%r15d
  0x00007fb547833e5c: rorx   $0x6,%r8d,%r14d
  0x00007fb547833e62: and    %r8d,%r15d
  0x00007fb547833e65: xor    %r14d,%r13d
  0x00007fb547833e68: rorx   $0x16,%eax,%r14d
  0x00007fb547833e6e: add    %r11d,%esi
  0x00007fb547833e71: and    %ebx,%ecx
  0x00007fb547833e73: xor    %r12d,%r14d
  0x00007fb547833e76: rorx   $0x2,%eax,%r12d
  0x00007fb547833e7c: xor    %r10d,%r15d
  0x00007fb547833e7f: xor    %r12d,%r14d
  0x00007fb547833e82: mov    %eax,%r12d
  0x00007fb547833e85: and    %edi,%r12d
  0x00007fb547833e88: add    %r13d,%r15d
  0x00007fb547833e8b: or     %r12d,%ecx
  0x00007fb547833e8e: add    %r14d,%r11d
  0x00007fb547833e91: add    %r15d,%esi
  0x00007fb547833e94: add    %r15d,%r11d
  0x00007fb547833e97: add    %ecx,%r11d
  0x00007fb547833e9a: vpalignr $0x4,%ymm4,%ymm5,%ymm0
  0x00007fb547833ea0: vpaddd %ymm6,%ymm0,%ymm0
  0x00007fb547833ea4: vpalignr $0x4,%ymm6,%ymm7,%ymm1
  0x00007fb547833eaa: vpsrld $0x7,%ymm1,%ymm2
  0x00007fb547833eaf: vpslld $0x19,%ymm1,%ymm3
  0x00007fb547833eb4: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547833eb8: vpsrld $0x12,%ymm1,%ymm2
  0x00007fb547833ebd: mov    %r11d,%ecx
  0x00007fb547833ec0: rorx   $0x19,%esi,%r13d
  0x00007fb547833ec6: rorx   $0xb,%esi,%r14d
  0x00007fb547833ecc: add    0x44(%rsp,%rdx,1),%r10d
  0x00007fb547833ed1: or     %ebx,%ecx
  0x00007fb547833ed3: mov    %r8d,%r15d
  0x00007fb547833ed6: rorx   $0xd,%r11d,%r12d
  0x00007fb547833edc: xor    %r14d,%r13d
  0x00007fb547833edf: xor    %r9d,%r15d
  0x00007fb547833ee2: rorx   $0x6,%esi,%r14d
  0x00007fb547833ee8: and    %esi,%r15d
  0x00007fb547833eeb: xor    %r14d,%r13d
  0x00007fb547833eee: rorx   $0x16,%r11d,%r14d
  0x00007fb547833ef4: add    %r10d,%edi
  0x00007fb547833ef7: and    %eax,%ecx
  0x00007fb547833ef9: xor    %r12d,%r14d
  0x00007fb547833efc: rorx   $0x2,%r11d,%r12d
  0x00007fb547833f02: xor    %r9d,%r15d
  0x00007fb547833f05: xor    %r12d,%r14d
  0x00007fb547833f08: mov    %r11d,%r12d
  0x00007fb547833f0b: and    %ebx,%r12d
  0x00007fb547833f0e: add    %r13d,%r15d
  0x00007fb547833f11: or     %r12d,%ecx
  0x00007fb547833f14: add    %r14d,%r10d
  0x00007fb547833f17: add    %r15d,%edi
  0x00007fb547833f1a: add    %r15d,%r10d
  0x00007fb547833f1d: add    %ecx,%r10d
  0x00007fb547833f20: vpsrld $0x3,%ymm1,%ymm8
  0x00007fb547833f25: vpslld $0xe,%ymm1,%ymm1
  0x00007fb547833f2a: vpxor  %ymm1,%ymm3,%ymm3
  0x00007fb547833f2e: vpxor  %ymm2,%ymm3,%ymm3
  0x00007fb547833f32: vpxor  %ymm8,%ymm3,%ymm1
  0x00007fb547833f37: vpshufd $0xfa,%ymm5,%ymm2
  0x00007fb547833f3c: vpaddd %ymm1,%ymm0,%ymm0
  0x00007fb547833f40: vpsrld $0xa,%ymm2,%ymm8
  0x00007fb547833f45: mov    %r10d,%ecx
  0x00007fb547833f48: rorx   $0x19,%edi,%r13d
  0x00007fb547833f4e: rorx   $0xb,%edi,%r14d
  0x00007fb547833f54: add    0x48(%rsp,%rdx,1),%r9d
  0x00007fb547833f59: or     %eax,%ecx
  0x00007fb547833f5b: mov    %esi,%r15d
  0x00007fb547833f5e: rorx   $0xd,%r10d,%r12d
  0x00007fb547833f64: xor    %r14d,%r13d
  0x00007fb547833f67: xor    %r8d,%r15d
  0x00007fb547833f6a: rorx   $0x6,%edi,%r14d
  0x00007fb547833f70: and    %edi,%r15d
  0x00007fb547833f73: xor    %r14d,%r13d
  0x00007fb547833f76: rorx   $0x16,%r10d,%r14d
  0x00007fb547833f7c: add    %r9d,%ebx
  0x00007fb547833f7f: and    %r11d,%ecx
  0x00007fb547833f82: xor    %r12d,%r14d
  0x00007fb547833f85: rorx   $0x2,%r10d,%r12d
  0x00007fb547833f8b: xor    %r8d,%r15d
  0x00007fb547833f8e: xor    %r12d,%r14d
  0x00007fb547833f91: mov    %r10d,%r12d
  0x00007fb547833f94: and    %eax,%r12d
  0x00007fb547833f97: add    %r13d,%r15d
  0x00007fb547833f9a: or     %r12d,%ecx
  0x00007fb547833f9d: add    %r14d,%r9d
  0x00007fb547833fa0: add    %r15d,%ebx
  0x00007fb547833fa3: add    %r15d,%r9d
  0x00007fb547833fa6: add    %ecx,%r9d
  0x00007fb547833fa9: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547833fae: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547833fb3: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547833fb7: vpxor  %ymm2,%ymm8,%ymm8
  0x00007fb547833fbb: vpshufb %ymm10,%ymm8,%ymm8
  0x00007fb547833fc0: vpaddd %ymm8,%ymm0,%ymm0
  0x00007fb547833fc5: vpshufd $0x50,%ymm0,%ymm2
  0x00007fb547833fca: mov    %r9d,%ecx
  0x00007fb547833fcd: rorx   $0x19,%ebx,%r13d
  0x00007fb547833fd3: rorx   $0xb,%ebx,%r14d
  0x00007fb547833fd9: add    0x4c(%rsp,%rdx,1),%r8d
  0x00007fb547833fde: or     %r11d,%ecx
  0x00007fb547833fe1: mov    %edi,%r15d
  0x00007fb547833fe4: rorx   $0xd,%r9d,%r12d
  0x00007fb547833fea: xor    %r14d,%r13d
  0x00007fb547833fed: xor    %esi,%r15d
  0x00007fb547833ff0: rorx   $0x6,%ebx,%r14d
  0x00007fb547833ff6: and    %ebx,%r15d
  0x00007fb547833ff9: xor    %r14d,%r13d
  0x00007fb547833ffc: rorx   $0x16,%r9d,%r14d
  0x00007fb547834002: add    %r8d,%eax
  0x00007fb547834005: and    %r10d,%ecx
  0x00007fb547834008: xor    %r12d,%r14d
  0x00007fb54783400b: rorx   $0x2,%r9d,%r12d
  0x00007fb547834011: xor    %esi,%r15d
  0x00007fb547834014: xor    %r12d,%r14d
  0x00007fb547834017: mov    %r9d,%r12d
  0x00007fb54783401a: and    %r11d,%r12d
  0x00007fb54783401d: add    %r13d,%r15d
  0x00007fb547834020: or     %r12d,%ecx
  0x00007fb547834023: add    %r14d,%r8d
  0x00007fb547834026: add    %r15d,%eax
  0x00007fb547834029: add    %r15d,%r8d
  0x00007fb54783402c: add    %ecx,%r8d
  0x00007fb54783402f: vpsrld $0xa,%ymm2,%ymm11
  0x00007fb547834034: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547834039: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb54783403e: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb547834042: vpxor  %ymm2,%ymm11,%ymm11
  0x00007fb547834046: vpshufb %ymm12,%ymm11,%ymm11
  0x00007fb54783404b: vpaddd %ymm0,%ymm11,%ymm6
  0x00007fb54783404f: vpaddd 0x60(%rbp,%rdx,1),%ymm7,%ymm9
  0x00007fb547834055: vmovdqu %ymm9,0x60(%rsp,%rdx,1)
  0x00007fb54783405b: mov    %r8d,%ecx
  0x00007fb54783405e: rorx   $0x19,%eax,%r13d
  0x00007fb547834064: rorx   $0xb,%eax,%r14d
  0x00007fb54783406a: add    0x60(%rsp,%rdx,1),%esi
  0x00007fb54783406e: or     %r10d,%ecx
  0x00007fb547834071: mov    %ebx,%r15d
  0x00007fb547834074: rorx   $0xd,%r8d,%r12d
  0x00007fb54783407a: xor    %r14d,%r13d
  0x00007fb54783407d: xor    %edi,%r15d
  0x00007fb547834080: rorx   $0x6,%eax,%r14d
  0x00007fb547834086: and    %eax,%r15d
  0x00007fb547834089: xor    %r14d,%r13d
  0x00007fb54783408c: rorx   $0x16,%r8d,%r14d
  0x00007fb547834092: add    %esi,%r11d
  0x00007fb547834095: and    %r9d,%ecx
  0x00007fb547834098: xor    %r12d,%r14d
  0x00007fb54783409b: rorx   $0x2,%r8d,%r12d
  0x00007fb5478340a1: xor    %edi,%r15d
  0x00007fb5478340a4: xor    %r12d,%r14d
  0x00007fb5478340a7: mov    %r8d,%r12d
  0x00007fb5478340aa: and    %r10d,%r12d
  0x00007fb5478340ad: add    %r13d,%r15d
  0x00007fb5478340b0: or     %r12d,%ecx
  0x00007fb5478340b3: add    %r14d,%esi
  0x00007fb5478340b6: add    %r15d,%r11d
  0x00007fb5478340b9: add    %r15d,%esi
  0x00007fb5478340bc: add    %ecx,%esi
  0x00007fb5478340be: vpalignr $0x4,%ymm5,%ymm6,%ymm0
  0x00007fb5478340c4: vpaddd %ymm7,%ymm0,%ymm0
  0x00007fb5478340c8: vpalignr $0x4,%ymm7,%ymm4,%ymm1
  0x00007fb5478340ce: vpsrld $0x7,%ymm1,%ymm2
  0x00007fb5478340d3: vpslld $0x19,%ymm1,%ymm3
  0x00007fb5478340d8: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb5478340dc: vpsrld $0x12,%ymm1,%ymm2
  0x00007fb5478340e1: mov    %esi,%ecx
  0x00007fb5478340e3: rorx   $0x19,%r11d,%r13d
  0x00007fb5478340e9: rorx   $0xb,%r11d,%r14d
  0x00007fb5478340ef: add    0x64(%rsp,%rdx,1),%edi
  0x00007fb5478340f3: or     %r9d,%ecx
  0x00007fb5478340f6: mov    %eax,%r15d
  0x00007fb5478340f9: rorx   $0xd,%esi,%r12d
  0x00007fb5478340ff: xor    %r14d,%r13d
  0x00007fb547834102: xor    %ebx,%r15d
  0x00007fb547834105: rorx   $0x6,%r11d,%r14d
  0x00007fb54783410b: and    %r11d,%r15d
  0x00007fb54783410e: xor    %r14d,%r13d
  0x00007fb547834111: rorx   $0x16,%esi,%r14d
  0x00007fb547834117: add    %edi,%r10d
  0x00007fb54783411a: and    %r8d,%ecx
  0x00007fb54783411d: xor    %r12d,%r14d
  0x00007fb547834120: rorx   $0x2,%esi,%r12d
  0x00007fb547834126: xor    %ebx,%r15d
  0x00007fb547834129: xor    %r12d,%r14d
  0x00007fb54783412c: mov    %esi,%r12d
  0x00007fb54783412f: and    %r9d,%r12d
  0x00007fb547834132: add    %r13d,%r15d
  0x00007fb547834135: or     %r12d,%ecx
  0x00007fb547834138: add    %r14d,%edi
  0x00007fb54783413b: add    %r15d,%r10d
  0x00007fb54783413e: add    %r15d,%edi
  0x00007fb547834141: add    %ecx,%edi
  0x00007fb547834143: vpsrld $0x3,%ymm1,%ymm8
  0x00007fb547834148: vpslld $0xe,%ymm1,%ymm1
  0x00007fb54783414d: vpxor  %ymm1,%ymm3,%ymm3
  0x00007fb547834151: vpxor  %ymm2,%ymm3,%ymm3
  0x00007fb547834155: vpxor  %ymm8,%ymm3,%ymm1
  0x00007fb54783415a: vpshufd $0xfa,%ymm6,%ymm2
  0x00007fb54783415f: vpaddd %ymm1,%ymm0,%ymm0
  0x00007fb547834163: vpsrld $0xa,%ymm2,%ymm8
  0x00007fb547834168: mov    %edi,%ecx
  0x00007fb54783416a: rorx   $0x19,%r10d,%r13d
  0x00007fb547834170: rorx   $0xb,%r10d,%r14d
  0x00007fb547834176: add    0x68(%rsp,%rdx,1),%ebx
  0x00007fb54783417a: or     %r8d,%ecx
  0x00007fb54783417d: mov    %r11d,%r15d
  0x00007fb547834180: rorx   $0xd,%edi,%r12d
  0x00007fb547834186: xor    %r14d,%r13d
  0x00007fb547834189: xor    %eax,%r15d
  0x00007fb54783418c: rorx   $0x6,%r10d,%r14d
  0x00007fb547834192: and    %r10d,%r15d
  0x00007fb547834195: xor    %r14d,%r13d
  0x00007fb547834198: rorx   $0x16,%edi,%r14d
  0x00007fb54783419e: add    %ebx,%r9d
  0x00007fb5478341a1: and    %esi,%ecx
  0x00007fb5478341a3: xor    %r12d,%r14d
  0x00007fb5478341a6: rorx   $0x2,%edi,%r12d
  0x00007fb5478341ac: xor    %eax,%r15d
  0x00007fb5478341af: xor    %r12d,%r14d
  0x00007fb5478341b2: mov    %edi,%r12d
  0x00007fb5478341b5: and    %r8d,%r12d
  0x00007fb5478341b8: add    %r13d,%r15d
  0x00007fb5478341bb: or     %r12d,%ecx
  0x00007fb5478341be: add    %r14d,%ebx
  0x00007fb5478341c1: add    %r15d,%r9d
  0x00007fb5478341c4: add    %r15d,%ebx
  0x00007fb5478341c7: add    %ecx,%ebx
  0x00007fb5478341c9: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb5478341ce: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb5478341d3: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb5478341d7: vpxor  %ymm2,%ymm8,%ymm8
  0x00007fb5478341db: vpshufb %ymm10,%ymm8,%ymm8
  0x00007fb5478341e0: vpaddd %ymm8,%ymm0,%ymm0
  0x00007fb5478341e5: vpshufd $0x50,%ymm0,%ymm2
  0x00007fb5478341ea: mov    %ebx,%ecx
  0x00007fb5478341ec: rorx   $0x19,%r9d,%r13d
  0x00007fb5478341f2: rorx   $0xb,%r9d,%r14d
  0x00007fb5478341f8: add    0x6c(%rsp,%rdx,1),%eax
  0x00007fb5478341fc: or     %esi,%ecx
  0x00007fb5478341fe: mov    %r10d,%r15d
  0x00007fb547834201: rorx   $0xd,%ebx,%r12d
  0x00007fb547834207: xor    %r14d,%r13d
  0x00007fb54783420a: xor    %r11d,%r15d
  0x00007fb54783420d: rorx   $0x6,%r9d,%r14d
  0x00007fb547834213: and    %r9d,%r15d
  0x00007fb547834216: xor    %r14d,%r13d
  0x00007fb547834219: rorx   $0x16,%ebx,%r14d
  0x00007fb54783421f: add    %eax,%r8d
  0x00007fb547834222: and    %edi,%ecx
  0x00007fb547834224: xor    %r12d,%r14d
  0x00007fb547834227: rorx   $0x2,%ebx,%r12d
  0x00007fb54783422d: xor    %r11d,%r15d
  0x00007fb547834230: xor    %r12d,%r14d
  0x00007fb547834233: mov    %ebx,%r12d
  0x00007fb547834236: and    %esi,%r12d
  0x00007fb547834239: add    %r13d,%r15d
  0x00007fb54783423c: or     %r12d,%ecx
  0x00007fb54783423f: add    %r14d,%eax
  0x00007fb547834242: add    %r15d,%r8d
  0x00007fb547834245: add    %r15d,%eax
  0x00007fb547834248: add    %ecx,%eax
  0x00007fb54783424a: vpsrld $0xa,%ymm2,%ymm11
  0x00007fb54783424f: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547834254: vpsrlq $0x11,%ymm2,%ymm2
  0x00007fb547834259: vpxor  %ymm3,%ymm2,%ymm2
  0x00007fb54783425d: vpxor  %ymm2,%ymm11,%ymm11
  0x00007fb547834261: vpshufb %ymm12,%ymm11,%ymm11
  0x00007fb547834266: vpaddd %ymm0,%ymm11,%ymm7
  0x00007fb54783426a: add    $0x80,%rdx
  0x00007fb547834271: cmp    $0x180,%rdx
  0x00007fb547834278: jb     Stub::sha256_implCompressMB+272 0x00007fb5478339f0
  0x00007fb54783427e: vpaddd 0x0(%rbp,%rdx,1),%ymm4,%ymm9
  0x00007fb547834284: vmovdqu %ymm9,(%rsp,%rdx,1)
  0x00007fb547834289: mov    %r9d,%r15d
  0x00007fb54783428c: rorx   $0x19,%r8d,%r13d
  0x00007fb547834292: rorx   $0xb,%r8d,%r14d
  0x00007fb547834298: xor    %r10d,%r15d
  0x00007fb54783429b: xor    %r14d,%r13d
  0x00007fb54783429e: rorx   $0x6,%r8d,%r14d
  0x00007fb5478342a4: and    %r8d,%r15d
  0x00007fb5478342a7: xor    %r14d,%r13d
  0x00007fb5478342aa: rorx   $0xd,%eax,%r12d
  0x00007fb5478342b0: xor    %r10d,%r15d
  0x00007fb5478342b3: rorx   $0x16,%eax,%r14d
  0x00007fb5478342b9: mov    %eax,%ecx
  0x00007fb5478342bb: xor    %r12d,%r14d
  0x00007fb5478342be: rorx   $0x2,%eax,%r12d
  0x00007fb5478342c4: add    (%rsp,%rdx,1),%r11d
  0x00007fb5478342c8: or     %edi,%ecx
  0x00007fb5478342ca: xor    %r12d,%r14d
  0x00007fb5478342cd: mov    %eax,%r12d
  0x00007fb5478342d0: and    %ebx,%ecx
  0x00007fb5478342d2: and    %edi,%r12d
  0x00007fb5478342d5: add    %r13d,%r15d
  0x00007fb5478342d8: add    %r11d,%esi
  0x00007fb5478342db: or     %r12d,%ecx
  0x00007fb5478342de: add    %r14d,%r11d
  0x00007fb5478342e1: add    %r15d,%esi
  0x00007fb5478342e4: add    %r15d,%r11d
  0x00007fb5478342e7: mov    %r8d,%r15d
  0x00007fb5478342ea: rorx   $0x19,%esi,%r13d
  0x00007fb5478342f0: rorx   $0xb,%esi,%r14d
  0x00007fb5478342f6: xor    %r9d,%r15d
  0x00007fb5478342f9: xor    %r14d,%r13d
  0x00007fb5478342fc: rorx   $0x6,%esi,%r14d
  0x00007fb547834302: and    %esi,%r15d
  0x00007fb547834305: add    %ecx,%r11d
  0x00007fb547834308: xor    %r14d,%r13d
  0x00007fb54783430b: rorx   $0xd,%r11d,%r12d
  0x00007fb547834311: xor    %r9d,%r15d
  0x00007fb547834314: rorx   $0x16,%r11d,%r14d
  0x00007fb54783431a: mov    %r11d,%ecx
  0x00007fb54783431d: xor    %r12d,%r14d
  0x00007fb547834320: rorx   $0x2,%r11d,%r12d
  0x00007fb547834326: add    0x4(%rsp,%rdx,1),%r10d
  0x00007fb54783432b: or     %ebx,%ecx
  0x00007fb54783432d: xor    %r12d,%r14d
  0x00007fb547834330: mov    %r11d,%r12d
  0x00007fb547834333: and    %eax,%ecx
  0x00007fb547834335: and    %ebx,%r12d
  0x00007fb547834338: add    %r13d,%r15d
  0x00007fb54783433b: add    %r10d,%edi
  0x00007fb54783433e: or     %r12d,%ecx
  0x00007fb547834341: add    %r14d,%r10d
  0x00007fb547834344: add    %r15d,%edi
  0x00007fb547834347: add    %r15d,%r10d
  0x00007fb54783434a: mov    %esi,%r15d
  0x00007fb54783434d: rorx   $0x19,%edi,%r13d
  0x00007fb547834353: rorx   $0xb,%edi,%r14d
  0x00007fb547834359: xor    %r8d,%r15d
  0x00007fb54783435c: xor    %r14d,%r13d
  0x00007fb54783435f: rorx   $0x6,%edi,%r14d
  0x00007fb547834365: and    %edi,%r15d
  0x00007fb547834368: add    %ecx,%r10d
  0x00007fb54783436b: xor    %r14d,%r13d
  0x00007fb54783436e: rorx   $0xd,%r10d,%r12d
  0x00007fb547834374: xor    %r8d,%r15d
  0x00007fb547834377: rorx   $0x16,%r10d,%r14d
  0x00007fb54783437d: mov    %r10d,%ecx
  0x00007fb547834380: xor    %r12d,%r14d
  0x00007fb547834383: rorx   $0x2,%r10d,%r12d
  0x00007fb547834389: add    0x8(%rsp,%rdx,1),%r9d
  0x00007fb54783438e: or     %eax,%ecx
  0x00007fb547834390: xor    %r12d,%r14d
  0x00007fb547834393: mov    %r10d,%r12d
  0x00007fb547834396: and    %r11d,%ecx
  0x00007fb547834399: and    %eax,%r12d
  0x00007fb54783439c: add    %r13d,%r15d
  0x00007fb54783439f: add    %r9d,%ebx
  0x00007fb5478343a2: or     %r12d,%ecx
  0x00007fb5478343a5: add    %r14d,%r9d
  0x00007fb5478343a8: add    %r15d,%ebx
  0x00007fb5478343ab: add    %r15d,%r9d
  0x00007fb5478343ae: mov    %edi,%r15d
  0x00007fb5478343b1: rorx   $0x19,%ebx,%r13d
  0x00007fb5478343b7: rorx   $0xb,%ebx,%r14d
  0x00007fb5478343bd: xor    %esi,%r15d
  0x00007fb5478343c0: xor    %r14d,%r13d
  0x00007fb5478343c3: rorx   $0x6,%ebx,%r14d
  0x00007fb5478343c9: and    %ebx,%r15d
  0x00007fb5478343cc: add    %ecx,%r9d
  0x00007fb5478343cf: xor    %r14d,%r13d
  0x00007fb5478343d2: rorx   $0xd,%r9d,%r12d
  0x00007fb5478343d8: xor    %esi,%r15d
  0x00007fb5478343db: rorx   $0x16,%r9d,%r14d
  0x00007fb5478343e1: mov    %r9d,%ecx
  0x00007fb5478343e4: xor    %r12d,%r14d
  0x00007fb5478343e7: rorx   $0x2,%r9d,%r12d
  0x00007fb5478343ed: add    0xc(%rsp,%rdx,1),%r8d
  0x00007fb5478343f2: or     %r11d,%ecx
  0x00007fb5478343f5: xor    %r12d,%r14d
  0x00007fb5478343f8: mov    %r9d,%r12d
  0x00007fb5478343fb: and    %r10d,%ecx
  0x00007fb5478343fe: and    %r11d,%r12d
  0x00007fb547834401: add    %r13d,%r15d
  0x00007fb547834404: add    %r8d,%eax
  0x00007fb547834407: or     %r12d,%ecx
  0x00007fb54783440a: add    %r14d,%r8d
  0x00007fb54783440d: add    %r15d,%eax
  0x00007fb547834410: add    %r15d,%r8d
  0x00007fb547834413: add    %ecx,%r8d
  0x00007fb547834416: vpaddd 0x20(%rbp,%rdx,1),%ymm5,%ymm9
  0x00007fb54783441c: vmovdqu %ymm9,0x20(%rsp,%rdx,1)
  0x00007fb547834422: mov    %ebx,%r15d
  0x00007fb547834425: rorx   $0x19,%eax,%r13d
  0x00007fb54783442b: rorx   $0xb,%eax,%r14d
  0x00007fb547834431: xor    %edi,%r15d
  0x00007fb547834434: xor    %r14d,%r13d
  0x00007fb547834437: rorx   $0x6,%eax,%r14d
  0x00007fb54783443d: and    %eax,%r15d
  0x00007fb547834440: xor    %r14d,%r13d
  0x00007fb547834443: rorx   $0xd,%r8d,%r12d
  0x00007fb547834449: xor    %edi,%r15d
  0x00007fb54783444c: rorx   $0x16,%r8d,%r14d
  0x00007fb547834452: mov    %r8d,%ecx
  0x00007fb547834455: xor    %r12d,%r14d
  0x00007fb547834458: rorx   $0x2,%r8d,%r12d
  0x00007fb54783445e: add    0x20(%rsp,%rdx,1),%esi
  0x00007fb547834462: or     %r10d,%ecx
  0x00007fb547834465: xor    %r12d,%r14d
  0x00007fb547834468: mov    %r8d,%r12d
  0x00007fb54783446b: and    %r9d,%ecx
  0x00007fb54783446e: and    %r10d,%r12d
  0x00007fb547834471: add    %r13d,%r15d
  0x00007fb547834474: add    %esi,%r11d
  0x00007fb547834477: or     %r12d,%ecx
  0x00007fb54783447a: add    %r14d,%esi
  0x00007fb54783447d: add    %r15d,%r11d
  0x00007fb547834480: add    %r15d,%esi
  0x00007fb547834483: mov    %eax,%r15d
  0x00007fb547834486: rorx   $0x19,%r11d,%r13d
  0x00007fb54783448c: rorx   $0xb,%r11d,%r14d
  0x00007fb547834492: xor    %ebx,%r15d
  0x00007fb547834495: xor    %r14d,%r13d
  0x00007fb547834498: rorx   $0x6,%r11d,%r14d
  0x00007fb54783449e: and    %r11d,%r15d
  0x00007fb5478344a1: add    %ecx,%esi
  0x00007fb5478344a3: xor    %r14d,%r13d
  0x00007fb5478344a6: rorx   $0xd,%esi,%r12d
  0x00007fb5478344ac: xor    %ebx,%r15d
  0x00007fb5478344af: rorx   $0x16,%esi,%r14d
  0x00007fb5478344b5: mov    %esi,%ecx
  0x00007fb5478344b7: xor    %r12d,%r14d
  0x00007fb5478344ba: rorx   $0x2,%esi,%r12d
  0x00007fb5478344c0: add    0x24(%rsp,%rdx,1),%edi
  0x00007fb5478344c4: or     %r9d,%ecx
  0x00007fb5478344c7: xor    %r12d,%r14d
  0x00007fb5478344ca: mov    %esi,%r12d
  0x00007fb5478344cd: and    %r8d,%ecx
  0x00007fb5478344d0: and    %r9d,%r12d
  0x00007fb5478344d3: add    %r13d,%r15d
  0x00007fb5478344d6: add    %edi,%r10d
  0x00007fb5478344d9: or     %r12d,%ecx
  0x00007fb5478344dc: add    %r14d,%edi
  0x00007fb5478344df: add    %r15d,%r10d
  0x00007fb5478344e2: add    %r15d,%edi
  0x00007fb5478344e5: mov    %r11d,%r15d
  0x00007fb5478344e8: rorx   $0x19,%r10d,%r13d
  0x00007fb5478344ee: rorx   $0xb,%r10d,%r14d
  0x00007fb5478344f4: xor    %eax,%r15d
  0x00007fb5478344f7: xor    %r14d,%r13d
  0x00007fb5478344fa: rorx   $0x6,%r10d,%r14d
  0x00007fb547834500: and    %r10d,%r15d
  0x00007fb547834503: add    %ecx,%edi
  0x00007fb547834505: xor    %r14d,%r13d
  0x00007fb547834508: rorx   $0xd,%edi,%r12d
  0x00007fb54783450e: xor    %eax,%r15d
  0x00007fb547834511: rorx   $0x16,%edi,%r14d
  0x00007fb547834517: mov    %edi,%ecx
  0x00007fb547834519: xor    %r12d,%r14d
  0x00007fb54783451c: rorx   $0x2,%edi,%r12d
  0x00007fb547834522: add    0x28(%rsp,%rdx,1),%ebx
  0x00007fb547834526: or     %r8d,%ecx
  0x00007fb547834529: xor    %r12d,%r14d
  0x00007fb54783452c: mov    %edi,%r12d
  0x00007fb54783452f: and    %esi,%ecx
  0x00007fb547834531: and    %r8d,%r12d
  0x00007fb547834534: add    %r13d,%r15d
  0x00007fb547834537: add    %ebx,%r9d
  0x00007fb54783453a: or     %r12d,%ecx
  0x00007fb54783453d: add    %r14d,%ebx
  0x00007fb547834540: add    %r15d,%r9d
  0x00007fb547834543: add    %r15d,%ebx
  0x00007fb547834546: mov    %r10d,%r15d
  0x00007fb547834549: rorx   $0x19,%r9d,%r13d
  0x00007fb54783454f: rorx   $0xb,%r9d,%r14d
  0x00007fb547834555: xor    %r11d,%r15d
  0x00007fb547834558: xor    %r14d,%r13d
  0x00007fb54783455b: rorx   $0x6,%r9d,%r14d
  0x00007fb547834561: and    %r9d,%r15d
  0x00007fb547834564: add    %ecx,%ebx
  0x00007fb547834566: xor    %r14d,%r13d
  0x00007fb547834569: rorx   $0xd,%ebx,%r12d
  0x00007fb54783456f: xor    %r11d,%r15d
  0x00007fb547834572: rorx   $0x16,%ebx,%r14d
  0x00007fb547834578: mov    %ebx,%ecx
  0x00007fb54783457a: xor    %r12d,%r14d
  0x00007fb54783457d: rorx   $0x2,%ebx,%r12d
  0x00007fb547834583: add    0x2c(%rsp,%rdx,1),%eax
  0x00007fb547834587: or     %esi,%ecx
  0x00007fb547834589: xor    %r12d,%r14d
  0x00007fb54783458c: mov    %ebx,%r12d
  0x00007fb54783458f: and    %edi,%ecx
  0x00007fb547834591: and    %esi,%r12d
  0x00007fb547834594: add    %r13d,%r15d
  0x00007fb547834597: add    %eax,%r8d
  0x00007fb54783459a: or     %r12d,%ecx
  0x00007fb54783459d: add    %r14d,%eax
  0x00007fb5478345a0: add    %r15d,%r8d
  0x00007fb5478345a3: add    %r15d,%eax
  0x00007fb5478345a6: add    %ecx,%eax
  0x00007fb5478345a8: add    $0x40,%rdx
  0x00007fb5478345ac: vmovdqu %ymm6,%ymm4
  0x00007fb5478345b0: vmovdqu %ymm7,%ymm5
  0x00007fb5478345b4: cmp    $0x200,%rdx
  0x00007fb5478345bb: jb     Stub::sha256_implCompressMB+2462 0x00007fb54783427e
  0x00007fb5478345c1: mov    0x210(%rsp),%rdx
  0x00007fb5478345c9: mov    0x208(%rsp),%rcx
  0x00007fb5478345d1: add    (%rdx),%eax
  0x00007fb5478345d3: mov    %eax,(%rdx)
  0x00007fb5478345d5: add    0x4(%rdx),%ebx
  0x00007fb5478345d8: mov    %ebx,0x4(%rdx)
  0x00007fb5478345db: add    0x8(%rdx),%edi
  0x00007fb5478345de: mov    %edi,0x8(%rdx)
  0x00007fb5478345e1: add    0xc(%rdx),%esi
  0x00007fb5478345e4: mov    %esi,0xc(%rdx)
  0x00007fb5478345e7: add    0x10(%rdx),%r8d
  0x00007fb5478345eb: mov    %r8d,0x10(%rdx)
  0x00007fb5478345ef: add    0x14(%rdx),%r9d
  0x00007fb5478345f3: mov    %r9d,0x14(%rdx)
  0x00007fb5478345f7: add    0x18(%rdx),%r10d
  0x00007fb5478345fb: mov    %r10d,0x18(%rdx)
  0x00007fb5478345ff: add    0x1c(%rdx),%r11d
  0x00007fb547834603: mov    %r11d,0x1c(%rdx)
  0x00007fb547834607: cmp    0x200(%rsp),%rcx
  0x00007fb54783460f: ja     Stub::sha256_implCompressMB+4402 0x00007fb547834a12
  0x00007fb547834615: xor    %rdx,%rdx
  0x00007fb547834618: nopl   0x0(%rax,%rax,1)
  0x00007fb547834620: mov    %r9d,%r15d
  0x00007fb547834623: rorx   $0x19,%r8d,%r13d
  0x00007fb547834629: rorx   $0xb,%r8d,%r14d
  0x00007fb54783462f: xor    %r10d,%r15d
  0x00007fb547834632: xor    %r14d,%r13d
  0x00007fb547834635: rorx   $0x6,%r8d,%r14d
  0x00007fb54783463b: and    %r8d,%r15d
  0x00007fb54783463e: xor    %r14d,%r13d
  0x00007fb547834641: rorx   $0xd,%eax,%r12d
  0x00007fb547834647: xor    %r10d,%r15d
  0x00007fb54783464a: rorx   $0x16,%eax,%r14d
  0x00007fb547834650: mov    %eax,%ecx
  0x00007fb547834652: xor    %r12d,%r14d
  0x00007fb547834655: rorx   $0x2,%eax,%r12d
  0x00007fb54783465b: add    0x10(%rsp,%rdx,1),%r11d
  0x00007fb547834660: or     %edi,%ecx
  0x00007fb547834662: xor    %r12d,%r14d
  0x00007fb547834665: mov    %eax,%r12d
  0x00007fb547834668: and    %ebx,%ecx
  0x00007fb54783466a: and    %edi,%r12d
  0x00007fb54783466d: add    %r13d,%r15d
  0x00007fb547834670: add    %r11d,%esi
  0x00007fb547834673: or     %r12d,%ecx
  0x00007fb547834676: add    %r14d,%r11d
  0x00007fb547834679: add    %r15d,%esi
  0x00007fb54783467c: add    %r15d,%r11d
  0x00007fb54783467f: mov    %r8d,%r15d
  0x00007fb547834682: rorx   $0x19,%esi,%r13d
  0x00007fb547834688: rorx   $0xb,%esi,%r14d
  0x00007fb54783468e: xor    %r9d,%r15d
  0x00007fb547834691: xor    %r14d,%r13d
  0x00007fb547834694: rorx   $0x6,%esi,%r14d
  0x00007fb54783469a: and    %esi,%r15d
  0x00007fb54783469d: add    %ecx,%r11d
  0x00007fb5478346a0: xor    %r14d,%r13d
  0x00007fb5478346a3: rorx   $0xd,%r11d,%r12d
  0x00007fb5478346a9: xor    %r9d,%r15d
  0x00007fb5478346ac: rorx   $0x16,%r11d,%r14d
  0x00007fb5478346b2: mov    %r11d,%ecx
  0x00007fb5478346b5: xor    %r12d,%r14d
  0x00007fb5478346b8: rorx   $0x2,%r11d,%r12d
  0x00007fb5478346be: add    0x14(%rsp,%rdx,1),%r10d
  0x00007fb5478346c3: or     %ebx,%ecx
  0x00007fb5478346c5: xor    %r12d,%r14d
  0x00007fb5478346c8: mov    %r11d,%r12d
  0x00007fb5478346cb: and    %eax,%ecx
  0x00007fb5478346cd: and    %ebx,%r12d
  0x00007fb5478346d0: add    %r13d,%r15d
  0x00007fb5478346d3: add    %r10d,%edi
  0x00007fb5478346d6: or     %r12d,%ecx
  0x00007fb5478346d9: add    %r14d,%r10d
  0x00007fb5478346dc: add    %r15d,%edi
  0x00007fb5478346df: add    %r15d,%r10d
  0x00007fb5478346e2: mov    %esi,%r15d
  0x00007fb5478346e5: rorx   $0x19,%edi,%r13d
  0x00007fb5478346eb: rorx   $0xb,%edi,%r14d
  0x00007fb5478346f1: xor    %r8d,%r15d
  0x00007fb5478346f4: xor    %r14d,%r13d
  0x00007fb5478346f7: rorx   $0x6,%edi,%r14d
  0x00007fb5478346fd: and    %edi,%r15d
  0x00007fb547834700: add    %ecx,%r10d
  0x00007fb547834703: xor    %r14d,%r13d
  0x00007fb547834706: rorx   $0xd,%r10d,%r12d
  0x00007fb54783470c: xor    %r8d,%r15d
  0x00007fb54783470f: rorx   $0x16,%r10d,%r14d
  0x00007fb547834715: mov    %r10d,%ecx
  0x00007fb547834718: xor    %r12d,%r14d
  0x00007fb54783471b: rorx   $0x2,%r10d,%r12d
  0x00007fb547834721: add    0x18(%rsp,%rdx,1),%r9d
  0x00007fb547834726: or     %eax,%ecx
  0x00007fb547834728: xor    %r12d,%r14d
  0x00007fb54783472b: mov    %r10d,%r12d
  0x00007fb54783472e: and    %r11d,%ecx
  0x00007fb547834731: and    %eax,%r12d
  0x00007fb547834734: add    %r13d,%r15d
  0x00007fb547834737: add    %r9d,%ebx
  0x00007fb54783473a: or     %r12d,%ecx
  0x00007fb54783473d: add    %r14d,%r9d
  0x00007fb547834740: add    %r15d,%ebx
  0x00007fb547834743: add    %r15d,%r9d
  0x00007fb547834746: mov    %edi,%r15d
  0x00007fb547834749: rorx   $0x19,%ebx,%r13d
  0x00007fb54783474f: rorx   $0xb,%ebx,%r14d
  0x00007fb547834755: xor    %esi,%r15d
  0x00007fb547834758: xor    %r14d,%r13d
  0x00007fb54783475b: rorx   $0x6,%ebx,%r14d
  0x00007fb547834761: and    %ebx,%r15d
  0x00007fb547834764: add    %ecx,%r9d
  0x00007fb547834767: xor    %r14d,%r13d
  0x00007fb54783476a: rorx   $0xd,%r9d,%r12d
  0x00007fb547834770: xor    %esi,%r15d
  0x00007fb547834773: rorx   $0x16,%r9d,%r14d
  0x00007fb547834779: mov    %r9d,%ecx
  0x00007fb54783477c: xor    %r12d,%r14d
  0x00007fb54783477f: rorx   $0x2,%r9d,%r12d
  0x00007fb547834785: add    0x1c(%rsp,%rdx,1),%r8d
  0x00007fb54783478a: or     %r11d,%ecx
  0x00007fb54783478d: xor    %r12d,%r14d
  0x00007fb547834790: mov    %r9d,%r12d
  0x00007fb547834793: and    %r10d,%ecx
  0x00007fb547834796: and    %r11d,%r12d
  0x00007fb547834799: add    %r13d,%r15d
  0x00007fb54783479c: add    %r8d,%eax
  0x00007fb54783479f: or     %r12d,%ecx
  0x00007fb5478347a2: add    %r14d,%r8d
  0x00007fb5478347a5: add    %r15d,%eax
  0x00007fb5478347a8: add    %r15d,%r8d
  0x00007fb5478347ab: add    %ecx,%r8d
  0x00007fb5478347ae: mov    %ebx,%r15d
  0x00007fb5478347b1: rorx   $0x19,%eax,%r13d
  0x00007fb5478347b7: rorx   $0xb,%eax,%r14d
  0x00007fb5478347bd: xor    %edi,%r15d
  0x00007fb5478347c0: xor    %r14d,%r13d
  0x00007fb5478347c3: rorx   $0x6,%eax,%r14d
  0x00007fb5478347c9: and    %eax,%r15d
  0x00007fb5478347cc: xor    %r14d,%r13d
  0x00007fb5478347cf: rorx   $0xd,%r8d,%r12d
  0x00007fb5478347d5: xor    %edi,%r15d
  0x00007fb5478347d8: rorx   $0x16,%r8d,%r14d
  0x00007fb5478347de: mov    %r8d,%ecx
  0x00007fb5478347e1: xor    %r12d,%r14d
  0x00007fb5478347e4: rorx   $0x2,%r8d,%r12d
  0x00007fb5478347ea: add    0x30(%rsp,%rdx,1),%esi
  0x00007fb5478347ee: or     %r10d,%ecx
  0x00007fb5478347f1: xor    %r12d,%r14d
  0x00007fb5478347f4: mov    %r8d,%r12d
  0x00007fb5478347f7: and    %r9d,%ecx
  0x00007fb5478347fa: and    %r10d,%r12d
  0x00007fb5478347fd: add    %r13d,%r15d
  0x00007fb547834800: add    %esi,%r11d
  0x00007fb547834803: or     %r12d,%ecx
  0x00007fb547834806: add    %r14d,%esi
  0x00007fb547834809: add    %r15d,%r11d
  0x00007fb54783480c: add    %r15d,%esi
  0x00007fb54783480f: mov    %eax,%r15d
  0x00007fb547834812: rorx   $0x19,%r11d,%r13d
  0x00007fb547834818: rorx   $0xb,%r11d,%r14d
  0x00007fb54783481e: xor    %ebx,%r15d
  0x00007fb547834821: xor    %r14d,%r13d
  0x00007fb547834824: rorx   $0x6,%r11d,%r14d
  0x00007fb54783482a: and    %r11d,%r15d
  0x00007fb54783482d: add    %ecx,%esi
  0x00007fb54783482f: xor    %r14d,%r13d
  0x00007fb547834832: rorx   $0xd,%esi,%r12d
  0x00007fb547834838: xor    %ebx,%r15d
  0x00007fb54783483b: rorx   $0x16,%esi,%r14d
  0x00007fb547834841: mov    %esi,%ecx
  0x00007fb547834843: xor    %r12d,%r14d
  0x00007fb547834846: rorx   $0x2,%esi,%r12d
  0x00007fb54783484c: add    0x34(%rsp,%rdx,1),%edi
  0x00007fb547834850: or     %r9d,%ecx
  0x00007fb547834853: xor    %r12d,%r14d
  0x00007fb547834856: mov    %esi,%r12d
  0x00007fb547834859: and    %r8d,%ecx
  0x00007fb54783485c: and    %r9d,%r12d
  0x00007fb54783485f: add    %r13d,%r15d
  0x00007fb547834862: add    %edi,%r10d
  0x00007fb547834865: or     %r12d,%ecx
  0x00007fb547834868: add    %r14d,%edi
  0x00007fb54783486b: add    %r15d,%r10d
  0x00007fb54783486e: add    %r15d,%edi
  0x00007fb547834871: mov    %r11d,%r15d
  0x00007fb547834874: rorx   $0x19,%r10d,%r13d
  0x00007fb54783487a: rorx   $0xb,%r10d,%r14d
  0x00007fb547834880: xor    %eax,%r15d
  0x00007fb547834883: xor    %r14d,%r13d
  0x00007fb547834886: rorx   $0x6,%r10d,%r14d
  0x00007fb54783488c: and    %r10d,%r15d
  0x00007fb54783488f: add    %ecx,%edi
  0x00007fb547834891: xor    %r14d,%r13d
  0x00007fb547834894: rorx   $0xd,%edi,%r12d
  0x00007fb54783489a: xor    %eax,%r15d
  0x00007fb54783489d: rorx   $0x16,%edi,%r14d
  0x00007fb5478348a3: mov    %edi,%ecx
  0x00007fb5478348a5: xor    %r12d,%r14d
  0x00007fb5478348a8: rorx   $0x2,%edi,%r12d
  0x00007fb5478348ae: add    0x38(%rsp,%rdx,1),%ebx
  0x00007fb5478348b2: or     %r8d,%ecx
  0x00007fb5478348b5: xor    %r12d,%r14d
  0x00007fb5478348b8: mov    %edi,%r12d
  0x00007fb5478348bb: and    %esi,%ecx
  0x00007fb5478348bd: and    %r8d,%r12d
  0x00007fb5478348c0: add    %r13d,%r15d
  0x00007fb5478348c3: add    %ebx,%r9d
  0x00007fb5478348c6: or     %r12d,%ecx
  0x00007fb5478348c9: add    %r14d,%ebx
  0x00007fb5478348cc: add    %r15d,%r9d
  0x00007fb5478348cf: add    %r15d,%ebx
  0x00007fb5478348d2: mov    %r10d,%r15d
  0x00007fb5478348d5: rorx   $0x19,%r9d,%r13d
  0x00007fb5478348db: rorx   $0xb,%r9d,%r14d
  0x00007fb5478348e1: xor    %r11d,%r15d
  0x00007fb5478348e4: xor    %r14d,%r13d
  0x00007fb5478348e7: rorx   $0x6,%r9d,%r14d
  0x00007fb5478348ed: and    %r9d,%r15d
  0x00007fb5478348f0: add    %ecx,%ebx
  0x00007fb5478348f2: xor    %r14d,%r13d
  0x00007fb5478348f5: rorx   $0xd,%ebx,%r12d
  0x00007fb5478348fb: xor    %r11d,%r15d
  0x00007fb5478348fe: rorx   $0x16,%ebx,%r14d
  0x00007fb547834904: mov    %ebx,%ecx
  0x00007fb547834906: xor    %r12d,%r14d
  0x00007fb547834909: rorx   $0x2,%ebx,%r12d
  0x00007fb54783490f: add    0x3c(%rsp,%rdx,1),%eax
  0x00007fb547834913: or     %esi,%ecx
  0x00007fb547834915: xor    %r12d,%r14d
  0x00007fb547834918: mov    %ebx,%r12d
  0x00007fb54783491b: and    %edi,%ecx
  0x00007fb54783491d: and    %esi,%r12d
  0x00007fb547834920: add    %r13d,%r15d
  0x00007fb547834923: add    %eax,%r8d
  0x00007fb547834926: or     %r12d,%ecx
  0x00007fb547834929: add    %r14d,%eax
  0x00007fb54783492c: add    %r15d,%r8d
  0x00007fb54783492f: add    %r15d,%eax
  0x00007fb547834932: add    %ecx,%eax
  0x00007fb547834934: add    $0x40,%rdx
  0x00007fb547834938: cmp    $0x200,%rdx
  0x00007fb54783493f: jb     Stub::sha256_implCompressMB+3392 0x00007fb547834620
  0x00007fb547834945: mov    0x210(%rsp),%rdx
  0x00007fb54783494d: mov    0x208(%rsp),%rcx
  0x00007fb547834955: add    $0x40,%rcx
  0x00007fb547834959: add    (%rdx),%eax
  0x00007fb54783495b: mov    %eax,(%rdx)
  0x00007fb54783495d: add    0x4(%rdx),%ebx
  0x00007fb547834960: mov    %ebx,0x4(%rdx)
  0x00007fb547834963: add    0x8(%rdx),%edi
  0x00007fb547834966: mov    %edi,0x8(%rdx)
  0x00007fb547834969: add    0xc(%rdx),%esi
  0x00007fb54783496c: mov    %esi,0xc(%rdx)
  0x00007fb54783496f: add    0x10(%rdx),%r8d
  0x00007fb547834973: mov    %r8d,0x10(%rdx)
  0x00007fb547834977: add    0x14(%rdx),%r9d
  0x00007fb54783497b: mov    %r9d,0x14(%rdx)
  0x00007fb54783497f: add    0x18(%rdx),%r10d
  0x00007fb547834983: mov    %r10d,0x18(%rdx)
  0x00007fb547834987: add    0x1c(%rdx),%r11d
  0x00007fb54783498b: mov    %r11d,0x1c(%rdx)
  0x00007fb54783498f: cmp    0x200(%rsp),%rcx
  0x00007fb547834997: jb     Stub::sha256_implCompressMB+172 0x00007fb54783398c
  0x00007fb54783499d: ja     Stub::sha256_implCompressMB+4402 0x00007fb547834a12
  0x00007fb54783499f: movabs $0x7fb5659a6900,%rbp
  0x00007fb5478349a9: vmovdqu (%rcx),%xmm4
  0x00007fb5478349ad: vmovdqu 0x10(%rcx),%xmm5
  0x00007fb5478349b2: vmovdqu 0x20(%rcx),%xmm6
  0x00007fb5478349b7: vmovdqu 0x30(%rcx),%xmm7
  0x00007fb5478349bc: vpshufb %xmm13,%xmm4,%xmm4
  0x00007fb5478349c1: vpshufb %xmm13,%xmm5,%xmm5
  0x00007fb5478349c6: vpshufb %xmm13,%xmm6,%xmm6
  0x00007fb5478349cb: vpshufb %xmm13,%xmm7,%xmm7
  0x00007fb5478349d0: jmpq   Stub::sha256_implCompressMB+245 0x00007fb5478339d5
  0x00007fb5478349d5: mov    (%rdx),%eax
  0x00007fb5478349d7: mov    0x4(%rdx),%ebx
  0x00007fb5478349da: mov    0x8(%rdx),%edi
  0x00007fb5478349dd: mov    0xc(%rdx),%esi
  0x00007fb5478349e0: mov    0x10(%rdx),%r8d
  0x00007fb5478349e4: mov    0x14(%rdx),%r9d
  0x00007fb5478349e8: mov    0x1c(%rdx),%r11d
  0x00007fb5478349ec: vmovdqu -0x22b4(%rip),%ymm13        # Stub::pshuffle_byte_flip_mask
  0x00007fb5478349f4: vmovdqu -0x229c(%rip),%ymm10        # Stub::pshuffle_byte_flip_mask+32 0x00007fb547832760
  0x00007fb5478349fc: vmovdqu -0x2284(%rip),%ymm12        # Stub::pshuffle_byte_flip_mask+64 0x00007fb547832780
  0x00007fb547834a04: mov    0x18(%rdx),%r10d
  0x00007fb547834a08: mov    %rdx,0x210(%rsp)
  0x00007fb547834a10: jmp    Stub::sha256_implCompressMB+4287 0x00007fb54783499f
  0x00007fb547834a12: mov    0x218(%rsp),%rsp
  0x00007fb547834a1a: pop    %r15
  0x00007fb547834a1c: pop    %r14
  0x00007fb547834a1e: pop    %r13
  0x00007fb547834a20: pop    %r12
  0x00007fb547834a22: pop    %rbp
  0x00007fb547834a23: pop    %rbx
  0x00007fb547834a24: pop    %rdx
  0x00007fb547834a25: pop    %rcx
  0x00007fb547834a26: mov    %rdx,%rax
  0x00007fb547834a29: cmp    %rcx,%rax
  0x00007fb547834a2c: jae    Stub::sha256_implCompressMB+4436 0x00007fb547834a34
  0x00007fb547834a2e: add    $0x40,%rax
  0x00007fb547834a32: jmp    Stub::sha256_implCompressMB+4425 0x00007fb547834a29
  0x00007fb547834a34: add    $0x20,%rsp
  0x00007fb547834a38: vzeroupper 
  0x00007fb547834a3b: leaveq 
  0x00007fb547834a3c: retq   

StubRoutines::pshuffle_byte_flip_mask_sha512 [0x00007fb547834a40, 0x00007fb547834a80[ (64 bytes)
  0x00007fb547834a40: (bad)  
  0x00007fb547834a41: (bad)  
  0x00007fb547834a42: add    $0x1020304,%eax
  0x00007fb547834a47: add    %cl,(%rdi)
  0x00007fb547834a49: (bad)  
  0x00007fb547834a4a: or     $0x90a0b0c,%eax
  0x00007fb547834a4f: or     %dl,(%rdi)
  0x00007fb547834a51: (bad)  
  0x00007fb547834a52: adc    $0x11121314,%eax
  0x00007fb547834a57: adc    %bl,(%rdi)
  0x00007fb547834a59: (bad)  
  0x00007fb547834a5a: sbb    $0x191a1b1c,%eax
  0x00007fb547834a5f: sbb    %al,(%rax)
  0x00007fb547834a61: add    %al,(%rax)
  0x00007fb547834a63: add    %al,(%rax)
  0x00007fb547834a65: add    %al,(%rax)
  0x00007fb547834a67: add    %al,(%rax)
  0x00007fb547834a69: add    %al,(%rax)
  0x00007fb547834a6b: add    %al,(%rax)
  0x00007fb547834a6d: add    %al,(%rax)
  0x00007fb547834a6f: add    %bh,%bh
  0x00007fb547834a71: (bad)  
  0x00007fb547834a72: (bad)  
  0x00007fb547834a73: (bad)  
  0x00007fb547834a74: (bad)  
  0x00007fb547834a75: (bad)  
  0x00007fb547834a76: (bad)  
  0x00007fb547834a77: (bad)  
  0x00007fb547834a78: (bad)  
  0x00007fb547834a79: (bad)  
  0x00007fb547834a7a: (bad)  
  0x00007fb547834a7b: (bad)  
  0x00007fb547834a7c: (bad)  
  0x00007fb547834a7d: (bad)  
  0x00007fb547834a7e: (bad)  
  0x00007fb547834a7f: .byte 0xff

StubRoutines::sha512_implCompress [0x00007fb547834a80, 0x00007fb547835895[ (3605 bytes)
  0x00007fb547834a80: push   %rbp
  0x00007fb547834a81: mov    %rsp,%rbp
  0x00007fb547834a84: push   %rdx
  0x00007fb547834a85: push   %rcx
  0x00007fb547834a86: mov    %rsp,%rax
  0x00007fb547834a89: sub    $0x70,%rsp
  0x00007fb547834a8d: and    $0xffffffffffffffe0,%rsp
  0x00007fb547834a91: mov    %rax,0x38(%rsp)
  0x00007fb547834a96: mov    %rbp,0x40(%rsp)
  0x00007fb547834a9b: mov    %rbx,0x48(%rsp)
  0x00007fb547834aa0: mov    %r12,0x50(%rsp)
  0x00007fb547834aa5: mov    %r13,0x58(%rsp)
  0x00007fb547834aaa: mov    %r14,0x60(%rsp)
  0x00007fb547834aaf: mov    %r15,0x68(%rsp)
  0x00007fb547834ab4: vpblendd $0xf0,%xmm1,%xmm0,%xmm0
  0x00007fb547834aba: vpblendd $0xf0,%ymm1,%ymm0,%ymm0
  0x00007fb547834ac0: xor    %rdx,%rdx
  0x00007fb547834ac3: add    $0x80,%rdx
  0x00007fb547834aca: add    %rdi,%rdx
  0x00007fb547834acd: mov    %rdx,0x30(%rsp)
  0x00007fb547834ad2: mov    (%rsi),%rax
  0x00007fb547834ad5: mov    0x8(%rsi),%rbx
  0x00007fb547834ad9: mov    0x10(%rsi),%rcx
  0x00007fb547834add: mov    0x18(%rsi),%r8
  0x00007fb547834ae1: mov    0x20(%rsi),%rdx
  0x00007fb547834ae5: mov    0x28(%rsi),%r9
  0x00007fb547834ae9: mov    0x38(%rsi),%r11
  0x00007fb547834aed: vmovdqu -0xb5(%rip),%ymm9        # Stub::pshuffle_byte_flip_mask_sha512
  0x00007fb547834af5: vmovdqu -0x9d(%rip),%ymm10        # Stub::pshuffle_byte_flip_mask_sha512+32 0x00007fb547834a60
  0x00007fb547834afd: mov    0x30(%rsi),%r10
  0x00007fb547834b01: movabs $0x7fb56595bb40,%rbp
  0x00007fb547834b0b: vmovdqu (%rdi),%ymm4
  0x00007fb547834b0f: vpshufb %ymm9,%ymm4,%ymm4
  0x00007fb547834b14: vmovdqu 0x20(%rdi),%ymm5
  0x00007fb547834b19: vpshufb %ymm9,%ymm5,%ymm5
  0x00007fb547834b1e: vmovdqu 0x40(%rdi),%ymm6
  0x00007fb547834b23: vpshufb %ymm9,%ymm6,%ymm6
  0x00007fb547834b28: vmovdqu 0x60(%rdi),%ymm7
  0x00007fb547834b2d: vpshufb %ymm9,%ymm7,%ymm7
  0x00007fb547834b32: mov    %rdi,0x28(%rsp)
  0x00007fb547834b37: movq   $0x4,0x20(%rsp)
  0x00007fb547834b40: vpaddq 0x0(%rbp),%ymm4,%ymm0
  0x00007fb547834b45: vmovdqu %ymm0,(%rsp)
  0x00007fb547834b4a: vperm2f128 $0x3,%ymm6,%ymm7,%ymm0
  0x00007fb547834b50: vpalignr $0x8,%ymm6,%ymm0,%ymm0
  0x00007fb547834b56: vpaddq %ymm4,%ymm0,%ymm0
  0x00007fb547834b5a: vperm2f128 $0x3,%ymm4,%ymm5,%ymm1
  0x00007fb547834b60: vpalignr $0x8,%ymm4,%ymm1,%ymm1
  0x00007fb547834b66: vpsrlq $0x1,%ymm1,%ymm2
  0x00007fb547834b6b: vpsllq $0x3f,%ymm1,%ymm3
  0x00007fb547834b70: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547834b74: vpsrlq $0x7,%ymm1,%ymm8
  0x00007fb547834b79: mov    %rax,%rdi
  0x00007fb547834b7c: rorx   $0x29,%rdx,%r13
  0x00007fb547834b82: rorx   $0x12,%rdx,%r14
  0x00007fb547834b88: add    (%rsp),%r11
  0x00007fb547834b8c: or     %rcx,%rdi
  0x00007fb547834b8f: mov    %r9,%r15
  0x00007fb547834b92: xor    %r10,%r15
  0x00007fb547834b95: rorx   $0x22,%rax,%r12
  0x00007fb547834b9b: xor    %r14,%r13
  0x00007fb547834b9e: rorx   $0xe,%rdx,%r14
  0x00007fb547834ba4: and    %rdx,%r15
  0x00007fb547834ba7: add    %r11,%r8
  0x00007fb547834baa: and    %rbx,%rdi
  0x00007fb547834bad: xor    %r14,%r13
  0x00007fb547834bb0: rorx   $0x27,%rax,%r14
  0x00007fb547834bb6: xor    %r12,%r14
  0x00007fb547834bb9: rorx   $0x1c,%rax,%r12
  0x00007fb547834bbf: xor    %r10,%r15
  0x00007fb547834bc2: xor    %r12,%r14
  0x00007fb547834bc5: mov    %rax,%r12
  0x00007fb547834bc8: and    %rcx,%r12
  0x00007fb547834bcb: add    %r13,%r15
  0x00007fb547834bce: or     %r12,%rdi
  0x00007fb547834bd1: add    %r14,%r11
  0x00007fb547834bd4: add    %r15,%r8
  0x00007fb547834bd7: add    %r15,%r11
  0x00007fb547834bda: add    %rdi,%r11
  0x00007fb547834bdd: vpsrlq $0x8,%ymm1,%ymm2
  0x00007fb547834be2: vpsllq $0x38,%ymm1,%ymm1
  0x00007fb547834be7: vpor   %ymm2,%ymm1,%ymm1
  0x00007fb547834beb: vpxor  %ymm8,%ymm3,%ymm3
  0x00007fb547834bf0: vpxor  %ymm1,%ymm3,%ymm1
  0x00007fb547834bf4: vpaddq %ymm1,%ymm0,%ymm0
  0x00007fb547834bf8: vperm2f128 $0x0,%ymm0,%ymm0,%ymm4
  0x00007fb547834bfe: vpand  %ymm10,%ymm0,%ymm0
  0x00007fb547834c03: vperm2f128 $0x11,%ymm7,%ymm7,%ymm2
  0x00007fb547834c09: vpsrlq $0x6,%ymm2,%ymm8
  0x00007fb547834c0e: mov    %r11,%rdi
  0x00007fb547834c11: rorx   $0x29,%r8,%r13
  0x00007fb547834c17: rorx   $0x12,%r8,%r14
  0x00007fb547834c1d: add    0x8(%rsp),%r10
  0x00007fb547834c22: or     %rbx,%rdi
  0x00007fb547834c25: mov    %rdx,%r15
  0x00007fb547834c28: xor    %r9,%r15
  0x00007fb547834c2b: rorx   $0x22,%r11,%r12
  0x00007fb547834c31: xor    %r14,%r13
  0x00007fb547834c34: rorx   $0xe,%r8,%r14
  0x00007fb547834c3a: and    %r8,%r15
  0x00007fb547834c3d: add    %r10,%rcx
  0x00007fb547834c40: and    %rax,%rdi
  0x00007fb547834c43: xor    %r14,%r13
  0x00007fb547834c46: rorx   $0x27,%r11,%r14
  0x00007fb547834c4c: xor    %r12,%r14
  0x00007fb547834c4f: rorx   $0x1c,%r11,%r12
  0x00007fb547834c55: xor    %r9,%r15
  0x00007fb547834c58: xor    %r12,%r14
  0x00007fb547834c5b: mov    %r11,%r12
  0x00007fb547834c5e: and    %rbx,%r12
  0x00007fb547834c61: add    %r13,%r15
  0x00007fb547834c64: or     %r12,%rdi
  0x00007fb547834c67: add    %r14,%r10
  0x00007fb547834c6a: add    %r15,%rcx
  0x00007fb547834c6d: add    %r15,%r10
  0x00007fb547834c70: add    %rdi,%r10
  0x00007fb547834c73: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547834c78: vpsllq $0x2d,%ymm2,%ymm1
  0x00007fb547834c7d: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547834c81: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547834c85: vpsrlq $0x3d,%ymm2,%ymm3
  0x00007fb547834c8a: vpsllq $0x3,%ymm2,%ymm1
  0x00007fb547834c8f: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547834c93: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547834c97: vpaddq %ymm8,%ymm4,%ymm4
  0x00007fb547834c9c: vpsrlq $0x6,%ymm4,%ymm8
  0x00007fb547834ca1: mov    %r10,%rdi
  0x00007fb547834ca4: rorx   $0x29,%rcx,%r13
  0x00007fb547834caa: rorx   $0x12,%rcx,%r14
  0x00007fb547834cb0: add    0x10(%rsp),%r9
  0x00007fb547834cb5: or     %rax,%rdi
  0x00007fb547834cb8: mov    %r8,%r15
  0x00007fb547834cbb: xor    %rdx,%r15
  0x00007fb547834cbe: rorx   $0x22,%r10,%r12
  0x00007fb547834cc4: xor    %r14,%r13
  0x00007fb547834cc7: rorx   $0xe,%rcx,%r14
  0x00007fb547834ccd: and    %rcx,%r15
  0x00007fb547834cd0: add    %r9,%rbx
  0x00007fb547834cd3: and    %r11,%rdi
  0x00007fb547834cd6: xor    %r14,%r13
  0x00007fb547834cd9: rorx   $0x27,%r10,%r14
  0x00007fb547834cdf: xor    %r12,%r14
  0x00007fb547834ce2: rorx   $0x1c,%r10,%r12
  0x00007fb547834ce8: xor    %rdx,%r15
  0x00007fb547834ceb: xor    %r12,%r14
  0x00007fb547834cee: mov    %r10,%r12
  0x00007fb547834cf1: and    %rax,%r12
  0x00007fb547834cf4: add    %r13,%r15
  0x00007fb547834cf7: or     %r12,%rdi
  0x00007fb547834cfa: add    %r14,%r9
  0x00007fb547834cfd: add    %r15,%rbx
  0x00007fb547834d00: add    %r15,%r9
  0x00007fb547834d03: add    %rdi,%r9
  0x00007fb547834d06: vpsrlq $0x13,%ymm4,%ymm3
  0x00007fb547834d0b: vpsllq $0x2d,%ymm4,%ymm1
  0x00007fb547834d10: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547834d14: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547834d18: vpsrlq $0x3d,%ymm4,%ymm3
  0x00007fb547834d1d: vpsllq $0x3,%ymm4,%ymm1
  0x00007fb547834d22: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547834d26: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547834d2a: vpaddq %ymm8,%ymm0,%ymm2
  0x00007fb547834d2f: vpblendd $0xf0,%ymm2,%ymm4,%ymm4
  0x00007fb547834d35: mov    %r9,%rdi
  0x00007fb547834d38: rorx   $0x29,%rbx,%r13
  0x00007fb547834d3e: rorx   $0x12,%rbx,%r14
  0x00007fb547834d44: add    0x18(%rsp),%rdx
  0x00007fb547834d49: or     %r11,%rdi
  0x00007fb547834d4c: mov    %rcx,%r15
  0x00007fb547834d4f: xor    %r8,%r15
  0x00007fb547834d52: rorx   $0x22,%r9,%r12
  0x00007fb547834d58: xor    %r14,%r13
  0x00007fb547834d5b: rorx   $0xe,%rbx,%r14
  0x00007fb547834d61: and    %rbx,%r15
  0x00007fb547834d64: add    %rdx,%rax
  0x00007fb547834d67: and    %r10,%rdi
  0x00007fb547834d6a: xor    %r14,%r13
  0x00007fb547834d6d: rorx   $0x27,%r9,%r14
  0x00007fb547834d73: xor    %r12,%r14
  0x00007fb547834d76: rorx   $0x1c,%r9,%r12
  0x00007fb547834d7c: xor    %r8,%r15
  0x00007fb547834d7f: xor    %r12,%r14
  0x00007fb547834d82: mov    %r9,%r12
  0x00007fb547834d85: and    %r11,%r12
  0x00007fb547834d88: add    %r13,%r15
  0x00007fb547834d8b: or     %r12,%rdi
  0x00007fb547834d8e: add    %r14,%rdx
  0x00007fb547834d91: add    %r15,%rax
  0x00007fb547834d94: add    %r15,%rdx
  0x00007fb547834d97: add    %rdi,%rdx
  0x00007fb547834d9a: vpaddq 0x20(%rbp),%ymm5,%ymm0
  0x00007fb547834d9f: vmovdqu %ymm0,(%rsp)
  0x00007fb547834da4: vperm2f128 $0x3,%ymm7,%ymm4,%ymm0
  0x00007fb547834daa: vpalignr $0x8,%ymm7,%ymm0,%ymm0
  0x00007fb547834db0: vpaddq %ymm5,%ymm0,%ymm0
  0x00007fb547834db4: vperm2f128 $0x3,%ymm5,%ymm6,%ymm1
  0x00007fb547834dba: vpalignr $0x8,%ymm5,%ymm1,%ymm1
  0x00007fb547834dc0: vpsrlq $0x1,%ymm1,%ymm2
  0x00007fb547834dc5: vpsllq $0x3f,%ymm1,%ymm3
  0x00007fb547834dca: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547834dce: vpsrlq $0x7,%ymm1,%ymm8
  0x00007fb547834dd3: mov    %rdx,%rdi
  0x00007fb547834dd6: rorx   $0x29,%rax,%r13
  0x00007fb547834ddc: rorx   $0x12,%rax,%r14
  0x00007fb547834de2: add    (%rsp),%r8
  0x00007fb547834de6: or     %r10,%rdi
  0x00007fb547834de9: mov    %rbx,%r15
  0x00007fb547834dec: xor    %rcx,%r15
  0x00007fb547834def: rorx   $0x22,%rdx,%r12
  0x00007fb547834df5: xor    %r14,%r13
  0x00007fb547834df8: rorx   $0xe,%rax,%r14
  0x00007fb547834dfe: and    %rax,%r15
  0x00007fb547834e01: add    %r8,%r11
  0x00007fb547834e04: and    %r9,%rdi
  0x00007fb547834e07: xor    %r14,%r13
  0x00007fb547834e0a: rorx   $0x27,%rdx,%r14
  0x00007fb547834e10: xor    %r12,%r14
  0x00007fb547834e13: rorx   $0x1c,%rdx,%r12
  0x00007fb547834e19: xor    %rcx,%r15
  0x00007fb547834e1c: xor    %r12,%r14
  0x00007fb547834e1f: mov    %rdx,%r12
  0x00007fb547834e22: and    %r10,%r12
  0x00007fb547834e25: add    %r13,%r15
  0x00007fb547834e28: or     %r12,%rdi
  0x00007fb547834e2b: add    %r14,%r8
  0x00007fb547834e2e: add    %r15,%r11
  0x00007fb547834e31: add    %r15,%r8
  0x00007fb547834e34: add    %rdi,%r8
  0x00007fb547834e37: vpsrlq $0x8,%ymm1,%ymm2
  0x00007fb547834e3c: vpsllq $0x38,%ymm1,%ymm1
  0x00007fb547834e41: vpor   %ymm2,%ymm1,%ymm1
  0x00007fb547834e45: vpxor  %ymm8,%ymm3,%ymm3
  0x00007fb547834e4a: vpxor  %ymm1,%ymm3,%ymm1
  0x00007fb547834e4e: vpaddq %ymm1,%ymm0,%ymm0
  0x00007fb547834e52: vperm2f128 $0x0,%ymm0,%ymm0,%ymm5
  0x00007fb547834e58: vpand  %ymm10,%ymm0,%ymm0
  0x00007fb547834e5d: vperm2f128 $0x11,%ymm4,%ymm4,%ymm2
  0x00007fb547834e63: vpsrlq $0x6,%ymm2,%ymm8
  0x00007fb547834e68: mov    %r8,%rdi
  0x00007fb547834e6b: rorx   $0x29,%r11,%r13
  0x00007fb547834e71: rorx   $0x12,%r11,%r14
  0x00007fb547834e77: add    0x8(%rsp),%rcx
  0x00007fb547834e7c: or     %r9,%rdi
  0x00007fb547834e7f: mov    %rax,%r15
  0x00007fb547834e82: xor    %rbx,%r15
  0x00007fb547834e85: rorx   $0x22,%r8,%r12
  0x00007fb547834e8b: xor    %r14,%r13
  0x00007fb547834e8e: rorx   $0xe,%r11,%r14
  0x00007fb547834e94: and    %r11,%r15
  0x00007fb547834e97: add    %rcx,%r10
  0x00007fb547834e9a: and    %rdx,%rdi
  0x00007fb547834e9d: xor    %r14,%r13
  0x00007fb547834ea0: rorx   $0x27,%r8,%r14
  0x00007fb547834ea6: xor    %r12,%r14
  0x00007fb547834ea9: rorx   $0x1c,%r8,%r12
  0x00007fb547834eaf: xor    %rbx,%r15
  0x00007fb547834eb2: xor    %r12,%r14
  0x00007fb547834eb5: mov    %r8,%r12
  0x00007fb547834eb8: and    %r9,%r12
  0x00007fb547834ebb: add    %r13,%r15
  0x00007fb547834ebe: or     %r12,%rdi
  0x00007fb547834ec1: add    %r14,%rcx
  0x00007fb547834ec4: add    %r15,%r10
  0x00007fb547834ec7: add    %r15,%rcx
  0x00007fb547834eca: add    %rdi,%rcx
  0x00007fb547834ecd: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547834ed2: vpsllq $0x2d,%ymm2,%ymm1
  0x00007fb547834ed7: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547834edb: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547834edf: vpsrlq $0x3d,%ymm2,%ymm3
  0x00007fb547834ee4: vpsllq $0x3,%ymm2,%ymm1
  0x00007fb547834ee9: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547834eed: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547834ef1: vpaddq %ymm8,%ymm5,%ymm5
  0x00007fb547834ef6: vpsrlq $0x6,%ymm5,%ymm8
  0x00007fb547834efb: mov    %rcx,%rdi
  0x00007fb547834efe: rorx   $0x29,%r10,%r13
  0x00007fb547834f04: rorx   $0x12,%r10,%r14
  0x00007fb547834f0a: add    0x10(%rsp),%rbx
  0x00007fb547834f0f: or     %rdx,%rdi
  0x00007fb547834f12: mov    %r11,%r15
  0x00007fb547834f15: xor    %rax,%r15
  0x00007fb547834f18: rorx   $0x22,%rcx,%r12
  0x00007fb547834f1e: xor    %r14,%r13
  0x00007fb547834f21: rorx   $0xe,%r10,%r14
  0x00007fb547834f27: and    %r10,%r15
  0x00007fb547834f2a: add    %rbx,%r9
  0x00007fb547834f2d: and    %r8,%rdi
  0x00007fb547834f30: xor    %r14,%r13
  0x00007fb547834f33: rorx   $0x27,%rcx,%r14
  0x00007fb547834f39: xor    %r12,%r14
  0x00007fb547834f3c: rorx   $0x1c,%rcx,%r12
  0x00007fb547834f42: xor    %rax,%r15
  0x00007fb547834f45: xor    %r12,%r14
  0x00007fb547834f48: mov    %rcx,%r12
  0x00007fb547834f4b: and    %rdx,%r12
  0x00007fb547834f4e: add    %r13,%r15
  0x00007fb547834f51: or     %r12,%rdi
  0x00007fb547834f54: add    %r14,%rbx
  0x00007fb547834f57: add    %r15,%r9
  0x00007fb547834f5a: add    %r15,%rbx
  0x00007fb547834f5d: add    %rdi,%rbx
  0x00007fb547834f60: vpsrlq $0x13,%ymm5,%ymm3
  0x00007fb547834f65: vpsllq $0x2d,%ymm5,%ymm1
  0x00007fb547834f6a: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547834f6e: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547834f72: vpsrlq $0x3d,%ymm5,%ymm3
  0x00007fb547834f77: vpsllq $0x3,%ymm5,%ymm1
  0x00007fb547834f7c: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547834f80: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547834f84: vpaddq %ymm8,%ymm0,%ymm2
  0x00007fb547834f89: vpblendd $0xf0,%ymm2,%ymm5,%ymm5
  0x00007fb547834f8f: mov    %rbx,%rdi
  0x00007fb547834f92: rorx   $0x29,%r9,%r13
  0x00007fb547834f98: rorx   $0x12,%r9,%r14
  0x00007fb547834f9e: add    0x18(%rsp),%rax
  0x00007fb547834fa3: or     %r8,%rdi
  0x00007fb547834fa6: mov    %r10,%r15
  0x00007fb547834fa9: xor    %r11,%r15
  0x00007fb547834fac: rorx   $0x22,%rbx,%r12
  0x00007fb547834fb2: xor    %r14,%r13
  0x00007fb547834fb5: rorx   $0xe,%r9,%r14
  0x00007fb547834fbb: and    %r9,%r15
  0x00007fb547834fbe: add    %rax,%rdx
  0x00007fb547834fc1: and    %rcx,%rdi
  0x00007fb547834fc4: xor    %r14,%r13
  0x00007fb547834fc7: rorx   $0x27,%rbx,%r14
  0x00007fb547834fcd: xor    %r12,%r14
  0x00007fb547834fd0: rorx   $0x1c,%rbx,%r12
  0x00007fb547834fd6: xor    %r11,%r15
  0x00007fb547834fd9: xor    %r12,%r14
  0x00007fb547834fdc: mov    %rbx,%r12
  0x00007fb547834fdf: and    %r8,%r12
  0x00007fb547834fe2: add    %r13,%r15
  0x00007fb547834fe5: or     %r12,%rdi
  0x00007fb547834fe8: add    %r14,%rax
  0x00007fb547834feb: add    %r15,%rdx
  0x00007fb547834fee: add    %r15,%rax
  0x00007fb547834ff1: add    %rdi,%rax
  0x00007fb547834ff4: vpaddq 0x40(%rbp),%ymm6,%ymm0
  0x00007fb547834ff9: vmovdqu %ymm0,(%rsp)
  0x00007fb547834ffe: vperm2f128 $0x3,%ymm4,%ymm5,%ymm0
  0x00007fb547835004: vpalignr $0x8,%ymm4,%ymm0,%ymm0
  0x00007fb54783500a: vpaddq %ymm6,%ymm0,%ymm0
  0x00007fb54783500e: vperm2f128 $0x3,%ymm6,%ymm7,%ymm1
  0x00007fb547835014: vpalignr $0x8,%ymm6,%ymm1,%ymm1
  0x00007fb54783501a: vpsrlq $0x1,%ymm1,%ymm2
  0x00007fb54783501f: vpsllq $0x3f,%ymm1,%ymm3
  0x00007fb547835024: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547835028: vpsrlq $0x7,%ymm1,%ymm8
  0x00007fb54783502d: mov    %rax,%rdi
  0x00007fb547835030: rorx   $0x29,%rdx,%r13
  0x00007fb547835036: rorx   $0x12,%rdx,%r14
  0x00007fb54783503c: add    (%rsp),%r11
  0x00007fb547835040: or     %rcx,%rdi
  0x00007fb547835043: mov    %r9,%r15
  0x00007fb547835046: xor    %r10,%r15
  0x00007fb547835049: rorx   $0x22,%rax,%r12
  0x00007fb54783504f: xor    %r14,%r13
  0x00007fb547835052: rorx   $0xe,%rdx,%r14
  0x00007fb547835058: and    %rdx,%r15
  0x00007fb54783505b: add    %r11,%r8
  0x00007fb54783505e: and    %rbx,%rdi
  0x00007fb547835061: xor    %r14,%r13
  0x00007fb547835064: rorx   $0x27,%rax,%r14
  0x00007fb54783506a: xor    %r12,%r14
  0x00007fb54783506d: rorx   $0x1c,%rax,%r12
  0x00007fb547835073: xor    %r10,%r15
  0x00007fb547835076: xor    %r12,%r14
  0x00007fb547835079: mov    %rax,%r12
  0x00007fb54783507c: and    %rcx,%r12
  0x00007fb54783507f: add    %r13,%r15
  0x00007fb547835082: or     %r12,%rdi
  0x00007fb547835085: add    %r14,%r11
  0x00007fb547835088: add    %r15,%r8
  0x00007fb54783508b: add    %r15,%r11
  0x00007fb54783508e: add    %rdi,%r11
  0x00007fb547835091: vpsrlq $0x8,%ymm1,%ymm2
  0x00007fb547835096: vpsllq $0x38,%ymm1,%ymm1
  0x00007fb54783509b: vpor   %ymm2,%ymm1,%ymm1
  0x00007fb54783509f: vpxor  %ymm8,%ymm3,%ymm3
  0x00007fb5478350a4: vpxor  %ymm1,%ymm3,%ymm1
  0x00007fb5478350a8: vpaddq %ymm1,%ymm0,%ymm0
  0x00007fb5478350ac: vperm2f128 $0x0,%ymm0,%ymm0,%ymm6
  0x00007fb5478350b2: vpand  %ymm10,%ymm0,%ymm0
  0x00007fb5478350b7: vperm2f128 $0x11,%ymm5,%ymm5,%ymm2
  0x00007fb5478350bd: vpsrlq $0x6,%ymm2,%ymm8
  0x00007fb5478350c2: mov    %r11,%rdi
  0x00007fb5478350c5: rorx   $0x29,%r8,%r13
  0x00007fb5478350cb: rorx   $0x12,%r8,%r14
  0x00007fb5478350d1: add    0x8(%rsp),%r10
  0x00007fb5478350d6: or     %rbx,%rdi
  0x00007fb5478350d9: mov    %rdx,%r15
  0x00007fb5478350dc: xor    %r9,%r15
  0x00007fb5478350df: rorx   $0x22,%r11,%r12
  0x00007fb5478350e5: xor    %r14,%r13
  0x00007fb5478350e8: rorx   $0xe,%r8,%r14
  0x00007fb5478350ee: and    %r8,%r15
  0x00007fb5478350f1: add    %r10,%rcx
  0x00007fb5478350f4: and    %rax,%rdi
  0x00007fb5478350f7: xor    %r14,%r13
  0x00007fb5478350fa: rorx   $0x27,%r11,%r14
  0x00007fb547835100: xor    %r12,%r14
  0x00007fb547835103: rorx   $0x1c,%r11,%r12
  0x00007fb547835109: xor    %r9,%r15
  0x00007fb54783510c: xor    %r12,%r14
  0x00007fb54783510f: mov    %r11,%r12
  0x00007fb547835112: and    %rbx,%r12
  0x00007fb547835115: add    %r13,%r15
  0x00007fb547835118: or     %r12,%rdi
  0x00007fb54783511b: add    %r14,%r10
  0x00007fb54783511e: add    %r15,%rcx
  0x00007fb547835121: add    %r15,%r10
  0x00007fb547835124: add    %rdi,%r10
  0x00007fb547835127: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb54783512c: vpsllq $0x2d,%ymm2,%ymm1
  0x00007fb547835131: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835135: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835139: vpsrlq $0x3d,%ymm2,%ymm3
  0x00007fb54783513e: vpsllq $0x3,%ymm2,%ymm1
  0x00007fb547835143: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835147: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb54783514b: vpaddq %ymm8,%ymm6,%ymm6
  0x00007fb547835150: vpsrlq $0x6,%ymm6,%ymm8
  0x00007fb547835155: mov    %r10,%rdi
  0x00007fb547835158: rorx   $0x29,%rcx,%r13
  0x00007fb54783515e: rorx   $0x12,%rcx,%r14
  0x00007fb547835164: add    0x10(%rsp),%r9
  0x00007fb547835169: or     %rax,%rdi
  0x00007fb54783516c: mov    %r8,%r15
  0x00007fb54783516f: xor    %rdx,%r15
  0x00007fb547835172: rorx   $0x22,%r10,%r12
  0x00007fb547835178: xor    %r14,%r13
  0x00007fb54783517b: rorx   $0xe,%rcx,%r14
  0x00007fb547835181: and    %rcx,%r15
  0x00007fb547835184: add    %r9,%rbx
  0x00007fb547835187: and    %r11,%rdi
  0x00007fb54783518a: xor    %r14,%r13
  0x00007fb54783518d: rorx   $0x27,%r10,%r14
  0x00007fb547835193: xor    %r12,%r14
  0x00007fb547835196: rorx   $0x1c,%r10,%r12
  0x00007fb54783519c: xor    %rdx,%r15
  0x00007fb54783519f: xor    %r12,%r14
  0x00007fb5478351a2: mov    %r10,%r12
  0x00007fb5478351a5: and    %rax,%r12
  0x00007fb5478351a8: add    %r13,%r15
  0x00007fb5478351ab: or     %r12,%rdi
  0x00007fb5478351ae: add    %r14,%r9
  0x00007fb5478351b1: add    %r15,%rbx
  0x00007fb5478351b4: add    %r15,%r9
  0x00007fb5478351b7: add    %rdi,%r9
  0x00007fb5478351ba: vpsrlq $0x13,%ymm6,%ymm3
  0x00007fb5478351bf: vpsllq $0x2d,%ymm6,%ymm1
  0x00007fb5478351c4: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb5478351c8: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb5478351cc: vpsrlq $0x3d,%ymm6,%ymm3
  0x00007fb5478351d1: vpsllq $0x3,%ymm6,%ymm1
  0x00007fb5478351d6: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb5478351da: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb5478351de: vpaddq %ymm8,%ymm0,%ymm2
  0x00007fb5478351e3: vpblendd $0xf0,%ymm2,%ymm6,%ymm6
  0x00007fb5478351e9: mov    %r9,%rdi
  0x00007fb5478351ec: rorx   $0x29,%rbx,%r13
  0x00007fb5478351f2: rorx   $0x12,%rbx,%r14
  0x00007fb5478351f8: add    0x18(%rsp),%rdx
  0x00007fb5478351fd: or     %r11,%rdi
  0x00007fb547835200: mov    %rcx,%r15
  0x00007fb547835203: xor    %r8,%r15
  0x00007fb547835206: rorx   $0x22,%r9,%r12
  0x00007fb54783520c: xor    %r14,%r13
  0x00007fb54783520f: rorx   $0xe,%rbx,%r14
  0x00007fb547835215: and    %rbx,%r15
  0x00007fb547835218: add    %rdx,%rax
  0x00007fb54783521b: and    %r10,%rdi
  0x00007fb54783521e: xor    %r14,%r13
  0x00007fb547835221: rorx   $0x27,%r9,%r14
  0x00007fb547835227: xor    %r12,%r14
  0x00007fb54783522a: rorx   $0x1c,%r9,%r12
  0x00007fb547835230: xor    %r8,%r15
  0x00007fb547835233: xor    %r12,%r14
  0x00007fb547835236: mov    %r9,%r12
  0x00007fb547835239: and    %r11,%r12
  0x00007fb54783523c: add    %r13,%r15
  0x00007fb54783523f: or     %r12,%rdi
  0x00007fb547835242: add    %r14,%rdx
  0x00007fb547835245: add    %r15,%rax
  0x00007fb547835248: add    %r15,%rdx
  0x00007fb54783524b: add    %rdi,%rdx
  0x00007fb54783524e: vpaddq 0x60(%rbp),%ymm7,%ymm0
  0x00007fb547835253: vmovdqu %ymm0,(%rsp)
  0x00007fb547835258: add    $0x80,%rbp
  0x00007fb54783525f: vperm2f128 $0x3,%ymm5,%ymm6,%ymm0
  0x00007fb547835265: vpalignr $0x8,%ymm5,%ymm0,%ymm0
  0x00007fb54783526b: vpaddq %ymm7,%ymm0,%ymm0
  0x00007fb54783526f: vperm2f128 $0x3,%ymm7,%ymm4,%ymm1
  0x00007fb547835275: vpalignr $0x8,%ymm7,%ymm1,%ymm1
  0x00007fb54783527b: vpsrlq $0x1,%ymm1,%ymm2
  0x00007fb547835280: vpsllq $0x3f,%ymm1,%ymm3
  0x00007fb547835285: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547835289: vpsrlq $0x7,%ymm1,%ymm8
  0x00007fb54783528e: mov    %rdx,%rdi
  0x00007fb547835291: rorx   $0x29,%rax,%r13
  0x00007fb547835297: rorx   $0x12,%rax,%r14
  0x00007fb54783529d: add    (%rsp),%r8
  0x00007fb5478352a1: or     %r10,%rdi
  0x00007fb5478352a4: mov    %rbx,%r15
  0x00007fb5478352a7: xor    %rcx,%r15
  0x00007fb5478352aa: rorx   $0x22,%rdx,%r12
  0x00007fb5478352b0: xor    %r14,%r13
  0x00007fb5478352b3: rorx   $0xe,%rax,%r14
  0x00007fb5478352b9: and    %rax,%r15
  0x00007fb5478352bc: add    %r8,%r11
  0x00007fb5478352bf: and    %r9,%rdi
  0x00007fb5478352c2: xor    %r14,%r13
  0x00007fb5478352c5: rorx   $0x27,%rdx,%r14
  0x00007fb5478352cb: xor    %r12,%r14
  0x00007fb5478352ce: rorx   $0x1c,%rdx,%r12
  0x00007fb5478352d4: xor    %rcx,%r15
  0x00007fb5478352d7: xor    %r12,%r14
  0x00007fb5478352da: mov    %rdx,%r12
  0x00007fb5478352dd: and    %r10,%r12
  0x00007fb5478352e0: add    %r13,%r15
  0x00007fb5478352e3: or     %r12,%rdi
  0x00007fb5478352e6: add    %r14,%r8
  0x00007fb5478352e9: add    %r15,%r11
  0x00007fb5478352ec: add    %r15,%r8
  0x00007fb5478352ef: add    %rdi,%r8
  0x00007fb5478352f2: vpsrlq $0x8,%ymm1,%ymm2
  0x00007fb5478352f7: vpsllq $0x38,%ymm1,%ymm1
  0x00007fb5478352fc: vpor   %ymm2,%ymm1,%ymm1
  0x00007fb547835300: vpxor  %ymm8,%ymm3,%ymm3
  0x00007fb547835305: vpxor  %ymm1,%ymm3,%ymm1
  0x00007fb547835309: vpaddq %ymm1,%ymm0,%ymm0
  0x00007fb54783530d: vperm2f128 $0x0,%ymm0,%ymm0,%ymm7
  0x00007fb547835313: vpand  %ymm10,%ymm0,%ymm0
  0x00007fb547835318: vperm2f128 $0x11,%ymm6,%ymm6,%ymm2
  0x00007fb54783531e: vpsrlq $0x6,%ymm2,%ymm8
  0x00007fb547835323: mov    %r8,%rdi
  0x00007fb547835326: rorx   $0x29,%r11,%r13
  0x00007fb54783532c: rorx   $0x12,%r11,%r14
  0x00007fb547835332: add    0x8(%rsp),%rcx
  0x00007fb547835337: or     %r9,%rdi
  0x00007fb54783533a: mov    %rax,%r15
  0x00007fb54783533d: xor    %rbx,%r15
  0x00007fb547835340: rorx   $0x22,%r8,%r12
  0x00007fb547835346: xor    %r14,%r13
  0x00007fb547835349: rorx   $0xe,%r11,%r14
  0x00007fb54783534f: and    %r11,%r15
  0x00007fb547835352: add    %rcx,%r10
  0x00007fb547835355: and    %rdx,%rdi
  0x00007fb547835358: xor    %r14,%r13
  0x00007fb54783535b: rorx   $0x27,%r8,%r14
  0x00007fb547835361: xor    %r12,%r14
  0x00007fb547835364: rorx   $0x1c,%r8,%r12
  0x00007fb54783536a: xor    %rbx,%r15
  0x00007fb54783536d: xor    %r12,%r14
  0x00007fb547835370: mov    %r8,%r12
  0x00007fb547835373: and    %r9,%r12
  0x00007fb547835376: add    %r13,%r15
  0x00007fb547835379: or     %r12,%rdi
  0x00007fb54783537c: add    %r14,%rcx
  0x00007fb54783537f: add    %r15,%r10
  0x00007fb547835382: add    %r15,%rcx
  0x00007fb547835385: add    %rdi,%rcx
  0x00007fb547835388: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb54783538d: vpsllq $0x2d,%ymm2,%ymm1
  0x00007fb547835392: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835396: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb54783539a: vpsrlq $0x3d,%ymm2,%ymm3
  0x00007fb54783539f: vpsllq $0x3,%ymm2,%ymm1
  0x00007fb5478353a4: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb5478353a8: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb5478353ac: vpaddq %ymm8,%ymm7,%ymm7
  0x00007fb5478353b1: vpsrlq $0x6,%ymm7,%ymm8
  0x00007fb5478353b6: mov    %rcx,%rdi
  0x00007fb5478353b9: rorx   $0x29,%r10,%r13
  0x00007fb5478353bf: rorx   $0x12,%r10,%r14
  0x00007fb5478353c5: add    0x10(%rsp),%rbx
  0x00007fb5478353ca: or     %rdx,%rdi
  0x00007fb5478353cd: mov    %r11,%r15
  0x00007fb5478353d0: xor    %rax,%r15
  0x00007fb5478353d3: rorx   $0x22,%rcx,%r12
  0x00007fb5478353d9: xor    %r14,%r13
  0x00007fb5478353dc: rorx   $0xe,%r10,%r14
  0x00007fb5478353e2: and    %r10,%r15
  0x00007fb5478353e5: add    %rbx,%r9
  0x00007fb5478353e8: and    %r8,%rdi
  0x00007fb5478353eb: xor    %r14,%r13
  0x00007fb5478353ee: rorx   $0x27,%rcx,%r14
  0x00007fb5478353f4: xor    %r12,%r14
  0x00007fb5478353f7: rorx   $0x1c,%rcx,%r12
  0x00007fb5478353fd: xor    %rax,%r15
  0x00007fb547835400: xor    %r12,%r14
  0x00007fb547835403: mov    %rcx,%r12
  0x00007fb547835406: and    %rdx,%r12
  0x00007fb547835409: add    %r13,%r15
  0x00007fb54783540c: or     %r12,%rdi
  0x00007fb54783540f: add    %r14,%rbx
  0x00007fb547835412: add    %r15,%r9
  0x00007fb547835415: add    %r15,%rbx
  0x00007fb547835418: add    %rdi,%rbx
  0x00007fb54783541b: vpsrlq $0x13,%ymm7,%ymm3
  0x00007fb547835420: vpsllq $0x2d,%ymm7,%ymm1
  0x00007fb547835425: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835429: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb54783542d: vpsrlq $0x3d,%ymm7,%ymm3
  0x00007fb547835432: vpsllq $0x3,%ymm7,%ymm1
  0x00007fb547835437: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb54783543b: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb54783543f: vpaddq %ymm8,%ymm0,%ymm2
  0x00007fb547835444: vpblendd $0xf0,%ymm2,%ymm7,%ymm7
  0x00007fb54783544a: mov    %rbx,%rdi
  0x00007fb54783544d: rorx   $0x29,%r9,%r13
  0x00007fb547835453: rorx   $0x12,%r9,%r14
  0x00007fb547835459: add    0x18(%rsp),%rax
  0x00007fb54783545e: or     %r8,%rdi
  0x00007fb547835461: mov    %r10,%r15
  0x00007fb547835464: xor    %r11,%r15
  0x00007fb547835467: rorx   $0x22,%rbx,%r12
  0x00007fb54783546d: xor    %r14,%r13
  0x00007fb547835470: rorx   $0xe,%r9,%r14
  0x00007fb547835476: and    %r9,%r15
  0x00007fb547835479: add    %rax,%rdx
  0x00007fb54783547c: and    %rcx,%rdi
  0x00007fb54783547f: xor    %r14,%r13
  0x00007fb547835482: rorx   $0x27,%rbx,%r14
  0x00007fb547835488: xor    %r12,%r14
  0x00007fb54783548b: rorx   $0x1c,%rbx,%r12
  0x00007fb547835491: xor    %r11,%r15
  0x00007fb547835494: xor    %r12,%r14
  0x00007fb547835497: mov    %rbx,%r12
  0x00007fb54783549a: and    %r8,%r12
  0x00007fb54783549d: add    %r13,%r15
  0x00007fb5478354a0: or     %r12,%rdi
  0x00007fb5478354a3: add    %r14,%rax
  0x00007fb5478354a6: add    %r15,%rdx
  0x00007fb5478354a9: add    %r15,%rax
  0x00007fb5478354ac: add    %rdi,%rax
  0x00007fb5478354af: subq   $0x1,0x20(%rsp)
  0x00007fb5478354b5: jne    Stub::sha512_implCompress+192 0x00007fb547834b40
  0x00007fb5478354bb: movq   $0x2,0x20(%rsp)
  0x00007fb5478354c4: vpaddq 0x0(%rbp),%ymm4,%ymm0
  0x00007fb5478354c9: vmovdqu %ymm0,(%rsp)
  0x00007fb5478354ce: mov    %r9,%r15
  0x00007fb5478354d1: rorx   $0x29,%rdx,%r13
  0x00007fb5478354d7: rorx   $0x12,%rdx,%r14
  0x00007fb5478354dd: xor    %r10,%r15
  0x00007fb5478354e0: xor    %r14,%r13
  0x00007fb5478354e3: rorx   $0xe,%rdx,%r14
  0x00007fb5478354e9: and    %rdx,%r15
  0x00007fb5478354ec: xor    %r14,%r13
  0x00007fb5478354ef: rorx   $0x22,%rax,%r12
  0x00007fb5478354f5: xor    %r10,%r15
  0x00007fb5478354f8: rorx   $0x27,%rax,%r14
  0x00007fb5478354fe: mov    %rax,%rdi
  0x00007fb547835501: xor    %r12,%r14
  0x00007fb547835504: rorx   $0x1c,%rax,%r12
  0x00007fb54783550a: add    (%rsp),%r11
  0x00007fb54783550e: or     %rcx,%rdi
  0x00007fb547835511: xor    %r12,%r14
  0x00007fb547835514: mov    %rax,%r12
  0x00007fb547835517: and    %rbx,%rdi
  0x00007fb54783551a: and    %rcx,%r12
  0x00007fb54783551d: add    %r13,%r15
  0x00007fb547835520: add    %r11,%r8
  0x00007fb547835523: or     %r12,%rdi
  0x00007fb547835526: add    %r14,%r11
  0x00007fb547835529: add    %r15,%r8
  0x00007fb54783552c: add    %r15,%r11
  0x00007fb54783552f: mov    %rdx,%r15
  0x00007fb547835532: rorx   $0x29,%r8,%r13
  0x00007fb547835538: rorx   $0x12,%r8,%r14
  0x00007fb54783553e: xor    %r9,%r15
  0x00007fb547835541: xor    %r14,%r13
  0x00007fb547835544: rorx   $0xe,%r8,%r14
  0x00007fb54783554a: and    %r8,%r15
  0x00007fb54783554d: add    %rdi,%r11
  0x00007fb547835550: xor    %r14,%r13
  0x00007fb547835553: rorx   $0x22,%r11,%r12
  0x00007fb547835559: xor    %r9,%r15
  0x00007fb54783555c: rorx   $0x27,%r11,%r14
  0x00007fb547835562: mov    %r11,%rdi
  0x00007fb547835565: xor    %r12,%r14
  0x00007fb547835568: rorx   $0x1c,%r11,%r12
  0x00007fb54783556e: add    0x8(%rsp),%r10
  0x00007fb547835573: or     %rbx,%rdi
  0x00007fb547835576: xor    %r12,%r14
  0x00007fb547835579: mov    %r11,%r12
  0x00007fb54783557c: and    %rax,%rdi
  0x00007fb54783557f: and    %rbx,%r12
  0x00007fb547835582: add    %r13,%r15
  0x00007fb547835585: add    %r10,%rcx
  0x00007fb547835588: or     %r12,%rdi
  0x00007fb54783558b: add    %r14,%r10
  0x00007fb54783558e: add    %r15,%rcx
  0x00007fb547835591: add    %r15,%r10
  0x00007fb547835594: mov    %r8,%r15
  0x00007fb547835597: rorx   $0x29,%rcx,%r13
  0x00007fb54783559d: rorx   $0x12,%rcx,%r14
  0x00007fb5478355a3: xor    %rdx,%r15
  0x00007fb5478355a6: xor    %r14,%r13
  0x00007fb5478355a9: rorx   $0xe,%rcx,%r14
  0x00007fb5478355af: and    %rcx,%r15
  0x00007fb5478355b2: add    %rdi,%r10
  0x00007fb5478355b5: xor    %r14,%r13
  0x00007fb5478355b8: rorx   $0x22,%r10,%r12
  0x00007fb5478355be: xor    %rdx,%r15
  0x00007fb5478355c1: rorx   $0x27,%r10,%r14
  0x00007fb5478355c7: mov    %r10,%rdi
  0x00007fb5478355ca: xor    %r12,%r14
  0x00007fb5478355cd: rorx   $0x1c,%r10,%r12
  0x00007fb5478355d3: add    0x10(%rsp),%r9
  0x00007fb5478355d8: or     %rax,%rdi
  0x00007fb5478355db: xor    %r12,%r14
  0x00007fb5478355de: mov    %r10,%r12
  0x00007fb5478355e1: and    %r11,%rdi
  0x00007fb5478355e4: and    %rax,%r12
  0x00007fb5478355e7: add    %r13,%r15
  0x00007fb5478355ea: add    %r9,%rbx
  0x00007fb5478355ed: or     %r12,%rdi
  0x00007fb5478355f0: add    %r14,%r9
  0x00007fb5478355f3: add    %r15,%rbx
  0x00007fb5478355f6: add    %r15,%r9
  0x00007fb5478355f9: mov    %rcx,%r15
  0x00007fb5478355fc: rorx   $0x29,%rbx,%r13
  0x00007fb547835602: rorx   $0x12,%rbx,%r14
  0x00007fb547835608: xor    %r8,%r15
  0x00007fb54783560b: xor    %r14,%r13
  0x00007fb54783560e: rorx   $0xe,%rbx,%r14
  0x00007fb547835614: and    %rbx,%r15
  0x00007fb547835617: add    %rdi,%r9
  0x00007fb54783561a: xor    %r14,%r13
  0x00007fb54783561d: rorx   $0x22,%r9,%r12
  0x00007fb547835623: xor    %r8,%r15
  0x00007fb547835626: rorx   $0x27,%r9,%r14
  0x00007fb54783562c: mov    %r9,%rdi
  0x00007fb54783562f: xor    %r12,%r14
  0x00007fb547835632: rorx   $0x1c,%r9,%r12
  0x00007fb547835638: add    0x18(%rsp),%rdx
  0x00007fb54783563d: or     %r11,%rdi
  0x00007fb547835640: xor    %r12,%r14
  0x00007fb547835643: mov    %r9,%r12
  0x00007fb547835646: and    %r10,%rdi
  0x00007fb547835649: and    %r11,%r12
  0x00007fb54783564c: add    %r13,%r15
  0x00007fb54783564f: add    %rdx,%rax
  0x00007fb547835652: or     %r12,%rdi
  0x00007fb547835655: add    %r14,%rdx
  0x00007fb547835658: add    %r15,%rax
  0x00007fb54783565b: add    %r15,%rdx
  0x00007fb54783565e: add    %rdi,%rdx
  0x00007fb547835661: vpaddq 0x20(%rbp),%ymm5,%ymm0
  0x00007fb547835666: vmovdqu %ymm0,(%rsp)
  0x00007fb54783566b: add    $0x40,%rbp
  0x00007fb54783566f: mov    %rbx,%r15
  0x00007fb547835672: rorx   $0x29,%rax,%r13
  0x00007fb547835678: rorx   $0x12,%rax,%r14
  0x00007fb54783567e: xor    %rcx,%r15
  0x00007fb547835681: xor    %r14,%r13
  0x00007fb547835684: rorx   $0xe,%rax,%r14
  0x00007fb54783568a: and    %rax,%r15
  0x00007fb54783568d: xor    %r14,%r13
  0x00007fb547835690: rorx   $0x22,%rdx,%r12
  0x00007fb547835696: xor    %rcx,%r15
  0x00007fb547835699: rorx   $0x27,%rdx,%r14
  0x00007fb54783569f: mov    %rdx,%rdi
  0x00007fb5478356a2: xor    %r12,%r14
  0x00007fb5478356a5: rorx   $0x1c,%rdx,%r12
  0x00007fb5478356ab: add    (%rsp),%r8
  0x00007fb5478356af: or     %r10,%rdi
  0x00007fb5478356b2: xor    %r12,%r14
  0x00007fb5478356b5: mov    %rdx,%r12
  0x00007fb5478356b8: and    %r9,%rdi
  0x00007fb5478356bb: and    %r10,%r12
  0x00007fb5478356be: add    %r13,%r15
  0x00007fb5478356c1: add    %r8,%r11
  0x00007fb5478356c4: or     %r12,%rdi
  0x00007fb5478356c7: add    %r14,%r8
  0x00007fb5478356ca: add    %r15,%r11
  0x00007fb5478356cd: add    %r15,%r8
  0x00007fb5478356d0: mov    %rax,%r15
  0x00007fb5478356d3: rorx   $0x29,%r11,%r13
  0x00007fb5478356d9: rorx   $0x12,%r11,%r14
  0x00007fb5478356df: xor    %rbx,%r15
  0x00007fb5478356e2: xor    %r14,%r13
  0x00007fb5478356e5: rorx   $0xe,%r11,%r14
  0x00007fb5478356eb: and    %r11,%r15
  0x00007fb5478356ee: add    %rdi,%r8
  0x00007fb5478356f1: xor    %r14,%r13
  0x00007fb5478356f4: rorx   $0x22,%r8,%r12
  0x00007fb5478356fa: xor    %rbx,%r15
  0x00007fb5478356fd: rorx   $0x27,%r8,%r14
  0x00007fb547835703: mov    %r8,%rdi
  0x00007fb547835706: xor    %r12,%r14
  0x00007fb547835709: rorx   $0x1c,%r8,%r12
  0x00007fb54783570f: add    0x8(%rsp),%rcx
  0x00007fb547835714: or     %r9,%rdi
  0x00007fb547835717: xor    %r12,%r14
  0x00007fb54783571a: mov    %r8,%r12
  0x00007fb54783571d: and    %rdx,%rdi
  0x00007fb547835720: and    %r9,%r12
  0x00007fb547835723: add    %r13,%r15
  0x00007fb547835726: add    %rcx,%r10
  0x00007fb547835729: or     %r12,%rdi
  0x00007fb54783572c: add    %r14,%rcx
  0x00007fb54783572f: add    %r15,%r10
  0x00007fb547835732: add    %r15,%rcx
  0x00007fb547835735: mov    %r11,%r15
  0x00007fb547835738: rorx   $0x29,%r10,%r13
  0x00007fb54783573e: rorx   $0x12,%r10,%r14
  0x00007fb547835744: xor    %rax,%r15
  0x00007fb547835747: xor    %r14,%r13
  0x00007fb54783574a: rorx   $0xe,%r10,%r14
  0x00007fb547835750: and    %r10,%r15
  0x00007fb547835753: add    %rdi,%rcx
  0x00007fb547835756: xor    %r14,%r13
  0x00007fb547835759: rorx   $0x22,%rcx,%r12
  0x00007fb54783575f: xor    %rax,%r15
  0x00007fb547835762: rorx   $0x27,%rcx,%r14
  0x00007fb547835768: mov    %rcx,%rdi
  0x00007fb54783576b: xor    %r12,%r14
  0x00007fb54783576e: rorx   $0x1c,%rcx,%r12
  0x00007fb547835774: add    0x10(%rsp),%rbx
  0x00007fb547835779: or     %rdx,%rdi
  0x00007fb54783577c: xor    %r12,%r14
  0x00007fb54783577f: mov    %rcx,%r12
  0x00007fb547835782: and    %r8,%rdi
  0x00007fb547835785: and    %rdx,%r12
  0x00007fb547835788: add    %r13,%r15
  0x00007fb54783578b: add    %rbx,%r9
  0x00007fb54783578e: or     %r12,%rdi
  0x00007fb547835791: add    %r14,%rbx
  0x00007fb547835794: add    %r15,%r9
  0x00007fb547835797: add    %r15,%rbx
  0x00007fb54783579a: mov    %r10,%r15
  0x00007fb54783579d: rorx   $0x29,%r9,%r13
  0x00007fb5478357a3: rorx   $0x12,%r9,%r14
  0x00007fb5478357a9: xor    %r11,%r15
  0x00007fb5478357ac: xor    %r14,%r13
  0x00007fb5478357af: rorx   $0xe,%r9,%r14
  0x00007fb5478357b5: and    %r9,%r15
  0x00007fb5478357b8: add    %rdi,%rbx
  0x00007fb5478357bb: xor    %r14,%r13
  0x00007fb5478357be: rorx   $0x22,%rbx,%r12
  0x00007fb5478357c4: xor    %r11,%r15
  0x00007fb5478357c7: rorx   $0x27,%rbx,%r14
  0x00007fb5478357cd: mov    %rbx,%rdi
  0x00007fb5478357d0: xor    %r12,%r14
  0x00007fb5478357d3: rorx   $0x1c,%rbx,%r12
  0x00007fb5478357d9: add    0x18(%rsp),%rax
  0x00007fb5478357de: or     %r8,%rdi
  0x00007fb5478357e1: xor    %r12,%r14
  0x00007fb5478357e4: mov    %rbx,%r12
  0x00007fb5478357e7: and    %rcx,%rdi
  0x00007fb5478357ea: and    %r8,%r12
  0x00007fb5478357ed: add    %r13,%r15
  0x00007fb5478357f0: add    %rax,%rdx
  0x00007fb5478357f3: or     %r12,%rdi
  0x00007fb5478357f6: add    %r14,%rax
  0x00007fb5478357f9: add    %r15,%rdx
  0x00007fb5478357fc: add    %r15,%rax
  0x00007fb5478357ff: add    %rdi,%rax
  0x00007fb547835802: vmovdqu %ymm6,%ymm4
  0x00007fb547835806: vmovdqu %ymm7,%ymm5
  0x00007fb54783580a: subq   $0x1,0x20(%rsp)
  0x00007fb547835810: jne    Stub::sha512_implCompress+2628 0x00007fb5478354c4
  0x00007fb547835816: add    (%rsi),%rax
  0x00007fb547835819: mov    %rax,(%rsi)
  0x00007fb54783581c: add    0x8(%rsi),%rbx
  0x00007fb547835820: mov    %rbx,0x8(%rsi)
  0x00007fb547835824: add    0x10(%rsi),%rcx
  0x00007fb547835828: mov    %rcx,0x10(%rsi)
  0x00007fb54783582c: add    0x18(%rsi),%r8
  0x00007fb547835830: mov    %r8,0x18(%rsi)
  0x00007fb547835834: add    0x20(%rsi),%rdx
  0x00007fb547835838: mov    %rdx,0x20(%rsi)
  0x00007fb54783583c: add    0x28(%rsi),%r9
  0x00007fb547835840: mov    %r9,0x28(%rsi)
  0x00007fb547835844: add    0x30(%rsi),%r10
  0x00007fb547835848: mov    %r10,0x30(%rsi)
  0x00007fb54783584c: add    0x38(%rsi),%r11
  0x00007fb547835850: mov    %r11,0x38(%rsi)
  0x00007fb547835854: mov    0x28(%rsp),%rdi
  0x00007fb547835859: add    $0x80,%rdi
  0x00007fb547835860: cmp    0x30(%rsp),%rdi
  0x00007fb547835865: jne    Stub::sha512_implCompress+129 0x00007fb547834b01
  0x00007fb54783586b: mov    0x40(%rsp),%rbp
  0x00007fb547835870: mov    0x48(%rsp),%rbx
  0x00007fb547835875: mov    0x50(%rsp),%r12
  0x00007fb54783587a: mov    0x58(%rsp),%r13
  0x00007fb54783587f: mov    0x60(%rsp),%r14
  0x00007fb547835884: mov    0x68(%rsp),%r15
  0x00007fb547835889: mov    0x38(%rsp),%rsp
  0x00007fb54783588e: pop    %rcx
  0x00007fb54783588f: pop    %rdx
  0x00007fb547835890: vzeroupper 
  0x00007fb547835893: leaveq 
  0x00007fb547835894: retq   

StubRoutines::sha512_implCompressMB [0x00007fb5478358a0, 0x00007fb5478366e6[ (3654 bytes)
  0x00007fb5478358a0: push   %rbp
  0x00007fb5478358a1: mov    %rsp,%rbp
  0x00007fb5478358a4: push   %rdx
  0x00007fb5478358a5: push   %rcx
  0x00007fb5478358a6: mov    %rsp,%rax
  0x00007fb5478358a9: sub    $0x70,%rsp
  0x00007fb5478358ad: and    $0xffffffffffffffe0,%rsp
  0x00007fb5478358b1: mov    %rax,0x38(%rsp)
  0x00007fb5478358b6: mov    %rbp,0x40(%rsp)
  0x00007fb5478358bb: mov    %rbx,0x48(%rsp)
  0x00007fb5478358c0: mov    %r12,0x50(%rsp)
  0x00007fb5478358c5: mov    %r13,0x58(%rsp)
  0x00007fb5478358ca: mov    %r14,0x60(%rsp)
  0x00007fb5478358cf: mov    %r15,0x68(%rsp)
  0x00007fb5478358d4: vpblendd $0xf0,%xmm1,%xmm0,%xmm0
  0x00007fb5478358da: vpblendd $0xf0,%ymm1,%ymm0,%ymm0
  0x00007fb5478358e0: xor    %rax,%rax
  0x00007fb5478358e3: cmp    %rcx,%rdx
  0x00007fb5478358e6: jae    Stub::sha512_implCompressMB+88 0x00007fb5478358f8
  0x00007fb5478358e8: add    $0x80,%rdx
  0x00007fb5478358ef: add    $0x80,%rax
  0x00007fb5478358f6: jmp    Stub::sha512_implCompressMB+67 0x00007fb5478358e3
  0x00007fb5478358f8: mov    %rax,%rdx
  0x00007fb5478358fb: cmp    $0x0,%rdx
  0x00007fb5478358ff: je     Stub::sha512_implCompressMB+3595 0x00007fb5478366ab
  0x00007fb547835905: add    %rdi,%rdx
  0x00007fb547835908: mov    %rdx,0x30(%rsp)
  0x00007fb54783590d: mov    (%rsi),%rax
  0x00007fb547835910: mov    0x8(%rsi),%rbx
  0x00007fb547835914: mov    0x10(%rsi),%rcx
  0x00007fb547835918: mov    0x18(%rsi),%r8
  0x00007fb54783591c: mov    0x20(%rsi),%rdx
  0x00007fb547835920: mov    0x28(%rsi),%r9
  0x00007fb547835924: mov    0x38(%rsi),%r11
  0x00007fb547835928: vmovdqu -0xef0(%rip),%ymm9        # Stub::pshuffle_byte_flip_mask_sha512
  0x00007fb547835930: vmovdqu -0xed8(%rip),%ymm10        # Stub::pshuffle_byte_flip_mask_sha512+32 0x00007fb547834a60
  0x00007fb547835938: mov    0x30(%rsi),%r10
  0x00007fb54783593c: movabs $0x7fb56595bb40,%rbp
  0x00007fb547835946: vmovdqu (%rdi),%ymm4
  0x00007fb54783594a: vpshufb %ymm9,%ymm4,%ymm4
  0x00007fb54783594f: vmovdqu 0x20(%rdi),%ymm5
  0x00007fb547835954: vpshufb %ymm9,%ymm5,%ymm5
  0x00007fb547835959: vmovdqu 0x40(%rdi),%ymm6
  0x00007fb54783595e: vpshufb %ymm9,%ymm6,%ymm6
  0x00007fb547835963: vmovdqu 0x60(%rdi),%ymm7
  0x00007fb547835968: vpshufb %ymm9,%ymm7,%ymm7
  0x00007fb54783596d: mov    %rdi,0x28(%rsp)
  0x00007fb547835972: movq   $0x4,0x20(%rsp)
  0x00007fb54783597b: nopl   0x0(%rax,%rax,1)
  0x00007fb547835980: vpaddq 0x0(%rbp),%ymm4,%ymm0
  0x00007fb547835985: vmovdqu %ymm0,(%rsp)
  0x00007fb54783598a: vperm2f128 $0x3,%ymm6,%ymm7,%ymm0
  0x00007fb547835990: vpalignr $0x8,%ymm6,%ymm0,%ymm0
  0x00007fb547835996: vpaddq %ymm4,%ymm0,%ymm0
  0x00007fb54783599a: vperm2f128 $0x3,%ymm4,%ymm5,%ymm1
  0x00007fb5478359a0: vpalignr $0x8,%ymm4,%ymm1,%ymm1
  0x00007fb5478359a6: vpsrlq $0x1,%ymm1,%ymm2
  0x00007fb5478359ab: vpsllq $0x3f,%ymm1,%ymm3
  0x00007fb5478359b0: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb5478359b4: vpsrlq $0x7,%ymm1,%ymm8
  0x00007fb5478359b9: mov    %rax,%rdi
  0x00007fb5478359bc: rorx   $0x29,%rdx,%r13
  0x00007fb5478359c2: rorx   $0x12,%rdx,%r14
  0x00007fb5478359c8: add    (%rsp),%r11
  0x00007fb5478359cc: or     %rcx,%rdi
  0x00007fb5478359cf: mov    %r9,%r15
  0x00007fb5478359d2: xor    %r10,%r15
  0x00007fb5478359d5: rorx   $0x22,%rax,%r12
  0x00007fb5478359db: xor    %r14,%r13
  0x00007fb5478359de: rorx   $0xe,%rdx,%r14
  0x00007fb5478359e4: and    %rdx,%r15
  0x00007fb5478359e7: add    %r11,%r8
  0x00007fb5478359ea: and    %rbx,%rdi
  0x00007fb5478359ed: xor    %r14,%r13
  0x00007fb5478359f0: rorx   $0x27,%rax,%r14
  0x00007fb5478359f6: xor    %r12,%r14
  0x00007fb5478359f9: rorx   $0x1c,%rax,%r12
  0x00007fb5478359ff: xor    %r10,%r15
  0x00007fb547835a02: xor    %r12,%r14
  0x00007fb547835a05: mov    %rax,%r12
  0x00007fb547835a08: and    %rcx,%r12
  0x00007fb547835a0b: add    %r13,%r15
  0x00007fb547835a0e: or     %r12,%rdi
  0x00007fb547835a11: add    %r14,%r11
  0x00007fb547835a14: add    %r15,%r8
  0x00007fb547835a17: add    %r15,%r11
  0x00007fb547835a1a: add    %rdi,%r11
  0x00007fb547835a1d: vpsrlq $0x8,%ymm1,%ymm2
  0x00007fb547835a22: vpsllq $0x38,%ymm1,%ymm1
  0x00007fb547835a27: vpor   %ymm2,%ymm1,%ymm1
  0x00007fb547835a2b: vpxor  %ymm8,%ymm3,%ymm3
  0x00007fb547835a30: vpxor  %ymm1,%ymm3,%ymm1
  0x00007fb547835a34: vpaddq %ymm1,%ymm0,%ymm0
  0x00007fb547835a38: vperm2f128 $0x0,%ymm0,%ymm0,%ymm4
  0x00007fb547835a3e: vpand  %ymm10,%ymm0,%ymm0
  0x00007fb547835a43: vperm2f128 $0x11,%ymm7,%ymm7,%ymm2
  0x00007fb547835a49: vpsrlq $0x6,%ymm2,%ymm8
  0x00007fb547835a4e: mov    %r11,%rdi
  0x00007fb547835a51: rorx   $0x29,%r8,%r13
  0x00007fb547835a57: rorx   $0x12,%r8,%r14
  0x00007fb547835a5d: add    0x8(%rsp),%r10
  0x00007fb547835a62: or     %rbx,%rdi
  0x00007fb547835a65: mov    %rdx,%r15
  0x00007fb547835a68: xor    %r9,%r15
  0x00007fb547835a6b: rorx   $0x22,%r11,%r12
  0x00007fb547835a71: xor    %r14,%r13
  0x00007fb547835a74: rorx   $0xe,%r8,%r14
  0x00007fb547835a7a: and    %r8,%r15
  0x00007fb547835a7d: add    %r10,%rcx
  0x00007fb547835a80: and    %rax,%rdi
  0x00007fb547835a83: xor    %r14,%r13
  0x00007fb547835a86: rorx   $0x27,%r11,%r14
  0x00007fb547835a8c: xor    %r12,%r14
  0x00007fb547835a8f: rorx   $0x1c,%r11,%r12
  0x00007fb547835a95: xor    %r9,%r15
  0x00007fb547835a98: xor    %r12,%r14
  0x00007fb547835a9b: mov    %r11,%r12
  0x00007fb547835a9e: and    %rbx,%r12
  0x00007fb547835aa1: add    %r13,%r15
  0x00007fb547835aa4: or     %r12,%rdi
  0x00007fb547835aa7: add    %r14,%r10
  0x00007fb547835aaa: add    %r15,%rcx
  0x00007fb547835aad: add    %r15,%r10
  0x00007fb547835ab0: add    %rdi,%r10
  0x00007fb547835ab3: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547835ab8: vpsllq $0x2d,%ymm2,%ymm1
  0x00007fb547835abd: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835ac1: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835ac5: vpsrlq $0x3d,%ymm2,%ymm3
  0x00007fb547835aca: vpsllq $0x3,%ymm2,%ymm1
  0x00007fb547835acf: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835ad3: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835ad7: vpaddq %ymm8,%ymm4,%ymm4
  0x00007fb547835adc: vpsrlq $0x6,%ymm4,%ymm8
  0x00007fb547835ae1: mov    %r10,%rdi
  0x00007fb547835ae4: rorx   $0x29,%rcx,%r13
  0x00007fb547835aea: rorx   $0x12,%rcx,%r14
  0x00007fb547835af0: add    0x10(%rsp),%r9
  0x00007fb547835af5: or     %rax,%rdi
  0x00007fb547835af8: mov    %r8,%r15
  0x00007fb547835afb: xor    %rdx,%r15
  0x00007fb547835afe: rorx   $0x22,%r10,%r12
  0x00007fb547835b04: xor    %r14,%r13
  0x00007fb547835b07: rorx   $0xe,%rcx,%r14
  0x00007fb547835b0d: and    %rcx,%r15
  0x00007fb547835b10: add    %r9,%rbx
  0x00007fb547835b13: and    %r11,%rdi
  0x00007fb547835b16: xor    %r14,%r13
  0x00007fb547835b19: rorx   $0x27,%r10,%r14
  0x00007fb547835b1f: xor    %r12,%r14
  0x00007fb547835b22: rorx   $0x1c,%r10,%r12
  0x00007fb547835b28: xor    %rdx,%r15
  0x00007fb547835b2b: xor    %r12,%r14
  0x00007fb547835b2e: mov    %r10,%r12
  0x00007fb547835b31: and    %rax,%r12
  0x00007fb547835b34: add    %r13,%r15
  0x00007fb547835b37: or     %r12,%rdi
  0x00007fb547835b3a: add    %r14,%r9
  0x00007fb547835b3d: add    %r15,%rbx
  0x00007fb547835b40: add    %r15,%r9
  0x00007fb547835b43: add    %rdi,%r9
  0x00007fb547835b46: vpsrlq $0x13,%ymm4,%ymm3
  0x00007fb547835b4b: vpsllq $0x2d,%ymm4,%ymm1
  0x00007fb547835b50: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835b54: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835b58: vpsrlq $0x3d,%ymm4,%ymm3
  0x00007fb547835b5d: vpsllq $0x3,%ymm4,%ymm1
  0x00007fb547835b62: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835b66: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835b6a: vpaddq %ymm8,%ymm0,%ymm2
  0x00007fb547835b6f: vpblendd $0xf0,%ymm2,%ymm4,%ymm4
  0x00007fb547835b75: mov    %r9,%rdi
  0x00007fb547835b78: rorx   $0x29,%rbx,%r13
  0x00007fb547835b7e: rorx   $0x12,%rbx,%r14
  0x00007fb547835b84: add    0x18(%rsp),%rdx
  0x00007fb547835b89: or     %r11,%rdi
  0x00007fb547835b8c: mov    %rcx,%r15
  0x00007fb547835b8f: xor    %r8,%r15
  0x00007fb547835b92: rorx   $0x22,%r9,%r12
  0x00007fb547835b98: xor    %r14,%r13
  0x00007fb547835b9b: rorx   $0xe,%rbx,%r14
  0x00007fb547835ba1: and    %rbx,%r15
  0x00007fb547835ba4: add    %rdx,%rax
  0x00007fb547835ba7: and    %r10,%rdi
  0x00007fb547835baa: xor    %r14,%r13
  0x00007fb547835bad: rorx   $0x27,%r9,%r14
  0x00007fb547835bb3: xor    %r12,%r14
  0x00007fb547835bb6: rorx   $0x1c,%r9,%r12
  0x00007fb547835bbc: xor    %r8,%r15
  0x00007fb547835bbf: xor    %r12,%r14
  0x00007fb547835bc2: mov    %r9,%r12
  0x00007fb547835bc5: and    %r11,%r12
  0x00007fb547835bc8: add    %r13,%r15
  0x00007fb547835bcb: or     %r12,%rdi
  0x00007fb547835bce: add    %r14,%rdx
  0x00007fb547835bd1: add    %r15,%rax
  0x00007fb547835bd4: add    %r15,%rdx
  0x00007fb547835bd7: add    %rdi,%rdx
  0x00007fb547835bda: vpaddq 0x20(%rbp),%ymm5,%ymm0
  0x00007fb547835bdf: vmovdqu %ymm0,(%rsp)
  0x00007fb547835be4: vperm2f128 $0x3,%ymm7,%ymm4,%ymm0
  0x00007fb547835bea: vpalignr $0x8,%ymm7,%ymm0,%ymm0
  0x00007fb547835bf0: vpaddq %ymm5,%ymm0,%ymm0
  0x00007fb547835bf4: vperm2f128 $0x3,%ymm5,%ymm6,%ymm1
  0x00007fb547835bfa: vpalignr $0x8,%ymm5,%ymm1,%ymm1
  0x00007fb547835c00: vpsrlq $0x1,%ymm1,%ymm2
  0x00007fb547835c05: vpsllq $0x3f,%ymm1,%ymm3
  0x00007fb547835c0a: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547835c0e: vpsrlq $0x7,%ymm1,%ymm8
  0x00007fb547835c13: mov    %rdx,%rdi
  0x00007fb547835c16: rorx   $0x29,%rax,%r13
  0x00007fb547835c1c: rorx   $0x12,%rax,%r14
  0x00007fb547835c22: add    (%rsp),%r8
  0x00007fb547835c26: or     %r10,%rdi
  0x00007fb547835c29: mov    %rbx,%r15
  0x00007fb547835c2c: xor    %rcx,%r15
  0x00007fb547835c2f: rorx   $0x22,%rdx,%r12
  0x00007fb547835c35: xor    %r14,%r13
  0x00007fb547835c38: rorx   $0xe,%rax,%r14
  0x00007fb547835c3e: and    %rax,%r15
  0x00007fb547835c41: add    %r8,%r11
  0x00007fb547835c44: and    %r9,%rdi
  0x00007fb547835c47: xor    %r14,%r13
  0x00007fb547835c4a: rorx   $0x27,%rdx,%r14
  0x00007fb547835c50: xor    %r12,%r14
  0x00007fb547835c53: rorx   $0x1c,%rdx,%r12
  0x00007fb547835c59: xor    %rcx,%r15
  0x00007fb547835c5c: xor    %r12,%r14
  0x00007fb547835c5f: mov    %rdx,%r12
  0x00007fb547835c62: and    %r10,%r12
  0x00007fb547835c65: add    %r13,%r15
  0x00007fb547835c68: or     %r12,%rdi
  0x00007fb547835c6b: add    %r14,%r8
  0x00007fb547835c6e: add    %r15,%r11
  0x00007fb547835c71: add    %r15,%r8
  0x00007fb547835c74: add    %rdi,%r8
  0x00007fb547835c77: vpsrlq $0x8,%ymm1,%ymm2
  0x00007fb547835c7c: vpsllq $0x38,%ymm1,%ymm1
  0x00007fb547835c81: vpor   %ymm2,%ymm1,%ymm1
  0x00007fb547835c85: vpxor  %ymm8,%ymm3,%ymm3
  0x00007fb547835c8a: vpxor  %ymm1,%ymm3,%ymm1
  0x00007fb547835c8e: vpaddq %ymm1,%ymm0,%ymm0
  0x00007fb547835c92: vperm2f128 $0x0,%ymm0,%ymm0,%ymm5
  0x00007fb547835c98: vpand  %ymm10,%ymm0,%ymm0
  0x00007fb547835c9d: vperm2f128 $0x11,%ymm4,%ymm4,%ymm2
  0x00007fb547835ca3: vpsrlq $0x6,%ymm2,%ymm8
  0x00007fb547835ca8: mov    %r8,%rdi
  0x00007fb547835cab: rorx   $0x29,%r11,%r13
  0x00007fb547835cb1: rorx   $0x12,%r11,%r14
  0x00007fb547835cb7: add    0x8(%rsp),%rcx
  0x00007fb547835cbc: or     %r9,%rdi
  0x00007fb547835cbf: mov    %rax,%r15
  0x00007fb547835cc2: xor    %rbx,%r15
  0x00007fb547835cc5: rorx   $0x22,%r8,%r12
  0x00007fb547835ccb: xor    %r14,%r13
  0x00007fb547835cce: rorx   $0xe,%r11,%r14
  0x00007fb547835cd4: and    %r11,%r15
  0x00007fb547835cd7: add    %rcx,%r10
  0x00007fb547835cda: and    %rdx,%rdi
  0x00007fb547835cdd: xor    %r14,%r13
  0x00007fb547835ce0: rorx   $0x27,%r8,%r14
  0x00007fb547835ce6: xor    %r12,%r14
  0x00007fb547835ce9: rorx   $0x1c,%r8,%r12
  0x00007fb547835cef: xor    %rbx,%r15
  0x00007fb547835cf2: xor    %r12,%r14
  0x00007fb547835cf5: mov    %r8,%r12
  0x00007fb547835cf8: and    %r9,%r12
  0x00007fb547835cfb: add    %r13,%r15
  0x00007fb547835cfe: or     %r12,%rdi
  0x00007fb547835d01: add    %r14,%rcx
  0x00007fb547835d04: add    %r15,%r10
  0x00007fb547835d07: add    %r15,%rcx
  0x00007fb547835d0a: add    %rdi,%rcx
  0x00007fb547835d0d: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547835d12: vpsllq $0x2d,%ymm2,%ymm1
  0x00007fb547835d17: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835d1b: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835d1f: vpsrlq $0x3d,%ymm2,%ymm3
  0x00007fb547835d24: vpsllq $0x3,%ymm2,%ymm1
  0x00007fb547835d29: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835d2d: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835d31: vpaddq %ymm8,%ymm5,%ymm5
  0x00007fb547835d36: vpsrlq $0x6,%ymm5,%ymm8
  0x00007fb547835d3b: mov    %rcx,%rdi
  0x00007fb547835d3e: rorx   $0x29,%r10,%r13
  0x00007fb547835d44: rorx   $0x12,%r10,%r14
  0x00007fb547835d4a: add    0x10(%rsp),%rbx
  0x00007fb547835d4f: or     %rdx,%rdi
  0x00007fb547835d52: mov    %r11,%r15
  0x00007fb547835d55: xor    %rax,%r15
  0x00007fb547835d58: rorx   $0x22,%rcx,%r12
  0x00007fb547835d5e: xor    %r14,%r13
  0x00007fb547835d61: rorx   $0xe,%r10,%r14
  0x00007fb547835d67: and    %r10,%r15
  0x00007fb547835d6a: add    %rbx,%r9
  0x00007fb547835d6d: and    %r8,%rdi
  0x00007fb547835d70: xor    %r14,%r13
  0x00007fb547835d73: rorx   $0x27,%rcx,%r14
  0x00007fb547835d79: xor    %r12,%r14
  0x00007fb547835d7c: rorx   $0x1c,%rcx,%r12
  0x00007fb547835d82: xor    %rax,%r15
  0x00007fb547835d85: xor    %r12,%r14
  0x00007fb547835d88: mov    %rcx,%r12
  0x00007fb547835d8b: and    %rdx,%r12
  0x00007fb547835d8e: add    %r13,%r15
  0x00007fb547835d91: or     %r12,%rdi
  0x00007fb547835d94: add    %r14,%rbx
  0x00007fb547835d97: add    %r15,%r9
  0x00007fb547835d9a: add    %r15,%rbx
  0x00007fb547835d9d: add    %rdi,%rbx
  0x00007fb547835da0: vpsrlq $0x13,%ymm5,%ymm3
  0x00007fb547835da5: vpsllq $0x2d,%ymm5,%ymm1
  0x00007fb547835daa: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835dae: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835db2: vpsrlq $0x3d,%ymm5,%ymm3
  0x00007fb547835db7: vpsllq $0x3,%ymm5,%ymm1
  0x00007fb547835dbc: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835dc0: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835dc4: vpaddq %ymm8,%ymm0,%ymm2
  0x00007fb547835dc9: vpblendd $0xf0,%ymm2,%ymm5,%ymm5
  0x00007fb547835dcf: mov    %rbx,%rdi
  0x00007fb547835dd2: rorx   $0x29,%r9,%r13
  0x00007fb547835dd8: rorx   $0x12,%r9,%r14
  0x00007fb547835dde: add    0x18(%rsp),%rax
  0x00007fb547835de3: or     %r8,%rdi
  0x00007fb547835de6: mov    %r10,%r15
  0x00007fb547835de9: xor    %r11,%r15
  0x00007fb547835dec: rorx   $0x22,%rbx,%r12
  0x00007fb547835df2: xor    %r14,%r13
  0x00007fb547835df5: rorx   $0xe,%r9,%r14
  0x00007fb547835dfb: and    %r9,%r15
  0x00007fb547835dfe: add    %rax,%rdx
  0x00007fb547835e01: and    %rcx,%rdi
  0x00007fb547835e04: xor    %r14,%r13
  0x00007fb547835e07: rorx   $0x27,%rbx,%r14
  0x00007fb547835e0d: xor    %r12,%r14
  0x00007fb547835e10: rorx   $0x1c,%rbx,%r12
  0x00007fb547835e16: xor    %r11,%r15
  0x00007fb547835e19: xor    %r12,%r14
  0x00007fb547835e1c: mov    %rbx,%r12
  0x00007fb547835e1f: and    %r8,%r12
  0x00007fb547835e22: add    %r13,%r15
  0x00007fb547835e25: or     %r12,%rdi
  0x00007fb547835e28: add    %r14,%rax
  0x00007fb547835e2b: add    %r15,%rdx
  0x00007fb547835e2e: add    %r15,%rax
  0x00007fb547835e31: add    %rdi,%rax
  0x00007fb547835e34: vpaddq 0x40(%rbp),%ymm6,%ymm0
  0x00007fb547835e39: vmovdqu %ymm0,(%rsp)
  0x00007fb547835e3e: vperm2f128 $0x3,%ymm4,%ymm5,%ymm0
  0x00007fb547835e44: vpalignr $0x8,%ymm4,%ymm0,%ymm0
  0x00007fb547835e4a: vpaddq %ymm6,%ymm0,%ymm0
  0x00007fb547835e4e: vperm2f128 $0x3,%ymm6,%ymm7,%ymm1
  0x00007fb547835e54: vpalignr $0x8,%ymm6,%ymm1,%ymm1
  0x00007fb547835e5a: vpsrlq $0x1,%ymm1,%ymm2
  0x00007fb547835e5f: vpsllq $0x3f,%ymm1,%ymm3
  0x00007fb547835e64: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb547835e68: vpsrlq $0x7,%ymm1,%ymm8
  0x00007fb547835e6d: mov    %rax,%rdi
  0x00007fb547835e70: rorx   $0x29,%rdx,%r13
  0x00007fb547835e76: rorx   $0x12,%rdx,%r14
  0x00007fb547835e7c: add    (%rsp),%r11
  0x00007fb547835e80: or     %rcx,%rdi
  0x00007fb547835e83: mov    %r9,%r15
  0x00007fb547835e86: xor    %r10,%r15
  0x00007fb547835e89: rorx   $0x22,%rax,%r12
  0x00007fb547835e8f: xor    %r14,%r13
  0x00007fb547835e92: rorx   $0xe,%rdx,%r14
  0x00007fb547835e98: and    %rdx,%r15
  0x00007fb547835e9b: add    %r11,%r8
  0x00007fb547835e9e: and    %rbx,%rdi
  0x00007fb547835ea1: xor    %r14,%r13
  0x00007fb547835ea4: rorx   $0x27,%rax,%r14
  0x00007fb547835eaa: xor    %r12,%r14
  0x00007fb547835ead: rorx   $0x1c,%rax,%r12
  0x00007fb547835eb3: xor    %r10,%r15
  0x00007fb547835eb6: xor    %r12,%r14
  0x00007fb547835eb9: mov    %rax,%r12
  0x00007fb547835ebc: and    %rcx,%r12
  0x00007fb547835ebf: add    %r13,%r15
  0x00007fb547835ec2: or     %r12,%rdi
  0x00007fb547835ec5: add    %r14,%r11
  0x00007fb547835ec8: add    %r15,%r8
  0x00007fb547835ecb: add    %r15,%r11
  0x00007fb547835ece: add    %rdi,%r11
  0x00007fb547835ed1: vpsrlq $0x8,%ymm1,%ymm2
  0x00007fb547835ed6: vpsllq $0x38,%ymm1,%ymm1
  0x00007fb547835edb: vpor   %ymm2,%ymm1,%ymm1
  0x00007fb547835edf: vpxor  %ymm8,%ymm3,%ymm3
  0x00007fb547835ee4: vpxor  %ymm1,%ymm3,%ymm1
  0x00007fb547835ee8: vpaddq %ymm1,%ymm0,%ymm0
  0x00007fb547835eec: vperm2f128 $0x0,%ymm0,%ymm0,%ymm6
  0x00007fb547835ef2: vpand  %ymm10,%ymm0,%ymm0
  0x00007fb547835ef7: vperm2f128 $0x11,%ymm5,%ymm5,%ymm2
  0x00007fb547835efd: vpsrlq $0x6,%ymm2,%ymm8
  0x00007fb547835f02: mov    %r11,%rdi
  0x00007fb547835f05: rorx   $0x29,%r8,%r13
  0x00007fb547835f0b: rorx   $0x12,%r8,%r14
  0x00007fb547835f11: add    0x8(%rsp),%r10
  0x00007fb547835f16: or     %rbx,%rdi
  0x00007fb547835f19: mov    %rdx,%r15
  0x00007fb547835f1c: xor    %r9,%r15
  0x00007fb547835f1f: rorx   $0x22,%r11,%r12
  0x00007fb547835f25: xor    %r14,%r13
  0x00007fb547835f28: rorx   $0xe,%r8,%r14
  0x00007fb547835f2e: and    %r8,%r15
  0x00007fb547835f31: add    %r10,%rcx
  0x00007fb547835f34: and    %rax,%rdi
  0x00007fb547835f37: xor    %r14,%r13
  0x00007fb547835f3a: rorx   $0x27,%r11,%r14
  0x00007fb547835f40: xor    %r12,%r14
  0x00007fb547835f43: rorx   $0x1c,%r11,%r12
  0x00007fb547835f49: xor    %r9,%r15
  0x00007fb547835f4c: xor    %r12,%r14
  0x00007fb547835f4f: mov    %r11,%r12
  0x00007fb547835f52: and    %rbx,%r12
  0x00007fb547835f55: add    %r13,%r15
  0x00007fb547835f58: or     %r12,%rdi
  0x00007fb547835f5b: add    %r14,%r10
  0x00007fb547835f5e: add    %r15,%rcx
  0x00007fb547835f61: add    %r15,%r10
  0x00007fb547835f64: add    %rdi,%r10
  0x00007fb547835f67: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb547835f6c: vpsllq $0x2d,%ymm2,%ymm1
  0x00007fb547835f71: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835f75: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835f79: vpsrlq $0x3d,%ymm2,%ymm3
  0x00007fb547835f7e: vpsllq $0x3,%ymm2,%ymm1
  0x00007fb547835f83: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547835f87: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb547835f8b: vpaddq %ymm8,%ymm6,%ymm6
  0x00007fb547835f90: vpsrlq $0x6,%ymm6,%ymm8
  0x00007fb547835f95: mov    %r10,%rdi
  0x00007fb547835f98: rorx   $0x29,%rcx,%r13
  0x00007fb547835f9e: rorx   $0x12,%rcx,%r14
  0x00007fb547835fa4: add    0x10(%rsp),%r9
  0x00007fb547835fa9: or     %rax,%rdi
  0x00007fb547835fac: mov    %r8,%r15
  0x00007fb547835faf: xor    %rdx,%r15
  0x00007fb547835fb2: rorx   $0x22,%r10,%r12
  0x00007fb547835fb8: xor    %r14,%r13
  0x00007fb547835fbb: rorx   $0xe,%rcx,%r14
  0x00007fb547835fc1: and    %rcx,%r15
  0x00007fb547835fc4: add    %r9,%rbx
  0x00007fb547835fc7: and    %r11,%rdi
  0x00007fb547835fca: xor    %r14,%r13
  0x00007fb547835fcd: rorx   $0x27,%r10,%r14
  0x00007fb547835fd3: xor    %r12,%r14
  0x00007fb547835fd6: rorx   $0x1c,%r10,%r12
  0x00007fb547835fdc: xor    %rdx,%r15
  0x00007fb547835fdf: xor    %r12,%r14
  0x00007fb547835fe2: mov    %r10,%r12
  0x00007fb547835fe5: and    %rax,%r12
  0x00007fb547835fe8: add    %r13,%r15
  0x00007fb547835feb: or     %r12,%rdi
  0x00007fb547835fee: add    %r14,%r9
  0x00007fb547835ff1: add    %r15,%rbx
  0x00007fb547835ff4: add    %r15,%r9
  0x00007fb547835ff7: add    %rdi,%r9
  0x00007fb547835ffa: vpsrlq $0x13,%ymm6,%ymm3
  0x00007fb547835fff: vpsllq $0x2d,%ymm6,%ymm1
  0x00007fb547836004: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547836008: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb54783600c: vpsrlq $0x3d,%ymm6,%ymm3
  0x00007fb547836011: vpsllq $0x3,%ymm6,%ymm1
  0x00007fb547836016: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb54783601a: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb54783601e: vpaddq %ymm8,%ymm0,%ymm2
  0x00007fb547836023: vpblendd $0xf0,%ymm2,%ymm6,%ymm6
  0x00007fb547836029: mov    %r9,%rdi
  0x00007fb54783602c: rorx   $0x29,%rbx,%r13
  0x00007fb547836032: rorx   $0x12,%rbx,%r14
  0x00007fb547836038: add    0x18(%rsp),%rdx
  0x00007fb54783603d: or     %r11,%rdi
  0x00007fb547836040: mov    %rcx,%r15
  0x00007fb547836043: xor    %r8,%r15
  0x00007fb547836046: rorx   $0x22,%r9,%r12
  0x00007fb54783604c: xor    %r14,%r13
  0x00007fb54783604f: rorx   $0xe,%rbx,%r14
  0x00007fb547836055: and    %rbx,%r15
  0x00007fb547836058: add    %rdx,%rax
  0x00007fb54783605b: and    %r10,%rdi
  0x00007fb54783605e: xor    %r14,%r13
  0x00007fb547836061: rorx   $0x27,%r9,%r14
  0x00007fb547836067: xor    %r12,%r14
  0x00007fb54783606a: rorx   $0x1c,%r9,%r12
  0x00007fb547836070: xor    %r8,%r15
  0x00007fb547836073: xor    %r12,%r14
  0x00007fb547836076: mov    %r9,%r12
  0x00007fb547836079: and    %r11,%r12
  0x00007fb54783607c: add    %r13,%r15
  0x00007fb54783607f: or     %r12,%rdi
  0x00007fb547836082: add    %r14,%rdx
  0x00007fb547836085: add    %r15,%rax
  0x00007fb547836088: add    %r15,%rdx
  0x00007fb54783608b: add    %rdi,%rdx
  0x00007fb54783608e: vpaddq 0x60(%rbp),%ymm7,%ymm0
  0x00007fb547836093: vmovdqu %ymm0,(%rsp)
  0x00007fb547836098: add    $0x80,%rbp
  0x00007fb54783609f: vperm2f128 $0x3,%ymm5,%ymm6,%ymm0
  0x00007fb5478360a5: vpalignr $0x8,%ymm5,%ymm0,%ymm0
  0x00007fb5478360ab: vpaddq %ymm7,%ymm0,%ymm0
  0x00007fb5478360af: vperm2f128 $0x3,%ymm7,%ymm4,%ymm1
  0x00007fb5478360b5: vpalignr $0x8,%ymm7,%ymm1,%ymm1
  0x00007fb5478360bb: vpsrlq $0x1,%ymm1,%ymm2
  0x00007fb5478360c0: vpsllq $0x3f,%ymm1,%ymm3
  0x00007fb5478360c5: vpor   %ymm2,%ymm3,%ymm3
  0x00007fb5478360c9: vpsrlq $0x7,%ymm1,%ymm8
  0x00007fb5478360ce: mov    %rdx,%rdi
  0x00007fb5478360d1: rorx   $0x29,%rax,%r13
  0x00007fb5478360d7: rorx   $0x12,%rax,%r14
  0x00007fb5478360dd: add    (%rsp),%r8
  0x00007fb5478360e1: or     %r10,%rdi
  0x00007fb5478360e4: mov    %rbx,%r15
  0x00007fb5478360e7: xor    %rcx,%r15
  0x00007fb5478360ea: rorx   $0x22,%rdx,%r12
  0x00007fb5478360f0: xor    %r14,%r13
  0x00007fb5478360f3: rorx   $0xe,%rax,%r14
  0x00007fb5478360f9: and    %rax,%r15
  0x00007fb5478360fc: add    %r8,%r11
  0x00007fb5478360ff: and    %r9,%rdi
  0x00007fb547836102: xor    %r14,%r13
  0x00007fb547836105: rorx   $0x27,%rdx,%r14
  0x00007fb54783610b: xor    %r12,%r14
  0x00007fb54783610e: rorx   $0x1c,%rdx,%r12
  0x00007fb547836114: xor    %rcx,%r15
  0x00007fb547836117: xor    %r12,%r14
  0x00007fb54783611a: mov    %rdx,%r12
  0x00007fb54783611d: and    %r10,%r12
  0x00007fb547836120: add    %r13,%r15
  0x00007fb547836123: or     %r12,%rdi
  0x00007fb547836126: add    %r14,%r8
  0x00007fb547836129: add    %r15,%r11
  0x00007fb54783612c: add    %r15,%r8
  0x00007fb54783612f: add    %rdi,%r8
  0x00007fb547836132: vpsrlq $0x8,%ymm1,%ymm2
  0x00007fb547836137: vpsllq $0x38,%ymm1,%ymm1
  0x00007fb54783613c: vpor   %ymm2,%ymm1,%ymm1
  0x00007fb547836140: vpxor  %ymm8,%ymm3,%ymm3
  0x00007fb547836145: vpxor  %ymm1,%ymm3,%ymm1
  0x00007fb547836149: vpaddq %ymm1,%ymm0,%ymm0
  0x00007fb54783614d: vperm2f128 $0x0,%ymm0,%ymm0,%ymm7
  0x00007fb547836153: vpand  %ymm10,%ymm0,%ymm0
  0x00007fb547836158: vperm2f128 $0x11,%ymm6,%ymm6,%ymm2
  0x00007fb54783615e: vpsrlq $0x6,%ymm2,%ymm8
  0x00007fb547836163: mov    %r8,%rdi
  0x00007fb547836166: rorx   $0x29,%r11,%r13
  0x00007fb54783616c: rorx   $0x12,%r11,%r14
  0x00007fb547836172: add    0x8(%rsp),%rcx
  0x00007fb547836177: or     %r9,%rdi
  0x00007fb54783617a: mov    %rax,%r15
  0x00007fb54783617d: xor    %rbx,%r15
  0x00007fb547836180: rorx   $0x22,%r8,%r12
  0x00007fb547836186: xor    %r14,%r13
  0x00007fb547836189: rorx   $0xe,%r11,%r14
  0x00007fb54783618f: and    %r11,%r15
  0x00007fb547836192: add    %rcx,%r10
  0x00007fb547836195: and    %rdx,%rdi
  0x00007fb547836198: xor    %r14,%r13
  0x00007fb54783619b: rorx   $0x27,%r8,%r14
  0x00007fb5478361a1: xor    %r12,%r14
  0x00007fb5478361a4: rorx   $0x1c,%r8,%r12
  0x00007fb5478361aa: xor    %rbx,%r15
  0x00007fb5478361ad: xor    %r12,%r14
  0x00007fb5478361b0: mov    %r8,%r12
  0x00007fb5478361b3: and    %r9,%r12
  0x00007fb5478361b6: add    %r13,%r15
  0x00007fb5478361b9: or     %r12,%rdi
  0x00007fb5478361bc: add    %r14,%rcx
  0x00007fb5478361bf: add    %r15,%r10
  0x00007fb5478361c2: add    %r15,%rcx
  0x00007fb5478361c5: add    %rdi,%rcx
  0x00007fb5478361c8: vpsrlq $0x13,%ymm2,%ymm3
  0x00007fb5478361cd: vpsllq $0x2d,%ymm2,%ymm1
  0x00007fb5478361d2: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb5478361d6: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb5478361da: vpsrlq $0x3d,%ymm2,%ymm3
  0x00007fb5478361df: vpsllq $0x3,%ymm2,%ymm1
  0x00007fb5478361e4: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb5478361e8: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb5478361ec: vpaddq %ymm8,%ymm7,%ymm7
  0x00007fb5478361f1: vpsrlq $0x6,%ymm7,%ymm8
  0x00007fb5478361f6: mov    %rcx,%rdi
  0x00007fb5478361f9: rorx   $0x29,%r10,%r13
  0x00007fb5478361ff: rorx   $0x12,%r10,%r14
  0x00007fb547836205: add    0x10(%rsp),%rbx
  0x00007fb54783620a: or     %rdx,%rdi
  0x00007fb54783620d: mov    %r11,%r15
  0x00007fb547836210: xor    %rax,%r15
  0x00007fb547836213: rorx   $0x22,%rcx,%r12
  0x00007fb547836219: xor    %r14,%r13
  0x00007fb54783621c: rorx   $0xe,%r10,%r14
  0x00007fb547836222: and    %r10,%r15
  0x00007fb547836225: add    %rbx,%r9
  0x00007fb547836228: and    %r8,%rdi
  0x00007fb54783622b: xor    %r14,%r13
  0x00007fb54783622e: rorx   $0x27,%rcx,%r14
  0x00007fb547836234: xor    %r12,%r14
  0x00007fb547836237: rorx   $0x1c,%rcx,%r12
  0x00007fb54783623d: xor    %rax,%r15
  0x00007fb547836240: xor    %r12,%r14
  0x00007fb547836243: mov    %rcx,%r12
  0x00007fb547836246: and    %rdx,%r12
  0x00007fb547836249: add    %r13,%r15
  0x00007fb54783624c: or     %r12,%rdi
  0x00007fb54783624f: add    %r14,%rbx
  0x00007fb547836252: add    %r15,%r9
  0x00007fb547836255: add    %r15,%rbx
  0x00007fb547836258: add    %rdi,%rbx
  0x00007fb54783625b: vpsrlq $0x13,%ymm7,%ymm3
  0x00007fb547836260: vpsllq $0x2d,%ymm7,%ymm1
  0x00007fb547836265: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb547836269: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb54783626d: vpsrlq $0x3d,%ymm7,%ymm3
  0x00007fb547836272: vpsllq $0x3,%ymm7,%ymm1
  0x00007fb547836277: vpor   %ymm1,%ymm3,%ymm3
  0x00007fb54783627b: vpxor  %ymm3,%ymm8,%ymm8
  0x00007fb54783627f: vpaddq %ymm8,%ymm0,%ymm2
  0x00007fb547836284: vpblendd $0xf0,%ymm2,%ymm7,%ymm7
  0x00007fb54783628a: mov    %rbx,%rdi
  0x00007fb54783628d: rorx   $0x29,%r9,%r13
  0x00007fb547836293: rorx   $0x12,%r9,%r14
  0x00007fb547836299: add    0x18(%rsp),%rax
  0x00007fb54783629e: or     %r8,%rdi
  0x00007fb5478362a1: mov    %r10,%r15
  0x00007fb5478362a4: xor    %r11,%r15
  0x00007fb5478362a7: rorx   $0x22,%rbx,%r12
  0x00007fb5478362ad: xor    %r14,%r13
  0x00007fb5478362b0: rorx   $0xe,%r9,%r14
  0x00007fb5478362b6: and    %r9,%r15
  0x00007fb5478362b9: add    %rax,%rdx
  0x00007fb5478362bc: and    %rcx,%rdi
  0x00007fb5478362bf: xor    %r14,%r13
  0x00007fb5478362c2: rorx   $0x27,%rbx,%r14
  0x00007fb5478362c8: xor    %r12,%r14
  0x00007fb5478362cb: rorx   $0x1c,%rbx,%r12
  0x00007fb5478362d1: xor    %r11,%r15
  0x00007fb5478362d4: xor    %r12,%r14
  0x00007fb5478362d7: mov    %rbx,%r12
  0x00007fb5478362da: and    %r8,%r12
  0x00007fb5478362dd: add    %r13,%r15
  0x00007fb5478362e0: or     %r12,%rdi
  0x00007fb5478362e3: add    %r14,%rax
  0x00007fb5478362e6: add    %r15,%rdx
  0x00007fb5478362e9: add    %r15,%rax
  0x00007fb5478362ec: add    %rdi,%rax
  0x00007fb5478362ef: subq   $0x1,0x20(%rsp)
  0x00007fb5478362f5: jne    Stub::sha512_implCompressMB+224 0x00007fb547835980
  0x00007fb5478362fb: movq   $0x2,0x20(%rsp)
  0x00007fb547836304: vpaddq 0x0(%rbp),%ymm4,%ymm0
  0x00007fb547836309: vmovdqu %ymm0,(%rsp)
  0x00007fb54783630e: mov    %r9,%r15
  0x00007fb547836311: rorx   $0x29,%rdx,%r13
  0x00007fb547836317: rorx   $0x12,%rdx,%r14
  0x00007fb54783631d: xor    %r10,%r15
  0x00007fb547836320: xor    %r14,%r13
  0x00007fb547836323: rorx   $0xe,%rdx,%r14
  0x00007fb547836329: and    %rdx,%r15
  0x00007fb54783632c: xor    %r14,%r13
  0x00007fb54783632f: rorx   $0x22,%rax,%r12
  0x00007fb547836335: xor    %r10,%r15
  0x00007fb547836338: rorx   $0x27,%rax,%r14
  0x00007fb54783633e: mov    %rax,%rdi
  0x00007fb547836341: xor    %r12,%r14
  0x00007fb547836344: rorx   $0x1c,%rax,%r12
  0x00007fb54783634a: add    (%rsp),%r11
  0x00007fb54783634e: or     %rcx,%rdi
  0x00007fb547836351: xor    %r12,%r14
  0x00007fb547836354: mov    %rax,%r12
  0x00007fb547836357: and    %rbx,%rdi
  0x00007fb54783635a: and    %rcx,%r12
  0x00007fb54783635d: add    %r13,%r15
  0x00007fb547836360: add    %r11,%r8
  0x00007fb547836363: or     %r12,%rdi
  0x00007fb547836366: add    %r14,%r11
  0x00007fb547836369: add    %r15,%r8
  0x00007fb54783636c: add    %r15,%r11
  0x00007fb54783636f: mov    %rdx,%r15
  0x00007fb547836372: rorx   $0x29,%r8,%r13
  0x00007fb547836378: rorx   $0x12,%r8,%r14
  0x00007fb54783637e: xor    %r9,%r15
  0x00007fb547836381: xor    %r14,%r13
  0x00007fb547836384: rorx   $0xe,%r8,%r14
  0x00007fb54783638a: and    %r8,%r15
  0x00007fb54783638d: add    %rdi,%r11
  0x00007fb547836390: xor    %r14,%r13
  0x00007fb547836393: rorx   $0x22,%r11,%r12
  0x00007fb547836399: xor    %r9,%r15
  0x00007fb54783639c: rorx   $0x27,%r11,%r14
  0x00007fb5478363a2: mov    %r11,%rdi
  0x00007fb5478363a5: xor    %r12,%r14
  0x00007fb5478363a8: rorx   $0x1c,%r11,%r12
  0x00007fb5478363ae: add    0x8(%rsp),%r10
  0x00007fb5478363b3: or     %rbx,%rdi
  0x00007fb5478363b6: xor    %r12,%r14
  0x00007fb5478363b9: mov    %r11,%r12
  0x00007fb5478363bc: and    %rax,%rdi
  0x00007fb5478363bf: and    %rbx,%r12
  0x00007fb5478363c2: add    %r13,%r15
  0x00007fb5478363c5: add    %r10,%rcx
  0x00007fb5478363c8: or     %r12,%rdi
  0x00007fb5478363cb: add    %r14,%r10
  0x00007fb5478363ce: add    %r15,%rcx
  0x00007fb5478363d1: add    %r15,%r10
  0x00007fb5478363d4: mov    %r8,%r15
  0x00007fb5478363d7: rorx   $0x29,%rcx,%r13
  0x00007fb5478363dd: rorx   $0x12,%rcx,%r14
  0x00007fb5478363e3: xor    %rdx,%r15
  0x00007fb5478363e6: xor    %r14,%r13
  0x00007fb5478363e9: rorx   $0xe,%rcx,%r14
  0x00007fb5478363ef: and    %rcx,%r15
  0x00007fb5478363f2: add    %rdi,%r10
  0x00007fb5478363f5: xor    %r14,%r13
  0x00007fb5478363f8: rorx   $0x22,%r10,%r12
  0x00007fb5478363fe: xor    %rdx,%r15
  0x00007fb547836401: rorx   $0x27,%r10,%r14
  0x00007fb547836407: mov    %r10,%rdi
  0x00007fb54783640a: xor    %r12,%r14
  0x00007fb54783640d: rorx   $0x1c,%r10,%r12
  0x00007fb547836413: add    0x10(%rsp),%r9
  0x00007fb547836418: or     %rax,%rdi
  0x00007fb54783641b: xor    %r12,%r14
  0x00007fb54783641e: mov    %r10,%r12
  0x00007fb547836421: and    %r11,%rdi
  0x00007fb547836424: and    %rax,%r12
  0x00007fb547836427: add    %r13,%r15
  0x00007fb54783642a: add    %r9,%rbx
  0x00007fb54783642d: or     %r12,%rdi
  0x00007fb547836430: add    %r14,%r9
  0x00007fb547836433: add    %r15,%rbx
  0x00007fb547836436: add    %r15,%r9
  0x00007fb547836439: mov    %rcx,%r15
  0x00007fb54783643c: rorx   $0x29,%rbx,%r13
  0x00007fb547836442: rorx   $0x12,%rbx,%r14
  0x00007fb547836448: xor    %r8,%r15
  0x00007fb54783644b: xor    %r14,%r13
  0x00007fb54783644e: rorx   $0xe,%rbx,%r14
  0x00007fb547836454: and    %rbx,%r15
  0x00007fb547836457: add    %rdi,%r9
  0x00007fb54783645a: xor    %r14,%r13
  0x00007fb54783645d: rorx   $0x22,%r9,%r12
  0x00007fb547836463: xor    %r8,%r15
  0x00007fb547836466: rorx   $0x27,%r9,%r14
  0x00007fb54783646c: mov    %r9,%rdi
  0x00007fb54783646f: xor    %r12,%r14
  0x00007fb547836472: rorx   $0x1c,%r9,%r12
  0x00007fb547836478: add    0x18(%rsp),%rdx
  0x00007fb54783647d: or     %r11,%rdi
  0x00007fb547836480: xor    %r12,%r14
  0x00007fb547836483: mov    %r9,%r12
  0x00007fb547836486: and    %r10,%rdi
  0x00007fb547836489: and    %r11,%r12
  0x00007fb54783648c: add    %r13,%r15
  0x00007fb54783648f: add    %rdx,%rax
  0x00007fb547836492: or     %r12,%rdi
  0x00007fb547836495: add    %r14,%rdx
  0x00007fb547836498: add    %r15,%rax
  0x00007fb54783649b: add    %r15,%rdx
  0x00007fb54783649e: add    %rdi,%rdx
  0x00007fb5478364a1: vpaddq 0x20(%rbp),%ymm5,%ymm0
  0x00007fb5478364a6: vmovdqu %ymm0,(%rsp)
  0x00007fb5478364ab: add    $0x40,%rbp
  0x00007fb5478364af: mov    %rbx,%r15
  0x00007fb5478364b2: rorx   $0x29,%rax,%r13
  0x00007fb5478364b8: rorx   $0x12,%rax,%r14
  0x00007fb5478364be: xor    %rcx,%r15
  0x00007fb5478364c1: xor    %r14,%r13
  0x00007fb5478364c4: rorx   $0xe,%rax,%r14
  0x00007fb5478364ca: and    %rax,%r15
  0x00007fb5478364cd: xor    %r14,%r13
  0x00007fb5478364d0: rorx   $0x22,%rdx,%r12
  0x00007fb5478364d6: xor    %rcx,%r15
  0x00007fb5478364d9: rorx   $0x27,%rdx,%r14
  0x00007fb5478364df: mov    %rdx,%rdi
  0x00007fb5478364e2: xor    %r12,%r14
  0x00007fb5478364e5: rorx   $0x1c,%rdx,%r12
  0x00007fb5478364eb: add    (%rsp),%r8
  0x00007fb5478364ef: or     %r10,%rdi
  0x00007fb5478364f2: xor    %r12,%r14
  0x00007fb5478364f5: mov    %rdx,%r12
  0x00007fb5478364f8: and    %r9,%rdi
  0x00007fb5478364fb: and    %r10,%r12
  0x00007fb5478364fe: add    %r13,%r15
  0x00007fb547836501: add    %r8,%r11
  0x00007fb547836504: or     %r12,%rdi
  0x00007fb547836507: add    %r14,%r8
  0x00007fb54783650a: add    %r15,%r11
  0x00007fb54783650d: add    %r15,%r8
  0x00007fb547836510: mov    %rax,%r15
  0x00007fb547836513: rorx   $0x29,%r11,%r13
  0x00007fb547836519: rorx   $0x12,%r11,%r14
  0x00007fb54783651f: xor    %rbx,%r15
  0x00007fb547836522: xor    %r14,%r13
  0x00007fb547836525: rorx   $0xe,%r11,%r14
  0x00007fb54783652b: and    %r11,%r15
  0x00007fb54783652e: add    %rdi,%r8
  0x00007fb547836531: xor    %r14,%r13
  0x00007fb547836534: rorx   $0x22,%r8,%r12
  0x00007fb54783653a: xor    %rbx,%r15
  0x00007fb54783653d: rorx   $0x27,%r8,%r14
  0x00007fb547836543: mov    %r8,%rdi
  0x00007fb547836546: xor    %r12,%r14
  0x00007fb547836549: rorx   $0x1c,%r8,%r12
  0x00007fb54783654f: add    0x8(%rsp),%rcx
  0x00007fb547836554: or     %r9,%rdi
  0x00007fb547836557: xor    %r12,%r14
  0x00007fb54783655a: mov    %r8,%r12
  0x00007fb54783655d: and    %rdx,%rdi
  0x00007fb547836560: and    %r9,%r12
  0x00007fb547836563: add    %r13,%r15
  0x00007fb547836566: add    %rcx,%r10
  0x00007fb547836569: or     %r12,%rdi
  0x00007fb54783656c: add    %r14,%rcx
  0x00007fb54783656f: add    %r15,%r10
  0x00007fb547836572: add    %r15,%rcx
  0x00007fb547836575: mov    %r11,%r15
  0x00007fb547836578: rorx   $0x29,%r10,%r13
  0x00007fb54783657e: rorx   $0x12,%r10,%r14
  0x00007fb547836584: xor    %rax,%r15
  0x00007fb547836587: xor    %r14,%r13
  0x00007fb54783658a: rorx   $0xe,%r10,%r14
  0x00007fb547836590: and    %r10,%r15
  0x00007fb547836593: add    %rdi,%rcx
  0x00007fb547836596: xor    %r14,%r13
  0x00007fb547836599: rorx   $0x22,%rcx,%r12
  0x00007fb54783659f: xor    %rax,%r15
  0x00007fb5478365a2: rorx   $0x27,%rcx,%r14
  0x00007fb5478365a8: mov    %rcx,%rdi
  0x00007fb5478365ab: xor    %r12,%r14
  0x00007fb5478365ae: rorx   $0x1c,%rcx,%r12
  0x00007fb5478365b4: add    0x10(%rsp),%rbx
  0x00007fb5478365b9: or     %rdx,%rdi
  0x00007fb5478365bc: xor    %r12,%r14
  0x00007fb5478365bf: mov    %rcx,%r12
  0x00007fb5478365c2: and    %r8,%rdi
  0x00007fb5478365c5: and    %rdx,%r12
  0x00007fb5478365c8: add    %r13,%r15
  0x00007fb5478365cb: add    %rbx,%r9
  0x00007fb5478365ce: or     %r12,%rdi
  0x00007fb5478365d1: add    %r14,%rbx
  0x00007fb5478365d4: add    %r15,%r9
  0x00007fb5478365d7: add    %r15,%rbx
  0x00007fb5478365da: mov    %r10,%r15
  0x00007fb5478365dd: rorx   $0x29,%r9,%r13
  0x00007fb5478365e3: rorx   $0x12,%r9,%r14
  0x00007fb5478365e9: xor    %r11,%r15
  0x00007fb5478365ec: xor    %r14,%r13
  0x00007fb5478365ef: rorx   $0xe,%r9,%r14
  0x00007fb5478365f5: and    %r9,%r15
  0x00007fb5478365f8: add    %rdi,%rbx
  0x00007fb5478365fb: xor    %r14,%r13
  0x00007fb5478365fe: rorx   $0x22,%rbx,%r12
  0x00007fb547836604: xor    %r11,%r15
  0x00007fb547836607: rorx   $0x27,%rbx,%r14
  0x00007fb54783660d: mov    %rbx,%rdi
  0x00007fb547836610: xor    %r12,%r14
  0x00007fb547836613: rorx   $0x1c,%rbx,%r12
  0x00007fb547836619: add    0x18(%rsp),%rax
  0x00007fb54783661e: or     %r8,%rdi
  0x00007fb547836621: xor    %r12,%r14
  0x00007fb547836624: mov    %rbx,%r12
  0x00007fb547836627: and    %rcx,%rdi
  0x00007fb54783662a: and    %r8,%r12
  0x00007fb54783662d: add    %r13,%r15
  0x00007fb547836630: add    %rax,%rdx
  0x00007fb547836633: or     %r12,%rdi
  0x00007fb547836636: add    %r14,%rax
  0x00007fb547836639: add    %r15,%rdx
  0x00007fb54783663c: add    %r15,%rax
  0x00007fb54783663f: add    %rdi,%rax
  0x00007fb547836642: vmovdqu %ymm6,%ymm4
  0x00007fb547836646: vmovdqu %ymm7,%ymm5
  0x00007fb54783664a: subq   $0x1,0x20(%rsp)
  0x00007fb547836650: jne    Stub::sha512_implCompressMB+2660 0x00007fb547836304
  0x00007fb547836656: add    (%rsi),%rax
  0x00007fb547836659: mov    %rax,(%rsi)
  0x00007fb54783665c: add    0x8(%rsi),%rbx
  0x00007fb547836660: mov    %rbx,0x8(%rsi)
  0x00007fb547836664: add    0x10(%rsi),%rcx
  0x00007fb547836668: mov    %rcx,0x10(%rsi)
  0x00007fb54783666c: add    0x18(%rsi),%r8
  0x00007fb547836670: mov    %r8,0x18(%rsi)
  0x00007fb547836674: add    0x20(%rsi),%rdx
  0x00007fb547836678: mov    %rdx,0x20(%rsi)
  0x00007fb54783667c: add    0x28(%rsi),%r9
  0x00007fb547836680: mov    %r9,0x28(%rsi)
  0x00007fb547836684: add    0x30(%rsi),%r10
  0x00007fb547836688: mov    %r10,0x30(%rsi)
  0x00007fb54783668c: add    0x38(%rsi),%r11
  0x00007fb547836690: mov    %r11,0x38(%rsi)
  0x00007fb547836694: mov    0x28(%rsp),%rdi
  0x00007fb547836699: add    $0x80,%rdi
  0x00007fb5478366a0: cmp    0x30(%rsp),%rdi
  0x00007fb5478366a5: jne    Stub::sha512_implCompressMB+156 0x00007fb54783593c
  0x00007fb5478366ab: mov    0x40(%rsp),%rbp
  0x00007fb5478366b0: mov    0x48(%rsp),%rbx
  0x00007fb5478366b5: mov    0x50(%rsp),%r12
  0x00007fb5478366ba: mov    0x58(%rsp),%r13
  0x00007fb5478366bf: mov    0x60(%rsp),%r14
  0x00007fb5478366c4: mov    0x68(%rsp),%r15
  0x00007fb5478366c9: mov    0x38(%rsp),%rsp
  0x00007fb5478366ce: pop    %rcx
  0x00007fb5478366cf: pop    %rdx
  0x00007fb5478366d0: mov    %rdx,%rax
  0x00007fb5478366d3: cmp    %rcx,%rax
  0x00007fb5478366d6: jae    Stub::sha512_implCompressMB+3649 0x00007fb5478366e1
  0x00007fb5478366d8: add    $0x80,%rax
  0x00007fb5478366df: jmp    Stub::sha512_implCompressMB+3635 0x00007fb5478366d3
  0x00007fb5478366e1: vzeroupper 
  0x00007fb5478366e4: leaveq 
  0x00007fb5478366e5: retq   

StubRoutines::ghash_long_swap_mask [0x00007fb547836700, 0x00007fb547836710[ (16 bytes)
  0x00007fb547836700: or     %cl,(%rcx)
  0x00007fb547836702: or     (%rbx),%cl
  0x00007fb547836704: or     $0xd,%al
  0x00007fb547836706: (bad)  
  0x00007fb547836707: sldt   (%rcx)
  0x00007fb54783670a: add    (%rbx),%al
  0x00007fb54783670c: add    $0x5,%al
  0x00007fb54783670e: (bad)  
  0x00007fb54783670f: (bad)  

StubRoutines::ghash_byte_swap_mask [0x00007fb547836720, 0x00007fb547836730[ (16 bytes)
  0x00007fb547836720: femms  
  0x00007fb547836722: or     $0x90a0b0c,%eax
  0x00007fb547836727: or     %al,(%rdi)
  0x00007fb547836729: (bad)  
  0x00007fb54783672a: add    $0x1020304,%eax
  0x00007fb54783672f: .byte 0x0

StubRoutines::_ghash_shuffmask_addr [0x00007fb547836740, 0x00007fb547836750[ (16 bytes)
  0x00007fb547836740: (bad)  
  0x00007fb547836741: (bad)  
  0x00007fb547836742: (bad)  
  0x00007fb547836743: (bad)  
  0x00007fb547836744: (bad)  
  0x00007fb547836745: (bad)  
  0x00007fb547836746: (bad)  
  0x00007fb547836747: (bad)  
  0x00007fb547836748: (bad)  
  0x00007fb547836749: (bad)  
  0x00007fb54783674a: (bad)  
  0x00007fb54783674b: (bad)  
  0x00007fb54783674c: (bad)  
  0x00007fb54783674d: .byte 0xf
  0x00007fb54783674e: .byte 0xf
  0x00007fb54783674f: .byte 0xf

StubRoutines::_ghash_poly_addr [0x00007fb547836760, 0x00007fb547836770[ (16 bytes)
  0x00007fb547836760: add    %eax,(%rax)
  0x00007fb547836762: add    %al,(%rax)
  0x00007fb547836764: add    %al,(%rax)
  0x00007fb547836766: add    %al,(%rax)
  0x00007fb547836768: add    %al,(%rax)
  0x00007fb54783676a: add    %al,(%rax)
  0x00007fb54783676c: add    %al,(%rax)
  0x00007fb54783676e: add    %al,%dl

StubRoutines::ghash_processBlocks [0x00007fb547836780, 0x00007fb547836c0a[ (1162 bytes)
  0x00007fb547836780: push   %rbp
  0x00007fb547836781: mov    %rsp,%rbp
  0x00007fb547836784: test   %rcx,%rcx
  0x00007fb547836787: je     Stub::ghash_processBlocks+1143 0x00007fb547836bf7
  0x00007fb54783678d: vmovdqu 0x10(%rsi),%xmm5
  0x00007fb547836792: vptest %xmm5,%xmm5
  0x00007fb547836797: jne    Stub::ghash_processBlocks+34 0x00007fb5478367a2
  0x00007fb54783679d: callq  Stub::ghash_processBlocks+838 0x00007fb547836ac6
  0x00007fb5478367a2: vmovdqu -0xaa(%rip),%xmm14        # Stub::ghash_long_swap_mask
  0x00007fb5478367aa: vmovdqu (%rdi),%xmm0
  0x00007fb5478367ae: vpshufb %xmm14,%xmm0,%xmm0
  0x00007fb5478367b3: cmp    $0x8,%ecx
  0x00007fb5478367b6: jb     Stub::ghash_processBlocks+647 0x00007fb547836a07
  0x00007fb5478367bc: vmovdqu 0x80(%rsi),%xmm5
  0x00007fb5478367c4: vptest %xmm5,%xmm5
  0x00007fb5478367c9: jne    Stub::ghash_processBlocks+84 0x00007fb5478367d4
  0x00007fb5478367cf: callq  Stub::ghash_processBlocks+931 0x00007fb547836b23
  0x00007fb5478367d4: sub    $0x8,%ecx
  0x00007fb5478367d7: vmovdqu -0xbf(%rip),%xmm2        # Stub::ghash_byte_swap_mask
  0x00007fb5478367df: vmovdqu 0x70(%rdx),%xmm1
  0x00007fb5478367e4: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb5478367e9: vmovdqu 0x10(%rsi),%xmm15
  0x00007fb5478367ee: vpclmulhqlqdq %xmm15,%xmm1,%xmm5
  0x00007fb5478367f4: vpclmullqlqdq %xmm15,%xmm1,%xmm3
  0x00007fb5478367fa: vpclmulhqhqdq %xmm15,%xmm1,%xmm4
  0x00007fb547836800: vpclmullqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836806: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb54783680a: vmovdqu 0x60(%rdx),%xmm1
  0x00007fb54783680f: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb547836814: vmovdqu 0x20(%rsi),%xmm15
  0x00007fb547836819: vpclmulhqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb54783681f: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836823: vpclmullqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836829: vpxor  %xmm6,%xmm3,%xmm3
  0x00007fb54783682d: vpclmulhqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836833: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb547836837: vpclmullqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb54783683d: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836841: vmovdqu 0x50(%rdx),%xmm1
  0x00007fb547836846: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb54783684b: vmovdqu 0x30(%rsi),%xmm15
  0x00007fb547836850: vpclmulhqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836856: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb54783685a: vpclmullqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836860: vpxor  %xmm6,%xmm3,%xmm3
  0x00007fb547836864: vpclmulhqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb54783686a: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb54783686e: vpclmullqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836874: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836878: vmovdqu 0x40(%rdx),%xmm1
  0x00007fb54783687d: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb547836882: vmovdqu 0x40(%rsi),%xmm15
  0x00007fb547836887: vpclmulhqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb54783688d: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836891: vpclmullqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836897: vpxor  %xmm6,%xmm3,%xmm3
  0x00007fb54783689b: vpclmulhqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb5478368a1: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb5478368a5: vpclmullqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb5478368ab: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb5478368af: vmovdqu 0x30(%rdx),%xmm1
  0x00007fb5478368b4: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb5478368b9: vmovdqu 0x50(%rsi),%xmm15
  0x00007fb5478368be: vpclmulhqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb5478368c4: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb5478368c8: vpclmullqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb5478368ce: vpxor  %xmm6,%xmm3,%xmm3
  0x00007fb5478368d2: vpclmulhqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb5478368d8: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb5478368dc: vpclmullqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb5478368e2: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb5478368e6: vmovdqu 0x20(%rdx),%xmm1
  0x00007fb5478368eb: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb5478368f0: vmovdqu 0x60(%rsi),%xmm15
  0x00007fb5478368f5: vpclmulhqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb5478368fb: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb5478368ff: vpclmullqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836905: vpxor  %xmm6,%xmm3,%xmm3
  0x00007fb547836909: vpclmulhqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb54783690f: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb547836913: vpclmullqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836919: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb54783691d: vmovdqu 0x10(%rdx),%xmm1
  0x00007fb547836922: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb547836927: vmovdqu 0x70(%rsi),%xmm15
  0x00007fb54783692c: vpclmulhqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836932: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836936: vpclmullqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb54783693c: vpxor  %xmm6,%xmm3,%xmm3
  0x00007fb547836940: vpclmulhqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836946: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb54783694a: vpclmullqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836950: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836954: vmovdqu (%rdx),%xmm1
  0x00007fb547836958: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb54783695d: vpxor  %xmm0,%xmm1,%xmm1
  0x00007fb547836961: vmovdqu 0x80(%rsi),%xmm15
  0x00007fb547836969: vpclmulhqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb54783696f: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836973: vpclmullqlqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836979: vpxor  %xmm6,%xmm3,%xmm3
  0x00007fb54783697d: vpclmulhqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb547836983: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb547836987: vpclmullqhqdq %xmm15,%xmm1,%xmm6
  0x00007fb54783698d: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836991: vpslldq $0x8,%xmm5,%xmm6
  0x00007fb547836996: vpsrldq $0x8,%xmm5,%xmm5
  0x00007fb54783699b: vpxor  %xmm6,%xmm3,%xmm3
  0x00007fb54783699f: vpxor  %xmm5,%xmm4,%xmm4
  0x00007fb5478369a3: vpslld $0x1f,%xmm3,%xmm8
  0x00007fb5478369a8: vpslld $0x1e,%xmm3,%xmm9
  0x00007fb5478369ad: vpslld $0x19,%xmm3,%xmm10
  0x00007fb5478369b2: vpxor  %xmm10,%xmm8,%xmm8
  0x00007fb5478369b7: vpxor  %xmm9,%xmm8,%xmm8
  0x00007fb5478369bc: vpslldq $0xc,%xmm8,%xmm9
  0x00007fb5478369c2: vpsrldq $0x4,%xmm8,%xmm8
  0x00007fb5478369c8: vpxor  %xmm9,%xmm3,%xmm3
  0x00007fb5478369cd: vpsrld $0x1,%xmm3,%xmm9
  0x00007fb5478369d2: vpsrld $0x2,%xmm3,%xmm10
  0x00007fb5478369d7: vpsrld $0x7,%xmm3,%xmm5
  0x00007fb5478369dc: vpxor  %xmm10,%xmm9,%xmm9
  0x00007fb5478369e1: vpxor  %xmm5,%xmm9,%xmm9
  0x00007fb5478369e5: vpxor  %xmm8,%xmm9,%xmm9
  0x00007fb5478369ea: vpxor  %xmm3,%xmm9,%xmm3
  0x00007fb5478369ee: vpxor  %xmm4,%xmm3,%xmm0
  0x00007fb5478369f2: lea    0x80(%rdx),%rdx
  0x00007fb5478369f9: cmp    $0x8,%ecx
  0x00007fb5478369fc: jb     Stub::ghash_processBlocks+647 0x00007fb547836a07
  0x00007fb547836a02: jmpq   Stub::ghash_processBlocks+84 0x00007fb5478367d4
  0x00007fb547836a07: vmovdqu 0x10(%rsi),%xmm3
  0x00007fb547836a0c: vmovdqu -0x2f4(%rip),%xmm2        # Stub::ghash_byte_swap_mask
  0x00007fb547836a14: cmp    $0x0,%ecx
  0x00007fb547836a17: je     Stub::ghash_processBlocks+696 0x00007fb547836a38
  0x00007fb547836a1d: sub    $0x1,%ecx
  0x00007fb547836a20: vmovdqu (%rdx),%xmm1
  0x00007fb547836a24: vpshufb %xmm2,%xmm1,%xmm1
  0x00007fb547836a29: vpxor  %xmm1,%xmm0,%xmm0
  0x00007fb547836a2d: callq  Stub::ghash_processBlocks+710 0x00007fb547836a46
  0x00007fb547836a32: add    $0x10,%rdx
  0x00007fb547836a36: jmp    Stub::ghash_processBlocks+660 0x00007fb547836a14
  0x00007fb547836a38: vpshufb %xmm14,%xmm0,%xmm0
  0x00007fb547836a3d: vmovdqu %xmm0,(%rdi)
  0x00007fb547836a41: jmpq   Stub::ghash_processBlocks+1143 0x00007fb547836bf7
  0x00007fb547836a46: vpclmullqlqdq %xmm3,%xmm0,%xmm4
  0x00007fb547836a4c: vpclmulhqhqdq %xmm3,%xmm0,%xmm7
  0x00007fb547836a52: vpclmullqhqdq %xmm3,%xmm0,%xmm5
  0x00007fb547836a58: vpclmulhqlqdq %xmm3,%xmm0,%xmm6
  0x00007fb547836a5e: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836a62: vpslldq $0x8,%xmm5,%xmm6
  0x00007fb547836a67: vpsrldq $0x8,%xmm5,%xmm5
  0x00007fb547836a6c: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb547836a70: vpxor  %xmm5,%xmm7,%xmm7
  0x00007fb547836a74: vpslld $0x1f,%xmm4,%xmm8
  0x00007fb547836a79: vpslld $0x1e,%xmm4,%xmm9
  0x00007fb547836a7e: vpslld $0x19,%xmm4,%xmm10
  0x00007fb547836a83: vpxor  %xmm9,%xmm8,%xmm8
  0x00007fb547836a88: vpxor  %xmm10,%xmm8,%xmm8
  0x00007fb547836a8d: vpslldq $0xc,%xmm8,%xmm9
  0x00007fb547836a93: vpsrldq $0x4,%xmm8,%xmm8
  0x00007fb547836a99: vpxor  %xmm9,%xmm4,%xmm4
  0x00007fb547836a9e: vpsrld $0x1,%xmm4,%xmm9
  0x00007fb547836aa3: vpsrld $0x2,%xmm4,%xmm10
  0x00007fb547836aa8: vpsrld $0x7,%xmm4,%xmm11
  0x00007fb547836aad: vpxor  %xmm10,%xmm9,%xmm9
  0x00007fb547836ab2: vpxor  %xmm11,%xmm9,%xmm9
  0x00007fb547836ab7: vpxor  %xmm8,%xmm9,%xmm9
  0x00007fb547836abc: vpxor  %xmm9,%xmm4,%xmm4
  0x00007fb547836ac1: vpxor  %xmm4,%xmm7,%xmm0
  0x00007fb547836ac5: retq   
  0x00007fb547836ac6: vmovdqu (%rsi),%xmm13
  0x00007fb547836aca: vmovdqu -0x3d2(%rip),%xmm10        # Stub::ghash_long_swap_mask
  0x00007fb547836ad2: vpshufb %xmm10,%xmm13,%xmm13
  0x00007fb547836ad7: vpsrld $0x7,%xmm13,%xmm3
  0x00007fb547836add: vmovdqu -0x3a5(%rip),%xmm4        # Stub::_ghash_shuffmask_addr
  0x00007fb547836ae5: vpshufb %xmm4,%xmm3,%xmm3
  0x00007fb547836aea: mov    $0xff00,%eax
  0x00007fb547836aef: vmovd  %eax,%xmm4
  0x00007fb547836af3: vpshufb %xmm3,%xmm4,%xmm4
  0x00007fb547836af8: vmovdqu -0x3a0(%rip),%xmm5        # Stub::_ghash_poly_addr
  0x00007fb547836b00: vpand  %xmm4,%xmm5,%xmm5
  0x00007fb547836b04: vpsrld $0x1f,%xmm13,%xmm3
  0x00007fb547836b0a: vpslld $0x1,%xmm13,%xmm4
  0x00007fb547836b10: vpslldq $0x4,%xmm3,%xmm3
  0x00007fb547836b15: vpxor  %xmm3,%xmm4,%xmm13
  0x00007fb547836b19: vpxor  %xmm5,%xmm13,%xmm13
  0x00007fb547836b1d: vmovdqu %xmm13,0x10(%rsi)
  0x00007fb547836b22: retq   
  0x00007fb547836b23: vmovdqu 0x10(%rsi),%xmm13
  0x00007fb547836b28: vmovdqu %xmm13,%xmm1
  0x00007fb547836b2d: callq  Stub::ghash_processBlocks+1015 0x00007fb547836b77
  0x00007fb547836b32: vmovdqu %xmm13,0x20(%rsi)
  0x00007fb547836b37: callq  Stub::ghash_processBlocks+1015 0x00007fb547836b77
  0x00007fb547836b3c: vmovdqu %xmm13,0x30(%rsi)
  0x00007fb547836b41: callq  Stub::ghash_processBlocks+1015 0x00007fb547836b77
  0x00007fb547836b46: vmovdqu %xmm13,0x40(%rsi)
  0x00007fb547836b4b: callq  Stub::ghash_processBlocks+1015 0x00007fb547836b77
  0x00007fb547836b50: vmovdqu %xmm13,0x50(%rsi)
  0x00007fb547836b55: callq  Stub::ghash_processBlocks+1015 0x00007fb547836b77
  0x00007fb547836b5a: vmovdqu %xmm13,0x60(%rsi)
  0x00007fb547836b5f: callq  Stub::ghash_processBlocks+1015 0x00007fb547836b77
  0x00007fb547836b64: vmovdqu %xmm13,0x70(%rsi)
  0x00007fb547836b69: callq  Stub::ghash_processBlocks+1015 0x00007fb547836b77
  0x00007fb547836b6e: vmovdqu %xmm13,0x80(%rsi)
  0x00007fb547836b76: retq   
  0x00007fb547836b77: vpclmullqlqdq %xmm1,%xmm13,%xmm4
  0x00007fb547836b7d: vpclmulhqhqdq %xmm1,%xmm13,%xmm7
  0x00007fb547836b83: vpclmullqhqdq %xmm1,%xmm13,%xmm5
  0x00007fb547836b89: vpclmulhqlqdq %xmm1,%xmm13,%xmm6
  0x00007fb547836b8f: vpxor  %xmm6,%xmm5,%xmm5
  0x00007fb547836b93: vpslldq $0x8,%xmm5,%xmm6
  0x00007fb547836b98: vpsrldq $0x8,%xmm5,%xmm5
  0x00007fb547836b9d: vpxor  %xmm6,%xmm4,%xmm4
  0x00007fb547836ba1: vpxor  %xmm5,%xmm7,%xmm7
  0x00007fb547836ba5: vpslld $0x1f,%xmm4,%xmm8
  0x00007fb547836baa: vpslld $0x1e,%xmm4,%xmm9
  0x00007fb547836baf: vpslld $0x19,%xmm4,%xmm10
  0x00007fb547836bb4: vpxor  %xmm9,%xmm8,%xmm8
  0x00007fb547836bb9: vpxor  %xmm10,%xmm8,%xmm8
  0x00007fb547836bbe: vpslldq $0xc,%xmm8,%xmm9
  0x00007fb547836bc4: vpsrldq $0x4,%xmm8,%xmm8
  0x00007fb547836bca: vpxor  %xmm9,%xmm4,%xmm4
  0x00007fb547836bcf: vpsrld $0x1,%xmm4,%xmm9
  0x00007fb547836bd4: vpsrld $0x2,%xmm4,%xmm10
  0x00007fb547836bd9: vpsrld $0x7,%xmm4,%xmm11
  0x00007fb547836bde: vpxor  %xmm10,%xmm9,%xmm9
  0x00007fb547836be3: vpxor  %xmm11,%xmm9,%xmm9
  0x00007fb547836be8: vpxor  %xmm8,%xmm9,%xmm9
  0x00007fb547836bed: vpxor  %xmm9,%xmm4,%xmm4
  0x00007fb547836bf2: vpxor  %xmm4,%xmm7,%xmm13
  0x00007fb547836bf6: retq   
  0x00007fb547836bf7: vpxor  %xmm0,%xmm0,%xmm0
  0x00007fb547836bfb: vpxor  %xmm1,%xmm1,%xmm1
  0x00007fb547836bff: vpxor  %xmm3,%xmm3,%xmm3
  0x00007fb547836c03: vpxor  %xmm15,%xmm15,%xmm15
  0x00007fb547836c08: leaveq 
  0x00007fb547836c09: retq   

StubRoutines::SafeFetch32 [0x00007fb547836c0a, 0x00007fb547836c10[ (6 bytes)
  0x00007fb547836c0a: mov    (%rdi),%esi
  0x00007fb547836c0c: mov    %rsi,%rax
  0x00007fb547836c0f: retq   

StubRoutines::SafeFetchN [0x00007fb547836c10, 0x00007fb547836c17[ (7 bytes)
  0x00007fb547836c10: mov    (%rdi),%rsi
  0x00007fb547836c13: mov    %rsi,%rax
  0x00007fb547836c16: retq   

StubRoutines::multiplyToLen [0x00007fb547836c20, 0x00007fb547836e4f[ (559 bytes)
  0x00007fb547836c20: push   %rbp
  0x00007fb547836c21: mov    %rsp,%rbp
  0x00007fb547836c24: mov    %r9,%r11
  0x00007fb547836c27: mov    %rsi,%rax
  0x00007fb547836c2a: mov    %rdx,%rsi
  0x00007fb547836c2d: push   %r12
  0x00007fb547836c2f: push   %r13
  0x00007fb547836c31: push   %r14
  0x00007fb547836c33: push   %r15
  0x00007fb547836c35: push   %rbx
  0x00007fb547836c36: push   %rax
  0x00007fb547836c37: push   %r11
  0x00007fb547836c39: mov    %ecx,%r12d
  0x00007fb547836c3c: mov    %r11d,%r13d
  0x00007fb547836c3f: xor    %rbx,%rbx
  0x00007fb547836c42: mov    %eax,%r14d
  0x00007fb547836c45: dec    %r14d
  0x00007fb547836c48: js     Stub::multiplyToLen+545 0x00007fb547836e41
  0x00007fb547836c4e: dec    %r14d
  0x00007fb547836c51: js     Stub::multiplyToLen+129 0x00007fb547836ca1
  0x00007fb547836c57: mov    (%rdi,%r14,4),%r11
  0x00007fb547836c5b: ror    $0x20,%r11
  0x00007fb547836c5f: dec    %r12d
  0x00007fb547836c62: js     Stub::multiplyToLen+134 0x00007fb547836ca6
  0x00007fb547836c68: dec    %r12d
  0x00007fb547836c6b: js     Stub::multiplyToLen+124 0x00007fb547836c9c
  0x00007fb547836c71: mov    (%rsi,%r12,4),%r15
  0x00007fb547836c75: ror    $0x20,%r15
  0x00007fb547836c79: mov    %r11,%rax
  0x00007fb547836c7c: mul    %r15
  0x00007fb547836c7f: add    %rbx,%rax
  0x00007fb547836c82: adc    $0x0,%rdx
  0x00007fb547836c86: sub    $0x2,%r13d
  0x00007fb547836c8a: mov    %eax,0x4(%r8,%r13,4)
  0x00007fb547836c8f: shr    $0x20,%rax
  0x00007fb547836c93: mov    %eax,(%r8,%r13,4)
  0x00007fb547836c97: mov    %rdx,%rbx
  0x00007fb547836c9a: jmp    Stub::multiplyToLen+63 0x00007fb547836c5f
  0x00007fb547836c9c: mov    (%rsi),%r15d
  0x00007fb547836c9f: jmp    Stub::multiplyToLen+89 0x00007fb547836c79
  0x00007fb547836ca1: mov    (%rdi),%r11d
  0x00007fb547836ca4: jmp    Stub::multiplyToLen+63 0x00007fb547836c5f
  0x00007fb547836ca6: test   %r13d,%r13d
  0x00007fb547836ca9: je     Stub::multiplyToLen+169 0x00007fb547836cc9
  0x00007fb547836caf: sub    $0x1,%r13d
  0x00007fb547836cb3: je     Stub::multiplyToLen+165 0x00007fb547836cc5
  0x00007fb547836cb9: mov    %ebx,(%r8,%r13,4)
  0x00007fb547836cbd: shr    $0x20,%rbx
  0x00007fb547836cc1: sub    $0x1,%r13d
  0x00007fb547836cc5: mov    %ebx,(%r8,%r13,4)
  0x00007fb547836cc9: xor    %ebx,%ebx
  0x00007fb547836ccb: mov    %ecx,%r12d
  0x00007fb547836cce: sub    $0x1,%r14d
  0x00007fb547836cd2: js     Stub::multiplyToLen+545 0x00007fb547836e41
  0x00007fb547836cd8: push   %r8
  0x00007fb547836cda: lea    0x4(%r8,%r14,4),%r8
  0x00007fb547836cdf: sub    $0x1,%r14d
  0x00007fb547836ce3: js     Stub::multiplyToLen+538 0x00007fb547836e3a
  0x00007fb547836ce9: mov    (%rdi,%r14,4),%rdx
  0x00007fb547836ced: rorx   $0x20,%rdx,%rdx
  0x00007fb547836cf3: push   %rdi
  0x00007fb547836cf4: push   %r14
  0x00007fb547836cf6: push   %rcx
  0x00007fb547836cf7: mov    %r12d,%ecx
  0x00007fb547836cfa: and    $0xfffffffc,%ecx
  0x00007fb547836cfd: shr    $0x2,%ecx
  0x00007fb547836d00: sub    $0x1,%ecx
  0x00007fb547836d03: js     Stub::multiplyToLen+365 0x00007fb547836d8d
  0x00007fb547836d09: sub    $0x4,%r12d
  0x00007fb547836d0d: mov    0x8(%rsi,%r12,4),%rax
  0x00007fb547836d12: rorx   $0x20,%rax,%rax
  0x00007fb547836d18: mov    (%rsi,%r12,4),%r13
  0x00007fb547836d1c: rorx   $0x20,%r13,%r13
  0x00007fb547836d22: mulx   %rax,%r14,%r15
  0x00007fb547836d27: mulx   %r13,%r11,%rdi
  0x00007fb547836d2c: mov    0x8(%r8,%r12,4),%rax
  0x00007fb547836d31: rorx   $0x20,%rax,%rax
  0x00007fb547836d37: mov    (%r8,%r12,4),%r13
  0x00007fb547836d3b: rorx   $0x20,%r13,%r13
  0x00007fb547836d41: adcx   %rbx,%r14
  0x00007fb547836d47: adox   %rax,%r14
  0x00007fb547836d4d: adcx   %r11,%r15
  0x00007fb547836d53: adox   %r13,%r15
  0x00007fb547836d59: mov    $0x0,%ebx
  0x00007fb547836d5e: adcx   %rbx,%rdi
  0x00007fb547836d64: adox   %rbx,%rdi
  0x00007fb547836d6a: mov    %rdi,%rbx
  0x00007fb547836d6d: mov    %r14d,0xc(%r8,%r12,4)
  0x00007fb547836d72: shr    $0x20,%r14
  0x00007fb547836d76: mov    %r14d,0x8(%r8,%r12,4)
  0x00007fb547836d7b: mov    %r15d,0x4(%r8,%r12,4)
  0x00007fb547836d80: shr    $0x20,%r15
  0x00007fb547836d84: mov    %r15d,(%r8,%r12,4)
  0x00007fb547836d88: jmpq   Stub::multiplyToLen+224 0x00007fb547836d00
  0x00007fb547836d8d: and    $0x3,%r12d
  0x00007fb547836d91: je     Stub::multiplyToLen+503 0x00007fb547836e17
  0x00007fb547836d97: sub    $0x2,%r12d
  0x00007fb547836d9b: js     Stub::multiplyToLen+440 0x00007fb547836dd8
  0x00007fb547836da1: mov    (%rsi,%r12,4),%rax
  0x00007fb547836da5: rorx   $0x20,%rax,%rax
  0x00007fb547836dab: mulx   %rax,%r14,%r15
  0x00007fb547836db0: mov    (%r8,%r12,4),%r13
  0x00007fb547836db4: rorx   $0x20,%r13,%r13
  0x00007fb547836dba: add    %rbx,%r14
  0x00007fb547836dbd: adc    $0x0,%r15
  0x00007fb547836dc1: add    %r13,%r14
  0x00007fb547836dc4: adc    $0x0,%r15
  0x00007fb547836dc8: mov    %r14d,0x4(%r8,%r12,4)
  0x00007fb547836dcd: shr    $0x20,%r14
  0x00007fb547836dd1: mov    %r14d,(%r8,%r12,4)
  0x00007fb547836dd5: mov    %r15,%rbx
  0x00007fb547836dd8: add    $0x2,%r12d
  0x00007fb547836ddc: and    $0x1,%r12d
  0x00007fb547836de0: sub    $0x1,%r12d
  0x00007fb547836de4: js     Stub::multiplyToLen+503 0x00007fb547836e17
  0x00007fb547836dea: mov    (%rsi,%r12,4),%r15d
  0x00007fb547836dee: mulx   %r15,%r14,%rdi
  0x00007fb547836df3: mov    (%r8,%r12,4),%r15d
  0x00007fb547836df7: add    %r15,%r14
  0x00007fb547836dfa: adc    $0x0,%rdi
  0x00007fb547836dfe: add    %rbx,%r14
  0x00007fb547836e01: adc    $0x0,%rdi
  0x00007fb547836e05: mov    %r14d,(%r8,%r12,4)
  0x00007fb547836e09: shr    $0x20,%r14
  0x00007fb547836e0d: shl    $0x20,%rdi
  0x00007fb547836e11: or     %rdi,%r14
  0x00007fb547836e14: mov    %r14,%rbx
  0x00007fb547836e17: pop    %rcx
  0x00007fb547836e18: pop    %rax
  0x00007fb547836e19: pop    %rdi
  0x00007fb547836e1a: pop    %r8
  0x00007fb547836e1c: mov    %eax,%r14d
  0x00007fb547836e1f: add    $0x1,%r14d
  0x00007fb547836e23: mov    %ebx,(%r8,%r14,4)
  0x00007fb547836e27: sub    $0x1,%r14d
  0x00007fb547836e2b: js     Stub::multiplyToLen+545 0x00007fb547836e41
  0x00007fb547836e2d: shr    $0x20,%rbx
  0x00007fb547836e31: mov    %ebx,(%r8,%r14,4)
  0x00007fb547836e35: jmpq   Stub::multiplyToLen+169 0x00007fb547836cc9
  0x00007fb547836e3a: mov    (%rdi),%edx
  0x00007fb547836e3c: jmpq   Stub::multiplyToLen+211 0x00007fb547836cf3
  0x00007fb547836e41: pop    %r11
  0x00007fb547836e43: pop    %rax
  0x00007fb547836e44: pop    %rbx
  0x00007fb547836e45: pop    %r15
  0x00007fb547836e47: pop    %r14
  0x00007fb547836e49: pop    %r13
  0x00007fb547836e4b: pop    %r12
  0x00007fb547836e4d: leaveq 
  0x00007fb547836e4e: retq   

StubRoutines::squareToLen [0x00007fb547836e60, 0x00007fb547836f83[ (291 bytes)
  0x00007fb547836e60: push   %rbp
  0x00007fb547836e61: mov    %rsp,%rbp
  0x00007fb547836e64: mov    %rdx,%r8
  0x00007fb547836e67: push   %r12
  0x00007fb547836e69: push   %r13
  0x00007fb547836e6b: push   %r14
  0x00007fb547836e6d: push   %r15
  0x00007fb547836e6f: push   %rbx
  0x00007fb547836e70: xor    %rbx,%rbx
  0x00007fb547836e73: xor    %rdx,%rdx
  0x00007fb547836e76: xor    %r12d,%r12d
  0x00007fb547836e79: xor    %r15d,%r15d
  0x00007fb547836e7c: test   $0x1,%esi
  0x00007fb547836e82: je     Stub::squareToLen+63 0x00007fb547836e9f
  0x00007fb547836e84: mov    (%rdi,%r12,4),%eax
  0x00007fb547836e88: imul   %rax,%rax
  0x00007fb547836e8c: shr    $0x1,%rax
  0x00007fb547836e90: adc    $0x0,%rbx
  0x00007fb547836e94: mov    %rax,(%r8,%r15,4)
  0x00007fb547836e98: inc    %r12d
  0x00007fb547836e9b: add    $0x2,%r15d
  0x00007fb547836e9f: cmp    %rsi,%r12
  0x00007fb547836ea2: je     Stub::squareToLen+112 0x00007fb547836ed0
  0x00007fb547836ea4: mov    (%rdi,%r12,4),%rax
  0x00007fb547836ea8: ror    $0x20,%rax
  0x00007fb547836eac: mul    %rax
  0x00007fb547836eaf: shr    $0x1,%rbx
  0x00007fb547836eb3: rcr    %rdx
  0x00007fb547836eb6: rcr    %rax
  0x00007fb547836eb9: adc    $0x0,%rbx
  0x00007fb547836ebd: mov    %rdx,(%r8,%r15,4)
  0x00007fb547836ec1: mov    %rax,0x8(%r8,%r15,4)
  0x00007fb547836ec6: add    $0x2,%r12d
  0x00007fb547836eca: add    $0x4,%r15d
  0x00007fb547836ece: jmp    Stub::squareToLen+63 0x00007fb547836e9f
  0x00007fb547836ed0: push   %rcx
  0x00007fb547836ed1: push   %rsi
  0x00007fb547836ed2: add    $0x2,%ecx
  0x00007fb547836ed5: xor    %rbx,%rbx
  0x00007fb547836ed8: sub    $0x4,%ecx
  0x00007fb547836edb: sub    $0x2,%esi
  0x00007fb547836ede: push   %rcx
  0x00007fb547836edf: push   %rsi
  0x00007fb547836ee0: cmp    $0x0,%esi
  0x00007fb547836ee3: jle    Stub::squareToLen+229 0x00007fb547836f45
  0x00007fb547836ee5: mov    (%rdi,%rsi,4),%rdx
  0x00007fb547836ee9: rorx   $0x20,%rdx,%rdx
  0x00007fb547836eef: dec    %esi
  0x00007fb547836ef1: js     Stub::squareToLen+194 0x00007fb547836f22
  0x00007fb547836ef3: dec    %esi
  0x00007fb547836ef5: js     Stub::squareToLen+224 0x00007fb547836f40
  0x00007fb547836ef7: mov    (%rdi,%rsi,4),%r15
  0x00007fb547836efb: ror    $0x20,%r15
  0x00007fb547836eff: sub    $0x2,%ecx
  0x00007fb547836f02: mov    (%r8,%rcx,4),%r14
  0x00007fb547836f06: mulx   %r15,%r15,%r13
  0x00007fb547836f0b: add    %rbx,%r14
  0x00007fb547836f0e: adc    $0x0,%r13
  0x00007fb547836f12: add    %r15,%r14
  0x00007fb547836f15: adc    $0x0,%r13
  0x00007fb547836f19: mov    %r13,%rbx
  0x00007fb547836f1c: mov    %r14,(%r8,%rcx,4)
  0x00007fb547836f20: jmp    Stub::squareToLen+143 0x00007fb547836eef
  0x00007fb547836f22: mov    $0x1,%r12d
  0x00007fb547836f28: sub    $0x2,%ecx
  0x00007fb547836f2b: add    %rbx,(%r8,%rcx,4)
  0x00007fb547836f2f: jae    Stub::squareToLen+220 0x00007fb547836f3c
  0x00007fb547836f31: sub    $0x2,%ecx
  0x00007fb547836f34: js     Stub::squareToLen+220 0x00007fb547836f3c
  0x00007fb547836f36: add    %r12,(%r8,%rcx,4)
  0x00007fb547836f3a: jmp    Stub::squareToLen+207 0x00007fb547836f2f
  0x00007fb547836f3c: pop    %rsi
  0x00007fb547836f3d: pop    %rcx
  0x00007fb547836f3e: jmp    Stub::squareToLen+117 0x00007fb547836ed5
  0x00007fb547836f40: mov    (%rdi),%r15d
  0x00007fb547836f43: jmp    Stub::squareToLen+159 0x00007fb547836eff
  0x00007fb547836f45: pop    %rsi
  0x00007fb547836f46: pop    %rcx
  0x00007fb547836f47: pop    %rsi
  0x00007fb547836f48: pop    %rcx
  0x00007fb547836f49: mov    %ecx,%r14d
  0x00007fb547836f4c: xor    %r12d,%r12d
  0x00007fb547836f4f: dec    %r14d
  0x00007fb547836f52: dec    %r14d
  0x00007fb547836f55: js     Stub::squareToLen+266 0x00007fb547836f6a
  0x00007fb547836f57: mov    (%r8,%r14,4),%r13
  0x00007fb547836f5b: rcl    %r13
  0x00007fb547836f5e: rorx   $0x20,%r13,%r13
  0x00007fb547836f64: mov    %r13,(%r8,%r14,4)
  0x00007fb547836f68: jmp    Stub::squareToLen+239 0x00007fb547836f4f
  0x00007fb547836f6a: mov    -0x4(%rdi,%rsi,4),%r14d
  0x00007fb547836f6f: and    $0x1,%r14d
  0x00007fb547836f73: or     %r14d,-0x4(%r8,%rcx,4)
  0x00007fb547836f78: pop    %rbx
  0x00007fb547836f79: pop    %r15
  0x00007fb547836f7b: pop    %r14
  0x00007fb547836f7d: pop    %r13
  0x00007fb547836f7f: pop    %r12
  0x00007fb547836f81: leaveq 
  0x00007fb547836f82: retq   

StubRoutines::mulAdd [0x00007fb547836fa0, 0x00007fb547837097[ (247 bytes)
  0x00007fb547836fa0: push   %rbp
  0x00007fb547836fa1: mov    %rsp,%rbp
  0x00007fb547836fa4: mov    %rdx,%r11
  0x00007fb547836fa7: push   %r12
  0x00007fb547836fa9: push   %r13
  0x00007fb547836fab: push   %r14
  0x00007fb547836fad: push   %r15
  0x00007fb547836faf: push   %rbx
  0x00007fb547836fb0: mov    %r8d,%edx
  0x00007fb547836fb3: xor    %rbx,%rbx
  0x00007fb547836fb6: mov    %ecx,%r12d
  0x00007fb547836fb9: shr    $0x2,%r12d
  0x00007fb547836fbd: sub    $0x1,%r12d
  0x00007fb547836fc1: js     Stub::mulAdd+139 0x00007fb54783702b
  0x00007fb547836fc3: sub    $0x4,%ecx
  0x00007fb547836fc6: sub    $0x4,%r11d
  0x00007fb547836fca: mov    0x8(%rsi,%rcx,4),%r15
  0x00007fb547836fcf: ror    $0x20,%r15
  0x00007fb547836fd3: mov    0x8(%rdi,%r11,4),%r14
  0x00007fb547836fd8: ror    $0x20,%r14
  0x00007fb547836fdc: mulx   %r15,%r15,%rax
  0x00007fb547836fe1: add    %rbx,%r14
  0x00007fb547836fe4: adc    $0x0,%rax
  0x00007fb547836fe8: add    %r15,%r14
  0x00007fb547836feb: adc    $0x0,%rax
  0x00007fb547836fef: mov    %rax,%rbx
  0x00007fb547836ff2: ror    $0x20,%r14
  0x00007fb547836ff6: mov    %r14,0x8(%rdi,%r11,4)
  0x00007fb547836ffb: mov    (%rsi,%rcx,4),%r15
  0x00007fb547836fff: ror    $0x20,%r15
  0x00007fb547837003: mov    (%rdi,%r11,4),%r14
  0x00007fb547837007: ror    $0x20,%r14
  0x00007fb54783700b: mulx   %r15,%r15,%rax
  0x00007fb547837010: add    %rbx,%r14
  0x00007fb547837013: adc    $0x0,%rax
  0x00007fb547837017: add    %r15,%r14
  0x00007fb54783701a: adc    $0x0,%rax
  0x00007fb54783701e: mov    %rax,%rbx
  0x00007fb547837021: ror    $0x20,%r14
  0x00007fb547837025: mov    %r14,(%rdi,%r11,4)
  0x00007fb547837029: jmp    Stub::mulAdd+29 0x00007fb547836fbd
  0x00007fb54783702b: dec    %ecx
  0x00007fb54783702d: js     Stub::mulAdd+234 0x00007fb54783708a
  0x00007fb54783702f: dec    %ecx
  0x00007fb547837031: js     Stub::mulAdd+201 0x00007fb547837069
  0x00007fb547837033: mov    (%rsi,%rcx,4),%r15
  0x00007fb547837037: ror    $0x20,%r15
  0x00007fb54783703b: sub    $0x2,%r11d
  0x00007fb54783703f: mov    (%rdi,%r11,4),%r14
  0x00007fb547837043: ror    $0x20,%r14
  0x00007fb547837047: mulx   %r15,%r15,%rax
  0x00007fb54783704c: add    %rbx,%r14
  0x00007fb54783704f: adc    $0x0,%rax
  0x00007fb547837053: add    %r15,%r14
  0x00007fb547837056: adc    $0x0,%rax
  0x00007fb54783705a: mov    %rax,%rbx
  0x00007fb54783705d: ror    $0x20,%r14
  0x00007fb547837061: mov    %r14,(%rdi,%r11,4)
  0x00007fb547837065: test   %ecx,%ecx
  0x00007fb547837067: je     Stub::mulAdd+234 0x00007fb54783708a
  0x00007fb547837069: mov    (%rsi),%r15d
  0x00007fb54783706c: mov    -0x4(%rdi,%r11,4),%r14d
  0x00007fb547837071: mov    %r8d,%eax
  0x00007fb547837074: mul    %r15d
  0x00007fb547837077: add    %ebx,%r14d
  0x00007fb54783707a: adc    $0x0,%edx
  0x00007fb54783707d: add    %eax,%r14d
  0x00007fb547837080: adc    $0x0,%edx
  0x00007fb547837083: mov    %edx,%ebx
  0x00007fb547837085: mov    %r14d,-0x4(%rdi,%r11,4)
  0x00007fb54783708a: mov    %ebx,%eax
  0x00007fb54783708c: pop    %rbx
  0x00007fb54783708d: pop    %r15
  0x00007fb54783708f: pop    %r14
  0x00007fb547837091: pop    %r13
  0x00007fb547837093: pop    %r12
  0x00007fb547837095: leaveq 
  0x00007fb547837096: retq   

StubRoutines::vectorizedMismatch [0x00007fb5478370a0, 0x00007fb54783721a[ (378 bytes)
  0x00007fb5478370a0: push   %rbp
  0x00007fb5478370a1: mov    %rsp,%rbp
  0x00007fb5478370a4: shl    %cl,%rdx
  0x00007fb5478370a7: xor    %rax,%rax
  0x00007fb5478370aa: cmp    $0x8,%rdx
  0x00007fb5478370ae: je     Stub::vectorizedMismatch+148 0x00007fb547837134
  0x00007fb5478370b4: jl     Stub::vectorizedMismatch+182 0x00007fb547837156
  0x00007fb5478370ba: cmp    $0x10,%rdx
  0x00007fb5478370be: je     Stub::vectorizedMismatch+103 0x00007fb547837107
  0x00007fb5478370c4: jl     Stub::vectorizedMismatch+148 0x00007fb547837134
  0x00007fb5478370ca: cmp    $0x20,%rdx
  0x00007fb5478370ce: jl     Stub::vectorizedMismatch+97 0x00007fb547837101
  0x00007fb5478370d0: sub    $0x20,%rdx
  0x00007fb5478370d4: vmovdqu (%rdi,%rax,1),%ymm0
  0x00007fb5478370d9: vmovdqu (%rsi,%rax,1),%ymm1
  0x00007fb5478370de: vpxor  %ymm1,%ymm0,%ymm2
  0x00007fb5478370e2: vptest %ymm2,%ymm2
  0x00007fb5478370e7: jne    Stub::vectorizedMismatch+291 0x00007fb5478371c3
  0x00007fb5478370ed: add    $0x20,%rax
  0x00007fb5478370f1: sub    $0x20,%rdx
  0x00007fb5478370f5: jge    Stub::vectorizedMismatch+52 0x00007fb5478370d4
  0x00007fb5478370f7: add    $0x20,%rdx
  0x00007fb5478370fb: je     Stub::vectorizedMismatch+363 0x00007fb54783720b
  0x00007fb547837101: cmp    $0x10,%rdx
  0x00007fb547837105: jl     Stub::vectorizedMismatch+142 0x00007fb54783712e
  0x00007fb547837107: vmovdqu (%rdi,%rax,1),%xmm0
  0x00007fb54783710c: vmovdqu (%rsi,%rax,1),%xmm1
  0x00007fb547837111: vpxor  %xmm1,%xmm0,%xmm2
  0x00007fb547837115: vptest %xmm2,%xmm2
  0x00007fb54783711a: jne    Stub::vectorizedMismatch+319 0x00007fb5478371df
  0x00007fb547837120: add    $0x10,%rax
  0x00007fb547837124: sub    $0x10,%rdx
  0x00007fb547837128: je     Stub::vectorizedMismatch+363 0x00007fb54783720b
  0x00007fb54783712e: cmp    $0x8,%rdx
  0x00007fb547837132: jl     Stub::vectorizedMismatch+182 0x00007fb547837156
  0x00007fb547837134: mov    (%rdi,%rax,1),%r8
  0x00007fb547837138: mov    (%rsi,%rax,1),%r9
  0x00007fb54783713c: xor    %r9,%r8
  0x00007fb54783713f: test   %r8,%r8
  0x00007fb547837142: jne    Stub::vectorizedMismatch+347 0x00007fb5478371fb
  0x00007fb547837148: add    $0x8,%rax
  0x00007fb54783714c: sub    $0x8,%rdx
  0x00007fb547837150: je     Stub::vectorizedMismatch+363 0x00007fb54783720b
  0x00007fb547837156: cmp    $0x4,%rdx
  0x00007fb54783715a: jl     Stub::vectorizedMismatch+219 0x00007fb54783717b
  0x00007fb54783715c: mov    (%rdi,%rax,1),%r8d
  0x00007fb547837160: xor    (%rsi,%rax,1),%r8d
  0x00007fb547837164: test   %r8d,%r8d
  0x00007fb547837167: jne    Stub::vectorizedMismatch+347 0x00007fb5478371fb
  0x00007fb54783716d: add    $0x4,%rax
  0x00007fb547837171: sub    $0x4,%rdx
  0x00007fb547837175: je     Stub::vectorizedMismatch+363 0x00007fb54783720b
  0x00007fb54783717b: movzbl (%rdi,%rax,1),%r8d
  0x00007fb547837180: movzbl (%rsi,%rax,1),%r9d
  0x00007fb547837185: xor    %r9d,%r8d
  0x00007fb547837188: test   %r8d,%r8d
  0x00007fb54783718b: jne    Stub::vectorizedMismatch+358 0x00007fb547837206
  0x00007fb54783718d: dec    %rdx
  0x00007fb547837190: je     Stub::vectorizedMismatch+363 0x00007fb54783720b
  0x00007fb547837192: inc    %rax
  0x00007fb547837195: movzbl (%rdi,%rax,1),%r8d
  0x00007fb54783719a: movzbl (%rsi,%rax,1),%r9d
  0x00007fb54783719f: xor    %r9d,%r8d
  0x00007fb5478371a2: test   %r8d,%r8d
  0x00007fb5478371a5: jne    Stub::vectorizedMismatch+358 0x00007fb547837206
  0x00007fb5478371a7: dec    %rdx
  0x00007fb5478371aa: je     Stub::vectorizedMismatch+363 0x00007fb54783720b
  0x00007fb5478371ac: inc    %rax
  0x00007fb5478371af: movzbl (%rdi,%rax,1),%r8d
  0x00007fb5478371b4: movzbl (%rsi,%rax,1),%r9d
  0x00007fb5478371b9: xor    %r9d,%r8d
  0x00007fb5478371bc: test   %r8d,%r8d
  0x00007fb5478371bf: jne    Stub::vectorizedMismatch+358 0x00007fb547837206
  0x00007fb5478371c1: jmp    Stub::vectorizedMismatch+363 0x00007fb54783720b
  0x00007fb5478371c3: vpcmpeqb %ymm2,%ymm2,%ymm2
  0x00007fb5478371c7: vpcmpeqb %ymm1,%ymm0,%ymm0
  0x00007fb5478371cb: vpxor  %ymm2,%ymm0,%ymm0
  0x00007fb5478371cf: vpmovmskb %ymm0,%r8d
  0x00007fb5478371d3: bsf    %r8,%r8
  0x00007fb5478371d7: add    %r8,%rax
  0x00007fb5478371da: shr    %cl,%rax
  0x00007fb5478371dd: jmp    Stub::vectorizedMismatch+373 0x00007fb547837215
  0x00007fb5478371df: vpcmpeqb %xmm2,%xmm2,%xmm2
  0x00007fb5478371e3: vpcmpeqb %xmm1,%xmm0,%xmm0
  0x00007fb5478371e7: vpxor  %xmm2,%xmm0,%xmm0
  0x00007fb5478371eb: vpmovmskb %xmm0,%r8d
  0x00007fb5478371ef: bsf    %r8,%r8
  0x00007fb5478371f3: add    %r8,%rax
  0x00007fb5478371f6: shr    %cl,%rax
  0x00007fb5478371f9: jmp    Stub::vectorizedMismatch+373 0x00007fb547837215
  0x00007fb5478371fb: bsf    %r8,%r8
  0x00007fb5478371ff: shr    $0x3,%r8
  0x00007fb547837203: add    %r8,%rax
  0x00007fb547837206: shr    %cl,%rax
  0x00007fb547837209: jmp    Stub::vectorizedMismatch+373 0x00007fb547837215
  0x00007fb54783720b: movabs $0xffffffffffffffff,%rax
  0x00007fb547837215: vzeroupper 
  0x00007fb547837218: leaveq 
  0x00007fb547837219: retq   

MethodHandle::interpreter_entry::_invokeGeneric [0x00007fb547826280, 0x00007fb547826281[ (1 bytes)
  0x00007fb547826280: hlt    

MethodHandle::interpreter_entry::_invokeBasic [0x00007fb547826281, 0x00007fb5478262d6[ (85 bytes)
  0x00007fb547826281: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782628c: data16 data16 xchg %ax,%ax
  0x00007fb547826290: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54782629b: data16 data16 xchg %ax,%ax
  0x00007fb54782629f: nop
  0x00007fb5478262a0: mov    0x8(%rbx),%rdx
  0x00007fb5478262a4: movzwl 0x34(%rdx),%edx
  0x00007fb5478262a8: mov    (%rsp,%rdx,8),%rcx
  0x00007fb5478262ac: mov    0x14(%rcx),%ebx
  0x00007fb5478262af: shl    $0x3,%rbx
  0x00007fb5478262b3: mov    0x28(%rbx),%ebx
  0x00007fb5478262b6: shl    $0x3,%rbx
  0x00007fb5478262ba: mov    0x24(%rbx),%ebx
  0x00007fb5478262bd: shl    $0x3,%rbx
  0x00007fb5478262c1: mov    0x10(%rbx),%rbx
  0x00007fb5478262c5: test   %rbx,%rbx
  0x00007fb5478262c8: je     0x00007fb5478262d1
  0x00007fb5478262ce: jmpq   *0x48(%rbx)
  0x00007fb5478262d1: jmpq   0x00007fb54782e600

MethodHandle::interpreter_entry::_linkToVirtual [0x00007fb5478262d6, 0x00007fb547826320[ (74 bytes)
  0x00007fb5478262d6: data16 nopw 0x0(%rax,%rax,1)
  0x00007fb5478262e0: mov    0x8(%rbx),%rdx
  0x00007fb5478262e4: movzwl 0x34(%rdx),%edx
  0x00007fb5478262e8: mov    (%rsp,%rdx,8),%rcx
  0x00007fb5478262ec: pop    %rax
  0x00007fb5478262ed: pop    %rbx
  0x00007fb5478262ee: push   %rax
  0x00007fb5478262ef: mov    0x8(%rcx),%r10d
  0x00007fb5478262f3: movabs $0x800000000,%r12
  0x00007fb5478262fd: add    %r12,%r10
  0x00007fb547826300: xor    %r12,%r12
  0x00007fb547826303: mov    0x10(%rbx),%r11
  0x00007fb547826307: mov    0x1d0(%r10,%r11,8),%rbx
  0x00007fb54782630f: test   %rbx,%rbx
  0x00007fb547826312: je     0x00007fb54782631b
  0x00007fb547826318: jmpq   *0x48(%rbx)
  0x00007fb54782631b: jmpq   0x00007fb54782e600

MethodHandle::interpreter_entry::_linkToStatic [0x00007fb547826320, 0x00007fb54782633f[ (31 bytes)
  0x00007fb547826320: pop    %rax
  0x00007fb547826321: pop    %rbx
  0x00007fb547826322: push   %rax
  0x00007fb547826323: mov    0x24(%rbx),%ebx
  0x00007fb547826326: shl    $0x3,%rbx
  0x00007fb54782632a: mov    0x10(%rbx),%rbx
  0x00007fb54782632e: test   %rbx,%rbx
  0x00007fb547826331: je     0x00007fb54782633a
  0x00007fb547826337: jmpq   *0x48(%rbx)
  0x00007fb54782633a: jmpq   0x00007fb54782e600

MethodHandle::interpreter_entry::_linkToSpecial [0x00007fb54782633f, 0x00007fb54782636e[ (47 bytes)
  0x00007fb54782633f: nop
  0x00007fb547826340: mov    0x8(%rbx),%rdx
  0x00007fb547826344: movzwl 0x34(%rdx),%edx
  0x00007fb547826348: mov    (%rsp,%rdx,8),%rcx
  0x00007fb54782634c: pop    %rax
  0x00007fb54782634d: pop    %rbx
  0x00007fb54782634e: push   %rax
  0x00007fb54782634f: cmp    (%rcx),%rax
  0x00007fb547826352: mov    0x24(%rbx),%ebx
  0x00007fb547826355: shl    $0x3,%rbx
  0x00007fb547826359: mov    0x10(%rbx),%rbx
  0x00007fb54782635d: test   %rbx,%rbx
  0x00007fb547826360: je     0x00007fb547826369
  0x00007fb547826366: jmpq   *0x48(%rbx)
  0x00007fb547826369: jmpq   0x00007fb54782e600

MethodHandle::interpreter_entry::_linkToInterface [0x00007fb54782636e, 0x00007fb547826400[ (146 bytes)
  0x00007fb54782636e: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb547826379: data16 data16 xchg %ax,%ax
  0x00007fb54782637d: data16 xchg %ax,%ax
  0x00007fb547826380: mov    0x8(%rbx),%rdx
  0x00007fb547826384: movzwl 0x34(%rdx),%edx
  0x00007fb547826388: mov    (%rsp,%rdx,8),%rcx
  0x00007fb54782638c: pop    %rax
  0x00007fb54782638d: pop    %rbx
  0x00007fb54782638e: push   %rax
  0x00007fb54782638f: mov    0x8(%rcx),%r10d
  0x00007fb547826393: movabs $0x800000000,%r12
  0x00007fb54782639d: add    %r12,%r10
  0x00007fb5478263a0: xor    %r12,%r12
  0x00007fb5478263a3: mov    0x18(%rbx),%eax
  0x00007fb5478263a6: shl    $0x3,%rax
  0x00007fb5478263aa: mov    0x50(%rax),%rax
  0x00007fb5478263ae: mov    0x10(%rbx),%rbx
  0x00007fb5478263b2: mov    0xc4(%r10),%r11d
  0x00007fb5478263b9: lea    0x1d0(%r10,%r11,8),%r11
  0x00007fb5478263c1: lea    (%r10,%rbx,8),%r10
  0x00007fb5478263c5: mov    (%r11),%rbx
  0x00007fb5478263c8: cmp    %rbx,%rax
  0x00007fb5478263cb: je     0x00007fb5478263e2
  0x00007fb5478263cd: test   %rbx,%rbx
  0x00007fb5478263d0: je     0x00007fb5478263fb
  0x00007fb5478263d6: add    $0x10,%r11
  0x00007fb5478263da: mov    (%r11),%rbx
  0x00007fb5478263dd: cmp    %rbx,%rax
  0x00007fb5478263e0: jne    0x00007fb5478263cd
  0x00007fb5478263e2: mov    0x8(%r11),%r11d
  0x00007fb5478263e6: mov    (%r10,%r11,1),%rbx
  0x00007fb5478263ea: test   %rbx,%rbx
  0x00007fb5478263ed: je     0x00007fb5478263f6
  0x00007fb5478263f3: jmpq   *0x48(%rbx)
  0x00007fb5478263f6: jmpq   0x00007fb54782e600
  0x00007fb5478263fb: jmpq   0x00007fb54782e300

<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31616'/>
</blob>
VM_Version_Ext::getCPUIDNameInfo_stub [0x00007fb54782e900, 0x00007fb54782e9e2[ (226 bytes)
  0x00007fb54782e900: push   %rbp
  0x00007fb54782e901: mov    %rdi,%rbp
  0x00007fb54782e904: push   %rbx
  0x00007fb54782e905: push   %rsi
  0x00007fb54782e906: pushfq 
  0x00007fb54782e907: pop    %rax
  0x00007fb54782e908: push   %rax
  0x00007fb54782e909: mov    %rax,%rcx
  0x00007fb54782e90c: xor    $0x40000,%eax
  0x00007fb54782e912: push   %rax
  0x00007fb54782e913: popfq  
  0x00007fb54782e914: pushfq 
  0x00007fb54782e915: pop    %rax
  0x00007fb54782e916: cmp    %rcx,%rax
  0x00007fb54782e919: jne    0x00007fb54782e925
  0x00007fb54782e91b: mov    $0x300,%eax
  0x00007fb54782e920: jmpq   0x00007fb54782e9dd
  0x00007fb54782e925: mov    %rcx,%rax
  0x00007fb54782e928: xor    $0x200000,%eax
  0x00007fb54782e92e: push   %rax
  0x00007fb54782e92f: popfq  
  0x00007fb54782e930: pushfq 
  0x00007fb54782e931: pop    %rax
  0x00007fb54782e932: cmp    %rax,%rcx
  0x00007fb54782e935: jne    0x00007fb54782e941
  0x00007fb54782e937: mov    $0x400,%eax
  0x00007fb54782e93c: jmpq   0x00007fb54782e9dd
  0x00007fb54782e941: xor    %eax,%eax
  0x00007fb54782e943: cpuid  
  0x00007fb54782e945: or     %eax,%eax
  0x00007fb54782e947: je     0x00007fb54782e937
  0x00007fb54782e949: mov    $0x80000000,%eax
  0x00007fb54782e94e: cpuid  
  0x00007fb54782e950: cmp    $0x80000004,%eax
  0x00007fb54782e956: jb     0x00007fb54782e9dd
  0x00007fb54782e95c: mov    $0x80000002,%eax
  0x00007fb54782e961: cpuid  
  0x00007fb54782e963: lea    0x90(%rbp),%rsi
  0x00007fb54782e96a: mov    %eax,(%rsi)
  0x00007fb54782e96c: lea    0x94(%rbp),%rsi
  0x00007fb54782e973: mov    %ebx,(%rsi)
  0x00007fb54782e975: lea    0x98(%rbp),%rsi
  0x00007fb54782e97c: mov    %ecx,(%rsi)
  0x00007fb54782e97e: lea    0x9c(%rbp),%rsi
  0x00007fb54782e985: mov    %edx,(%rsi)
  0x00007fb54782e987: mov    $0x80000003,%eax
  0x00007fb54782e98c: cpuid  
  0x00007fb54782e98e: lea    0xa0(%rbp),%rsi
  0x00007fb54782e995: mov    %eax,(%rsi)
  0x00007fb54782e997: lea    0xa4(%rbp),%rsi
  0x00007fb54782e99e: mov    %ebx,(%rsi)
  0x00007fb54782e9a0: lea    0xa8(%rbp),%rsi
  0x00007fb54782e9a7: mov    %ecx,(%rsi)
  0x00007fb54782e9a9: lea    0xac(%rbp),%rsi
  0x00007fb54782e9b0: mov    %edx,(%rsi)
  0x00007fb54782e9b2: mov    $0x80000004,%eax
  0x00007fb54782e9b7: cpuid  
  0x00007fb54782e9b9: lea    0xb0(%rbp),%rsi
  0x00007fb54782e9c0: mov    %eax,(%rsi)
  0x00007fb54782e9c2: lea    0xb4(%rbp),%rsi
  0x00007fb54782e9c9: mov    %ebx,(%rsi)
  0x00007fb54782e9cb: lea    0xb8(%rbp),%rsi
  0x00007fb54782e9d2: mov    %ecx,(%rsi)
  0x00007fb54782e9d4: lea    0xbc(%rbp),%rsi
  0x00007fb54782e9db: mov    %edx,(%rsi)
  0x00007fb54782e9dd: popfq  
  0x00007fb54782e9de: pop    %rsi
  0x00007fb54782e9df: pop    %rbx
  0x00007fb54782e9e0: pop    %rbp
  0x00007fb54782e9e1: retq   


argument handler #0 for: static java.lang.Object.registerNatives()V (fingerprint = 349, 11 bytes generated)
  0x00007fb54784bc00: movabs $0x7fb54780cab8,%rax
  0x00007fb54784bc0a: retq   

argument handler #1 for: static java.lang.Thread.currentThread()Ljava/lang/Thread; (fingerprint = 345, 11 bytes generated)
  0x00007fb54784bc0b: movabs $0x7fb54780cabb,%rax
  0x00007fb54784bc15: retq   

argument handler #2 for: receiver java.lang.Thread.setPriority0(I)V (fingerprint = 5308, 18 bytes generated)
  0x00007fb54784bc16: lea    (%r14),%rsi
  0x00007fb54784bc19: mov    -0x8(%r14),%edx
  0x00007fb54784bc1d: movabs $0x7fb54780cab8,%rax
  0x00007fb54784bc27: retq   

argument handler #3 for: static java.lang.Class.desiredAssertionStatus0(Ljava/lang/Class;)Z (fingerprint = 5417, 27 bytes generated)
  0x00007fb54784bc28: lea    (%r14),%rax
  0x00007fb54784bc2b: xor    %edx,%edx
  0x00007fb54784bc2d: cmpq   $0x0,(%r14)
  0x00007fb54784bc34: cmovne %rax,%rdx
  0x00007fb54784bc38: movabs $0x7fb54780caa0,%rax
  0x00007fb54784bc42: retq   

argument handler #4 for: receiver java.lang.Runtime.availableProcessors()I (fingerprint = 340, 14 bytes generated)
  0x00007fb54784bc43: lea    (%r14),%rsi
  0x00007fb54784bc46: movabs $0x7fb54780cab6,%rax
  0x00007fb54784bc50: retq   

argument handler #5 for: static java.lang.Class.getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class; (fingerprint = 5433, 27 bytes generated)
  0x00007fb54784bc51: lea    (%r14),%rax
  0x00007fb54784bc54: xor    %edx,%edx
  0x00007fb54784bc56: cmpq   $0x0,(%r14)
  0x00007fb54784bc5d: cmovne %rax,%rdx
  0x00007fb54784bc61: movabs $0x7fb54780cabb,%rax
  0x00007fb54784bc6b: retq   

argument handler #6 for: receiver jdk.internal.misc.Unsafe.arrayBaseOffset0(Ljava/lang/Class;)I (fingerprint = 5428, 32 bytes generated)
  0x00007fb54784bc6c: lea    (%r14),%rsi
  0x00007fb54784bc6f: lea    -0x8(%r14),%rax
  0x00007fb54784bc73: xor    %edx,%edx
  0x00007fb54784bc75: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bc7d: cmovne %rax,%rdx
  0x00007fb54784bc81: movabs $0x7fb54780cab6,%rax
  0x00007fb54784bc8b: retq   

argument handler #7 for: receiver jdk.internal.misc.Unsafe.isBigEndian0()Z (fingerprint = 328, 14 bytes generated)
  0x00007fb54784bc8c: lea    (%r14),%rsi
  0x00007fb54784bc8f: movabs $0x7fb54780caa0,%rax
  0x00007fb54784bc99: retq   

argument handler #8 for: receiver jdk.internal.misc.Unsafe.objectFieldOffset1(Ljava/lang/Class;Ljava/lang/String;)J (fingerprint = 86838, 50 bytes generated)
  0x00007fb54784bc9a: lea    (%r14),%rsi
  0x00007fb54784bc9d: lea    -0x8(%r14),%rax
  0x00007fb54784bca1: xor    %edx,%edx
  0x00007fb54784bca3: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bcab: cmovne %rax,%rdx
  0x00007fb54784bcaf: lea    -0x10(%r14),%rax
  0x00007fb54784bcb3: xor    %ecx,%ecx
  0x00007fb54784bcb5: cmpq   $0x0,-0x10(%r14)
  0x00007fb54784bcbd: cmovne %rax,%rcx
  0x00007fb54784bcc1: movabs $0x7fb54780cab7,%rax
  0x00007fb54784bccb: retq   

argument handler #9 for: receiver java.lang.Class.initClassName()Ljava/lang/String; (fingerprint = 344, 14 bytes generated)
  0x00007fb54784bccc: lea    (%r14),%rsi
  0x00007fb54784bccf: movabs $0x7fb54780cabb,%rax
  0x00007fb54784bcd9: retq   

argument handler #10 for: static java.lang.Class.forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class; (fingerprint = 22225721, 69 bytes generated)
  0x00007fb54784bcda: lea    (%r14),%rax
  0x00007fb54784bcdd: xor    %edx,%edx
  0x00007fb54784bcdf: cmpq   $0x0,(%r14)
  0x00007fb54784bce6: cmovne %rax,%rdx
  0x00007fb54784bcea: mov    -0x8(%r14),%ecx
  0x00007fb54784bcee: lea    -0x10(%r14),%rax
  0x00007fb54784bcf2: xor    %r8d,%r8d
  0x00007fb54784bcf5: cmpq   $0x0,-0x10(%r14)
  0x00007fb54784bcfd: cmovne %rax,%r8
  0x00007fb54784bd01: lea    -0x18(%r14),%rax
  0x00007fb54784bd05: xor    %r9d,%r9d
  0x00007fb54784bd08: cmpq   $0x0,-0x18(%r14)
  0x00007fb54784bd10: cmovne %rax,%r9
  0x00007fb54784bd14: movabs $0x7fb54780cabb,%rax
  0x00007fb54784bd1e: retq   

argument handler #11 for: receiver java.lang.Thread.start0()V (fingerprint = 348, 14 bytes generated)
  0x00007fb54784bd1f: lea    (%r14),%rsi
  0x00007fb54784bd22: movabs $0x7fb54780cab8,%rax
  0x00007fb54784bd2c: retq   
<writer thread='1329932'/>

argument handler #12 for: receiver java.lang.Object.wait(J)V (fingerprint = 5340, 18 bytes generated)
  0x00007fb54784bd2d: lea    (%r14),%rsi
  0x00007fb54784bd30: mov    -0x10(%r14),%rdx
  0x00007fb54784bd34: movabs $0x7fb54780cab8,%rax
  0x00007fb54784bd3e: retq   
<writer thread='1329923'/>

argument handler #13 for: receiver jdk.internal.misc.Unsafe.compareAndSetInt(Ljava/lang/Object;JII)Z (fingerprint = 21671208, 44 bytes generated)
  0x00007fb54784bd3f: lea    (%r14),%rsi
  0x00007fb54784bd42: lea    -0x8(%r14),%rax
  0x00007fb54784bd46: xor    %edx,%edx
  0x00007fb54784bd48: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bd50: cmovne %rax,%rdx
  0x00007fb54784bd54: mov    -0x18(%r14),%rcx
  0x00007fb54784bd58: mov    -0x20(%r14),%r8d
  0x00007fb54784bd5c: mov    -0x28(%r14),%r9d
  0x00007fb54784bd60: movabs $0x7fb54780caa0,%rax
  0x00007fb54784bd6a: retq   

argument handler #14 for: receiver jdk.internal.misc.Unsafe.getObjectVolatile(Ljava/lang/Object;J)Ljava/lang/Object; (fingerprint = 85304, 36 bytes generated)
  0x00007fb54784bd6b: lea    (%r14),%rsi
  0x00007fb54784bd6e: lea    -0x8(%r14),%rax
  0x00007fb54784bd72: xor    %edx,%edx
  0x00007fb54784bd74: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bd7c: cmovne %rax,%rdx
  0x00007fb54784bd80: mov    -0x18(%r14),%rcx
  0x00007fb54784bd84: movabs $0x7fb54780cabb,%rax
  0x00007fb54784bd8e: retq   

argument handler #15 for: receiver jdk.internal.misc.Unsafe.compareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z (fingerprint = 22228264, 74 bytes generated)
  0x00007fb54784bd8f: lea    (%r14),%rsi
  0x00007fb54784bd92: lea    -0x8(%r14),%rax
  0x00007fb54784bd96: xor    %edx,%edx
  0x00007fb54784bd98: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bda0: cmovne %rax,%rdx
  0x00007fb54784bda4: mov    -0x18(%r14),%rcx
  0x00007fb54784bda8: lea    -0x20(%r14),%rax
  0x00007fb54784bdac: xor    %r8d,%r8d
  0x00007fb54784bdaf: cmpq   $0x0,-0x20(%r14)
  0x00007fb54784bdb7: cmovne %rax,%r8
  0x00007fb54784bdbb: lea    -0x28(%r14),%rax
  0x00007fb54784bdbf: xor    %r9d,%r9d
  0x00007fb54784bdc2: cmpq   $0x0,-0x28(%r14)
  0x00007fb54784bdca: cmovne %rax,%r9
  0x00007fb54784bdce: movabs $0x7fb54780caa0,%rax
  0x00007fb54784bdd8: retq   

argument handler #16 for: receiver jdk.internal.misc.Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z (fingerprint = 21810472, 44 bytes generated)
  0x00007fb54784bdd9: lea    (%r14),%rsi
  0x00007fb54784bddc: lea    -0x8(%r14),%rax
  0x00007fb54784bde0: xor    %edx,%edx
  0x00007fb54784bde2: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bdea: cmovne %rax,%rdx
  0x00007fb54784bdee: mov    -0x18(%r14),%rcx
  0x00007fb54784bdf2: mov    -0x28(%r14),%r8
  0x00007fb54784bdf6: mov    -0x38(%r14),%r9
  0x00007fb54784bdfa: movabs $0x7fb54780caa0,%rax
  0x00007fb54784be04: retq   

argument handler #17 for: static java.lang.reflect.Array.newArray(Ljava/lang/Class;I)Ljava/lang/Object; (fingerprint = 84793, 31 bytes generated)
  0x00007fb54784be05: lea    (%r14),%rax
  0x00007fb54784be08: xor    %edx,%edx
  0x00007fb54784be0a: cmpq   $0x0,(%r14)
  0x00007fb54784be11: cmovne %rax,%rdx
  0x00007fb54784be15: mov    -0x8(%r14),%ecx
  0x00007fb54784be19: movabs $0x7fb54780cabb,%rax
  0x00007fb54784be23: retq   

argument handler #18 for: static jdk.internal.misc.VM.initializeFromArchive(Ljava/lang/Class;)V (fingerprint = 5437, 27 bytes generated)
  0x00007fb54784be24: lea    (%r14),%rax
  0x00007fb54784be27: xor    %edx,%edx
  0x00007fb54784be29: cmpq   $0x0,(%r14)
  0x00007fb54784be30: cmovne %rax,%rdx
  0x00007fb54784be34: movabs $0x7fb54780cab8,%rax
  0x00007fb54784be3e: retq   

argument handler #19 for: static java.lang.Float.floatToRawIntBits(F)I (fingerprint = 5365, 16 bytes generated)
  0x00007fb54784be3f: vmovss (%r14),%xmm0
  0x00007fb54784be44: movabs $0x7fb54780cab6,%rax
  0x00007fb54784be4e: retq   

argument handler #20 for: static java.lang.Double.doubleToRawLongBits(D)J (fingerprint = 5399, 17 bytes generated)
  0x00007fb54784be4f: vmovsd -0x8(%r14),%xmm0
  0x00007fb54784be55: movabs $0x7fb54780cab7,%rax
  0x00007fb54784be5f: retq   

argument handler #21 for: static java.lang.Double.longBitsToDouble(J)D (fingerprint = 5327, 15 bytes generated)
  0x00007fb54784be60: mov    -0x8(%r14),%rdx
  0x00007fb54784be64: movabs $0x7fb54780caba,%rax
  0x00007fb54784be6e: retq   

argument handler #22 for: receiver java.lang.Runtime.maxMemory()J (fingerprint = 342, 14 bytes generated)
  0x00007fb54784be6f: lea    (%r14),%rsi
  0x00007fb54784be72: movabs $0x7fb54780cab7,%rax
  0x00007fb54784be7c: retq   

argument handler #23 for: receiver jdk.internal.misc.Unsafe.putObjectVolatile(Ljava/lang/Object;JLjava/lang/Object;)V (fingerprint = 1387836, 55 bytes generated)
  0x00007fb54784be7d: lea    (%r14),%rsi
  0x00007fb54784be80: lea    -0x8(%r14),%rax
  0x00007fb54784be84: xor    %edx,%edx
  0x00007fb54784be86: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784be8e: cmovne %rax,%rdx
  0x00007fb54784be92: mov    -0x18(%r14),%rcx
  0x00007fb54784be96: lea    -0x20(%r14),%rax
  0x00007fb54784be9a: xor    %r8d,%r8d
  0x00007fb54784be9d: cmpq   $0x0,-0x20(%r14)
  0x00007fb54784bea5: cmovne %rax,%r8
  0x00007fb54784bea9: movabs $0x7fb54780cab8,%rax
  0x00007fb54784beb3: retq   

argument handler #24 for: static java.io.FileDescriptor.getHandle(I)J (fingerprint = 5303, 14 bytes generated)
  0x00007fb54784beb4: mov    (%r14),%edx
  0x00007fb54784beb7: movabs $0x7fb54780cab7,%rax
  0x00007fb54784bec1: retq   

argument handler #25 for: static java.io.FileDescriptor.getAppend(I)Z (fingerprint = 5289, 14 bytes generated)
  0x00007fb54784bec2: mov    (%r14),%edx
  0x00007fb54784bec5: movabs $0x7fb54780caa0,%rax
  0x00007fb54784becf: retq   

argument handler #26 for: receiver jdk.internal.misc.Unsafe.getIntVolatile(Ljava/lang/Object;J)I (fingerprint = 85300, 36 bytes generated)
  0x00007fb54784bed0: lea    (%r14),%rsi
  0x00007fb54784bed3: lea    -0x8(%r14),%rax
  0x00007fb54784bed7: xor    %edx,%edx
  0x00007fb54784bed9: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bee1: cmovne %rax,%rdx
  0x00007fb54784bee5: mov    -0x18(%r14),%rcx
  0x00007fb54784bee9: movabs $0x7fb54780cab6,%rax
  0x00007fb54784bef3: retq   

argument handler #27 for: static java.lang.System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V (fingerprint = 346762045, 62 bytes generated)
  0x00007fb54784bef4: lea    (%r14),%rax
  0x00007fb54784bef7: xor    %edx,%edx
  0x00007fb54784bef9: cmpq   $0x0,(%r14)
  0x00007fb54784bf00: cmovne %rax,%rdx
  0x00007fb54784bf04: mov    -0x8(%r14),%ecx
  0x00007fb54784bf08: lea    -0x10(%r14),%rax
  0x00007fb54784bf0c: xor    %r8d,%r8d
  0x00007fb54784bf0f: cmpq   $0x0,-0x10(%r14)
  0x00007fb54784bf17: cmovne %rax,%r8
  0x00007fb54784bf1b: mov    -0x18(%r14),%r9d
  0x00007fb54784bf1f: mov    -0x20(%r14),%eax
  0x00007fb54784bf23: mov    %eax,0x8(%rsp)
  0x00007fb54784bf27: movabs $0x7fb54780cab8,%rax
  0x00007fb54784bf31: retq   

argument handler #28 for: static jdk.internal.misc.Signal.findSignal0(Ljava/lang/String;)I (fingerprint = 5429, 27 bytes generated)
  0x00007fb54784bf32: lea    (%r14),%rax
  0x00007fb54784bf35: xor    %edx,%edx
  0x00007fb54784bf37: cmpq   $0x0,(%r14)
  0x00007fb54784bf3e: cmovne %rax,%rdx
  0x00007fb54784bf42: movabs $0x7fb54780cab6,%rax
  0x00007fb54784bf4c: retq   

argument handler #29 for: static jdk.internal.misc.Signal.handle0(IJ)J (fingerprint = 85175, 18 bytes generated)
  0x00007fb54784bf4d: mov    (%r14),%edx
  0x00007fb54784bf50: mov    -0x10(%r14),%rcx
  0x00007fb54784bf54: movabs $0x7fb54780cab7,%rax
  0x00007fb54784bf5e: retq   
<writer thread='1329935'/>
<thread_logfile thread='1329935' filename='/tmp/hs_c1329935_pid1329904.log'/>
Decoding ExceptionBlob 0x00007fb547861290
  0x00007fb547861300: push   %rdx
  0x00007fb547861301: sub    $0x8,%rsp
  0x00007fb547861305: mov    %rbp,(%rsp)
  0x00007fb547861309: mov    %rax,0x440(%r15)
  0x00007fb547861310: mov    %rdx,0x448(%r15)
  0x00007fb547861317: vzeroupper 
  0x00007fb54786131a: movabs $0x7fb547861317,%r10
  0x00007fb547861324: mov    %r10,0x330(%r15)
  0x00007fb54786132b: mov    %rsp,0x328(%r15)
  0x00007fb547861332: mov    %r15,%rdi
  0x00007fb547861335: and    $0xfffffffffffffff0,%rsp
  0x00007fb547861339: callq  0x00007fb565137520 = OptoRuntime::handle_exception_C(JavaThread*)
  0x00007fb54786133e: movabs $0x0,%r10
  0x00007fb547861348: mov    %r10,0x328(%r15)
  0x00007fb54786134f: movabs $0x0,%r10
  0x00007fb547861359: mov    %r10,0x330(%r15)
  0x00007fb547861360: vzeroupper 
  0x00007fb547861363: mov    (%rsp),%rbp
  0x00007fb547861367: add    $0x8,%rsp
  0x00007fb54786136b: pop    %rdx
  0x00007fb54786136c: mov    %rax,%r8
  0x00007fb54786136f: mov    0x440(%r15),%rax
  0x00007fb547861376: mov    0x448(%r15),%rdx
  0x00007fb54786137d: movq   $0x0,0x440(%r15)
  0x00007fb547861388: jmpq   *%r8
  0x00007fb54786138b: hlt    
  0x00007fb54786138c: hlt    
  0x00007fb54786138d: hlt    
  0x00007fb54786138e: hlt    
  0x00007fb54786138f: hlt    

<writer thread='1329936'/>
<thread_logfile thread='1329936' filename='/tmp/hs_c1329936_pid1329904.log'/>
Decoding RuntimeStub - dtrace_object_alloc Runtime1 stub 0x00007fb547860f90
  0x00007fb547861000: push   %rbp
  0x00007fb547861001: mov    %rsp,%rbp
  0x00007fb547861004: mov    %rsp,-0x28(%rsp)
  0x00007fb547861009: sub    $0x80,%rsp
  0x00007fb547861010: mov    %rax,0x78(%rsp)
  0x00007fb547861015: mov    %rcx,0x70(%rsp)
  0x00007fb54786101a: mov    %rdx,0x68(%rsp)
  0x00007fb54786101f: mov    %rbx,0x60(%rsp)
  0x00007fb547861024: mov    %rbp,0x50(%rsp)
  0x00007fb547861029: mov    %rsi,0x48(%rsp)
  0x00007fb54786102e: mov    %rdi,0x40(%rsp)
  0x00007fb547861033: mov    %r8,0x38(%rsp)
  0x00007fb547861038: mov    %r9,0x30(%rsp)
  0x00007fb54786103d: mov    %r10,0x28(%rsp)
  0x00007fb547861042: mov    %r11,0x20(%rsp)
  0x00007fb547861047: mov    %r12,0x18(%rsp)
  0x00007fb54786104c: mov    %r13,0x10(%rsp)
  0x00007fb547861051: mov    %r14,0x8(%rsp)
  0x00007fb547861056: mov    %r15,(%rsp)
  0x00007fb54786105a: sub    $0x3f0,%rsp
  0x00007fb547861061: vmovsd %xmm0,0x8(%rsp)
  0x00007fb547861067: vmovsd %xmm1,0x10(%rsp)
  0x00007fb54786106d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb547861073: vmovsd %xmm3,0x20(%rsp)
  0x00007fb547861079: vmovsd %xmm4,0x28(%rsp)
  0x00007fb54786107f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb547861085: vmovsd %xmm6,0x38(%rsp)
  0x00007fb54786108b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb547861091: vmovsd %xmm8,0x48(%rsp)
  0x00007fb547861097: vmovsd %xmm9,0x50(%rsp)
  0x00007fb54786109d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478610a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478610a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478610af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478610b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478610bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478610c4: mov    %rax,%rdi
  0x00007fb5478610c7: callq  0x00007fb56514b0f0 = SharedRuntime::dtrace_object_alloc(oopDesc*, int)
  0x00007fb5478610cc: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478610d2: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478610d8: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478610de: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478610e4: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478610ea: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478610f0: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478610f6: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478610fc: vmovsd 0x48(%rsp),%xmm8
  0x00007fb547861102: vmovsd 0x50(%rsp),%xmm9
  0x00007fb547861108: vmovsd 0x58(%rsp),%xmm10
  0x00007fb54786110e: vmovsd 0x60(%rsp),%xmm11
  0x00007fb547861114: vmovsd 0x68(%rsp),%xmm12
  0x00007fb54786111a: vmovsd 0x70(%rsp),%xmm13
  0x00007fb547861120: vmovsd 0x78(%rsp),%xmm14
  0x00007fb547861126: vmovsd 0x80(%rsp),%xmm15
  0x00007fb54786112f: add    $0x3f0,%rsp
  0x00007fb547861136: mov    (%rsp),%r15
  0x00007fb54786113a: mov    0x8(%rsp),%r14
  0x00007fb54786113f: mov    0x10(%rsp),%r13
  0x00007fb547861144: mov    0x18(%rsp),%r12
  0x00007fb547861149: mov    0x20(%rsp),%r11
  0x00007fb54786114e: mov    0x28(%rsp),%r10
  0x00007fb547861153: mov    0x30(%rsp),%r9
  0x00007fb547861158: mov    0x38(%rsp),%r8
  0x00007fb54786115d: mov    0x40(%rsp),%rdi
  0x00007fb547861162: mov    0x48(%rsp),%rsi
  0x00007fb547861167: mov    0x50(%rsp),%rbp
  0x00007fb54786116c: mov    0x60(%rsp),%rbx
  0x00007fb547861171: mov    0x68(%rsp),%rdx
  0x00007fb547861176: mov    0x70(%rsp),%rcx
  0x00007fb54786117b: mov    0x78(%rsp),%rax
  0x00007fb547861180: add    $0x80,%rsp
  0x00007fb547861187: leaveq 
  0x00007fb547861188: retq   
  0x00007fb547861189: nopl   0x0(%rax)

Decoding RuntimeStub - unwind_exception Runtime1 stub 0x00007fb547860910
  0x00007fb547860980: emms   
  0x00007fb547860982: mov    %rax,%r14
  0x00007fb547860985: mov    (%rsp),%rdx
  0x00007fb547860989: mov    %rdx,%rsi
  0x00007fb54786098c: mov    %r15,%rdi
  0x00007fb54786098f: test   $0xf,%esp
  0x00007fb547860995: je     0x00007fb5478609ad
  0x00007fb54786099b: sub    $0x8,%rsp
  0x00007fb54786099f: callq  0x00007fb565148a40 = SharedRuntime::exception_handler_for_return_address(JavaThread*, unsigned char*)
  0x00007fb5478609a4: add    $0x8,%rsp
  0x00007fb5478609a8: jmpq   0x00007fb5478609b2
  0x00007fb5478609ad: callq  0x00007fb565148a40 = SharedRuntime::exception_handler_for_return_address(JavaThread*, unsigned char*)
  0x00007fb5478609b2: mov    %rax,%rbx
  0x00007fb5478609b5: mov    %r14,%rax
  0x00007fb5478609b8: pop    %rdx
  0x00007fb5478609b9: jmpq   *%rbx
  0x00007fb5478609bb: nopl   0x0(%rax,%rax,1)

<writer thread='1329935'/>
Decoding RuntimeStub - _new_instance_Java 0x00007fb547860c90
  0x00007fb547860d00: sub    $0x8,%rsp
  0x00007fb547860d07: mov    %rbp,(%rsp)
  0x00007fb547860d0b: mov    %rsp,0x328(%r15)
  0x00007fb547860d12: mov    %rsi,%rdi
  0x00007fb547860d15: mov    %r15,%rsi
  0x00007fb547860d18: movabs $0x7fb565135420,%r10
  0x00007fb547860d22: callq  *%r10
  0x00007fb547860d25: movq   $0x0,0x328(%r15)
  0x00007fb547860d30: movq   $0x0,0x330(%r15)
  0x00007fb547860d3b: mov    0x388(%r15),%rax
  0x00007fb547860d42: movq   $0x0,0x388(%r15)
  0x00007fb547860d4d: mov    0x8(%r15),%r10
  0x00007fb547860d51: test   %r10,%r10
  0x00007fb547860d54: jne    0x00007fb547860d58
  0x00007fb547860d56: pop    %rbp
  0x00007fb547860d57: retq   
  0x00007fb547860d58: xor    %ebx,%ebx
  0x00007fb547860d5a: movabs $0x7fb547800c00,%r10
  0x00007fb547860d64: pop    %rbp
  0x00007fb547860d65: jmpq   *%r10

<writer thread='1329923'/>
<task_queued compile_id='1' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='100' backedge_count='2048' iicount='100' level='3' stamp='0.328' comment='tiered' hot_count='100'/>
<writer thread='1329936'/>
Decoding RuntimeStub - forward_exception Runtime1 stub 0x00007fb5478f1490
  0x00007fb5478f1520: mov    0x8(%r15),%rax
  0x00007fb5478f1524: movabs $0x0,%r10
  0x00007fb5478f152e: mov    %r10,0x8(%r15)
  0x00007fb5478f1532: mov    0x8(%rbp),%rdx
  0x00007fb5478f1536: movabs $0x0,%r10
  0x00007fb5478f1540: mov    %r10,0x388(%r15)
  0x00007fb5478f1547: movabs $0x0,%r10
  0x00007fb5478f1551: mov    %r10,0x390(%r15)
  0x00007fb5478f1558: mov    %rax,0x440(%r15)
  0x00007fb5478f155f: mov    %rdx,0x448(%r15)
  0x00007fb5478f1566: mov    %rdx,0x8(%rbp)
  0x00007fb5478f156a: mov    %r15,%rdi
  0x00007fb5478f156d: vzeroupper 
  0x00007fb5478f1570: mov    %rbp,0x338(%r15)
  0x00007fb5478f1577: mov    %rsp,0x328(%r15)
  0x00007fb5478f157e: callq  0x00007fb56497e0b0 = Runtime1::exception_handler_for_pc(JavaThread*)
  0x00007fb5478f1583: movabs $0x0,%r10
  0x00007fb5478f158d: mov    %r10,0x328(%r15)
  0x00007fb5478f1594: movabs $0x0,%r10
  0x00007fb5478f159e: mov    %r10,0x338(%r15)
  0x00007fb5478f15a5: movabs $0x0,%r10
  0x00007fb5478f15af: mov    %r10,0x330(%r15)
  0x00007fb5478f15b6: vzeroupper 
  0x00007fb5478f15b9: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f15c1: je     0x00007fb5478f15df
  0x00007fb5478f15c7: mov    0x8(%r15),%rax
  0x00007fb5478f15cb: movabs $0x7fb5653eb56e,%rdi
  0x00007fb5478f15d5: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478f15d9: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb5478f15de: hlt    
  0x00007fb5478f15df: mov    %rax,0x8(%rbp)
  0x00007fb5478f15e3: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f15e9: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f15ef: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f15f5: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f15fb: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f1601: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f1607: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f160d: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f1613: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f1619: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f161f: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f1625: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f162b: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f1631: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f1637: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f163d: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f1646: add    $0x3f0,%rsp
  0x00007fb5478f164d: mov    (%rsp),%r15
  0x00007fb5478f1651: mov    0x8(%rsp),%r14
  0x00007fb5478f1656: mov    0x10(%rsp),%r13
  0x00007fb5478f165b: mov    0x18(%rsp),%r12
  0x00007fb5478f1660: mov    0x20(%rsp),%r11
  0x00007fb5478f1665: mov    0x28(%rsp),%r10
  0x00007fb5478f166a: mov    0x30(%rsp),%r9
  0x00007fb5478f166f: mov    0x38(%rsp),%r8
  0x00007fb5478f1674: mov    0x40(%rsp),%rdi
  0x00007fb5478f1679: mov    0x48(%rsp),%rsi
  0x00007fb5478f167e: mov    0x50(%rsp),%rbp
  0x00007fb5478f1683: mov    0x60(%rsp),%rbx
  0x00007fb5478f1688: mov    0x68(%rsp),%rdx
  0x00007fb5478f168d: mov    0x70(%rsp),%rcx
  0x00007fb5478f1692: mov    0x78(%rsp),%rax
  0x00007fb5478f1697: add    $0x80,%rsp
  0x00007fb5478f169e: leaveq 
  0x00007fb5478f169f: retq   

Decoding RuntimeStub - throw_range_check_failed Runtime1 stub 0x00007fb5478eec10
  0x00007fb5478eeca0: push   %rbp
  0x00007fb5478eeca1: mov    %rsp,%rbp
  0x00007fb5478eeca4: mov    %rsp,-0x28(%rsp)
  0x00007fb5478eeca9: sub    $0x80,%rsp
  0x00007fb5478eecb0: mov    %rax,0x78(%rsp)
  0x00007fb5478eecb5: mov    %rcx,0x70(%rsp)
  0x00007fb5478eecba: mov    %rdx,0x68(%rsp)
  0x00007fb5478eecbf: mov    %rbx,0x60(%rsp)
  0x00007fb5478eecc4: mov    %rbp,0x50(%rsp)
  0x00007fb5478eecc9: mov    %rsi,0x48(%rsp)
  0x00007fb5478eecce: mov    %rdi,0x40(%rsp)
  0x00007fb5478eecd3: mov    %r8,0x38(%rsp)
  0x00007fb5478eecd8: mov    %r9,0x30(%rsp)
  0x00007fb5478eecdd: mov    %r10,0x28(%rsp)
  0x00007fb5478eece2: mov    %r11,0x20(%rsp)
  0x00007fb5478eece7: mov    %r12,0x18(%rsp)
  0x00007fb5478eecec: mov    %r13,0x10(%rsp)
  0x00007fb5478eecf1: mov    %r14,0x8(%rsp)
  0x00007fb5478eecf6: mov    %r15,(%rsp)
  0x00007fb5478eecfa: sub    $0x3f0,%rsp
  0x00007fb5478eed01: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478eed07: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478eed0d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478eed13: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478eed19: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478eed1f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478eed25: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478eed2b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478eed31: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478eed37: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478eed3d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478eed43: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478eed49: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478eed4f: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478eed55: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478eed5b: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478eed64: mov    0x10(%rbp),%rsi
  0x00007fb5478eed68: mov    0x18(%rbp),%rdx
  0x00007fb5478eed6c: mov    %r15,%rdi
  0x00007fb5478eed6f: vzeroupper 
  0x00007fb5478eed72: mov    %rbp,0x338(%r15)
  0x00007fb5478eed79: mov    %rsp,0x328(%r15)
  0x00007fb5478eed80: callq  0x00007fb56497a040 = Runtime1::throw_range_check_exception(JavaThread*, int, arrayOopDesc*)
  0x00007fb5478eed85: movabs $0x0,%r10
  0x00007fb5478eed8f: mov    %r10,0x328(%r15)
  0x00007fb5478eed96: movabs $0x0,%r10
  0x00007fb5478eeda0: mov    %r10,0x338(%r15)
  0x00007fb5478eeda7: movabs $0x0,%r10
  0x00007fb5478eedb1: mov    %r10,0x330(%r15)
  0x00007fb5478eedb8: vzeroupper 
  0x00007fb5478eedbb: cmpq   $0x0,0x8(%r15)
  0x00007fb5478eedc3: je     0x00007fb5478eedd2
  0x00007fb5478eedc9: mov    0x8(%r15),%rax
  0x00007fb5478eedcd: jmpq   0x00007fb5478f1520
  0x00007fb5478eedd2: movabs $0x7fb5653eb56e,%rdi
  0x00007fb5478eeddc: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478eede0: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb5478eede5: hlt    
  0x00007fb5478eede6: leaveq 
  0x00007fb5478eede7: retq   

Decoding RuntimeStub - throw_index_exception Runtime1 stub 0x00007fb5478ee910
  0x00007fb5478ee9a0: push   %rbp
  0x00007fb5478ee9a1: mov    %rsp,%rbp
  0x00007fb5478ee9a4: mov    %rsp,-0x28(%rsp)
  0x00007fb5478ee9a9: sub    $0x80,%rsp
  0x00007fb5478ee9b0: mov    %rax,0x78(%rsp)
  0x00007fb5478ee9b5: mov    %rcx,0x70(%rsp)
  0x00007fb5478ee9ba: mov    %rdx,0x68(%rsp)
  0x00007fb5478ee9bf: mov    %rbx,0x60(%rsp)
  0x00007fb5478ee9c4: mov    %rbp,0x50(%rsp)
  0x00007fb5478ee9c9: mov    %rsi,0x48(%rsp)
  0x00007fb5478ee9ce: mov    %rdi,0x40(%rsp)
  0x00007fb5478ee9d3: mov    %r8,0x38(%rsp)
  0x00007fb5478ee9d8: mov    %r9,0x30(%rsp)
  0x00007fb5478ee9dd: mov    %r10,0x28(%rsp)
  0x00007fb5478ee9e2: mov    %r11,0x20(%rsp)
  0x00007fb5478ee9e7: mov    %r12,0x18(%rsp)
  0x00007fb5478ee9ec: mov    %r13,0x10(%rsp)
  0x00007fb5478ee9f1: mov    %r14,0x8(%rsp)
  0x00007fb5478ee9f6: mov    %r15,(%rsp)
  0x00007fb5478ee9fa: sub    $0x3f0,%rsp
  0x00007fb5478eea01: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478eea07: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478eea0d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478eea13: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478eea19: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478eea1f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478eea25: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478eea2b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478eea31: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478eea37: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478eea3d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478eea43: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478eea49: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478eea4f: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478eea55: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478eea5b: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478eea64: mov    0x10(%rbp),%rsi
  0x00007fb5478eea68: mov    0x18(%rbp),%rdx
  0x00007fb5478eea6c: mov    %r15,%rdi
  0x00007fb5478eea6f: vzeroupper 
  0x00007fb5478eea72: mov    %rbp,0x338(%r15)
  0x00007fb5478eea79: mov    %rsp,0x328(%r15)
  0x00007fb5478eea80: callq  0x00007fb56497a210 = Runtime1::throw_index_exception(JavaThread*, int)
  0x00007fb5478eea85: movabs $0x0,%r10
  0x00007fb5478eea8f: mov    %r10,0x328(%r15)
  0x00007fb5478eea96: movabs $0x0,%r10
  0x00007fb5478eeaa0: mov    %r10,0x338(%r15)
  0x00007fb5478eeaa7: movabs $0x0,%r10
  0x00007fb5478eeab1: mov    %r10,0x330(%r15)
  0x00007fb5478eeab8: vzeroupper 
  0x00007fb5478eeabb: cmpq   $0x0,0x8(%r15)
  0x00007fb5478eeac3: je     0x00007fb5478eead2
  0x00007fb5478eeac9: mov    0x8(%r15),%rax
  0x00007fb5478eeacd: jmpq   0x00007fb5478f1520
  0x00007fb5478eead2: movabs $0x7fb5653eb56e,%rdi
  0x00007fb5478eeadc: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478eeae0: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb5478eeae5: hlt    
  0x00007fb5478eeae6: leaveq 
  0x00007fb5478eeae7: retq   

Decoding RuntimeStub - throw_div0_exception Runtime1 stub 0x00007fb5478ee610
  0x00007fb5478ee6a0: push   %rbp
  0x00007fb5478ee6a1: mov    %rsp,%rbp
  0x00007fb5478ee6a4: mov    %rsp,-0x28(%rsp)
  0x00007fb5478ee6a9: sub    $0x80,%rsp
  0x00007fb5478ee6b0: mov    %rax,0x78(%rsp)
  0x00007fb5478ee6b5: mov    %rcx,0x70(%rsp)
  0x00007fb5478ee6ba: mov    %rdx,0x68(%rsp)
  0x00007fb5478ee6bf: mov    %rbx,0x60(%rsp)
  0x00007fb5478ee6c4: mov    %rbp,0x50(%rsp)
  0x00007fb5478ee6c9: mov    %rsi,0x48(%rsp)
  0x00007fb5478ee6ce: mov    %rdi,0x40(%rsp)
  0x00007fb5478ee6d3: mov    %r8,0x38(%rsp)
  0x00007fb5478ee6d8: mov    %r9,0x30(%rsp)
  0x00007fb5478ee6dd: mov    %r10,0x28(%rsp)
  0x00007fb5478ee6e2: mov    %r11,0x20(%rsp)
  0x00007fb5478ee6e7: mov    %r12,0x18(%rsp)
  0x00007fb5478ee6ec: mov    %r13,0x10(%rsp)
  0x00007fb5478ee6f1: mov    %r14,0x8(%rsp)
  0x00007fb5478ee6f6: mov    %r15,(%rsp)
  0x00007fb5478ee6fa: sub    $0x3f0,%rsp
  0x00007fb5478ee701: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478ee707: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478ee70d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478ee713: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478ee719: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478ee71f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478ee725: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478ee72b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478ee731: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478ee737: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478ee73d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478ee743: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478ee749: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478ee74f: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478ee755: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478ee75b: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478ee764: mov    %r15,%rdi
  0x00007fb5478ee767: vzeroupper 
  0x00007fb5478ee76a: mov    %rbp,0x338(%r15)
  0x00007fb5478ee771: mov    %rsp,0x328(%r15)
  0x00007fb5478ee778: callq  0x00007fb56497a3c0 = Runtime1::throw_div0_exception(JavaThread*)
  0x00007fb5478ee77d: movabs $0x0,%r10
  0x00007fb5478ee787: mov    %r10,0x328(%r15)
  0x00007fb5478ee78e: movabs $0x0,%r10
  0x00007fb5478ee798: mov    %r10,0x338(%r15)
  0x00007fb5478ee79f: movabs $0x0,%r10
  0x00007fb5478ee7a9: mov    %r10,0x330(%r15)
  0x00007fb5478ee7b0: vzeroupper 
  0x00007fb5478ee7b3: cmpq   $0x0,0x8(%r15)
  0x00007fb5478ee7bb: je     0x00007fb5478ee7ca
  0x00007fb5478ee7c1: mov    0x8(%r15),%rax
  0x00007fb5478ee7c5: jmpq   0x00007fb5478f1520
  0x00007fb5478ee7ca: movabs $0x7fb5653eb56e,%rdi
  0x00007fb5478ee7d4: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478ee7d8: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb5478ee7dd: hlt    
  0x00007fb5478ee7de: leaveq 
  0x00007fb5478ee7df: retq   

Decoding RuntimeStub - throw_null_pointer_exception Runtime1 stub 0x00007fb5478f2f90
  0x00007fb5478f3020: push   %rbp
  0x00007fb5478f3021: mov    %rsp,%rbp
  0x00007fb5478f3024: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f3029: sub    $0x80,%rsp
  0x00007fb5478f3030: mov    %rax,0x78(%rsp)
  0x00007fb5478f3035: mov    %rcx,0x70(%rsp)
  0x00007fb5478f303a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f303f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f3044: mov    %rbp,0x50(%rsp)
  0x00007fb5478f3049: mov    %rsi,0x48(%rsp)
  0x00007fb5478f304e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f3053: mov    %r8,0x38(%rsp)
  0x00007fb5478f3058: mov    %r9,0x30(%rsp)
  0x00007fb5478f305d: mov    %r10,0x28(%rsp)
  0x00007fb5478f3062: mov    %r11,0x20(%rsp)
  0x00007fb5478f3067: mov    %r12,0x18(%rsp)
  0x00007fb5478f306c: mov    %r13,0x10(%rsp)
  0x00007fb5478f3071: mov    %r14,0x8(%rsp)
  0x00007fb5478f3076: mov    %r15,(%rsp)
  0x00007fb5478f307a: sub    $0x3f0,%rsp
  0x00007fb5478f3081: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f3087: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f308d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f3093: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f3099: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f309f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f30a5: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f30ab: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f30b1: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f30b7: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f30bd: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f30c3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f30c9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f30cf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f30d5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f30db: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f30e4: mov    %r15,%rdi
  0x00007fb5478f30e7: vzeroupper 
  0x00007fb5478f30ea: mov    %rbp,0x338(%r15)
  0x00007fb5478f30f1: mov    %rsp,0x328(%r15)
  0x00007fb5478f30f8: callq  0x00007fb56497a530 = Runtime1::throw_null_pointer_exception(JavaThread*)
  0x00007fb5478f30fd: movabs $0x0,%r10
  0x00007fb5478f3107: mov    %r10,0x328(%r15)
  0x00007fb5478f310e: movabs $0x0,%r10
  0x00007fb5478f3118: mov    %r10,0x338(%r15)
  0x00007fb5478f311f: movabs $0x0,%r10
  0x00007fb5478f3129: mov    %r10,0x330(%r15)
  0x00007fb5478f3130: vzeroupper 
  0x00007fb5478f3133: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f313b: je     0x00007fb5478f314a
  0x00007fb5478f3141: mov    0x8(%r15),%rax
  0x00007fb5478f3145: jmpq   0x00007fb5478f1520
  0x00007fb5478f314a: movabs $0x7fb5653eb56e,%rdi
  0x00007fb5478f3154: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478f3158: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb5478f315d: hlt    
  0x00007fb5478f315e: leaveq 
  0x00007fb5478f315f: retq   

Decoding RuntimeStub - register_finalizer Runtime1 stub 0x00007fb5478f3290
  0x00007fb5478f3300: mov    %rdi,%rax
  0x00007fb5478f3303: mov    0x8(%rax),%esi
  0x00007fb5478f3306: movabs $0x800000000,%r12
  0x00007fb5478f3310: add    %r12,%rsi
  0x00007fb5478f3313: xor    %r12,%r12
  0x00007fb5478f3316: mov    0xa4(%rsi),%esi
  0x00007fb5478f331c: test   $0x40000000,%esi
  0x00007fb5478f3322: jne    0x00007fb5478f3329
  0x00007fb5478f3328: retq   
  0x00007fb5478f3329: push   %rbp
  0x00007fb5478f332a: mov    %rsp,%rbp
  0x00007fb5478f332d: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f3332: sub    $0x80,%rsp
  0x00007fb5478f3339: mov    %rax,0x78(%rsp)
  0x00007fb5478f333e: mov    %rcx,0x70(%rsp)
  0x00007fb5478f3343: mov    %rdx,0x68(%rsp)
  0x00007fb5478f3348: mov    %rbx,0x60(%rsp)
  0x00007fb5478f334d: mov    %rbp,0x50(%rsp)
  0x00007fb5478f3352: mov    %rsi,0x48(%rsp)
  0x00007fb5478f3357: mov    %rdi,0x40(%rsp)
  0x00007fb5478f335c: mov    %r8,0x38(%rsp)
  0x00007fb5478f3361: mov    %r9,0x30(%rsp)
  0x00007fb5478f3366: mov    %r10,0x28(%rsp)
  0x00007fb5478f336b: mov    %r11,0x20(%rsp)
  0x00007fb5478f3370: mov    %r12,0x18(%rsp)
  0x00007fb5478f3375: mov    %r13,0x10(%rsp)
  0x00007fb5478f337a: mov    %r14,0x8(%rsp)
  0x00007fb5478f337f: mov    %r15,(%rsp)
  0x00007fb5478f3383: sub    $0x3f0,%rsp
  0x00007fb5478f338a: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f3390: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f3396: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f339c: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f33a2: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f33a8: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f33ae: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f33b4: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f33ba: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f33c0: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f33c6: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f33cc: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f33d2: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f33d8: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f33de: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f33e4: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f33ed: mov    %rax,%rsi
  0x00007fb5478f33f0: mov    %r15,%rdi
  0x00007fb5478f33f3: vzeroupper 
  0x00007fb5478f33f6: mov    %rbp,0x338(%r15)
  0x00007fb5478f33fd: mov    %rsp,0x328(%r15)
  0x00007fb5478f3404: callq  0x00007fb56514af00 = SharedRuntime::register_finalizer(JavaThread*, oopDesc*)
  0x00007fb5478f3409: movabs $0x0,%r10
  0x00007fb5478f3413: mov    %r10,0x328(%r15)
  0x00007fb5478f341a: movabs $0x0,%r10
  0x00007fb5478f3424: mov    %r10,0x338(%r15)
  0x00007fb5478f342b: movabs $0x0,%r10
  0x00007fb5478f3435: mov    %r10,0x330(%r15)
  0x00007fb5478f343c: vzeroupper 
  0x00007fb5478f343f: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f3447: je     0x00007fb5478f3456
  0x00007fb5478f344d: mov    0x8(%r15),%rax
  0x00007fb5478f3451: jmpq   0x00007fb5478f1520
  0x00007fb5478f3456: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f345c: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f3462: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f3468: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f346e: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f3474: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f347a: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f3480: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f3486: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f348c: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f3492: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f3498: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f349e: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f34a4: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f34aa: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f34b0: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f34b9: add    $0x3f0,%rsp
  0x00007fb5478f34c0: mov    (%rsp),%r15
  0x00007fb5478f34c4: mov    0x8(%rsp),%r14
  0x00007fb5478f34c9: mov    0x10(%rsp),%r13
  0x00007fb5478f34ce: mov    0x18(%rsp),%r12
  0x00007fb5478f34d3: mov    0x20(%rsp),%r11
  0x00007fb5478f34d8: mov    0x28(%rsp),%r10
  0x00007fb5478f34dd: mov    0x30(%rsp),%r9
  0x00007fb5478f34e2: mov    0x38(%rsp),%r8
  0x00007fb5478f34e7: mov    0x40(%rsp),%rdi
  0x00007fb5478f34ec: mov    0x48(%rsp),%rsi
  0x00007fb5478f34f1: mov    0x50(%rsp),%rbp
  0x00007fb5478f34f6: mov    0x60(%rsp),%rbx
  0x00007fb5478f34fb: mov    0x68(%rsp),%rdx
  0x00007fb5478f3500: mov    0x70(%rsp),%rcx
  0x00007fb5478f3505: mov    0x78(%rsp),%rax
  0x00007fb5478f350a: add    $0x80,%rsp
  0x00007fb5478f3511: leaveq 
  0x00007fb5478f3512: retq   
  0x00007fb5478f3513: nopl   0x0(%rax,%rax,1)

Decoding RuntimeStub - new_instance Runtime1 stub 0x00007fb5478f3590
  0x00007fb5478f3600: push   %rbp
  0x00007fb5478f3601: mov    %rsp,%rbp
  0x00007fb5478f3604: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f3609: sub    $0x80,%rsp
  0x00007fb5478f3610: mov    %rax,0x78(%rsp)
  0x00007fb5478f3615: mov    %rcx,0x70(%rsp)
  0x00007fb5478f361a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f361f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f3624: mov    %rbp,0x50(%rsp)
  0x00007fb5478f3629: mov    %rsi,0x48(%rsp)
  0x00007fb5478f362e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f3633: mov    %r8,0x38(%rsp)
  0x00007fb5478f3638: mov    %r9,0x30(%rsp)
  0x00007fb5478f363d: mov    %r10,0x28(%rsp)
  0x00007fb5478f3642: mov    %r11,0x20(%rsp)
  0x00007fb5478f3647: mov    %r12,0x18(%rsp)
  0x00007fb5478f364c: mov    %r13,0x10(%rsp)
  0x00007fb5478f3651: mov    %r14,0x8(%rsp)
  0x00007fb5478f3656: mov    %r15,(%rsp)
  0x00007fb5478f365a: sub    $0x3f0,%rsp
  0x00007fb5478f3661: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f3667: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f366d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f3673: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f3679: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f367f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f3685: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f368b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f3691: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f3697: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f369d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f36a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f36a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f36af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f36b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f36bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f36c4: mov    %rdx,%rsi
  0x00007fb5478f36c7: mov    %r15,%rdi
  0x00007fb5478f36ca: vzeroupper 
  0x00007fb5478f36cd: mov    %rbp,0x338(%r15)
  0x00007fb5478f36d4: mov    %rsp,0x328(%r15)
  0x00007fb5478f36db: callq  0x00007fb564978fc0 = Runtime1::new_instance(JavaThread*, Klass*)
  0x00007fb5478f36e0: movabs $0x0,%r10
  0x00007fb5478f36ea: mov    %r10,0x328(%r15)
  0x00007fb5478f36f1: movabs $0x0,%r10
  0x00007fb5478f36fb: mov    %r10,0x338(%r15)
  0x00007fb5478f3702: movabs $0x0,%r10
  0x00007fb5478f370c: mov    %r10,0x330(%r15)
  0x00007fb5478f3713: vzeroupper 
  0x00007fb5478f3716: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f371e: je     0x00007fb5478f373e
  0x00007fb5478f3724: mov    0x8(%r15),%rax
  0x00007fb5478f3728: movabs $0x0,%r10
  0x00007fb5478f3732: mov    %r10,0x388(%r15)
  0x00007fb5478f3739: jmpq   0x00007fb5478f1520
  0x00007fb5478f373e: mov    0x388(%r15),%rax
  0x00007fb5478f3745: movabs $0x0,%r10
  0x00007fb5478f374f: mov    %r10,0x388(%r15)
  0x00007fb5478f3756: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f375c: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f3762: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f3768: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f376e: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f3774: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f377a: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f3780: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f3786: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f378c: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f3792: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f3798: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f379e: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f37a4: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f37aa: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f37b0: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f37b9: add    $0x3f0,%rsp
  0x00007fb5478f37c0: mov    (%rsp),%r15
  0x00007fb5478f37c4: mov    0x8(%rsp),%r14
  0x00007fb5478f37c9: mov    0x10(%rsp),%r13
  0x00007fb5478f37ce: mov    0x18(%rsp),%r12
  0x00007fb5478f37d3: mov    0x20(%rsp),%r11
  0x00007fb5478f37d8: mov    0x28(%rsp),%r10
  0x00007fb5478f37dd: mov    0x30(%rsp),%r9
  0x00007fb5478f37e2: mov    0x38(%rsp),%r8
  0x00007fb5478f37e7: mov    0x40(%rsp),%rdi
  0x00007fb5478f37ec: mov    0x48(%rsp),%rsi
  0x00007fb5478f37f1: mov    0x50(%rsp),%rbp
  0x00007fb5478f37f6: mov    0x60(%rsp),%rbx
  0x00007fb5478f37fb: mov    0x68(%rsp),%rdx
  0x00007fb5478f3800: mov    0x70(%rsp),%rcx
  0x00007fb5478f3805: add    $0x80,%rsp
  0x00007fb5478f380c: leaveq 
  0x00007fb5478f380d: retq   
  0x00007fb5478f380e: xchg   %ax,%ax

Decoding RuntimeStub - fast_new_instance Runtime1 stub 0x00007fb5478f3890
  0x00007fb5478f3900: push   %rbp
  0x00007fb5478f3901: mov    %rsp,%rbp
  0x00007fb5478f3904: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f3909: sub    $0x80,%rsp
  0x00007fb5478f3910: mov    %rax,0x78(%rsp)
  0x00007fb5478f3915: mov    %rcx,0x70(%rsp)
  0x00007fb5478f391a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f391f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f3924: mov    %rbp,0x50(%rsp)
  0x00007fb5478f3929: mov    %rsi,0x48(%rsp)
  0x00007fb5478f392e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f3933: mov    %r8,0x38(%rsp)
  0x00007fb5478f3938: mov    %r9,0x30(%rsp)
  0x00007fb5478f393d: mov    %r10,0x28(%rsp)
  0x00007fb5478f3942: mov    %r11,0x20(%rsp)
  0x00007fb5478f3947: mov    %r12,0x18(%rsp)
  0x00007fb5478f394c: mov    %r13,0x10(%rsp)
  0x00007fb5478f3951: mov    %r14,0x8(%rsp)
  0x00007fb5478f3956: mov    %r15,(%rsp)
  0x00007fb5478f395a: sub    $0x3f0,%rsp
  0x00007fb5478f3961: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f3967: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f396d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f3973: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f3979: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f397f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f3985: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f398b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f3991: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f3997: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f399d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f39a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f39a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f39af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f39b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f39bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f39c4: mov    %rdx,%rsi
  0x00007fb5478f39c7: mov    %r15,%rdi
  0x00007fb5478f39ca: vzeroupper 
  0x00007fb5478f39cd: mov    %rbp,0x338(%r15)
  0x00007fb5478f39d4: mov    %rsp,0x328(%r15)
  0x00007fb5478f39db: callq  0x00007fb564978fc0 = Runtime1::new_instance(JavaThread*, Klass*)
  0x00007fb5478f39e0: movabs $0x0,%r10
  0x00007fb5478f39ea: mov    %r10,0x328(%r15)
  0x00007fb5478f39f1: movabs $0x0,%r10
  0x00007fb5478f39fb: mov    %r10,0x338(%r15)
  0x00007fb5478f3a02: movabs $0x0,%r10
  0x00007fb5478f3a0c: mov    %r10,0x330(%r15)
  0x00007fb5478f3a13: vzeroupper 
  0x00007fb5478f3a16: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f3a1e: je     0x00007fb5478f3a3e
  0x00007fb5478f3a24: mov    0x8(%r15),%rax
  0x00007fb5478f3a28: movabs $0x0,%r10
  0x00007fb5478f3a32: mov    %r10,0x388(%r15)
  0x00007fb5478f3a39: jmpq   0x00007fb5478f1520
  0x00007fb5478f3a3e: mov    0x388(%r15),%rax
  0x00007fb5478f3a45: movabs $0x0,%r10
  0x00007fb5478f3a4f: mov    %r10,0x388(%r15)
  0x00007fb5478f3a56: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f3a5c: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f3a62: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f3a68: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f3a6e: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f3a74: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f3a7a: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f3a80: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f3a86: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f3a8c: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f3a92: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f3a98: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f3a9e: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f3aa4: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f3aaa: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f3ab0: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f3ab9: add    $0x3f0,%rsp
  0x00007fb5478f3ac0: mov    (%rsp),%r15
  0x00007fb5478f3ac4: mov    0x8(%rsp),%r14
  0x00007fb5478f3ac9: mov    0x10(%rsp),%r13
  0x00007fb5478f3ace: mov    0x18(%rsp),%r12
  0x00007fb5478f3ad3: mov    0x20(%rsp),%r11
  0x00007fb5478f3ad8: mov    0x28(%rsp),%r10
  0x00007fb5478f3add: mov    0x30(%rsp),%r9
  0x00007fb5478f3ae2: mov    0x38(%rsp),%r8
  0x00007fb5478f3ae7: mov    0x40(%rsp),%rdi
  0x00007fb5478f3aec: mov    0x48(%rsp),%rsi
  0x00007fb5478f3af1: mov    0x50(%rsp),%rbp
  0x00007fb5478f3af6: mov    0x60(%rsp),%rbx
  0x00007fb5478f3afb: mov    0x68(%rsp),%rdx
  0x00007fb5478f3b00: mov    0x70(%rsp),%rcx
  0x00007fb5478f3b05: add    $0x80,%rsp
  0x00007fb5478f3b0c: leaveq 
  0x00007fb5478f3b0d: retq   
  0x00007fb5478f3b0e: xchg   %ax,%ax

Decoding RuntimeStub - fast_new_instance_init_check Runtime1 stub 0x00007fb5478f3b90
  0x00007fb5478f3c00: push   %rbp
  0x00007fb5478f3c01: mov    %rsp,%rbp
  0x00007fb5478f3c04: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f3c09: sub    $0x80,%rsp
  0x00007fb5478f3c10: mov    %rax,0x78(%rsp)
  0x00007fb5478f3c15: mov    %rcx,0x70(%rsp)
  0x00007fb5478f3c1a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f3c1f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f3c24: mov    %rbp,0x50(%rsp)
  0x00007fb5478f3c29: mov    %rsi,0x48(%rsp)
  0x00007fb5478f3c2e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f3c33: mov    %r8,0x38(%rsp)
  0x00007fb5478f3c38: mov    %r9,0x30(%rsp)
  0x00007fb5478f3c3d: mov    %r10,0x28(%rsp)
  0x00007fb5478f3c42: mov    %r11,0x20(%rsp)
  0x00007fb5478f3c47: mov    %r12,0x18(%rsp)
  0x00007fb5478f3c4c: mov    %r13,0x10(%rsp)
  0x00007fb5478f3c51: mov    %r14,0x8(%rsp)
  0x00007fb5478f3c56: mov    %r15,(%rsp)
  0x00007fb5478f3c5a: sub    $0x3f0,%rsp
  0x00007fb5478f3c61: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f3c67: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f3c6d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f3c73: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f3c79: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f3c7f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f3c85: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f3c8b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f3c91: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f3c97: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f3c9d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f3ca3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f3ca9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f3caf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f3cb5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f3cbb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f3cc4: mov    %rdx,%rsi
  0x00007fb5478f3cc7: mov    %r15,%rdi
  0x00007fb5478f3cca: vzeroupper 
  0x00007fb5478f3ccd: mov    %rbp,0x338(%r15)
  0x00007fb5478f3cd4: mov    %rsp,0x328(%r15)
  0x00007fb5478f3cdb: callq  0x00007fb564978fc0 = Runtime1::new_instance(JavaThread*, Klass*)
  0x00007fb5478f3ce0: movabs $0x0,%r10
  0x00007fb5478f3cea: mov    %r10,0x328(%r15)
  0x00007fb5478f3cf1: movabs $0x0,%r10
  0x00007fb5478f3cfb: mov    %r10,0x338(%r15)
  0x00007fb5478f3d02: movabs $0x0,%r10
  0x00007fb5478f3d0c: mov    %r10,0x330(%r15)
  0x00007fb5478f3d13: vzeroupper 
  0x00007fb5478f3d16: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f3d1e: je     0x00007fb5478f3d3e
  0x00007fb5478f3d24: mov    0x8(%r15),%rax
  0x00007fb5478f3d28: movabs $0x0,%r10
  0x00007fb5478f3d32: mov    %r10,0x388(%r15)
  0x00007fb5478f3d39: jmpq   0x00007fb5478f1520
  0x00007fb5478f3d3e: mov    0x388(%r15),%rax
  0x00007fb5478f3d45: movabs $0x0,%r10
  0x00007fb5478f3d4f: mov    %r10,0x388(%r15)
  0x00007fb5478f3d56: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f3d5c: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f3d62: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f3d68: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f3d6e: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f3d74: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f3d7a: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f3d80: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f3d86: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f3d8c: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f3d92: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f3d98: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f3d9e: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f3da4: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f3daa: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f3db0: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f3db9: add    $0x3f0,%rsp
  0x00007fb5478f3dc0: mov    (%rsp),%r15
  0x00007fb5478f3dc4: mov    0x8(%rsp),%r14
  0x00007fb5478f3dc9: mov    0x10(%rsp),%r13
  0x00007fb5478f3dce: mov    0x18(%rsp),%r12
  0x00007fb5478f3dd3: mov    0x20(%rsp),%r11
  0x00007fb5478f3dd8: mov    0x28(%rsp),%r10
  0x00007fb5478f3ddd: mov    0x30(%rsp),%r9
  0x00007fb5478f3de2: mov    0x38(%rsp),%r8
  0x00007fb5478f3de7: mov    0x40(%rsp),%rdi
  0x00007fb5478f3dec: mov    0x48(%rsp),%rsi
  0x00007fb5478f3df1: mov    0x50(%rsp),%rbp
  0x00007fb5478f3df6: mov    0x60(%rsp),%rbx
  0x00007fb5478f3dfb: mov    0x68(%rsp),%rdx
  0x00007fb5478f3e00: mov    0x70(%rsp),%rcx
  0x00007fb5478f3e05: add    $0x80,%rsp
  0x00007fb5478f3e0c: leaveq 
  0x00007fb5478f3e0d: retq   
  0x00007fb5478f3e0e: xchg   %ax,%ax

Decoding RuntimeStub - new_type_array Runtime1 stub 0x00007fb5478f3e90
  0x00007fb5478f3f00: push   %rbp
  0x00007fb5478f3f01: mov    %rsp,%rbp
  0x00007fb5478f3f04: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f3f09: sub    $0x80,%rsp
  0x00007fb5478f3f10: mov    %rax,0x78(%rsp)
  0x00007fb5478f3f15: mov    %rcx,0x70(%rsp)
  0x00007fb5478f3f1a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f3f1f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f3f24: mov    %rbp,0x50(%rsp)
  0x00007fb5478f3f29: mov    %rsi,0x48(%rsp)
  0x00007fb5478f3f2e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f3f33: mov    %r8,0x38(%rsp)
  0x00007fb5478f3f38: mov    %r9,0x30(%rsp)
  0x00007fb5478f3f3d: mov    %r10,0x28(%rsp)
  0x00007fb5478f3f42: mov    %r11,0x20(%rsp)
  0x00007fb5478f3f47: mov    %r12,0x18(%rsp)
  0x00007fb5478f3f4c: mov    %r13,0x10(%rsp)
  0x00007fb5478f3f51: mov    %r14,0x8(%rsp)
  0x00007fb5478f3f56: mov    %r15,(%rsp)
  0x00007fb5478f3f5a: sub    $0x3f0,%rsp
  0x00007fb5478f3f61: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f3f67: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f3f6d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f3f73: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f3f79: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f3f7f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f3f85: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f3f8b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f3f91: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f3f97: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f3f9d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f3fa3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f3fa9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f3faf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f3fb5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f3fbb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f3fc4: mov    %rdx,%rsi
  0x00007fb5478f3fc7: mov    %rbx,%rdx
  0x00007fb5478f3fca: mov    %r15,%rdi
  0x00007fb5478f3fcd: vzeroupper 
  0x00007fb5478f3fd0: mov    %rbp,0x338(%r15)
  0x00007fb5478f3fd7: mov    %rsp,0x328(%r15)
  0x00007fb5478f3fde: callq  0x00007fb564979190 = Runtime1::new_type_array(JavaThread*, Klass*, int)
  0x00007fb5478f3fe3: movabs $0x0,%r10
  0x00007fb5478f3fed: mov    %r10,0x328(%r15)
  0x00007fb5478f3ff4: movabs $0x0,%r10
  0x00007fb5478f3ffe: mov    %r10,0x338(%r15)
  0x00007fb5478f4005: movabs $0x0,%r10
  0x00007fb5478f400f: mov    %r10,0x330(%r15)
  0x00007fb5478f4016: vzeroupper 
  0x00007fb5478f4019: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f4021: je     0x00007fb5478f4041
  0x00007fb5478f4027: mov    0x8(%r15),%rax
  0x00007fb5478f402b: movabs $0x0,%r10
  0x00007fb5478f4035: mov    %r10,0x388(%r15)
  0x00007fb5478f403c: jmpq   0x00007fb5478f1520
  0x00007fb5478f4041: mov    0x388(%r15),%rax
  0x00007fb5478f4048: movabs $0x0,%r10
  0x00007fb5478f4052: mov    %r10,0x388(%r15)
  0x00007fb5478f4059: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f405f: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f4065: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f406b: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f4071: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f4077: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f407d: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f4083: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f4089: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f408f: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f4095: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f409b: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f40a1: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f40a7: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f40ad: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f40b3: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f40bc: add    $0x3f0,%rsp
  0x00007fb5478f40c3: mov    (%rsp),%r15
  0x00007fb5478f40c7: mov    0x8(%rsp),%r14
  0x00007fb5478f40cc: mov    0x10(%rsp),%r13
  0x00007fb5478f40d1: mov    0x18(%rsp),%r12
  0x00007fb5478f40d6: mov    0x20(%rsp),%r11
  0x00007fb5478f40db: mov    0x28(%rsp),%r10
  0x00007fb5478f40e0: mov    0x30(%rsp),%r9
  0x00007fb5478f40e5: mov    0x38(%rsp),%r8
  0x00007fb5478f40ea: mov    0x40(%rsp),%rdi
  0x00007fb5478f40ef: mov    0x48(%rsp),%rsi
  0x00007fb5478f40f4: mov    0x50(%rsp),%rbp
  0x00007fb5478f40f9: mov    0x60(%rsp),%rbx
  0x00007fb5478f40fe: mov    0x68(%rsp),%rdx
  0x00007fb5478f4103: mov    0x70(%rsp),%rcx
  0x00007fb5478f4108: add    $0x80,%rsp
  0x00007fb5478f410f: leaveq 
  0x00007fb5478f4110: retq   
  0x00007fb5478f4111: nopl   0x0(%rax)

Decoding RuntimeStub - new_object_array Runtime1 stub 0x00007fb5478f4190
  0x00007fb5478f4200: push   %rbp
  0x00007fb5478f4201: mov    %rsp,%rbp
  0x00007fb5478f4204: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f4209: sub    $0x80,%rsp
  0x00007fb5478f4210: mov    %rax,0x78(%rsp)
  0x00007fb5478f4215: mov    %rcx,0x70(%rsp)
  0x00007fb5478f421a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f421f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f4224: mov    %rbp,0x50(%rsp)
  0x00007fb5478f4229: mov    %rsi,0x48(%rsp)
  0x00007fb5478f422e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f4233: mov    %r8,0x38(%rsp)
  0x00007fb5478f4238: mov    %r9,0x30(%rsp)
  0x00007fb5478f423d: mov    %r10,0x28(%rsp)
  0x00007fb5478f4242: mov    %r11,0x20(%rsp)
  0x00007fb5478f4247: mov    %r12,0x18(%rsp)
  0x00007fb5478f424c: mov    %r13,0x10(%rsp)
  0x00007fb5478f4251: mov    %r14,0x8(%rsp)
  0x00007fb5478f4256: mov    %r15,(%rsp)
  0x00007fb5478f425a: sub    $0x3f0,%rsp
  0x00007fb5478f4261: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f4267: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f426d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f4273: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f4279: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f427f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f4285: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f428b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f4291: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f4297: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f429d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f42a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f42a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f42af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f42b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f42bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f42c4: mov    %rdx,%rsi
  0x00007fb5478f42c7: mov    %rbx,%rdx
  0x00007fb5478f42ca: mov    %r15,%rdi
  0x00007fb5478f42cd: vzeroupper 
  0x00007fb5478f42d0: mov    %rbp,0x338(%r15)
  0x00007fb5478f42d7: mov    %rsp,0x328(%r15)
  0x00007fb5478f42de: callq  0x00007fb564979310 = Runtime1::new_object_array(JavaThread*, Klass*, int)
  0x00007fb5478f42e3: movabs $0x0,%r10
  0x00007fb5478f42ed: mov    %r10,0x328(%r15)
  0x00007fb5478f42f4: movabs $0x0,%r10
  0x00007fb5478f42fe: mov    %r10,0x338(%r15)
  0x00007fb5478f4305: movabs $0x0,%r10
  0x00007fb5478f430f: mov    %r10,0x330(%r15)
  0x00007fb5478f4316: vzeroupper 
  0x00007fb5478f4319: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f4321: je     0x00007fb5478f4341
  0x00007fb5478f4327: mov    0x8(%r15),%rax
  0x00007fb5478f432b: movabs $0x0,%r10
  0x00007fb5478f4335: mov    %r10,0x388(%r15)
  0x00007fb5478f433c: jmpq   0x00007fb5478f1520
  0x00007fb5478f4341: mov    0x388(%r15),%rax
  0x00007fb5478f4348: movabs $0x0,%r10
  0x00007fb5478f4352: mov    %r10,0x388(%r15)
  0x00007fb5478f4359: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f435f: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f4365: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f436b: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f4371: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f4377: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f437d: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f4383: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f4389: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f438f: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f4395: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f439b: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f43a1: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f43a7: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f43ad: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f43b3: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f43bc: add    $0x3f0,%rsp
  0x00007fb5478f43c3: mov    (%rsp),%r15
  0x00007fb5478f43c7: mov    0x8(%rsp),%r14
  0x00007fb5478f43cc: mov    0x10(%rsp),%r13
  0x00007fb5478f43d1: mov    0x18(%rsp),%r12
  0x00007fb5478f43d6: mov    0x20(%rsp),%r11
  0x00007fb5478f43db: mov    0x28(%rsp),%r10
  0x00007fb5478f43e0: mov    0x30(%rsp),%r9
  0x00007fb5478f43e5: mov    0x38(%rsp),%r8
  0x00007fb5478f43ea: mov    0x40(%rsp),%rdi
  0x00007fb5478f43ef: mov    0x48(%rsp),%rsi
  0x00007fb5478f43f4: mov    0x50(%rsp),%rbp
  0x00007fb5478f43f9: mov    0x60(%rsp),%rbx
  0x00007fb5478f43fe: mov    0x68(%rsp),%rdx
  0x00007fb5478f4403: mov    0x70(%rsp),%rcx
  0x00007fb5478f4408: add    $0x80,%rsp
  0x00007fb5478f440f: leaveq 
  0x00007fb5478f4410: retq   
  0x00007fb5478f4411: nopl   0x0(%rax)

Decoding RuntimeStub - new_multi_array Runtime1 stub 0x00007fb5478f4490
  0x00007fb5478f4500: push   %rbp
  0x00007fb5478f4501: mov    %rsp,%rbp
  0x00007fb5478f4504: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f4509: sub    $0x80,%rsp
  0x00007fb5478f4510: mov    %rax,0x78(%rsp)
  0x00007fb5478f4515: mov    %rcx,0x70(%rsp)
  0x00007fb5478f451a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f451f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f4524: mov    %rbp,0x50(%rsp)
  0x00007fb5478f4529: mov    %rsi,0x48(%rsp)
  0x00007fb5478f452e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f4533: mov    %r8,0x38(%rsp)
  0x00007fb5478f4538: mov    %r9,0x30(%rsp)
  0x00007fb5478f453d: mov    %r10,0x28(%rsp)
  0x00007fb5478f4542: mov    %r11,0x20(%rsp)
  0x00007fb5478f4547: mov    %r12,0x18(%rsp)
  0x00007fb5478f454c: mov    %r13,0x10(%rsp)
  0x00007fb5478f4551: mov    %r14,0x8(%rsp)
  0x00007fb5478f4556: mov    %r15,(%rsp)
  0x00007fb5478f455a: sub    $0x3f0,%rsp
  0x00007fb5478f4561: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f4567: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f456d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f4573: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f4579: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f457f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f4585: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f458b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f4591: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f4597: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f459d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f45a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f45a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f45af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f45b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f45bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f45c4: mov    %rax,%rsi
  0x00007fb5478f45c7: mov    %rbx,%rdx
  0x00007fb5478f45ca: mov    %rcx,%rcx
  0x00007fb5478f45cd: mov    %r15,%rdi
  0x00007fb5478f45d0: vzeroupper 
  0x00007fb5478f45d3: mov    %rbp,0x338(%r15)
  0x00007fb5478f45da: mov    %rsp,0x328(%r15)
  0x00007fb5478f45e1: callq  0x00007fb5649794b0 = Runtime1::new_multi_array(JavaThread*, Klass*, int, int*)
  0x00007fb5478f45e6: movabs $0x0,%r10
  0x00007fb5478f45f0: mov    %r10,0x328(%r15)
  0x00007fb5478f45f7: movabs $0x0,%r10
  0x00007fb5478f4601: mov    %r10,0x338(%r15)
  0x00007fb5478f4608: movabs $0x0,%r10
  0x00007fb5478f4612: mov    %r10,0x330(%r15)
  0x00007fb5478f4619: vzeroupper 
  0x00007fb5478f461c: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f4624: je     0x00007fb5478f4644
  0x00007fb5478f462a: mov    0x8(%r15),%rax
  0x00007fb5478f462e: movabs $0x0,%r10
  0x00007fb5478f4638: mov    %r10,0x388(%r15)
  0x00007fb5478f463f: jmpq   0x00007fb5478f1520
  0x00007fb5478f4644: mov    0x388(%r15),%rax
  0x00007fb5478f464b: movabs $0x0,%r10
  0x00007fb5478f4655: mov    %r10,0x388(%r15)
  0x00007fb5478f465c: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f4662: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f4668: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f466e: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f4674: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f467a: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f4680: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f4686: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f468c: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f4692: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f4698: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f469e: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f46a4: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f46aa: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f46b0: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f46b6: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f46bf: add    $0x3f0,%rsp
  0x00007fb5478f46c6: mov    (%rsp),%r15
  0x00007fb5478f46ca: mov    0x8(%rsp),%r14
  0x00007fb5478f46cf: mov    0x10(%rsp),%r13
  0x00007fb5478f46d4: mov    0x18(%rsp),%r12
  0x00007fb5478f46d9: mov    0x20(%rsp),%r11
  0x00007fb5478f46de: mov    0x28(%rsp),%r10
  0x00007fb5478f46e3: mov    0x30(%rsp),%r9
  0x00007fb5478f46e8: mov    0x38(%rsp),%r8
  0x00007fb5478f46ed: mov    0x40(%rsp),%rdi
  0x00007fb5478f46f2: mov    0x48(%rsp),%rsi
  0x00007fb5478f46f7: mov    0x50(%rsp),%rbp
  0x00007fb5478f46fc: mov    0x60(%rsp),%rbx
  0x00007fb5478f4701: mov    0x68(%rsp),%rdx
  0x00007fb5478f4706: mov    0x70(%rsp),%rcx
  0x00007fb5478f470b: add    $0x80,%rsp
  0x00007fb5478f4712: leaveq 
  0x00007fb5478f4713: retq   
  0x00007fb5478f4714: nopl   0x0(%rax)

Decoding RuntimeStub - handle_exception_nofpu Runtime1 stub 0x00007fb5478f4790
  0x00007fb5478f4800: push   %rbp
  0x00007fb5478f4801: mov    %rsp,%rbp
  0x00007fb5478f4804: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f4809: sub    $0x80,%rsp
  0x00007fb5478f4810: mov    %rax,0x78(%rsp)
  0x00007fb5478f4815: mov    %rcx,0x70(%rsp)
  0x00007fb5478f481a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f481f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f4824: mov    %rbp,0x50(%rsp)
  0x00007fb5478f4829: mov    %rsi,0x48(%rsp)
  0x00007fb5478f482e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f4833: mov    %r8,0x38(%rsp)
  0x00007fb5478f4838: mov    %r9,0x30(%rsp)
  0x00007fb5478f483d: mov    %r10,0x28(%rsp)
  0x00007fb5478f4842: mov    %r11,0x20(%rsp)
  0x00007fb5478f4847: mov    %r12,0x18(%rsp)
  0x00007fb5478f484c: mov    %r13,0x10(%rsp)
  0x00007fb5478f4851: mov    %r14,0x8(%rsp)
  0x00007fb5478f4856: mov    %r15,(%rsp)
  0x00007fb5478f485a: sub    $0x3f0,%rsp
  0x00007fb5478f4861: mov    %rax,0x440(%r15)
  0x00007fb5478f4868: mov    %rdx,0x448(%r15)
  0x00007fb5478f486f: mov    %rdx,0x8(%rbp)
  0x00007fb5478f4873: mov    %r15,%rdi
  0x00007fb5478f4876: vzeroupper 
  0x00007fb5478f4879: mov    %rbp,0x338(%r15)
  0x00007fb5478f4880: mov    %rsp,0x328(%r15)
  0x00007fb5478f4887: callq  0x00007fb56497e0b0 = Runtime1::exception_handler_for_pc(JavaThread*)
  0x00007fb5478f488c: movabs $0x0,%r10
  0x00007fb5478f4896: mov    %r10,0x328(%r15)
  0x00007fb5478f489d: movabs $0x0,%r10
  0x00007fb5478f48a7: mov    %r10,0x338(%r15)
  0x00007fb5478f48ae: movabs $0x0,%r10
  0x00007fb5478f48b8: mov    %r10,0x330(%r15)
  0x00007fb5478f48bf: vzeroupper 
  0x00007fb5478f48c2: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f48ca: je     0x00007fb5478f48d9
  0x00007fb5478f48d0: mov    0x8(%r15),%rax
  0x00007fb5478f48d4: jmpq   0x00007fb5478f1520
  0x00007fb5478f48d9: mov    %rax,0x8(%rbp)
  0x00007fb5478f48dd: add    $0x3f0,%rsp
  0x00007fb5478f48e4: mov    (%rsp),%r15
  0x00007fb5478f48e8: mov    0x8(%rsp),%r14
  0x00007fb5478f48ed: mov    0x10(%rsp),%r13
  0x00007fb5478f48f2: mov    0x18(%rsp),%r12
  0x00007fb5478f48f7: mov    0x20(%rsp),%r11
  0x00007fb5478f48fc: mov    0x28(%rsp),%r10
  0x00007fb5478f4901: mov    0x30(%rsp),%r9
  0x00007fb5478f4906: mov    0x38(%rsp),%r8
  0x00007fb5478f490b: mov    0x40(%rsp),%rdi
  0x00007fb5478f4910: mov    0x48(%rsp),%rsi
  0x00007fb5478f4915: mov    0x50(%rsp),%rbp
  0x00007fb5478f491a: mov    0x60(%rsp),%rbx
  0x00007fb5478f491f: mov    0x68(%rsp),%rdx
  0x00007fb5478f4924: mov    0x70(%rsp),%rcx
  0x00007fb5478f4929: mov    0x78(%rsp),%rax
  0x00007fb5478f492e: add    $0x80,%rsp
  0x00007fb5478f4935: leaveq 
  0x00007fb5478f4936: retq   
  0x00007fb5478f4937: nop

Decoding RuntimeStub - handle_exception Runtime1 stub 0x00007fb5478f4a90
  0x00007fb5478f4b00: push   %rbp
  0x00007fb5478f4b01: mov    %rsp,%rbp
  0x00007fb5478f4b04: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f4b09: sub    $0x80,%rsp
  0x00007fb5478f4b10: mov    %rax,0x78(%rsp)
  0x00007fb5478f4b15: mov    %rcx,0x70(%rsp)
  0x00007fb5478f4b1a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f4b1f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f4b24: mov    %rbp,0x50(%rsp)
  0x00007fb5478f4b29: mov    %rsi,0x48(%rsp)
  0x00007fb5478f4b2e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f4b33: mov    %r8,0x38(%rsp)
  0x00007fb5478f4b38: mov    %r9,0x30(%rsp)
  0x00007fb5478f4b3d: mov    %r10,0x28(%rsp)
  0x00007fb5478f4b42: mov    %r11,0x20(%rsp)
  0x00007fb5478f4b47: mov    %r12,0x18(%rsp)
  0x00007fb5478f4b4c: mov    %r13,0x10(%rsp)
  0x00007fb5478f4b51: mov    %r14,0x8(%rsp)
  0x00007fb5478f4b56: mov    %r15,(%rsp)
  0x00007fb5478f4b5a: sub    $0x3f0,%rsp
  0x00007fb5478f4b61: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f4b67: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f4b6d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f4b73: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f4b79: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f4b7f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f4b85: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f4b8b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f4b91: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f4b97: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f4b9d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f4ba3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f4ba9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f4baf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f4bb5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f4bbb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f4bc4: mov    %rax,0x440(%r15)
  0x00007fb5478f4bcb: mov    %rdx,0x448(%r15)
  0x00007fb5478f4bd2: mov    %rdx,0x8(%rbp)
  0x00007fb5478f4bd6: mov    %r15,%rdi
  0x00007fb5478f4bd9: vzeroupper 
  0x00007fb5478f4bdc: mov    %rbp,0x338(%r15)
  0x00007fb5478f4be3: mov    %rsp,0x328(%r15)
  0x00007fb5478f4bea: callq  0x00007fb56497e0b0 = Runtime1::exception_handler_for_pc(JavaThread*)
  0x00007fb5478f4bef: movabs $0x0,%r10
  0x00007fb5478f4bf9: mov    %r10,0x328(%r15)
  0x00007fb5478f4c00: movabs $0x0,%r10
  0x00007fb5478f4c0a: mov    %r10,0x338(%r15)
  0x00007fb5478f4c11: movabs $0x0,%r10
  0x00007fb5478f4c1b: mov    %r10,0x330(%r15)
  0x00007fb5478f4c22: vzeroupper 
  0x00007fb5478f4c25: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f4c2d: je     0x00007fb5478f4c3c
  0x00007fb5478f4c33: mov    0x8(%r15),%rax
  0x00007fb5478f4c37: jmpq   0x00007fb5478f1520
  0x00007fb5478f4c3c: mov    %rax,0x8(%rbp)
  0x00007fb5478f4c40: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f4c46: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f4c4c: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f4c52: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f4c58: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f4c5e: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f4c64: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f4c6a: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f4c70: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f4c76: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f4c7c: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f4c82: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f4c88: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f4c8e: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f4c94: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f4c9a: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f4ca3: add    $0x3f0,%rsp
  0x00007fb5478f4caa: mov    (%rsp),%r15
  0x00007fb5478f4cae: mov    0x8(%rsp),%r14
  0x00007fb5478f4cb3: mov    0x10(%rsp),%r13
  0x00007fb5478f4cb8: mov    0x18(%rsp),%r12
  0x00007fb5478f4cbd: mov    0x20(%rsp),%r11
  0x00007fb5478f4cc2: mov    0x28(%rsp),%r10
  0x00007fb5478f4cc7: mov    0x30(%rsp),%r9
  0x00007fb5478f4ccc: mov    0x38(%rsp),%r8
  0x00007fb5478f4cd1: mov    0x40(%rsp),%rdi
  0x00007fb5478f4cd6: mov    0x48(%rsp),%rsi
  0x00007fb5478f4cdb: mov    0x50(%rsp),%rbp
  0x00007fb5478f4ce0: mov    0x60(%rsp),%rbx
  0x00007fb5478f4ce5: mov    0x68(%rsp),%rdx
  0x00007fb5478f4cea: mov    0x70(%rsp),%rcx
  0x00007fb5478f4cef: mov    0x78(%rsp),%rax
  0x00007fb5478f4cf4: add    $0x80,%rsp
  0x00007fb5478f4cfb: leaveq 
  0x00007fb5478f4cfc: retq   
  0x00007fb5478f4cfd: data16 xchg %ax,%ax

Decoding RuntimeStub - handle_exception_from_callee Runtime1 stub 0x00007fb5478f4d90
  0x00007fb5478f4e00: push   %rbp
  0x00007fb5478f4e01: mov    %rsp,%rbp
  0x00007fb5478f4e04: mov    %rax,0x440(%r15)
  0x00007fb5478f4e0b: mov    %rdx,0x448(%r15)
  0x00007fb5478f4e12: mov    %rdx,0x8(%rbp)
  0x00007fb5478f4e16: mov    %r15,%rdi
  0x00007fb5478f4e19: vzeroupper 
  0x00007fb5478f4e1c: mov    %rbp,0x338(%r15)
  0x00007fb5478f4e23: movabs $0x7fb5478f4e19,%r10
  0x00007fb5478f4e2d: mov    %r10,0x330(%r15)
  0x00007fb5478f4e34: mov    %rsp,0x328(%r15)
  0x00007fb5478f4e3b: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478f4e3f: callq  0x00007fb56497e0b0 = Runtime1::exception_handler_for_pc(JavaThread*)
  0x00007fb5478f4e44: movabs $0x0,%r10
  0x00007fb5478f4e4e: mov    %r10,0x328(%r15)
  0x00007fb5478f4e55: movabs $0x0,%r10
  0x00007fb5478f4e5f: mov    %r10,0x338(%r15)
  0x00007fb5478f4e66: movabs $0x0,%r10
  0x00007fb5478f4e70: mov    %r10,0x330(%r15)
  0x00007fb5478f4e77: vzeroupper 
  0x00007fb5478f4e7a: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f4e82: je     0x00007fb5478f4e91
  0x00007fb5478f4e88: mov    0x8(%r15),%rax
  0x00007fb5478f4e8c: jmpq   0x00007fb5478f1520
  0x00007fb5478f4e91: mov    %rax,0x8(%rbp)
  0x00007fb5478f4e95: leaveq 
  0x00007fb5478f4e96: pop    %rcx
  0x00007fb5478f4e97: jmpq   *%rcx
  0x00007fb5478f4e99: leaveq 
  0x00007fb5478f4e9a: retq   
  0x00007fb5478f4e9b: nopl   0x0(%rax,%rax,1)

Decoding RuntimeStub - throw_array_store_exception Runtime1 stub 0x00007fb5478f5090
  0x00007fb5478f5120: push   %rbp
  0x00007fb5478f5121: mov    %rsp,%rbp
  0x00007fb5478f5124: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f5129: sub    $0x80,%rsp
  0x00007fb5478f5130: mov    %rax,0x78(%rsp)
  0x00007fb5478f5135: mov    %rcx,0x70(%rsp)
  0x00007fb5478f513a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f513f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f5144: mov    %rbp,0x50(%rsp)
  0x00007fb5478f5149: mov    %rsi,0x48(%rsp)
  0x00007fb5478f514e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f5153: mov    %r8,0x38(%rsp)
  0x00007fb5478f5158: mov    %r9,0x30(%rsp)
  0x00007fb5478f515d: mov    %r10,0x28(%rsp)
  0x00007fb5478f5162: mov    %r11,0x20(%rsp)
  0x00007fb5478f5167: mov    %r12,0x18(%rsp)
  0x00007fb5478f516c: mov    %r13,0x10(%rsp)
  0x00007fb5478f5171: mov    %r14,0x8(%rsp)
  0x00007fb5478f5176: mov    %r15,(%rsp)
  0x00007fb5478f517a: sub    $0x3f0,%rsp
  0x00007fb5478f5181: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f5187: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f518d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f5193: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f5199: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f519f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f51a5: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f51ab: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f51b1: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f51b7: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f51bd: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f51c3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f51c9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f51cf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f51d5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f51db: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f51e4: mov    0x10(%rbp),%rsi
  0x00007fb5478f51e8: mov    0x18(%rbp),%rdx
  0x00007fb5478f51ec: mov    %r15,%rdi
  0x00007fb5478f51ef: vzeroupper 
  0x00007fb5478f51f2: mov    %rbp,0x338(%r15)
  0x00007fb5478f51f9: mov    %rsp,0x328(%r15)
  0x00007fb5478f5200: callq  0x00007fb5649797c0 = Runtime1::throw_array_store_exception(JavaThread*, oopDesc*)
  0x00007fb5478f5205: movabs $0x0,%r10
  0x00007fb5478f520f: mov    %r10,0x328(%r15)
  0x00007fb5478f5216: movabs $0x0,%r10
  0x00007fb5478f5220: mov    %r10,0x338(%r15)
  0x00007fb5478f5227: movabs $0x0,%r10
  0x00007fb5478f5231: mov    %r10,0x330(%r15)
  0x00007fb5478f5238: vzeroupper 
  0x00007fb5478f523b: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f5243: je     0x00007fb5478f5252
  0x00007fb5478f5249: mov    0x8(%r15),%rax
  0x00007fb5478f524d: jmpq   0x00007fb5478f1520
  0x00007fb5478f5252: movabs $0x7fb5653eb56e,%rdi
  0x00007fb5478f525c: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478f5260: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb5478f5265: hlt    
  0x00007fb5478f5266: leaveq 
  0x00007fb5478f5267: retq   

Decoding RuntimeStub - throw_class_cast_exception Runtime1 stub 0x00007fb5478f5390
  0x00007fb5478f5420: push   %rbp
  0x00007fb5478f5421: mov    %rsp,%rbp
  0x00007fb5478f5424: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f5429: sub    $0x80,%rsp
  0x00007fb5478f5430: mov    %rax,0x78(%rsp)
  0x00007fb5478f5435: mov    %rcx,0x70(%rsp)
  0x00007fb5478f543a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f543f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f5444: mov    %rbp,0x50(%rsp)
  0x00007fb5478f5449: mov    %rsi,0x48(%rsp)
  0x00007fb5478f544e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f5453: mov    %r8,0x38(%rsp)
  0x00007fb5478f5458: mov    %r9,0x30(%rsp)
  0x00007fb5478f545d: mov    %r10,0x28(%rsp)
  0x00007fb5478f5462: mov    %r11,0x20(%rsp)
  0x00007fb5478f5467: mov    %r12,0x18(%rsp)
  0x00007fb5478f546c: mov    %r13,0x10(%rsp)
  0x00007fb5478f5471: mov    %r14,0x8(%rsp)
  0x00007fb5478f5476: mov    %r15,(%rsp)
  0x00007fb5478f547a: sub    $0x3f0,%rsp
  0x00007fb5478f5481: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f5487: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f548d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f5493: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f5499: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f549f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f54a5: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f54ab: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f54b1: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f54b7: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f54bd: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f54c3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f54c9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f54cf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f54d5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f54db: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f54e4: mov    0x10(%rbp),%rsi
  0x00007fb5478f54e8: mov    0x18(%rbp),%rdx
  0x00007fb5478f54ec: mov    %r15,%rdi
  0x00007fb5478f54ef: vzeroupper 
  0x00007fb5478f54f2: mov    %rbp,0x338(%r15)
  0x00007fb5478f54f9: mov    %rsp,0x328(%r15)
  0x00007fb5478f5500: callq  0x00007fb56497a6a0 = Runtime1::throw_class_cast_exception(JavaThread*, oopDesc*)
  0x00007fb5478f5505: movabs $0x0,%r10
  0x00007fb5478f550f: mov    %r10,0x328(%r15)
  0x00007fb5478f5516: movabs $0x0,%r10
  0x00007fb5478f5520: mov    %r10,0x338(%r15)
  0x00007fb5478f5527: movabs $0x0,%r10
  0x00007fb5478f5531: mov    %r10,0x330(%r15)
  0x00007fb5478f5538: vzeroupper 
  0x00007fb5478f553b: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f5543: je     0x00007fb5478f5552
  0x00007fb5478f5549: mov    0x8(%r15),%rax
  0x00007fb5478f554d: jmpq   0x00007fb5478f1520
  0x00007fb5478f5552: movabs $0x7fb5653eb56e,%rdi
  0x00007fb5478f555c: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478f5560: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb5478f5565: hlt    
  0x00007fb5478f5566: leaveq 
  0x00007fb5478f5567: retq   

Decoding RuntimeStub - throw_incompatible_class_change_error Runtime1 stub 0x00007fb5478f5690
  0x00007fb5478f5720: push   %rbp
  0x00007fb5478f5721: mov    %rsp,%rbp
  0x00007fb5478f5724: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f5729: sub    $0x80,%rsp
  0x00007fb5478f5730: mov    %rax,0x78(%rsp)
  0x00007fb5478f5735: mov    %rcx,0x70(%rsp)
  0x00007fb5478f573a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f573f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f5744: mov    %rbp,0x50(%rsp)
  0x00007fb5478f5749: mov    %rsi,0x48(%rsp)
  0x00007fb5478f574e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f5753: mov    %r8,0x38(%rsp)
  0x00007fb5478f5758: mov    %r9,0x30(%rsp)
  0x00007fb5478f575d: mov    %r10,0x28(%rsp)
  0x00007fb5478f5762: mov    %r11,0x20(%rsp)
  0x00007fb5478f5767: mov    %r12,0x18(%rsp)
  0x00007fb5478f576c: mov    %r13,0x10(%rsp)
  0x00007fb5478f5771: mov    %r14,0x8(%rsp)
  0x00007fb5478f5776: mov    %r15,(%rsp)
  0x00007fb5478f577a: sub    $0x3f0,%rsp
  0x00007fb5478f5781: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f5787: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f578d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f5793: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f5799: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f579f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f57a5: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f57ab: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f57b1: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f57b7: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f57bd: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f57c3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f57c9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f57cf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f57d5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f57db: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f57e4: mov    %r15,%rdi
  0x00007fb5478f57e7: vzeroupper 
  0x00007fb5478f57ea: mov    %rbp,0x338(%r15)
  0x00007fb5478f57f1: mov    %rsp,0x328(%r15)
  0x00007fb5478f57f8: callq  0x00007fb56497a890 = Runtime1::throw_incompatible_class_change_error(JavaThread*)
  0x00007fb5478f57fd: movabs $0x0,%r10
  0x00007fb5478f5807: mov    %r10,0x328(%r15)
  0x00007fb5478f580e: movabs $0x0,%r10
  0x00007fb5478f5818: mov    %r10,0x338(%r15)
  0x00007fb5478f581f: movabs $0x0,%r10
  0x00007fb5478f5829: mov    %r10,0x330(%r15)
  0x00007fb5478f5830: vzeroupper 
  0x00007fb5478f5833: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f583b: je     0x00007fb5478f584a
  0x00007fb5478f5841: mov    0x8(%r15),%rax
  0x00007fb5478f5845: jmpq   0x00007fb5478f1520
  0x00007fb5478f584a: movabs $0x7fb5653eb56e,%rdi
  0x00007fb5478f5854: and    $0xfffffffffffffff0,%rsp
  0x00007fb5478f5858: callq  0x00007fb564f2f1e0 = MacroAssembler::debug64(char*, long, long*)
  0x00007fb5478f585d: hlt    
  0x00007fb5478f585e: leaveq 
  0x00007fb5478f585f: retq   

Decoding RuntimeStub - slow_subtype_check Runtime1 stub 0x00007fb5478f5990
  0x00007fb5478f5a00: push   %rdi
  0x00007fb5478f5a01: push   %rsi
  0x00007fb5478f5a02: push   %rcx
  0x00007fb5478f5a03: push   %rax
  0x00007fb5478f5a04: mov    0x30(%rsp),%rsi
  0x00007fb5478f5a09: mov    0x28(%rsp),%rax
  0x00007fb5478f5a0e: push   %rax
  0x00007fb5478f5a0f: mov    %rax,%rax
  0x00007fb5478f5a12: mov    0x28(%rsi),%rdi
  0x00007fb5478f5a16: mov    (%rdi),%ecx
  0x00007fb5478f5a18: add    $0x8,%rdi
  0x00007fb5478f5a1c: test   %rax,%rax
  0x00007fb5478f5a1f: repnz scas %es:(%rdi),%rax
  0x00007fb5478f5a22: pop    %rax
  0x00007fb5478f5a23: jne    0x00007fb5478f5a3b
  0x00007fb5478f5a29: mov    %rax,0x20(%rsi)
  0x00007fb5478f5a2d: movq   $0x1,0x30(%rsp)
  0x00007fb5478f5a36: pop    %rax
  0x00007fb5478f5a37: pop    %rcx
  0x00007fb5478f5a38: pop    %rsi
  0x00007fb5478f5a39: pop    %rdi
  0x00007fb5478f5a3a: retq   
  0x00007fb5478f5a3b: movabs $0x0,%r10
  0x00007fb5478f5a45: mov    %r10,0x30(%rsp)
  0x00007fb5478f5a4a: pop    %rax
  0x00007fb5478f5a4b: pop    %rcx
  0x00007fb5478f5a4c: pop    %rsi
  0x00007fb5478f5a4d: pop    %rdi
  0x00007fb5478f5a4e: retq   
  0x00007fb5478f5a4f: nop

Decoding RuntimeStub - monitorenter Runtime1 stub 0x00007fb5478f5c90
  0x00007fb5478f5d00: push   %rbp
  0x00007fb5478f5d01: mov    %rsp,%rbp
  0x00007fb5478f5d04: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f5d09: sub    $0x80,%rsp
  0x00007fb5478f5d10: mov    %rax,0x78(%rsp)
  0x00007fb5478f5d15: mov    %rcx,0x70(%rsp)
  0x00007fb5478f5d1a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f5d1f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f5d24: mov    %rbp,0x50(%rsp)
  0x00007fb5478f5d29: mov    %rsi,0x48(%rsp)
  0x00007fb5478f5d2e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f5d33: mov    %r8,0x38(%rsp)
  0x00007fb5478f5d38: mov    %r9,0x30(%rsp)
  0x00007fb5478f5d3d: mov    %r10,0x28(%rsp)
  0x00007fb5478f5d42: mov    %r11,0x20(%rsp)
  0x00007fb5478f5d47: mov    %r12,0x18(%rsp)
  0x00007fb5478f5d4c: mov    %r13,0x10(%rsp)
  0x00007fb5478f5d51: mov    %r14,0x8(%rsp)
  0x00007fb5478f5d56: mov    %r15,(%rsp)
  0x00007fb5478f5d5a: sub    $0x3f0,%rsp
  0x00007fb5478f5d61: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f5d67: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f5d6d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f5d73: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f5d79: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f5d7f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f5d85: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f5d8b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f5d91: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f5d97: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f5d9d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f5da3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f5da9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f5daf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f5db5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f5dbb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f5dc4: mov    0x18(%rbp),%rax
  0x00007fb5478f5dc8: mov    0x10(%rbp),%rbx
  0x00007fb5478f5dcc: mov    %rax,%rsi
  0x00007fb5478f5dcf: mov    %rbx,%rdx
  0x00007fb5478f5dd2: mov    %r15,%rdi
  0x00007fb5478f5dd5: vzeroupper 
  0x00007fb5478f5dd8: mov    %rbp,0x338(%r15)
  0x00007fb5478f5ddf: mov    %rsp,0x328(%r15)
  0x00007fb5478f5de6: callq  0x00007fb56497aa40 = Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*)
  0x00007fb5478f5deb: movabs $0x0,%r10
  0x00007fb5478f5df5: mov    %r10,0x328(%r15)
  0x00007fb5478f5dfc: movabs $0x0,%r10
  0x00007fb5478f5e06: mov    %r10,0x338(%r15)
  0x00007fb5478f5e0d: movabs $0x0,%r10
  0x00007fb5478f5e17: mov    %r10,0x330(%r15)
  0x00007fb5478f5e1e: vzeroupper 
  0x00007fb5478f5e21: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f5e29: je     0x00007fb5478f5e38
  0x00007fb5478f5e2f: mov    0x8(%r15),%rax
  0x00007fb5478f5e33: jmpq   0x00007fb5478f1520
  0x00007fb5478f5e38: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f5e3e: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f5e44: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f5e4a: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f5e50: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f5e56: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f5e5c: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f5e62: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f5e68: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f5e6e: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f5e74: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f5e7a: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f5e80: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f5e86: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f5e8c: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f5e92: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f5e9b: add    $0x3f0,%rsp
  0x00007fb5478f5ea2: mov    (%rsp),%r15
  0x00007fb5478f5ea6: mov    0x8(%rsp),%r14
  0x00007fb5478f5eab: mov    0x10(%rsp),%r13
  0x00007fb5478f5eb0: mov    0x18(%rsp),%r12
  0x00007fb5478f5eb5: mov    0x20(%rsp),%r11
  0x00007fb5478f5eba: mov    0x28(%rsp),%r10
  0x00007fb5478f5ebf: mov    0x30(%rsp),%r9
  0x00007fb5478f5ec4: mov    0x38(%rsp),%r8
  0x00007fb5478f5ec9: mov    0x40(%rsp),%rdi
  0x00007fb5478f5ece: mov    0x48(%rsp),%rsi
  0x00007fb5478f5ed3: mov    0x50(%rsp),%rbp
  0x00007fb5478f5ed8: mov    0x60(%rsp),%rbx
  0x00007fb5478f5edd: mov    0x68(%rsp),%rdx
  0x00007fb5478f5ee2: mov    0x70(%rsp),%rcx
  0x00007fb5478f5ee7: mov    0x78(%rsp),%rax
  0x00007fb5478f5eec: add    $0x80,%rsp
  0x00007fb5478f5ef3: leaveq 
  0x00007fb5478f5ef4: retq   
  0x00007fb5478f5ef5: data16 xchg %ax,%ax

Decoding RuntimeStub - monitorenter_nofpu Runtime1 stub 0x00007fb5478f5f90
  0x00007fb5478f6000: push   %rbp
  0x00007fb5478f6001: mov    %rsp,%rbp
  0x00007fb5478f6004: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f6009: sub    $0x80,%rsp
  0x00007fb5478f6010: mov    %rax,0x78(%rsp)
  0x00007fb5478f6015: mov    %rcx,0x70(%rsp)
  0x00007fb5478f601a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f601f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f6024: mov    %rbp,0x50(%rsp)
  0x00007fb5478f6029: mov    %rsi,0x48(%rsp)
  0x00007fb5478f602e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f6033: mov    %r8,0x38(%rsp)
  0x00007fb5478f6038: mov    %r9,0x30(%rsp)
  0x00007fb5478f603d: mov    %r10,0x28(%rsp)
  0x00007fb5478f6042: mov    %r11,0x20(%rsp)
  0x00007fb5478f6047: mov    %r12,0x18(%rsp)
  0x00007fb5478f604c: mov    %r13,0x10(%rsp)
  0x00007fb5478f6051: mov    %r14,0x8(%rsp)
  0x00007fb5478f6056: mov    %r15,(%rsp)
  0x00007fb5478f605a: sub    $0x3f0,%rsp
  0x00007fb5478f6061: mov    0x18(%rbp),%rax
  0x00007fb5478f6065: mov    0x10(%rbp),%rbx
  0x00007fb5478f6069: mov    %rax,%rsi
  0x00007fb5478f606c: mov    %rbx,%rdx
  0x00007fb5478f606f: mov    %r15,%rdi
  0x00007fb5478f6072: vzeroupper 
  0x00007fb5478f6075: mov    %rbp,0x338(%r15)
  0x00007fb5478f607c: mov    %rsp,0x328(%r15)
  0x00007fb5478f6083: callq  0x00007fb56497aa40 = Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*)
  0x00007fb5478f6088: movabs $0x0,%r10
  0x00007fb5478f6092: mov    %r10,0x328(%r15)
  0x00007fb5478f6099: movabs $0x0,%r10
  0x00007fb5478f60a3: mov    %r10,0x338(%r15)
  0x00007fb5478f60aa: movabs $0x0,%r10
  0x00007fb5478f60b4: mov    %r10,0x330(%r15)
  0x00007fb5478f60bb: vzeroupper 
  0x00007fb5478f60be: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f60c6: je     0x00007fb5478f60d5
  0x00007fb5478f60cc: mov    0x8(%r15),%rax
  0x00007fb5478f60d0: jmpq   0x00007fb5478f1520
  0x00007fb5478f60d5: add    $0x3f0,%rsp
  0x00007fb5478f60dc: mov    (%rsp),%r15
  0x00007fb5478f60e0: mov    0x8(%rsp),%r14
  0x00007fb5478f60e5: mov    0x10(%rsp),%r13
  0x00007fb5478f60ea: mov    0x18(%rsp),%r12
  0x00007fb5478f60ef: mov    0x20(%rsp),%r11
  0x00007fb5478f60f4: mov    0x28(%rsp),%r10
  0x00007fb5478f60f9: mov    0x30(%rsp),%r9
  0x00007fb5478f60fe: mov    0x38(%rsp),%r8
  0x00007fb5478f6103: mov    0x40(%rsp),%rdi
  0x00007fb5478f6108: mov    0x48(%rsp),%rsi
  0x00007fb5478f610d: mov    0x50(%rsp),%rbp
  0x00007fb5478f6112: mov    0x60(%rsp),%rbx
  0x00007fb5478f6117: mov    0x68(%rsp),%rdx
  0x00007fb5478f611c: mov    0x70(%rsp),%rcx
  0x00007fb5478f6121: mov    0x78(%rsp),%rax
  0x00007fb5478f6126: add    $0x80,%rsp
  0x00007fb5478f612d: leaveq 
  0x00007fb5478f612e: retq   
  0x00007fb5478f612f: nop

Decoding RuntimeStub - monitorexit Runtime1 stub 0x00007fb5478f6290
  0x00007fb5478f6300: push   %rbp
  0x00007fb5478f6301: mov    %rsp,%rbp
  0x00007fb5478f6304: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f6309: sub    $0x80,%rsp
  0x00007fb5478f6310: mov    %rax,0x78(%rsp)
  0x00007fb5478f6315: mov    %rcx,0x70(%rsp)
  0x00007fb5478f631a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f631f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f6324: mov    %rbp,0x50(%rsp)
  0x00007fb5478f6329: mov    %rsi,0x48(%rsp)
  0x00007fb5478f632e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f6333: mov    %r8,0x38(%rsp)
  0x00007fb5478f6338: mov    %r9,0x30(%rsp)
  0x00007fb5478f633d: mov    %r10,0x28(%rsp)
  0x00007fb5478f6342: mov    %r11,0x20(%rsp)
  0x00007fb5478f6347: mov    %r12,0x18(%rsp)
  0x00007fb5478f634c: mov    %r13,0x10(%rsp)
  0x00007fb5478f6351: mov    %r14,0x8(%rsp)
  0x00007fb5478f6356: mov    %r15,(%rsp)
  0x00007fb5478f635a: sub    $0x3f0,%rsp
  0x00007fb5478f6361: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f6367: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f636d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f6373: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f6379: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f637f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f6385: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f638b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f6391: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f6397: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f639d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f63a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f63a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f63af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f63b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f63bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f63c4: mov    0x10(%rbp),%rax
  0x00007fb5478f63c8: mov    %rax,%rsi
  0x00007fb5478f63cb: mov    %r15,%rdi
  0x00007fb5478f63ce: vzeroupper 
  0x00007fb5478f63d1: mov    %rbp,0x338(%r15)
  0x00007fb5478f63d8: mov    %rsp,0x328(%r15)
  0x00007fb5478f63df: callq  0x00007fb56497aab0 = Runtime1::monitorexit(JavaThread*, BasicObjectLock*)
  0x00007fb5478f63e4: movabs $0x0,%r10
  0x00007fb5478f63ee: mov    %r10,0x328(%r15)
  0x00007fb5478f63f5: movabs $0x0,%r10
  0x00007fb5478f63ff: mov    %r10,0x338(%r15)
  0x00007fb5478f6406: movabs $0x0,%r10
  0x00007fb5478f6410: mov    %r10,0x330(%r15)
  0x00007fb5478f6417: vzeroupper 
  0x00007fb5478f641a: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f6422: je     0x00007fb5478f6431
  0x00007fb5478f6428: mov    0x8(%r15),%rax
  0x00007fb5478f642c: jmpq   0x00007fb5478f1520
  0x00007fb5478f6431: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f6437: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f643d: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f6443: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f6449: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f644f: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f6455: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f645b: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f6461: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f6467: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f646d: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f6473: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f6479: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f647f: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f6485: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f648b: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f6494: add    $0x3f0,%rsp
  0x00007fb5478f649b: mov    (%rsp),%r15
  0x00007fb5478f649f: mov    0x8(%rsp),%r14
  0x00007fb5478f64a4: mov    0x10(%rsp),%r13
  0x00007fb5478f64a9: mov    0x18(%rsp),%r12
  0x00007fb5478f64ae: mov    0x20(%rsp),%r11
  0x00007fb5478f64b3: mov    0x28(%rsp),%r10
  0x00007fb5478f64b8: mov    0x30(%rsp),%r9
  0x00007fb5478f64bd: mov    0x38(%rsp),%r8
  0x00007fb5478f64c2: mov    0x40(%rsp),%rdi
  0x00007fb5478f64c7: mov    0x48(%rsp),%rsi
  0x00007fb5478f64cc: mov    0x50(%rsp),%rbp
  0x00007fb5478f64d1: mov    0x60(%rsp),%rbx
  0x00007fb5478f64d6: mov    0x68(%rsp),%rdx
  0x00007fb5478f64db: mov    0x70(%rsp),%rcx
  0x00007fb5478f64e0: mov    0x78(%rsp),%rax
  0x00007fb5478f64e5: add    $0x80,%rsp
  0x00007fb5478f64ec: leaveq 
  0x00007fb5478f64ed: retq   
  0x00007fb5478f64ee: xchg   %ax,%ax

Decoding RuntimeStub - monitorexit_nofpu Runtime1 stub 0x00007fb5478f6590
  0x00007fb5478f6600: push   %rbp
  0x00007fb5478f6601: mov    %rsp,%rbp
  0x00007fb5478f6604: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f6609: sub    $0x80,%rsp
  0x00007fb5478f6610: mov    %rax,0x78(%rsp)
  0x00007fb5478f6615: mov    %rcx,0x70(%rsp)
  0x00007fb5478f661a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f661f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f6624: mov    %rbp,0x50(%rsp)
  0x00007fb5478f6629: mov    %rsi,0x48(%rsp)
  0x00007fb5478f662e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f6633: mov    %r8,0x38(%rsp)
  0x00007fb5478f6638: mov    %r9,0x30(%rsp)
  0x00007fb5478f663d: mov    %r10,0x28(%rsp)
  0x00007fb5478f6642: mov    %r11,0x20(%rsp)
  0x00007fb5478f6647: mov    %r12,0x18(%rsp)
  0x00007fb5478f664c: mov    %r13,0x10(%rsp)
  0x00007fb5478f6651: mov    %r14,0x8(%rsp)
  0x00007fb5478f6656: mov    %r15,(%rsp)
  0x00007fb5478f665a: sub    $0x3f0,%rsp
  0x00007fb5478f6661: mov    0x10(%rbp),%rax
  0x00007fb5478f6665: mov    %rax,%rsi
  0x00007fb5478f6668: mov    %r15,%rdi
  0x00007fb5478f666b: vzeroupper 
  0x00007fb5478f666e: mov    %rbp,0x338(%r15)
  0x00007fb5478f6675: mov    %rsp,0x328(%r15)
  0x00007fb5478f667c: callq  0x00007fb56497aab0 = Runtime1::monitorexit(JavaThread*, BasicObjectLock*)
  0x00007fb5478f6681: movabs $0x0,%r10
  0x00007fb5478f668b: mov    %r10,0x328(%r15)
  0x00007fb5478f6692: movabs $0x0,%r10
  0x00007fb5478f669c: mov    %r10,0x338(%r15)
  0x00007fb5478f66a3: movabs $0x0,%r10
  0x00007fb5478f66ad: mov    %r10,0x330(%r15)
  0x00007fb5478f66b4: vzeroupper 
  0x00007fb5478f66b7: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f66bf: je     0x00007fb5478f66ce
  0x00007fb5478f66c5: mov    0x8(%r15),%rax
  0x00007fb5478f66c9: jmpq   0x00007fb5478f1520
  0x00007fb5478f66ce: add    $0x3f0,%rsp
  0x00007fb5478f66d5: mov    (%rsp),%r15
  0x00007fb5478f66d9: mov    0x8(%rsp),%r14
  0x00007fb5478f66de: mov    0x10(%rsp),%r13
  0x00007fb5478f66e3: mov    0x18(%rsp),%r12
  0x00007fb5478f66e8: mov    0x20(%rsp),%r11
  0x00007fb5478f66ed: mov    0x28(%rsp),%r10
  0x00007fb5478f66f2: mov    0x30(%rsp),%r9
  0x00007fb5478f66f7: mov    0x38(%rsp),%r8
  0x00007fb5478f66fc: mov    0x40(%rsp),%rdi
  0x00007fb5478f6701: mov    0x48(%rsp),%rsi
  0x00007fb5478f6706: mov    0x50(%rsp),%rbp
  0x00007fb5478f670b: mov    0x60(%rsp),%rbx
  0x00007fb5478f6710: mov    0x68(%rsp),%rdx
  0x00007fb5478f6715: mov    0x70(%rsp),%rcx
  0x00007fb5478f671a: mov    0x78(%rsp),%rax
  0x00007fb5478f671f: add    $0x80,%rsp
  0x00007fb5478f6726: leaveq 
  0x00007fb5478f6727: retq   

Decoding RuntimeStub - deoptimize Runtime1 stub 0x00007fb5478f6890
  0x00007fb5478f6900: push   %rbp
  0x00007fb5478f6901: mov    %rsp,%rbp
  0x00007fb5478f6904: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f6909: sub    $0x80,%rsp
  0x00007fb5478f6910: mov    %rax,0x78(%rsp)
  0x00007fb5478f6915: mov    %rcx,0x70(%rsp)
  0x00007fb5478f691a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f691f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f6924: mov    %rbp,0x50(%rsp)
  0x00007fb5478f6929: mov    %rsi,0x48(%rsp)
  0x00007fb5478f692e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f6933: mov    %r8,0x38(%rsp)
  0x00007fb5478f6938: mov    %r9,0x30(%rsp)
  0x00007fb5478f693d: mov    %r10,0x28(%rsp)
  0x00007fb5478f6942: mov    %r11,0x20(%rsp)
  0x00007fb5478f6947: mov    %r12,0x18(%rsp)
  0x00007fb5478f694c: mov    %r13,0x10(%rsp)
  0x00007fb5478f6951: mov    %r14,0x8(%rsp)
  0x00007fb5478f6956: mov    %r15,(%rsp)
  0x00007fb5478f695a: sub    $0x3f0,%rsp
  0x00007fb5478f6961: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f6967: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f696d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f6973: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f6979: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f697f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f6985: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f698b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f6991: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f6997: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f699d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f69a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f69a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f69af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f69b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f69bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f69c4: mov    0x10(%rbp),%rax
  0x00007fb5478f69c8: mov    %rax,%rsi
  0x00007fb5478f69cb: mov    %r15,%rdi
  0x00007fb5478f69ce: vzeroupper 
  0x00007fb5478f69d1: mov    %rbp,0x338(%r15)
  0x00007fb5478f69d8: mov    %rsp,0x328(%r15)
  0x00007fb5478f69df: callq  0x00007fb56497aad0 = Runtime1::deoptimize(JavaThread*, int)
  0x00007fb5478f69e4: movabs $0x0,%r10
  0x00007fb5478f69ee: mov    %r10,0x328(%r15)
  0x00007fb5478f69f5: movabs $0x0,%r10
  0x00007fb5478f69ff: mov    %r10,0x338(%r15)
  0x00007fb5478f6a06: movabs $0x0,%r10
  0x00007fb5478f6a10: mov    %r10,0x330(%r15)
  0x00007fb5478f6a17: vzeroupper 
  0x00007fb5478f6a1a: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f6a22: je     0x00007fb5478f6a31
  0x00007fb5478f6a28: mov    0x8(%r15),%rax
  0x00007fb5478f6a2c: jmpq   0x00007fb5478f1520
  0x00007fb5478f6a31: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f6a37: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f6a3d: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f6a43: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f6a49: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f6a4f: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f6a55: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f6a5b: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f6a61: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f6a67: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f6a6d: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f6a73: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f6a79: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f6a7f: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f6a85: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f6a8b: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f6a94: add    $0x3f0,%rsp
  0x00007fb5478f6a9b: mov    (%rsp),%r15
  0x00007fb5478f6a9f: mov    0x8(%rsp),%r14
  0x00007fb5478f6aa4: mov    0x10(%rsp),%r13
  0x00007fb5478f6aa9: mov    0x18(%rsp),%r12
  0x00007fb5478f6aae: mov    0x20(%rsp),%r11
  0x00007fb5478f6ab3: mov    0x28(%rsp),%r10
  0x00007fb5478f6ab8: mov    0x30(%rsp),%r9
  0x00007fb5478f6abd: mov    0x38(%rsp),%r8
  0x00007fb5478f6ac2: mov    0x40(%rsp),%rdi
  0x00007fb5478f6ac7: mov    0x48(%rsp),%rsi
  0x00007fb5478f6acc: mov    0x50(%rsp),%rbp
  0x00007fb5478f6ad1: mov    0x60(%rsp),%rbx
  0x00007fb5478f6ad6: mov    0x68(%rsp),%rdx
  0x00007fb5478f6adb: mov    0x70(%rsp),%rcx
  0x00007fb5478f6ae0: mov    0x78(%rsp),%rax
  0x00007fb5478f6ae5: add    $0x80,%rsp
  0x00007fb5478f6aec: leaveq 
  0x00007fb5478f6aed: jmpq   0x00007fb54784a2c9
  0x00007fb5478f6af2: leaveq 
  0x00007fb5478f6af3: retq   
  0x00007fb5478f6af4: nopl   0x0(%rax)

Decoding RuntimeStub - access_field_patching Runtime1 stub 0x00007fb5478f6b90
  0x00007fb5478f6c00: push   %rbp
  0x00007fb5478f6c01: mov    %rsp,%rbp
  0x00007fb5478f6c04: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f6c09: sub    $0x80,%rsp
  0x00007fb5478f6c10: mov    %rax,0x78(%rsp)
  0x00007fb5478f6c15: mov    %rcx,0x70(%rsp)
  0x00007fb5478f6c1a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f6c1f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f6c24: mov    %rbp,0x50(%rsp)
  0x00007fb5478f6c29: mov    %rsi,0x48(%rsp)
  0x00007fb5478f6c2e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f6c33: mov    %r8,0x38(%rsp)
  0x00007fb5478f6c38: mov    %r9,0x30(%rsp)
  0x00007fb5478f6c3d: mov    %r10,0x28(%rsp)
  0x00007fb5478f6c42: mov    %r11,0x20(%rsp)
  0x00007fb5478f6c47: mov    %r12,0x18(%rsp)
  0x00007fb5478f6c4c: mov    %r13,0x10(%rsp)
  0x00007fb5478f6c51: mov    %r14,0x8(%rsp)
  0x00007fb5478f6c56: mov    %r15,(%rsp)
  0x00007fb5478f6c5a: sub    $0x3f0,%rsp
  0x00007fb5478f6c61: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f6c67: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f6c6d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f6c73: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f6c79: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f6c7f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f6c85: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f6c8b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f6c91: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f6c97: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f6c9d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f6ca3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f6ca9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f6caf: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f6cb5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f6cbb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f6cc4: mov    %r15,%rdi
  0x00007fb5478f6cc7: vzeroupper 
  0x00007fb5478f6cca: mov    %rbp,0x338(%r15)
  0x00007fb5478f6cd1: mov    %rsp,0x328(%r15)
  0x00007fb5478f6cd8: callq  0x00007fb56497d630 = Runtime1::access_field_patching(JavaThread*)
  0x00007fb5478f6cdd: movabs $0x0,%r10
  0x00007fb5478f6ce7: mov    %r10,0x328(%r15)
  0x00007fb5478f6cee: movabs $0x0,%r10
  0x00007fb5478f6cf8: mov    %r10,0x338(%r15)
  0x00007fb5478f6cff: movabs $0x0,%r10
  0x00007fb5478f6d09: mov    %r10,0x330(%r15)
  0x00007fb5478f6d10: vzeroupper 
  0x00007fb5478f6d13: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f6d1b: je     0x00007fb5478f6e17
  0x00007fb5478f6d21: test   %rax,%rax
  0x00007fb5478f6d24: je     0x00007fb5478f1520
  0x00007fb5478f6d2a: mov    0x8(%r15),%rax
  0x00007fb5478f6d2e: movabs $0x0,%r10
  0x00007fb5478f6d38: mov    %r10,0x8(%r15)
  0x00007fb5478f6d3c: mov    0x478(%rsp),%rdx
  0x00007fb5478f6d44: mov    %rax,0x440(%r15)
  0x00007fb5478f6d4b: mov    %rdx,0x448(%r15)
  0x00007fb5478f6d52: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f6d58: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f6d5e: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f6d64: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f6d6a: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f6d70: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f6d76: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f6d7c: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f6d82: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f6d88: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f6d8e: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f6d94: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f6d9a: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f6da0: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f6da6: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f6dac: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f6db5: add    $0x3f0,%rsp
  0x00007fb5478f6dbc: mov    (%rsp),%r15
  0x00007fb5478f6dc0: mov    0x8(%rsp),%r14
  0x00007fb5478f6dc5: mov    0x10(%rsp),%r13
  0x00007fb5478f6dca: mov    0x18(%rsp),%r12
  0x00007fb5478f6dcf: mov    0x20(%rsp),%r11
  0x00007fb5478f6dd4: mov    0x28(%rsp),%r10
  0x00007fb5478f6dd9: mov    0x30(%rsp),%r9
  0x00007fb5478f6dde: mov    0x38(%rsp),%r8
  0x00007fb5478f6de3: mov    0x40(%rsp),%rdi
  0x00007fb5478f6de8: mov    0x48(%rsp),%rsi
  0x00007fb5478f6ded: mov    0x50(%rsp),%rbp
  0x00007fb5478f6df2: mov    0x60(%rsp),%rbx
  0x00007fb5478f6df7: mov    0x68(%rsp),%rdx
  0x00007fb5478f6dfc: mov    0x70(%rsp),%rcx
  0x00007fb5478f6e01: mov    0x78(%rsp),%rax
  0x00007fb5478f6e06: add    $0x80,%rsp
  0x00007fb5478f6e0d: leaveq 
  0x00007fb5478f6e0e: add    $0x8,%rsp
  0x00007fb5478f6e12: jmpq   0x00007fb54784a400
  0x00007fb5478f6e17: test   %rax,%rax
  0x00007fb5478f6e1a: je     0x00007fb5478f6ee1
  0x00007fb5478f6e20: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f6e26: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f6e2c: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f6e32: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f6e38: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f6e3e: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f6e44: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f6e4a: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f6e50: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f6e56: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f6e5c: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f6e62: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f6e68: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f6e6e: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f6e74: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f6e7a: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f6e83: add    $0x3f0,%rsp
  0x00007fb5478f6e8a: mov    (%rsp),%r15
  0x00007fb5478f6e8e: mov    0x8(%rsp),%r14
  0x00007fb5478f6e93: mov    0x10(%rsp),%r13
  0x00007fb5478f6e98: mov    0x18(%rsp),%r12
  0x00007fb5478f6e9d: mov    0x20(%rsp),%r11
  0x00007fb5478f6ea2: mov    0x28(%rsp),%r10
  0x00007fb5478f6ea7: mov    0x30(%rsp),%r9
  0x00007fb5478f6eac: mov    0x38(%rsp),%r8
  0x00007fb5478f6eb1: mov    0x40(%rsp),%rdi
  0x00007fb5478f6eb6: mov    0x48(%rsp),%rsi
  0x00007fb5478f6ebb: mov    0x50(%rsp),%rbp
  0x00007fb5478f6ec0: mov    0x60(%rsp),%rbx
  0x00007fb5478f6ec5: mov    0x68(%rsp),%rdx
  0x00007fb5478f6eca: mov    0x70(%rsp),%rcx
  0x00007fb5478f6ecf: mov    0x78(%rsp),%rax
  0x00007fb5478f6ed4: add    $0x80,%rsp
  0x00007fb5478f6edb: leaveq 
  0x00007fb5478f6edc: jmpq   0x00007fb54784a2c9
  0x00007fb5478f6ee1: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f6ee7: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f6eed: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f6ef3: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f6ef9: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f6eff: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f6f05: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f6f0b: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f6f11: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f6f17: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f6f1d: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f6f23: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f6f29: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f6f2f: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f6f35: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f6f3b: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f6f44: add    $0x3f0,%rsp
  0x00007fb5478f6f4b: mov    (%rsp),%r15
  0x00007fb5478f6f4f: mov    0x8(%rsp),%r14
  0x00007fb5478f6f54: mov    0x10(%rsp),%r13
  0x00007fb5478f6f59: mov    0x18(%rsp),%r12
  0x00007fb5478f6f5e: mov    0x20(%rsp),%r11
  0x00007fb5478f6f63: mov    0x28(%rsp),%r10
  0x00007fb5478f6f68: mov    0x30(%rsp),%r9
  0x00007fb5478f6f6d: mov    0x38(%rsp),%r8
  0x00007fb5478f6f72: mov    0x40(%rsp),%rdi
  0x00007fb5478f6f77: mov    0x48(%rsp),%rsi
  0x00007fb5478f6f7c: mov    0x50(%rsp),%rbp
  0x00007fb5478f6f81: mov    0x60(%rsp),%rbx
  0x00007fb5478f6f86: mov    0x68(%rsp),%rdx
  0x00007fb5478f6f8b: mov    0x70(%rsp),%rcx
  0x00007fb5478f6f90: mov    0x78(%rsp),%rax
  0x00007fb5478f6f95: add    $0x80,%rsp
  0x00007fb5478f6f9c: leaveq 
  0x00007fb5478f6f9d: retq   
  0x00007fb5478f6f9e: leaveq 
  0x00007fb5478f6f9f: retq   

Decoding RuntimeStub - load_klass_patching Runtime1 stub 0x00007fb5478f7010
  0x00007fb5478f7080: push   %rbp
  0x00007fb5478f7081: mov    %rsp,%rbp
  0x00007fb5478f7084: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f7089: sub    $0x80,%rsp
  0x00007fb5478f7090: mov    %rax,0x78(%rsp)
  0x00007fb5478f7095: mov    %rcx,0x70(%rsp)
  0x00007fb5478f709a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f709f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f70a4: mov    %rbp,0x50(%rsp)
  0x00007fb5478f70a9: mov    %rsi,0x48(%rsp)
  0x00007fb5478f70ae: mov    %rdi,0x40(%rsp)
  0x00007fb5478f70b3: mov    %r8,0x38(%rsp)
  0x00007fb5478f70b8: mov    %r9,0x30(%rsp)
  0x00007fb5478f70bd: mov    %r10,0x28(%rsp)
  0x00007fb5478f70c2: mov    %r11,0x20(%rsp)
  0x00007fb5478f70c7: mov    %r12,0x18(%rsp)
  0x00007fb5478f70cc: mov    %r13,0x10(%rsp)
  0x00007fb5478f70d1: mov    %r14,0x8(%rsp)
  0x00007fb5478f70d6: mov    %r15,(%rsp)
  0x00007fb5478f70da: sub    $0x3f0,%rsp
  0x00007fb5478f70e1: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f70e7: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f70ed: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f70f3: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f70f9: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f70ff: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f7105: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f710b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f7111: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f7117: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f711d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f7123: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f7129: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f712f: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f7135: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f713b: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f7144: mov    %r15,%rdi
  0x00007fb5478f7147: vzeroupper 
  0x00007fb5478f714a: mov    %rbp,0x338(%r15)
  0x00007fb5478f7151: mov    %rsp,0x328(%r15)
  0x00007fb5478f7158: callq  0x00007fb56497d5d0 = Runtime1::move_klass_patching(JavaThread*)
  0x00007fb5478f715d: movabs $0x0,%r10
  0x00007fb5478f7167: mov    %r10,0x328(%r15)
  0x00007fb5478f716e: movabs $0x0,%r10
  0x00007fb5478f7178: mov    %r10,0x338(%r15)
  0x00007fb5478f717f: movabs $0x0,%r10
  0x00007fb5478f7189: mov    %r10,0x330(%r15)
  0x00007fb5478f7190: vzeroupper 
  0x00007fb5478f7193: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f719b: je     0x00007fb5478f7297
  0x00007fb5478f71a1: test   %rax,%rax
  0x00007fb5478f71a4: je     0x00007fb5478f1520
  0x00007fb5478f71aa: mov    0x8(%r15),%rax
  0x00007fb5478f71ae: movabs $0x0,%r10
  0x00007fb5478f71b8: mov    %r10,0x8(%r15)
  0x00007fb5478f71bc: mov    0x478(%rsp),%rdx
  0x00007fb5478f71c4: mov    %rax,0x440(%r15)
  0x00007fb5478f71cb: mov    %rdx,0x448(%r15)
  0x00007fb5478f71d2: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f71d8: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f71de: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f71e4: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f71ea: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f71f0: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f71f6: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f71fc: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f7202: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f7208: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f720e: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f7214: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f721a: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f7220: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f7226: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f722c: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f7235: add    $0x3f0,%rsp
  0x00007fb5478f723c: mov    (%rsp),%r15
  0x00007fb5478f7240: mov    0x8(%rsp),%r14
  0x00007fb5478f7245: mov    0x10(%rsp),%r13
  0x00007fb5478f724a: mov    0x18(%rsp),%r12
  0x00007fb5478f724f: mov    0x20(%rsp),%r11
  0x00007fb5478f7254: mov    0x28(%rsp),%r10
  0x00007fb5478f7259: mov    0x30(%rsp),%r9
  0x00007fb5478f725e: mov    0x38(%rsp),%r8
  0x00007fb5478f7263: mov    0x40(%rsp),%rdi
  0x00007fb5478f7268: mov    0x48(%rsp),%rsi
  0x00007fb5478f726d: mov    0x50(%rsp),%rbp
  0x00007fb5478f7272: mov    0x60(%rsp),%rbx
  0x00007fb5478f7277: mov    0x68(%rsp),%rdx
  0x00007fb5478f727c: mov    0x70(%rsp),%rcx
  0x00007fb5478f7281: mov    0x78(%rsp),%rax
  0x00007fb5478f7286: add    $0x80,%rsp
  0x00007fb5478f728d: leaveq 
  0x00007fb5478f728e: add    $0x8,%rsp
  0x00007fb5478f7292: jmpq   0x00007fb54784a400
  0x00007fb5478f7297: test   %rax,%rax
  0x00007fb5478f729a: je     0x00007fb5478f7361
  0x00007fb5478f72a0: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f72a6: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f72ac: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f72b2: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f72b8: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f72be: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f72c4: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f72ca: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f72d0: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f72d6: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f72dc: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f72e2: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f72e8: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f72ee: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f72f4: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f72fa: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f7303: add    $0x3f0,%rsp
  0x00007fb5478f730a: mov    (%rsp),%r15
  0x00007fb5478f730e: mov    0x8(%rsp),%r14
  0x00007fb5478f7313: mov    0x10(%rsp),%r13
  0x00007fb5478f7318: mov    0x18(%rsp),%r12
  0x00007fb5478f731d: mov    0x20(%rsp),%r11
  0x00007fb5478f7322: mov    0x28(%rsp),%r10
  0x00007fb5478f7327: mov    0x30(%rsp),%r9
  0x00007fb5478f732c: mov    0x38(%rsp),%r8
  0x00007fb5478f7331: mov    0x40(%rsp),%rdi
  0x00007fb5478f7336: mov    0x48(%rsp),%rsi
  0x00007fb5478f733b: mov    0x50(%rsp),%rbp
  0x00007fb5478f7340: mov    0x60(%rsp),%rbx
  0x00007fb5478f7345: mov    0x68(%rsp),%rdx
  0x00007fb5478f734a: mov    0x70(%rsp),%rcx
  0x00007fb5478f734f: mov    0x78(%rsp),%rax
  0x00007fb5478f7354: add    $0x80,%rsp
  0x00007fb5478f735b: leaveq 
  0x00007fb5478f735c: jmpq   0x00007fb54784a2c9
  0x00007fb5478f7361: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f7367: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f736d: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f7373: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f7379: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f737f: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f7385: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f738b: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f7391: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f7397: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f739d: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f73a3: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f73a9: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f73af: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f73b5: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f73bb: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f73c4: add    $0x3f0,%rsp
  0x00007fb5478f73cb: mov    (%rsp),%r15
  0x00007fb5478f73cf: mov    0x8(%rsp),%r14
  0x00007fb5478f73d4: mov    0x10(%rsp),%r13
  0x00007fb5478f73d9: mov    0x18(%rsp),%r12
  0x00007fb5478f73de: mov    0x20(%rsp),%r11
  0x00007fb5478f73e3: mov    0x28(%rsp),%r10
  0x00007fb5478f73e8: mov    0x30(%rsp),%r9
  0x00007fb5478f73ed: mov    0x38(%rsp),%r8
  0x00007fb5478f73f2: mov    0x40(%rsp),%rdi
  0x00007fb5478f73f7: mov    0x48(%rsp),%rsi
  0x00007fb5478f73fc: mov    0x50(%rsp),%rbp
  0x00007fb5478f7401: mov    0x60(%rsp),%rbx
  0x00007fb5478f7406: mov    0x68(%rsp),%rdx
  0x00007fb5478f740b: mov    0x70(%rsp),%rcx
  0x00007fb5478f7410: mov    0x78(%rsp),%rax
  0x00007fb5478f7415: add    $0x80,%rsp
  0x00007fb5478f741c: leaveq 
  0x00007fb5478f741d: retq   
  0x00007fb5478f741e: leaveq 
  0x00007fb5478f741f: retq   

Decoding RuntimeStub - load_mirror_patching Runtime1 stub 0x00007fb5478f7490
  0x00007fb5478f7500: push   %rbp
  0x00007fb5478f7501: mov    %rsp,%rbp
  0x00007fb5478f7504: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f7509: sub    $0x80,%rsp
  0x00007fb5478f7510: mov    %rax,0x78(%rsp)
  0x00007fb5478f7515: mov    %rcx,0x70(%rsp)
  0x00007fb5478f751a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f751f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f7524: mov    %rbp,0x50(%rsp)
  0x00007fb5478f7529: mov    %rsi,0x48(%rsp)
  0x00007fb5478f752e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f7533: mov    %r8,0x38(%rsp)
  0x00007fb5478f7538: mov    %r9,0x30(%rsp)
  0x00007fb5478f753d: mov    %r10,0x28(%rsp)
  0x00007fb5478f7542: mov    %r11,0x20(%rsp)
  0x00007fb5478f7547: mov    %r12,0x18(%rsp)
  0x00007fb5478f754c: mov    %r13,0x10(%rsp)
  0x00007fb5478f7551: mov    %r14,0x8(%rsp)
  0x00007fb5478f7556: mov    %r15,(%rsp)
  0x00007fb5478f755a: sub    $0x3f0,%rsp
  0x00007fb5478f7561: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f7567: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f756d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f7573: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f7579: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f757f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f7585: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f758b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f7591: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f7597: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f759d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f75a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f75a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f75af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f75b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f75bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f75c4: mov    %r15,%rdi
  0x00007fb5478f75c7: vzeroupper 
  0x00007fb5478f75ca: mov    %rbp,0x338(%r15)
  0x00007fb5478f75d1: mov    %rsp,0x328(%r15)
  0x00007fb5478f75d8: callq  0x00007fb56497d5f0 = Runtime1::move_mirror_patching(JavaThread*)
  0x00007fb5478f75dd: movabs $0x0,%r10
  0x00007fb5478f75e7: mov    %r10,0x328(%r15)
  0x00007fb5478f75ee: movabs $0x0,%r10
  0x00007fb5478f75f8: mov    %r10,0x338(%r15)
  0x00007fb5478f75ff: movabs $0x0,%r10
  0x00007fb5478f7609: mov    %r10,0x330(%r15)
  0x00007fb5478f7610: vzeroupper 
  0x00007fb5478f7613: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f761b: je     0x00007fb5478f7717
  0x00007fb5478f7621: test   %rax,%rax
  0x00007fb5478f7624: je     0x00007fb5478f1520
  0x00007fb5478f762a: mov    0x8(%r15),%rax
  0x00007fb5478f762e: movabs $0x0,%r10
  0x00007fb5478f7638: mov    %r10,0x8(%r15)
  0x00007fb5478f763c: mov    0x478(%rsp),%rdx
  0x00007fb5478f7644: mov    %rax,0x440(%r15)
  0x00007fb5478f764b: mov    %rdx,0x448(%r15)
  0x00007fb5478f7652: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f7658: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f765e: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f7664: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f766a: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f7670: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f7676: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f767c: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f7682: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f7688: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f768e: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f7694: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f769a: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f76a0: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f76a6: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f76ac: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f76b5: add    $0x3f0,%rsp
  0x00007fb5478f76bc: mov    (%rsp),%r15
  0x00007fb5478f76c0: mov    0x8(%rsp),%r14
  0x00007fb5478f76c5: mov    0x10(%rsp),%r13
  0x00007fb5478f76ca: mov    0x18(%rsp),%r12
  0x00007fb5478f76cf: mov    0x20(%rsp),%r11
  0x00007fb5478f76d4: mov    0x28(%rsp),%r10
  0x00007fb5478f76d9: mov    0x30(%rsp),%r9
  0x00007fb5478f76de: mov    0x38(%rsp),%r8
  0x00007fb5478f76e3: mov    0x40(%rsp),%rdi
  0x00007fb5478f76e8: mov    0x48(%rsp),%rsi
  0x00007fb5478f76ed: mov    0x50(%rsp),%rbp
  0x00007fb5478f76f2: mov    0x60(%rsp),%rbx
  0x00007fb5478f76f7: mov    0x68(%rsp),%rdx
  0x00007fb5478f76fc: mov    0x70(%rsp),%rcx
  0x00007fb5478f7701: mov    0x78(%rsp),%rax
  0x00007fb5478f7706: add    $0x80,%rsp
  0x00007fb5478f770d: leaveq 
  0x00007fb5478f770e: add    $0x8,%rsp
  0x00007fb5478f7712: jmpq   0x00007fb54784a400
  0x00007fb5478f7717: test   %rax,%rax
  0x00007fb5478f771a: je     0x00007fb5478f77e1
  0x00007fb5478f7720: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f7726: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f772c: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f7732: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f7738: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f773e: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f7744: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f774a: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f7750: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f7756: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f775c: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f7762: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f7768: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f776e: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f7774: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f777a: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f7783: add    $0x3f0,%rsp
  0x00007fb5478f778a: mov    (%rsp),%r15
  0x00007fb5478f778e: mov    0x8(%rsp),%r14
  0x00007fb5478f7793: mov    0x10(%rsp),%r13
  0x00007fb5478f7798: mov    0x18(%rsp),%r12
  0x00007fb5478f779d: mov    0x20(%rsp),%r11
  0x00007fb5478f77a2: mov    0x28(%rsp),%r10
  0x00007fb5478f77a7: mov    0x30(%rsp),%r9
  0x00007fb5478f77ac: mov    0x38(%rsp),%r8
  0x00007fb5478f77b1: mov    0x40(%rsp),%rdi
  0x00007fb5478f77b6: mov    0x48(%rsp),%rsi
  0x00007fb5478f77bb: mov    0x50(%rsp),%rbp
  0x00007fb5478f77c0: mov    0x60(%rsp),%rbx
  0x00007fb5478f77c5: mov    0x68(%rsp),%rdx
  0x00007fb5478f77ca: mov    0x70(%rsp),%rcx
  0x00007fb5478f77cf: mov    0x78(%rsp),%rax
  0x00007fb5478f77d4: add    $0x80,%rsp
  0x00007fb5478f77db: leaveq 
  0x00007fb5478f77dc: jmpq   0x00007fb54784a2c9
  0x00007fb5478f77e1: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f77e7: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f77ed: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f77f3: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f77f9: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f77ff: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f7805: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f780b: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f7811: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f7817: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f781d: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f7823: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f7829: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f782f: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f7835: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f783b: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f7844: add    $0x3f0,%rsp
  0x00007fb5478f784b: mov    (%rsp),%r15
  0x00007fb5478f784f: mov    0x8(%rsp),%r14
  0x00007fb5478f7854: mov    0x10(%rsp),%r13
  0x00007fb5478f7859: mov    0x18(%rsp),%r12
  0x00007fb5478f785e: mov    0x20(%rsp),%r11
  0x00007fb5478f7863: mov    0x28(%rsp),%r10
  0x00007fb5478f7868: mov    0x30(%rsp),%r9
  0x00007fb5478f786d: mov    0x38(%rsp),%r8
  0x00007fb5478f7872: mov    0x40(%rsp),%rdi
  0x00007fb5478f7877: mov    0x48(%rsp),%rsi
  0x00007fb5478f787c: mov    0x50(%rsp),%rbp
  0x00007fb5478f7881: mov    0x60(%rsp),%rbx
  0x00007fb5478f7886: mov    0x68(%rsp),%rdx
  0x00007fb5478f788b: mov    0x70(%rsp),%rcx
  0x00007fb5478f7890: mov    0x78(%rsp),%rax
  0x00007fb5478f7895: add    $0x80,%rsp
  0x00007fb5478f789c: leaveq 
  0x00007fb5478f789d: retq   
  0x00007fb5478f789e: leaveq 
  0x00007fb5478f789f: retq   

Decoding RuntimeStub - load_appendix_patching Runtime1 stub 0x00007fb5478f7910
  0x00007fb5478f7980: push   %rbp
  0x00007fb5478f7981: mov    %rsp,%rbp
  0x00007fb5478f7984: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f7989: sub    $0x80,%rsp
  0x00007fb5478f7990: mov    %rax,0x78(%rsp)
  0x00007fb5478f7995: mov    %rcx,0x70(%rsp)
  0x00007fb5478f799a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f799f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f79a4: mov    %rbp,0x50(%rsp)
  0x00007fb5478f79a9: mov    %rsi,0x48(%rsp)
  0x00007fb5478f79ae: mov    %rdi,0x40(%rsp)
  0x00007fb5478f79b3: mov    %r8,0x38(%rsp)
  0x00007fb5478f79b8: mov    %r9,0x30(%rsp)
  0x00007fb5478f79bd: mov    %r10,0x28(%rsp)
  0x00007fb5478f79c2: mov    %r11,0x20(%rsp)
  0x00007fb5478f79c7: mov    %r12,0x18(%rsp)
  0x00007fb5478f79cc: mov    %r13,0x10(%rsp)
  0x00007fb5478f79d1: mov    %r14,0x8(%rsp)
  0x00007fb5478f79d6: mov    %r15,(%rsp)
  0x00007fb5478f79da: sub    $0x3f0,%rsp
  0x00007fb5478f79e1: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f79e7: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f79ed: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f79f3: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f79f9: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f79ff: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f7a05: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f7a0b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f7a11: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f7a17: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f7a1d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f7a23: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f7a29: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f7a2f: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f7a35: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f7a3b: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f7a44: mov    %r15,%rdi
  0x00007fb5478f7a47: vzeroupper 
  0x00007fb5478f7a4a: mov    %rbp,0x338(%r15)
  0x00007fb5478f7a51: mov    %rsp,0x328(%r15)
  0x00007fb5478f7a58: callq  0x00007fb56497d610 = Runtime1::move_appendix_patching(JavaThread*)
  0x00007fb5478f7a5d: movabs $0x0,%r10
  0x00007fb5478f7a67: mov    %r10,0x328(%r15)
  0x00007fb5478f7a6e: movabs $0x0,%r10
  0x00007fb5478f7a78: mov    %r10,0x338(%r15)
  0x00007fb5478f7a7f: movabs $0x0,%r10
  0x00007fb5478f7a89: mov    %r10,0x330(%r15)
  0x00007fb5478f7a90: vzeroupper 
  0x00007fb5478f7a93: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f7a9b: je     0x00007fb5478f7b97
  0x00007fb5478f7aa1: test   %rax,%rax
  0x00007fb5478f7aa4: je     0x00007fb5478f1520
  0x00007fb5478f7aaa: mov    0x8(%r15),%rax
  0x00007fb5478f7aae: movabs $0x0,%r10
  0x00007fb5478f7ab8: mov    %r10,0x8(%r15)
  0x00007fb5478f7abc: mov    0x478(%rsp),%rdx
  0x00007fb5478f7ac4: mov    %rax,0x440(%r15)
  0x00007fb5478f7acb: mov    %rdx,0x448(%r15)
  0x00007fb5478f7ad2: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f7ad8: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f7ade: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f7ae4: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f7aea: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f7af0: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f7af6: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f7afc: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f7b02: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f7b08: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f7b0e: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f7b14: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f7b1a: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f7b20: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f7b26: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f7b2c: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f7b35: add    $0x3f0,%rsp
  0x00007fb5478f7b3c: mov    (%rsp),%r15
  0x00007fb5478f7b40: mov    0x8(%rsp),%r14
  0x00007fb5478f7b45: mov    0x10(%rsp),%r13
  0x00007fb5478f7b4a: mov    0x18(%rsp),%r12
  0x00007fb5478f7b4f: mov    0x20(%rsp),%r11
  0x00007fb5478f7b54: mov    0x28(%rsp),%r10
  0x00007fb5478f7b59: mov    0x30(%rsp),%r9
  0x00007fb5478f7b5e: mov    0x38(%rsp),%r8
  0x00007fb5478f7b63: mov    0x40(%rsp),%rdi
  0x00007fb5478f7b68: mov    0x48(%rsp),%rsi
  0x00007fb5478f7b6d: mov    0x50(%rsp),%rbp
  0x00007fb5478f7b72: mov    0x60(%rsp),%rbx
  0x00007fb5478f7b77: mov    0x68(%rsp),%rdx
  0x00007fb5478f7b7c: mov    0x70(%rsp),%rcx
  0x00007fb5478f7b81: mov    0x78(%rsp),%rax
  0x00007fb5478f7b86: add    $0x80,%rsp
  0x00007fb5478f7b8d: leaveq 
  0x00007fb5478f7b8e: add    $0x8,%rsp
  0x00007fb5478f7b92: jmpq   0x00007fb54784a400
  0x00007fb5478f7b97: test   %rax,%rax
  0x00007fb5478f7b9a: je     0x00007fb5478f7c61
  0x00007fb5478f7ba0: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f7ba6: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f7bac: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f7bb2: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f7bb8: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f7bbe: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f7bc4: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f7bca: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f7bd0: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f7bd6: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f7bdc: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f7be2: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f7be8: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f7bee: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f7bf4: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f7bfa: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f7c03: add    $0x3f0,%rsp
  0x00007fb5478f7c0a: mov    (%rsp),%r15
  0x00007fb5478f7c0e: mov    0x8(%rsp),%r14
  0x00007fb5478f7c13: mov    0x10(%rsp),%r13
  0x00007fb5478f7c18: mov    0x18(%rsp),%r12
  0x00007fb5478f7c1d: mov    0x20(%rsp),%r11
  0x00007fb5478f7c22: mov    0x28(%rsp),%r10
  0x00007fb5478f7c27: mov    0x30(%rsp),%r9
  0x00007fb5478f7c2c: mov    0x38(%rsp),%r8
  0x00007fb5478f7c31: mov    0x40(%rsp),%rdi
  0x00007fb5478f7c36: mov    0x48(%rsp),%rsi
  0x00007fb5478f7c3b: mov    0x50(%rsp),%rbp
  0x00007fb5478f7c40: mov    0x60(%rsp),%rbx
  0x00007fb5478f7c45: mov    0x68(%rsp),%rdx
  0x00007fb5478f7c4a: mov    0x70(%rsp),%rcx
  0x00007fb5478f7c4f: mov    0x78(%rsp),%rax
  0x00007fb5478f7c54: add    $0x80,%rsp
  0x00007fb5478f7c5b: leaveq 
  0x00007fb5478f7c5c: jmpq   0x00007fb54784a2c9
  0x00007fb5478f7c61: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f7c67: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f7c6d: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f7c73: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f7c79: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f7c7f: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f7c85: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f7c8b: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f7c91: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f7c97: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f7c9d: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f7ca3: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f7ca9: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f7caf: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f7cb5: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f7cbb: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f7cc4: add    $0x3f0,%rsp
  0x00007fb5478f7ccb: mov    (%rsp),%r15
  0x00007fb5478f7ccf: mov    0x8(%rsp),%r14
  0x00007fb5478f7cd4: mov    0x10(%rsp),%r13
  0x00007fb5478f7cd9: mov    0x18(%rsp),%r12
  0x00007fb5478f7cde: mov    0x20(%rsp),%r11
  0x00007fb5478f7ce3: mov    0x28(%rsp),%r10
  0x00007fb5478f7ce8: mov    0x30(%rsp),%r9
  0x00007fb5478f7ced: mov    0x38(%rsp),%r8
  0x00007fb5478f7cf2: mov    0x40(%rsp),%rdi
  0x00007fb5478f7cf7: mov    0x48(%rsp),%rsi
  0x00007fb5478f7cfc: mov    0x50(%rsp),%rbp
  0x00007fb5478f7d01: mov    0x60(%rsp),%rbx
  0x00007fb5478f7d06: mov    0x68(%rsp),%rdx
  0x00007fb5478f7d0b: mov    0x70(%rsp),%rcx
  0x00007fb5478f7d10: mov    0x78(%rsp),%rax
  0x00007fb5478f7d15: add    $0x80,%rsp
  0x00007fb5478f7d1c: leaveq 
  0x00007fb5478f7d1d: retq   
  0x00007fb5478f7d1e: leaveq 
  0x00007fb5478f7d1f: retq   

Decoding RuntimeStub - fpu2long_stub Runtime1 stub 0x00007fb5478f7d90
  0x00007fb5478f7e00: push   %rsi
  0x00007fb5478f7e01: push   %rcx
  0x00007fb5478f7e02: push   %rdx
  0x00007fb5478f7e03: sub    $0x20,%rsp
  0x00007fb5478f7e07: fstl   0x8(%rsp)
  0x00007fb5478f7e0b: mov    0xc(%rsp),%eax
  0x00007fb5478f7e0f: and    $0x7ff00000,%eax
  0x00007fb5478f7e15: cmp    $0x7ff00000,%eax
  0x00007fb5478f7e1b: jne    0x00007fb5478f7e35
  0x00007fb5478f7e21: mov    0xc(%rsp),%eax
  0x00007fb5478f7e25: and    $0xfffff,%eax
  0x00007fb5478f7e2b: or     0x8(%rsp),%eax
  0x00007fb5478f7e2f: jne    0x00007fb5478f7ea4
  0x00007fb5478f7e35: fstcw  (%rsp)
  0x00007fb5478f7e39: movzwl (%rsp),%eax
  0x00007fb5478f7e3d: or     $0xc00,%eax
  0x00007fb5478f7e43: mov    %ax,0x2(%rsp)
  0x00007fb5478f7e48: fldcw  0x2(%rsp)
  0x00007fb5478f7e4c: fistpll 0x18(%rsp)
  0x00007fb5478f7e51: fldcw  (%rsp)
  0x00007fb5478f7e54: fwait
  0x00007fb5478f7e55: mov    0x18(%rsp),%rax
  0x00007fb5478f7e5a: mov    0x1c(%rsp),%edx
  0x00007fb5478f7e5e: mov    %rax,%rcx
  0x00007fb5478f7e61: xor    $0x0,%ecx
  0x00007fb5478f7e64: mov    $0x80000000,%esi
  0x00007fb5478f7e69: xor    %edx,%esi
  0x00007fb5478f7e6b: or     %esi,%ecx
  0x00007fb5478f7e6d: jne    0x00007fb5478f7eab
  0x00007fb5478f7e73: fldz   
  0x00007fb5478f7e75: fcompl 0x8(%rsp)
  0x00007fb5478f7e79: fnstsw %ax
  0x00007fb5478f7e7b: test   $0x4100,%eax
  0x00007fb5478f7e80: je     0x00007fb5478f7e95
  0x00007fb5478f7e86: movabs $0x7fffffffffffffff,%rax
  0x00007fb5478f7e90: jmpq   0x00007fb5478f7eab
  0x00007fb5478f7e95: movabs $0x8000000000000000,%rax
  0x00007fb5478f7e9f: jmpq   0x00007fb5478f7eab
  0x00007fb5478f7ea4: ffree  %st(0)
  0x00007fb5478f7ea6: fincstp 
  0x00007fb5478f7ea8: xor    %rax,%rax
  0x00007fb5478f7eab: add    $0x20,%rsp
  0x00007fb5478f7eaf: pop    %rdx
  0x00007fb5478f7eb0: pop    %rcx
  0x00007fb5478f7eb1: pop    %rsi
  0x00007fb5478f7eb2: retq   
  0x00007fb5478f7eb3: nopl   0x0(%rax,%rax,1)

Decoding RuntimeStub - counter_overflow Runtime1 stub 0x00007fb5478f8090
  0x00007fb5478f8100: push   %rbp
  0x00007fb5478f8101: mov    %rsp,%rbp
  0x00007fb5478f8104: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f8109: sub    $0x80,%rsp
  0x00007fb5478f8110: mov    %rax,0x78(%rsp)
  0x00007fb5478f8115: mov    %rcx,0x70(%rsp)
  0x00007fb5478f811a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f811f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f8124: mov    %rbp,0x50(%rsp)
  0x00007fb5478f8129: mov    %rsi,0x48(%rsp)
  0x00007fb5478f812e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f8133: mov    %r8,0x38(%rsp)
  0x00007fb5478f8138: mov    %r9,0x30(%rsp)
  0x00007fb5478f813d: mov    %r10,0x28(%rsp)
  0x00007fb5478f8142: mov    %r11,0x20(%rsp)
  0x00007fb5478f8147: mov    %r12,0x18(%rsp)
  0x00007fb5478f814c: mov    %r13,0x10(%rsp)
  0x00007fb5478f8151: mov    %r14,0x8(%rsp)
  0x00007fb5478f8156: mov    %r15,(%rsp)
  0x00007fb5478f815a: sub    $0x3f0,%rsp
  0x00007fb5478f8161: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f8167: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f816d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f8173: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f8179: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f817f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f8185: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f818b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f8191: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f8197: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f819d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f81a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f81a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f81af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f81b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f81bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f81c4: mov    0x10(%rbp),%eax
  0x00007fb5478f81c7: mov    0x18(%rbp),%rbx
  0x00007fb5478f81cb: mov    %rax,%rsi
  0x00007fb5478f81ce: mov    %rbx,%rdx
  0x00007fb5478f81d1: mov    %r15,%rdi
  0x00007fb5478f81d4: vzeroupper 
  0x00007fb5478f81d7: mov    %rbp,0x338(%r15)
  0x00007fb5478f81de: mov    %rsp,0x328(%r15)
  0x00007fb5478f81e5: callq  0x00007fb5649799b0 = Runtime1::counter_overflow(JavaThread*, int, Method*)
  0x00007fb5478f81ea: movabs $0x0,%r10
  0x00007fb5478f81f4: mov    %r10,0x328(%r15)
  0x00007fb5478f81fb: movabs $0x0,%r10
  0x00007fb5478f8205: mov    %r10,0x338(%r15)
  0x00007fb5478f820c: movabs $0x0,%r10
  0x00007fb5478f8216: mov    %r10,0x330(%r15)
  0x00007fb5478f821d: vzeroupper 
  0x00007fb5478f8220: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f8228: je     0x00007fb5478f8237
  0x00007fb5478f822e: mov    0x8(%r15),%rax
  0x00007fb5478f8232: jmpq   0x00007fb5478f1520
  0x00007fb5478f8237: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f823d: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f8243: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f8249: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f824f: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f8255: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f825b: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f8261: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f8267: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f826d: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f8273: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f8279: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f827f: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f8285: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f828b: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f8291: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f829a: add    $0x3f0,%rsp
  0x00007fb5478f82a1: mov    (%rsp),%r15
  0x00007fb5478f82a5: mov    0x8(%rsp),%r14
  0x00007fb5478f82aa: mov    0x10(%rsp),%r13
  0x00007fb5478f82af: mov    0x18(%rsp),%r12
  0x00007fb5478f82b4: mov    0x20(%rsp),%r11
  0x00007fb5478f82b9: mov    0x28(%rsp),%r10
  0x00007fb5478f82be: mov    0x30(%rsp),%r9
  0x00007fb5478f82c3: mov    0x38(%rsp),%r8
  0x00007fb5478f82c8: mov    0x40(%rsp),%rdi
  0x00007fb5478f82cd: mov    0x48(%rsp),%rsi
  0x00007fb5478f82d2: mov    0x50(%rsp),%rbp
  0x00007fb5478f82d7: mov    0x60(%rsp),%rbx
  0x00007fb5478f82dc: mov    0x68(%rsp),%rdx
  0x00007fb5478f82e1: mov    0x70(%rsp),%rcx
  0x00007fb5478f82e6: mov    0x78(%rsp),%rax
  0x00007fb5478f82eb: add    $0x80,%rsp
  0x00007fb5478f82f2: leaveq 
  0x00007fb5478f82f3: retq   
  0x00007fb5478f82f4: nopl   0x0(%rax)

Decoding RuntimeStub - predicate_failed_trap Runtime1 stub 0x00007fb5478f8390
  0x00007fb5478f8400: push   %rbp
  0x00007fb5478f8401: mov    %rsp,%rbp
  0x00007fb5478f8404: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f8409: sub    $0x80,%rsp
  0x00007fb5478f8410: mov    %rax,0x78(%rsp)
  0x00007fb5478f8415: mov    %rcx,0x70(%rsp)
  0x00007fb5478f841a: mov    %rdx,0x68(%rsp)
  0x00007fb5478f841f: mov    %rbx,0x60(%rsp)
  0x00007fb5478f8424: mov    %rbp,0x50(%rsp)
  0x00007fb5478f8429: mov    %rsi,0x48(%rsp)
  0x00007fb5478f842e: mov    %rdi,0x40(%rsp)
  0x00007fb5478f8433: mov    %r8,0x38(%rsp)
  0x00007fb5478f8438: mov    %r9,0x30(%rsp)
  0x00007fb5478f843d: mov    %r10,0x28(%rsp)
  0x00007fb5478f8442: mov    %r11,0x20(%rsp)
  0x00007fb5478f8447: mov    %r12,0x18(%rsp)
  0x00007fb5478f844c: mov    %r13,0x10(%rsp)
  0x00007fb5478f8451: mov    %r14,0x8(%rsp)
  0x00007fb5478f8456: mov    %r15,(%rsp)
  0x00007fb5478f845a: sub    $0x3f0,%rsp
  0x00007fb5478f8461: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f8467: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f846d: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f8473: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f8479: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f847f: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f8485: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f848b: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f8491: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f8497: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f849d: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f84a3: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f84a9: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f84af: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f84b5: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f84bb: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f84c4: mov    %r15,%rdi
  0x00007fb5478f84c7: vzeroupper 
  0x00007fb5478f84ca: mov    %rbp,0x338(%r15)
  0x00007fb5478f84d1: mov    %rsp,0x328(%r15)
  0x00007fb5478f84d8: callq  0x00007fb56497d650 = Runtime1::predicate_failed_trap(JavaThread*)
  0x00007fb5478f84dd: movabs $0x0,%r10
  0x00007fb5478f84e7: mov    %r10,0x328(%r15)
  0x00007fb5478f84ee: movabs $0x0,%r10
  0x00007fb5478f84f8: mov    %r10,0x338(%r15)
  0x00007fb5478f84ff: movabs $0x0,%r10
  0x00007fb5478f8509: mov    %r10,0x330(%r15)
  0x00007fb5478f8510: vzeroupper 
  0x00007fb5478f8513: cmpq   $0x0,0x8(%r15)
  0x00007fb5478f851b: je     0x00007fb5478f852a
  0x00007fb5478f8521: mov    0x8(%r15),%rax
  0x00007fb5478f8525: jmpq   0x00007fb5478f1520
  0x00007fb5478f852a: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f8530: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f8536: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f853c: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f8542: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f8548: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f854e: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f8554: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f855a: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f8560: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f8566: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f856c: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f8572: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f8578: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f857e: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f8584: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f858d: add    $0x3f0,%rsp
  0x00007fb5478f8594: mov    (%rsp),%r15
  0x00007fb5478f8598: mov    0x8(%rsp),%r14
  0x00007fb5478f859d: mov    0x10(%rsp),%r13
  0x00007fb5478f85a2: mov    0x18(%rsp),%r12
  0x00007fb5478f85a7: mov    0x20(%rsp),%r11
  0x00007fb5478f85ac: mov    0x28(%rsp),%r10
  0x00007fb5478f85b1: mov    0x30(%rsp),%r9
  0x00007fb5478f85b6: mov    0x38(%rsp),%r8
  0x00007fb5478f85bb: mov    0x40(%rsp),%rdi
  0x00007fb5478f85c0: mov    0x48(%rsp),%rsi
  0x00007fb5478f85c5: mov    0x50(%rsp),%rbp
  0x00007fb5478f85ca: mov    0x60(%rsp),%rbx
  0x00007fb5478f85cf: mov    0x68(%rsp),%rdx
  0x00007fb5478f85d4: mov    0x70(%rsp),%rcx
  0x00007fb5478f85d9: mov    0x78(%rsp),%rax
  0x00007fb5478f85de: add    $0x80,%rsp
  0x00007fb5478f85e5: leaveq 
  0x00007fb5478f85e6: jmpq   0x00007fb54784a2c9
  0x00007fb5478f85eb: leaveq 
  0x00007fb5478f85ec: retq   
  0x00007fb5478f85ed: data16 xchg %ax,%ax

Decoding RuntimeStub - g1_pre_barrier_slow 0x00007fb5478f8690
  0x00007fb5478f8700: push   %rbp
  0x00007fb5478f8701: mov    %rsp,%rbp
  0x00007fb5478f8704: push   %rax
  0x00007fb5478f8705: push   %rdx
  0x00007fb5478f8706: cmpb   $0x0,0x30(%r15)
  0x00007fb5478f870b: je     0x00007fb5478f88de
  0x00007fb5478f8711: mov    0x38(%r15),%rdx
  0x00007fb5478f8715: test   %rdx,%rdx
  0x00007fb5478f8718: je     0x00007fb5478f8736
  0x00007fb5478f871e: sub    $0x8,%rdx
  0x00007fb5478f8722: mov    %rdx,0x38(%r15)
  0x00007fb5478f8726: add    0x48(%r15),%rdx
  0x00007fb5478f872a: mov    0x10(%rbp),%rax
  0x00007fb5478f872e: mov    %rax,(%rdx)
  0x00007fb5478f8731: jmpq   0x00007fb5478f88de
  0x00007fb5478f8736: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f873b: sub    $0x80,%rsp
  0x00007fb5478f8742: mov    %rax,0x78(%rsp)
  0x00007fb5478f8747: mov    %rcx,0x70(%rsp)
  0x00007fb5478f874c: mov    %rdx,0x68(%rsp)
  0x00007fb5478f8751: mov    %rbx,0x60(%rsp)
  0x00007fb5478f8756: mov    %rbp,0x50(%rsp)
  0x00007fb5478f875b: mov    %rsi,0x48(%rsp)
  0x00007fb5478f8760: mov    %rdi,0x40(%rsp)
  0x00007fb5478f8765: mov    %r8,0x38(%rsp)
  0x00007fb5478f876a: mov    %r9,0x30(%rsp)
  0x00007fb5478f876f: mov    %r10,0x28(%rsp)
  0x00007fb5478f8774: mov    %r11,0x20(%rsp)
  0x00007fb5478f8779: mov    %r12,0x18(%rsp)
  0x00007fb5478f877e: mov    %r13,0x10(%rsp)
  0x00007fb5478f8783: mov    %r14,0x8(%rsp)
  0x00007fb5478f8788: mov    %r15,(%rsp)
  0x00007fb5478f878c: sub    $0x3f0,%rsp
  0x00007fb5478f8793: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f8799: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f879f: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f87a5: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f87ab: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f87b1: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f87b7: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f87bd: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f87c3: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f87c9: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f87cf: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f87d5: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f87db: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f87e1: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f87e7: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f87ed: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f87f6: mov    0x10(%rbp),%rcx
  0x00007fb5478f87fa: mov    %r15,%rsi
  0x00007fb5478f87fd: mov    %rcx,%rdi
  0x00007fb5478f8800: test   $0xf,%esp
  0x00007fb5478f8806: je     0x00007fb5478f881e
  0x00007fb5478f880c: sub    $0x8,%rsp
  0x00007fb5478f8810: callq  0x00007fb564baa460 = G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)
  0x00007fb5478f8815: add    $0x8,%rsp
  0x00007fb5478f8819: jmpq   0x00007fb5478f8823
  0x00007fb5478f881e: callq  0x00007fb564baa460 = G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)
  0x00007fb5478f8823: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f8829: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f882f: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f8835: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f883b: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f8841: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f8847: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f884d: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f8853: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f8859: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f885f: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f8865: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f886b: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f8871: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f8877: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f887d: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f8886: add    $0x3f0,%rsp
  0x00007fb5478f888d: mov    (%rsp),%r15
  0x00007fb5478f8891: mov    0x8(%rsp),%r14
  0x00007fb5478f8896: mov    0x10(%rsp),%r13
  0x00007fb5478f889b: mov    0x18(%rsp),%r12
  0x00007fb5478f88a0: mov    0x20(%rsp),%r11
  0x00007fb5478f88a5: mov    0x28(%rsp),%r10
  0x00007fb5478f88aa: mov    0x30(%rsp),%r9
  0x00007fb5478f88af: mov    0x38(%rsp),%r8
  0x00007fb5478f88b4: mov    0x40(%rsp),%rdi
  0x00007fb5478f88b9: mov    0x48(%rsp),%rsi
  0x00007fb5478f88be: mov    0x50(%rsp),%rbp
  0x00007fb5478f88c3: mov    0x60(%rsp),%rbx
  0x00007fb5478f88c8: mov    0x68(%rsp),%rdx
  0x00007fb5478f88cd: mov    0x70(%rsp),%rcx
  0x00007fb5478f88d2: mov    0x78(%rsp),%rax
  0x00007fb5478f88d7: add    $0x80,%rsp
  0x00007fb5478f88de: pop    %rdx
  0x00007fb5478f88df: pop    %rax
  0x00007fb5478f88e0: leaveq 
  0x00007fb5478f88e1: retq   
  0x00007fb5478f88e2: nopw   0x0(%rax,%rax,1)

Decoding RuntimeStub - g1_post_barrier_slow 0x00007fb5478f8990
  0x00007fb5478f8a00: push   %rbp
  0x00007fb5478f8a01: mov    %rsp,%rbp
  0x00007fb5478f8a04: push   %rax
  0x00007fb5478f8a05: push   %rcx
  0x00007fb5478f8a06: mov    0x10(%rbp),%rcx
  0x00007fb5478f8a0a: shr    $0x9,%rcx
  0x00007fb5478f8a0e: movabs $0x7fb541c6e000,%rax
  0x00007fb5478f8a18: add    %rax,%rcx
  0x00007fb5478f8a1b: cmpb   $0x20,(%rcx)
  0x00007fb5478f8a1e: je     0x00007fb5478f8c00
  0x00007fb5478f8a24: lock addl $0x0,-0x40(%rsp)
  0x00007fb5478f8a2a: cmpb   $0x0,(%rcx)
  0x00007fb5478f8a2d: je     0x00007fb5478f8c00
  0x00007fb5478f8a33: movb   $0x0,(%rcx)
  0x00007fb5478f8a36: push   %rdx
  0x00007fb5478f8a37: mov    0x70(%r15),%rdx
  0x00007fb5478f8a3b: test   %rdx,%rdx
  0x00007fb5478f8a3e: je     0x00007fb5478f8a5b
  0x00007fb5478f8a44: sub    $0x8,%rdx
  0x00007fb5478f8a48: mov    %rdx,0x70(%r15)
  0x00007fb5478f8a4c: add    0x80(%r15),%rdx
  0x00007fb5478f8a53: mov    %rcx,(%rdx)
  0x00007fb5478f8a56: jmpq   0x00007fb5478f8bff
  0x00007fb5478f8a5b: mov    %rsp,-0x28(%rsp)
  0x00007fb5478f8a60: sub    $0x80,%rsp
  0x00007fb5478f8a67: mov    %rax,0x78(%rsp)
  0x00007fb5478f8a6c: mov    %rcx,0x70(%rsp)
  0x00007fb5478f8a71: mov    %rdx,0x68(%rsp)
  0x00007fb5478f8a76: mov    %rbx,0x60(%rsp)
  0x00007fb5478f8a7b: mov    %rbp,0x50(%rsp)
  0x00007fb5478f8a80: mov    %rsi,0x48(%rsp)
  0x00007fb5478f8a85: mov    %rdi,0x40(%rsp)
  0x00007fb5478f8a8a: mov    %r8,0x38(%rsp)
  0x00007fb5478f8a8f: mov    %r9,0x30(%rsp)
  0x00007fb5478f8a94: mov    %r10,0x28(%rsp)
  0x00007fb5478f8a99: mov    %r11,0x20(%rsp)
  0x00007fb5478f8a9e: mov    %r12,0x18(%rsp)
  0x00007fb5478f8aa3: mov    %r13,0x10(%rsp)
  0x00007fb5478f8aa8: mov    %r14,0x8(%rsp)
  0x00007fb5478f8aad: mov    %r15,(%rsp)
  0x00007fb5478f8ab1: sub    $0x3f0,%rsp
  0x00007fb5478f8ab8: vmovsd %xmm0,0x8(%rsp)
  0x00007fb5478f8abe: vmovsd %xmm1,0x10(%rsp)
  0x00007fb5478f8ac4: vmovsd %xmm2,0x18(%rsp)
  0x00007fb5478f8aca: vmovsd %xmm3,0x20(%rsp)
  0x00007fb5478f8ad0: vmovsd %xmm4,0x28(%rsp)
  0x00007fb5478f8ad6: vmovsd %xmm5,0x30(%rsp)
  0x00007fb5478f8adc: vmovsd %xmm6,0x38(%rsp)
  0x00007fb5478f8ae2: vmovsd %xmm7,0x40(%rsp)
  0x00007fb5478f8ae8: vmovsd %xmm8,0x48(%rsp)
  0x00007fb5478f8aee: vmovsd %xmm9,0x50(%rsp)
  0x00007fb5478f8af4: vmovsd %xmm10,0x58(%rsp)
  0x00007fb5478f8afa: vmovsd %xmm11,0x60(%rsp)
  0x00007fb5478f8b00: vmovsd %xmm12,0x68(%rsp)
  0x00007fb5478f8b06: vmovsd %xmm13,0x70(%rsp)
  0x00007fb5478f8b0c: vmovsd %xmm14,0x78(%rsp)
  0x00007fb5478f8b12: vmovsd %xmm15,0x80(%rsp)
  0x00007fb5478f8b1b: mov    %r15,%rsi
  0x00007fb5478f8b1e: mov    %rcx,%rdi
  0x00007fb5478f8b21: test   $0xf,%esp
  0x00007fb5478f8b27: je     0x00007fb5478f8b3f
  0x00007fb5478f8b2d: sub    $0x8,%rsp
  0x00007fb5478f8b31: callq  0x00007fb564baa490 = G1BarrierSetRuntime::write_ref_field_post_entry(void*, JavaThread*)
  0x00007fb5478f8b36: add    $0x8,%rsp
  0x00007fb5478f8b3a: jmpq   0x00007fb5478f8b44
  0x00007fb5478f8b3f: callq  0x00007fb564baa490 = G1BarrierSetRuntime::write_ref_field_post_entry(void*, JavaThread*)
  0x00007fb5478f8b44: vmovsd 0x8(%rsp),%xmm0
  0x00007fb5478f8b4a: vmovsd 0x10(%rsp),%xmm1
  0x00007fb5478f8b50: vmovsd 0x18(%rsp),%xmm2
  0x00007fb5478f8b56: vmovsd 0x20(%rsp),%xmm3
  0x00007fb5478f8b5c: vmovsd 0x28(%rsp),%xmm4
  0x00007fb5478f8b62: vmovsd 0x30(%rsp),%xmm5
  0x00007fb5478f8b68: vmovsd 0x38(%rsp),%xmm6
  0x00007fb5478f8b6e: vmovsd 0x40(%rsp),%xmm7
  0x00007fb5478f8b74: vmovsd 0x48(%rsp),%xmm8
  0x00007fb5478f8b7a: vmovsd 0x50(%rsp),%xmm9
  0x00007fb5478f8b80: vmovsd 0x58(%rsp),%xmm10
  0x00007fb5478f8b86: vmovsd 0x60(%rsp),%xmm11
  0x00007fb5478f8b8c: vmovsd 0x68(%rsp),%xmm12
  0x00007fb5478f8b92: vmovsd 0x70(%rsp),%xmm13
  0x00007fb5478f8b98: vmovsd 0x78(%rsp),%xmm14
  0x00007fb5478f8b9e: vmovsd 0x80(%rsp),%xmm15
  0x00007fb5478f8ba7: add    $0x3f0,%rsp
  0x00007fb5478f8bae: mov    (%rsp),%r15
  0x00007fb5478f8bb2: mov    0x8(%rsp),%r14
  0x00007fb5478f8bb7: mov    0x10(%rsp),%r13
  0x00007fb5478f8bbc: mov    0x18(%rsp),%r12
  0x00007fb5478f8bc1: mov    0x20(%rsp),%r11
  0x00007fb5478f8bc6: mov    0x28(%rsp),%r10
  0x00007fb5478f8bcb: mov    0x30(%rsp),%r9
  0x00007fb5478f8bd0: mov    0x38(%rsp),%r8
  0x00007fb5478f8bd5: mov    0x40(%rsp),%rdi
  0x00007fb5478f8bda: mov    0x48(%rsp),%rsi
  0x00007fb5478f8bdf: mov    0x50(%rsp),%rbp
  0x00007fb5478f8be4: mov    0x60(%rsp),%rbx
  0x00007fb5478f8be9: mov    0x68(%rsp),%rdx
  0x00007fb5478f8bee: mov    0x70(%rsp),%rcx
  0x00007fb5478f8bf3: mov    0x78(%rsp),%rax
  0x00007fb5478f8bf8: add    $0x80,%rsp
  0x00007fb5478f8bff: pop    %rdx
  0x00007fb5478f8c00: pop    %rcx
  0x00007fb5478f8c01: pop    %rax
  0x00007fb5478f8c02: leaveq 
  0x00007fb5478f8c03: retq   
  0x00007fb5478f8c04: nopl   0x0(%rax)

<writer thread='1329923'/>

argument handler #30 for: receiver jdk.internal.misc.Unsafe.ensureClassInitialized0(Ljava/lang/Class;)V (fingerprint = 5436, 32 bytes generated)
  0x00007fb54784bf5f: lea    (%r14),%rsi
  0x00007fb54784bf62: lea    -0x8(%r14),%rax
  0x00007fb54784bf66: xor    %edx,%edx
  0x00007fb54784bf68: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bf70: cmovne %rax,%rdx
  0x00007fb54784bf74: movabs $0x7fb54780cab8,%rax
  0x00007fb54784bf7e: retq   
<writer thread='1329935'/>
Decoding RuntimeStub - _new_array_Java 0x00007fb5478eef10
  0x00007fb5478eef80: sub    $0x8,%rsp
  0x00007fb5478eef87: mov    %rbp,(%rsp)
  0x00007fb5478eef8b: mov    %rsp,0x328(%r15)
  0x00007fb5478eef92: mov    %rsi,%rdi
  0x00007fb5478eef95: mov    %edx,%esi
  0x00007fb5478eef97: mov    %r15,%rdx
  0x00007fb5478eef9a: movabs $0x7fb565135630,%r10
  0x00007fb5478eefa4: callq  *%r10
  0x00007fb5478eefa7: movq   $0x0,0x328(%r15)
  0x00007fb5478eefb2: movq   $0x0,0x330(%r15)
  0x00007fb5478eefbd: mov    0x388(%r15),%rax
  0x00007fb5478eefc4: movq   $0x0,0x388(%r15)
  0x00007fb5478eefcf: mov    0x8(%r15),%r10
  0x00007fb5478eefd3: test   %r10,%r10
  0x00007fb5478eefd6: jne    0x00007fb5478eefda
  0x00007fb5478eefd8: pop    %rbp
  0x00007fb5478eefd9: retq   
  0x00007fb5478eefda: xor    %ebx,%ebx
  0x00007fb5478eefdc: movabs $0x7fb547800c00,%r10
  0x00007fb5478eefe6: pop    %rbp
  0x00007fb5478eefe7: jmpq   *%r10
  0x00007fb5478eefea: hlt    
  0x00007fb5478eefeb: hlt    
  0x00007fb5478eefec: hlt    
  0x00007fb5478eefed: hlt    
  0x00007fb5478eefee: hlt    
  0x00007fb5478eefef: hlt    

<writer thread='1329936'/>
<nmethod compile_id='1' compiler='c1' level='3' entry='0x00007fb547d911c0' size='1208' address='0x00007fb547d91010' relocation_offset='376' insts_offset='432' stub_offset='816' scopes_data_offset='872' scopes_pcs_offset='976' dependencies_offset='1184' nul_chk_table_offset='1192' metadata_offset='864' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='100' backedge_count='2073' iicount='100' stamp='0.393'/>
<print_nmethod stamp='0.393'>
Compiled method (c1)     392    1       3       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x00007fb547d91010,0x00007fb547d914c8] = 1208
 relocation     [0x00007fb547d91188,0x00007fb547d911b8] = 48
 main code      [0x00007fb547d911c0,0x00007fb547d91340] = 384
 stub code      [0x00007fb547d91340,0x00007fb547d91370] = 48
 metadata       [0x00007fb547d91370,0x00007fb547d91378] = 8
 scopes data    [0x00007fb547d91378,0x00007fb547d913e0] = 104
 scopes pcs     [0x00007fb547d913e0,0x00007fb547d914b0] = 208
 dependencies   [0x00007fb547d914b0,0x00007fb547d914b8] = 8
 nul chk table  [0x00007fb547d914b8,0x00007fb547d914c8] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x00007fb547d911c0, 0x00007fb547d91370]  432 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce08fb8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d911c0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d911c7: push   %rbp
  0x00007fb547d911c8: sub    $0x30,%rsp
  0x00007fb547d911cc: movabs $0x7fb52ceb3310,%rax  ;   {metadata(method data for {method} {0x00007fb52ce08fb8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d911d6: mov    0x100(%rax),%edi
  0x00007fb547d911dc: add    $0x8,%edi
  0x00007fb547d911df: mov    %edi,0x100(%rax)
  0x00007fb547d911e5: and    $0x1ff8,%edi
  0x00007fb547d911eb: cmp    $0x0,%edi
  0x00007fb547d911ee: je     0x00007fb547d912af  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@0 (line 194)

  0x00007fb547d911f4: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ; implicit exception: dispatches to 0x00007fb547d912d0
  0x00007fb547d911f7: mov    $0x0,%edi
  0x00007fb547d911fc: mov    $0x0,%ebx
  0x00007fb547d91201: jmpq   0x00007fb547d91264  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10 (line 195)

  0x00007fb547d91206: xchg   %ax,%ax
  0x00007fb547d91208: movslq %edi,%rdx
  0x00007fb547d9120b: movsbl 0x10(%rsi,%rdx,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)

  0x00007fb547d91210: mov    %rbx,%rcx
  0x00007fb547d91213: shl    $0x5,%ebx
  0x00007fb547d91216: sub    %ecx,%ebx
  0x00007fb547d91218: and    $0xff,%edx
  0x00007fb547d9121e: add    %edx,%ebx
  0x00007fb547d91220: inc    %edi
  0x00007fb547d91222: movabs $0x7fb52ceb3310,%rdx  ;   {metadata(method data for {method} {0x00007fb52ce08fb8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d9122c: mov    0x104(%rdx),%ecx
  0x00007fb547d91232: add    $0x8,%ecx
  0x00007fb547d91235: mov    %ecx,0x104(%rdx)
  0x00007fb547d9123b: and    $0xfff8,%ecx
  0x00007fb547d91241: cmp    $0x0,%ecx
  0x00007fb547d91244: je     0x00007fb547d912d5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x00007fb547d9124a: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x00007fb547d91251: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d91254: movabs $0x7fb52ceb3310,%rdx  ;   {metadata(method data for {method} {0x00007fb52ce08fb8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d9125e: incl   0x160(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x00007fb547d91264: cmp    %eax,%edi
  0x00007fb547d91266: movabs $0x7fb52ceb3310,%rdx  ;   {metadata(method data for {method} {0x00007fb52ce08fb8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d91270: movabs $0x150,%rcx
  0x00007fb547d9127a: jl     0x00007fb547d9128a
  0x00007fb547d91280: movabs $0x140,%rcx
  0x00007fb547d9128a: mov    (%rdx,%rcx,1),%r8
  0x00007fb547d9128e: lea    0x1(%r8),%r8
  0x00007fb547d91292: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547d91296: jl     0x00007fb547d91208  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x00007fb547d9129c: mov    %rbx,%rax
  0x00007fb547d9129f: add    $0x30,%rsp
  0x00007fb547d912a3: pop    %rbp
  0x00007fb547d912a4: mov    0x108(%r15),%r10
  0x00007fb547d912ab: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d912ae: retq   
  0x00007fb547d912af: movabs $0x7fb52ce08fb8,%r10  ;   {metadata({method} {0x00007fb52ce08fb8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d912b9: mov    %r10,0x8(%rsp)
  0x00007fb547d912be: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d912c6: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1 (line 194)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d912cb: jmpq   0x00007fb547d911f4
  0x00007fb547d912d0: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d912d5: movabs $0x7fb52ce08fb8,%r10  ;   {metadata({method} {0x00007fb52ce08fb8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d912df: mov    %r10,0x8(%rsp)
  0x00007fb547d912e4: movq   $0x25,(%rsp)
  0x00007fb547d912ec: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d912f1: jmpq   0x00007fb547d9124a
  0x00007fb547d912f6: nop
  0x00007fb547d912f7: nop
  0x00007fb547d912f8: mov    0x440(%r15),%rax
  0x00007fb547d912ff: movabs $0x0,%r10
  0x00007fb547d91309: mov    %r10,0x440(%r15)
  0x00007fb547d91310: movabs $0x0,%r10
  0x00007fb547d9131a: mov    %r10,0x448(%r15)
  0x00007fb547d91321: add    $0x30,%rsp
  0x00007fb547d91325: pop    %rbp
  0x00007fb547d91326: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9132b: hlt    
  0x00007fb547d9132c: hlt    
  0x00007fb547d9132d: hlt    
  0x00007fb547d9132e: hlt    
  0x00007fb547d9132f: hlt    
  0x00007fb547d91330: hlt    
  0x00007fb547d91331: hlt    
  0x00007fb547d91332: hlt    
  0x00007fb547d91333: hlt    
  0x00007fb547d91334: hlt    
  0x00007fb547d91335: hlt    
  0x00007fb547d91336: hlt    
  0x00007fb547d91337: hlt    
  0x00007fb547d91338: hlt    
  0x00007fb547d91339: hlt    
  0x00007fb547d9133a: hlt    
  0x00007fb547d9133b: hlt    
  0x00007fb547d9133c: hlt    
  0x00007fb547d9133d: hlt    
  0x00007fb547d9133e: hlt    
  0x00007fb547d9133f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d91340: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d91345: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9134f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d91353: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d91358: hlt    
[Deopt Handler Code]
  0x00007fb547d91359: movabs $0x7fb547d91359,%r10  ;   {section_word}
  0x00007fb547d91363: push   %r10
  0x00007fb547d91365: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9136a: hlt    
  0x00007fb547d9136b: hlt    
  0x00007fb547d9136c: hlt    
  0x00007fb547d9136d: hlt    
  0x00007fb547d9136e: hlt    
  0x00007fb547d9136f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 145 267 277 305 </print_nmethod>
<writer thread='1329935'/>
Decoding RuntimeStub - _new_array_nozero_Java 0x00007fb5478f0590
  0x00007fb5478f0600: sub    $0x8,%rsp
  0x00007fb5478f0607: mov    %rbp,(%rsp)
  0x00007fb5478f060b: mov    %rsp,0x328(%r15)
  0x00007fb5478f0612: mov    %rsi,%rdi
  0x00007fb5478f0615: mov    %edx,%esi
  0x00007fb5478f0617: mov    %r15,%rdx
  0x00007fb5478f061a: movabs $0x7fb565136190,%r10
  0x00007fb5478f0624: callq  *%r10
  0x00007fb5478f0627: movq   $0x0,0x328(%r15)
  0x00007fb5478f0632: movq   $0x0,0x330(%r15)
  0x00007fb5478f063d: mov    0x388(%r15),%rax
  0x00007fb5478f0644: movq   $0x0,0x388(%r15)
  0x00007fb5478f064f: mov    0x8(%r15),%r10
  0x00007fb5478f0653: test   %r10,%r10
  0x00007fb5478f0656: jne    0x00007fb5478f065a
  0x00007fb5478f0658: pop    %rbp
  0x00007fb5478f0659: retq   
  0x00007fb5478f065a: xor    %ebx,%ebx
  0x00007fb5478f065c: movabs $0x7fb547800c00,%r10
  0x00007fb5478f0666: pop    %rbp
  0x00007fb5478f0667: jmpq   *%r10
  0x00007fb5478f066a: hlt    
  0x00007fb5478f066b: hlt    
  0x00007fb5478f066c: hlt    
  0x00007fb5478f066d: hlt    
  0x00007fb5478f066e: hlt    
  0x00007fb5478f066f: hlt    

<writer thread='1329923'/>

argument handler #31 for: static java.lang.System.nanoTime()J (fingerprint = 343, 11 bytes generated)
  0x00007fb54784bf7f: movabs $0x7fb54780cab7,%rax
  0x00007fb54784bf89: retq   
<writer thread='1329935'/>
Decoding RuntimeStub - _multianewarray2_Java 0x00007fb5478f0290
  0x00007fb5478f0300: sub    $0x8,%rsp
  0x00007fb5478f0307: mov    %rbp,(%rsp)
  0x00007fb5478f030b: mov    %rsp,0x328(%r15)
  0x00007fb5478f0312: mov    %rsi,%rdi
  0x00007fb5478f0315: mov    %edx,%esi
  0x00007fb5478f0317: mov    %ecx,%edx
  0x00007fb5478f0319: mov    %r15,%rcx
  0x00007fb5478f031c: movabs $0x7fb5651357f0,%r10
  0x00007fb5478f0326: callq  *%r10
  0x00007fb5478f0329: movq   $0x0,0x328(%r15)
  0x00007fb5478f0334: movq   $0x0,0x330(%r15)
  0x00007fb5478f033f: mov    0x388(%r15),%rax
  0x00007fb5478f0346: movq   $0x0,0x388(%r15)
  0x00007fb5478f0351: mov    0x8(%r15),%r10
  0x00007fb5478f0355: test   %r10,%r10
  0x00007fb5478f0358: jne    0x00007fb5478f035c
  0x00007fb5478f035a: pop    %rbp
  0x00007fb5478f035b: retq   
  0x00007fb5478f035c: xor    %ebx,%ebx
  0x00007fb5478f035e: movabs $0x7fb547800c00,%r10
  0x00007fb5478f0368: pop    %rbp
  0x00007fb5478f0369: jmpq   *%r10
  0x00007fb5478f036c: hlt    
  0x00007fb5478f036d: hlt    
  0x00007fb5478f036e: hlt    
  0x00007fb5478f036f: hlt    

<writer thread='1329923'/>
<task_queued compile_id='2' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='256' iicount='256' level='3' stamp='0.400' comment='tiered' hot_count='256'/>
<task_queued compile_id='3' method='jdk.internal.misc.Unsafe getObjectAcquire (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='7' count='256' iicount='256' level='3' stamp='0.400' comment='tiered' hot_count='256'/>
<writer thread='1329935'/>
Decoding RuntimeStub - _multianewarray3_Java 0x00007fb5478eff90
  0x00007fb5478f0000: sub    $0x8,%rsp
  0x00007fb5478f0007: mov    %rbp,(%rsp)
  0x00007fb5478f000b: mov    %rsp,0x328(%r15)
  0x00007fb5478f0012: mov    %rsi,%rdi
  0x00007fb5478f0015: mov    %edx,%esi
  0x00007fb5478f0017: mov    %ecx,%edx
  0x00007fb5478f0019: mov    %r8d,%ecx
  0x00007fb5478f001c: mov    %r15,%r8
  0x00007fb5478f001f: movabs $0x7fb565135990,%r10
  0x00007fb5478f0029: callq  *%r10
  0x00007fb5478f002c: movq   $0x0,0x328(%r15)
  0x00007fb5478f0037: movq   $0x0,0x330(%r15)
  0x00007fb5478f0042: mov    0x388(%r15),%rax
  0x00007fb5478f0049: movq   $0x0,0x388(%r15)
  0x00007fb5478f0054: mov    0x8(%r15),%r10
  0x00007fb5478f0058: test   %r10,%r10
  0x00007fb5478f005b: jne    0x00007fb5478f005f
  0x00007fb5478f005d: pop    %rbp
  0x00007fb5478f005e: retq   
  0x00007fb5478f005f: xor    %ebx,%ebx
  0x00007fb5478f0061: movabs $0x7fb547800c00,%r10
  0x00007fb5478f006b: pop    %rbp
  0x00007fb5478f006c: jmpq   *%r10
  0x00007fb5478f006f: hlt    

<writer thread='1329936'/>
<nmethod compile_id='2' compiler='c1' level='3' entry='0x00007fb547d916e0' size='1424' address='0x00007fb547d91510' relocation_offset='376' insts_offset='464' stub_offset='1168' scopes_data_offset='1240' scopes_pcs_offset='1304' dependencies_offset='1416' oops_offset='1216' metadata_offset='1224' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='260' iicount='260' stamp='0.400'/>
<print_nmethod stamp='0.400'>
Compiled method (c1)     400    2       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x00007fb547d91510,0x00007fb547d91aa0] = 1424
 relocation     [0x00007fb547d91688,0x00007fb547d916c8] = 64
 main code      [0x00007fb547d916e0,0x00007fb547d919a0] = 704
 stub code      [0x00007fb547d919a0,0x00007fb547d919d0] = 48
 oops           [0x00007fb547d919d0,0x00007fb547d919d8] = 8
 metadata       [0x00007fb547d919d8,0x00007fb547d919e8] = 16
 scopes data    [0x00007fb547d919e8,0x00007fb547d91a28] = 64
 scopes pcs     [0x00007fb547d91a28,0x00007fb547d91a98] = 112
 dependencies   [0x00007fb547d91a98,0x00007fb547d91aa0] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x00007fb547d916e0, 0x00007fb547d919d0]  752 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x00007fb547d916e0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d916e7: push   %rbp
  0x00007fb547d916e8: sub    $0x70,%rsp
  0x00007fb547d916ec: movabs $0x7fb52cebbd60,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d916f6: mov    0x100(%rcx),%eax
  0x00007fb547d916fc: add    $0x8,%eax
  0x00007fb547d916ff: mov    %eax,0x100(%rcx)
  0x00007fb547d91705: and    $0x1ff8,%eax
  0x00007fb547d9170b: cmp    $0x0,%eax
  0x00007fb547d9170e: je     0x00007fb547d91902  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 760)

  0x00007fb547d91714: movabs $0x7fb52cebbd60,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9171e: lea    0x178(%rcx),%rcx
  0x00007fb547d91725: mov    %rsi,%rax
  0x00007fb547d91728: test   %rax,%rax
  0x00007fb547d9172b: jne    0x00007fb547d91737
  0x00007fb547d9172d: orq    $0x1,0x8(%rcx)
  0x00007fb547d91735: jmp    0x00007fb547d9178c
  0x00007fb547d91737: mov    0x8(%rax),%eax
  0x00007fb547d9173a: movabs $0x800000000,%r12
  0x00007fb547d91744: add    %r12,%rax
  0x00007fb547d91747: xor    %r12,%r12
  0x00007fb547d9174a: xor    0x8(%rcx),%rax
  0x00007fb547d9174e: test   $0xfffffffffffffffc,%rax
  0x00007fb547d91754: je     0x00007fb547d9178c
  0x00007fb547d91756: test   $0x2,%rax
  0x00007fb547d9175c: jne    0x00007fb547d9178c
  0x00007fb547d9175e: cmpq   $0x0,0x8(%rcx)
  0x00007fb547d91766: je     0x00007fb547d91788
  0x00007fb547d91768: cmpq   $0x1,0x8(%rcx)
  0x00007fb547d91770: je     0x00007fb547d91788
  0x00007fb547d91772: xor    0x8(%rcx),%rax
  0x00007fb547d91776: test   $0xfffffffffffffffc,%rax
  0x00007fb547d9177c: je     0x00007fb547d9178c
  0x00007fb547d9177e: orq    $0x2,0x8(%rcx)
  0x00007fb547d91786: jmp    0x00007fb547d9178c
  0x00007fb547d91788: mov    %rax,0x8(%rcx)
  0x00007fb547d9178c: movabs $0x62d808180,%rcx  ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x000000062d808180})}
  0x00007fb547d91796: movabs $0x7fb52cebbd60,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d917a0: addq   $0x1,0x140(%rax)
  0x00007fb547d917a8: movslq %edx,%rdx
  0x00007fb547d917ab: mov    $0x2,%ecx
  0x00007fb547d917b0: shl    %cl,%rdx
  0x00007fb547d917b3: movabs $0x10,%r10
  0x00007fb547d917bd: add    %r10,%rdx
  0x00007fb547d917c0: movabs $0x7fb52cebc348,%rax  ;   {metadata(method data for {method} {0x00007fb52cd68f60} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb547d917ca: mov    0x100(%rax),%edi
  0x00007fb547d917d0: add    $0x8,%edi
  0x00007fb547d917d3: mov    %edi,0x100(%rax)
  0x00007fb547d917d9: and    $0x7ffff8,%edi
  0x00007fb547d917df: cmp    $0x0,%edi
  0x00007fb547d917e2: je     0x00007fb547d91923
  0x00007fb547d917e8: mov    (%rsi,%rdx,1),%eax
  0x00007fb547d917eb: shl    $0x3,%rax
  0x00007fb547d917ef: movsbl 0x30(%r15),%esi
  0x00007fb547d917f4: cmp    $0x0,%esi
  0x00007fb547d917f7: jne    0x00007fb547d91944
  0x00007fb547d917fd: cmp    $0x0,%rax
  0x00007fb547d91801: jne    0x00007fb547d91819
  0x00007fb547d91803: movabs $0x7fb52cebbd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9180d: orb    $0x1,0x189(%rdi)
  0x00007fb547d91814: jmpq   0x00007fb547d918f2
  0x00007fb547d91819: movabs $0x80001a9e8,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d91823: mov    0x8(%rax),%edi
  0x00007fb547d91826: movabs $0x800000000,%r12
  0x00007fb547d91830: add    %r12,%rdi
  0x00007fb547d91833: xor    %r12,%r12
  0x00007fb547d91836: cmp    0x38(%rdi),%rbx
  0x00007fb547d9183a: jne    0x00007fb547d918d6
  0x00007fb547d91840: movabs $0x7fb52cebbd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9184a: mov    0x8(%rax),%ebx
  0x00007fb547d9184d: movabs $0x800000000,%r12
  0x00007fb547d91857: add    %r12,%rbx
  0x00007fb547d9185a: xor    %r12,%r12
  0x00007fb547d9185d: cmp    0x1a0(%rdi),%rbx
  0x00007fb547d91864: jne    0x00007fb547d91873
  0x00007fb547d91866: addq   $0x1,0x1a8(%rdi)
  0x00007fb547d9186e: jmpq   0x00007fb547d918f2
  0x00007fb547d91873: cmp    0x1b0(%rdi),%rbx
  0x00007fb547d9187a: jne    0x00007fb547d91889
  0x00007fb547d9187c: addq   $0x1,0x1b8(%rdi)
  0x00007fb547d91884: jmpq   0x00007fb547d918f2
  0x00007fb547d91889: cmpq   $0x0,0x1a0(%rdi)
  0x00007fb547d91894: jne    0x00007fb547d918ad
  0x00007fb547d91896: mov    %rbx,0x1a0(%rdi)
  0x00007fb547d9189d: movq   $0x1,0x1a8(%rdi)
  0x00007fb547d918a8: jmpq   0x00007fb547d918f2
  0x00007fb547d918ad: cmpq   $0x0,0x1b0(%rdi)
  0x00007fb547d918b8: jne    0x00007fb547d918d1
  0x00007fb547d918ba: mov    %rbx,0x1b0(%rdi)
  0x00007fb547d918c1: movq   $0x1,0x1b8(%rdi)
  0x00007fb547d918cc: jmpq   0x00007fb547d918f2
  0x00007fb547d918d1: jmpq   0x00007fb547d918f2
  0x00007fb547d918d6: movabs $0x7fb52cebbd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d918e0: subq   $0x1,0x190(%rdi)
  0x00007fb547d918e8: jmpq   0x00007fb547d9195c
  0x00007fb547d918ed: jmpq   0x00007fb547d918f2  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)

  0x00007fb547d918f2: add    $0x70,%rsp
  0x00007fb547d918f6: pop    %rbp
  0x00007fb547d918f7: mov    0x108(%r15),%r10
  0x00007fb547d918fe: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d91901: retq   
  0x00007fb547d91902: movabs $0x7fb52cde3108,%r10  ;   {metadata({method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9190c: mov    %r10,0x8(%rsp)
  0x00007fb547d91911: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d91919: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9191e: jmpq   0x00007fb547d91714
  0x00007fb547d91923: movabs $0x7fb52cd68f60,%r10  ;   {metadata({method} {0x00007fb52cd68f60} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb547d9192d: mov    %r10,0x8(%rsp)
  0x00007fb547d91932: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9193a: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9193f: jmpq   0x00007fb547d917e8
  0x00007fb547d91944: cmp    $0x0,%rax
  0x00007fb547d91948: je     0x00007fb547d917fd
  0x00007fb547d9194e: mov    %rax,(%rsp)
  0x00007fb547d91952: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d91957: jmpq   0x00007fb547d917fd
  0x00007fb547d9195c: mov    %rax,(%rsp)
  0x00007fb547d91960: callq  0x00007fb5478f5420  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547d91965: nop
  0x00007fb547d91966: nop
  0x00007fb547d91967: mov    0x440(%r15),%rax
  0x00007fb547d9196e: movabs $0x0,%r10
  0x00007fb547d91978: mov    %r10,0x440(%r15)
  0x00007fb547d9197f: movabs $0x0,%r10
  0x00007fb547d91989: mov    %r10,0x448(%r15)
  0x00007fb547d91990: add    $0x70,%rsp
  0x00007fb547d91994: pop    %rbp
  0x00007fb547d91995: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9199a: hlt    
  0x00007fb547d9199b: hlt    
  0x00007fb547d9199c: hlt    
  0x00007fb547d9199d: hlt    
  0x00007fb547d9199e: hlt    
  0x00007fb547d9199f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d919a0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d919a5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d919af: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d919b3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d919b8: hlt    
[Deopt Handler Code]
  0x00007fb547d919b9: movabs $0x7fb547d919b9,%r10  ;   {section_word}
  0x00007fb547d919c3: push   %r10
  0x00007fb547d919c5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d919ca: hlt    
  0x00007fb547d919cb: hlt    
  0x00007fb547d919cc: hlt    
  0x00007fb547d919cd: hlt    
  0x00007fb547d919ce: hlt    
  0x00007fb547d919cf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 574 607 
ImmutableOopMap{}pc offsets: 645 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='4' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='512' iicount='512' level='3' stamp='0.404' comment='tiered' hot_count='512'/>
<writer thread='1329935'/>
Decoding RuntimeStub - _multianewarray4_Java 0x00007fb5478f2690
  0x00007fb5478f2700: sub    $0x8,%rsp
  0x00007fb5478f2707: mov    %rbp,(%rsp)
  0x00007fb5478f270b: mov    %rsp,0x328(%r15)
  0x00007fb5478f2712: mov    %rsi,%rdi
  0x00007fb5478f2715: mov    %edx,%esi
  0x00007fb5478f2717: mov    %ecx,%edx
  0x00007fb5478f2719: mov    %r8d,%ecx
  0x00007fb5478f271c: mov    %r9d,%r8d
  0x00007fb5478f271f: mov    %r15,%r9
  0x00007fb5478f2722: movabs $0x7fb565135b30,%r10
  0x00007fb5478f272c: callq  *%r10
  0x00007fb5478f272f: movq   $0x0,0x328(%r15)
  0x00007fb5478f273a: movq   $0x0,0x330(%r15)
  0x00007fb5478f2745: mov    0x388(%r15),%rax
  0x00007fb5478f274c: movq   $0x0,0x388(%r15)
  0x00007fb5478f2757: mov    0x8(%r15),%r10
  0x00007fb5478f275b: test   %r10,%r10
  0x00007fb5478f275e: jne    0x00007fb5478f2762
  0x00007fb5478f2760: pop    %rbp
  0x00007fb5478f2761: retq   
  0x00007fb5478f2762: xor    %ebx,%ebx
  0x00007fb5478f2764: movabs $0x7fb547800c00,%r10
  0x00007fb5478f276e: pop    %rbp
  0x00007fb5478f276f: jmpq   *%r10
  0x00007fb5478f2772: hlt    
  0x00007fb5478f2773: hlt    
  0x00007fb5478f2774: hlt    
  0x00007fb5478f2775: hlt    
  0x00007fb5478f2776: hlt    
  0x00007fb5478f2777: hlt    

<writer thread='1329923'/>
<task_queued compile_id='5' method='java.lang.String isLatin1 ()Z' bytes='19' count='256' iicount='256' level='3' stamp='0.405' comment='tiered' hot_count='256'/>
<writer thread='1329936'/>
<nmethod compile_id='4' compiler='c1' level='3' entry='0x00007fb547d91cc0' size='784' address='0x00007fb547d91b10' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='688' scopes_pcs_offset='712' dependencies_offset='776' metadata_offset='672' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='618' iicount='618' stamp='0.405'/>
<print_nmethod stamp='0.405'>
Compiled method (c1)     404    4       3       java.lang.Object::&lt;init&gt; (1 bytes)
 total in heap  [0x00007fb547d91b10,0x00007fb547d91e20] = 784
 relocation     [0x00007fb547d91c88,0x00007fb547d91cb0] = 40
 main code      [0x00007fb547d91cc0,0x00007fb547d91d80] = 192
 stub code      [0x00007fb547d91d80,0x00007fb547d91db0] = 48
 metadata       [0x00007fb547d91db0,0x00007fb547d91dc0] = 16
 scopes data    [0x00007fb547d91dc0,0x00007fb547d91dd8] = 24
 scopes pcs     [0x00007fb547d91dd8,0x00007fb547d91e18] = 64
 dependencies   [0x00007fb547d91e18,0x00007fb547d91e20] = 8
----------------------------------------------------------------------
java/lang/Object.&lt;init&gt;()V  [0x00007fb547d91cc0, 0x00007fb547d91db0]  240 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d91cc0: mov    0x8(%rsi),%r10d
  0x00007fb547d91cc4: movabs $0x800000000,%r12
  0x00007fb547d91cce: add    %r12,%r10
  0x00007fb547d91cd1: xor    %r12,%r12
  0x00007fb547d91cd4: cmp    %rax,%r10
  0x00007fb547d91cd7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d91cdd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d91ce0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d91ce7: push   %rbp
  0x00007fb547d91ce8: sub    $0x30,%rsp
  0x00007fb547d91cec: movabs $0x7fb52cedd4a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d91cf6: mov    0x100(%rdi),%ebx
  0x00007fb547d91cfc: add    $0x8,%ebx
  0x00007fb547d91cff: mov    %ebx,0x100(%rdi)
  0x00007fb547d91d05: and    $0x1ff8,%ebx
  0x00007fb547d91d0b: cmp    $0x0,%ebx
  0x00007fb547d91d0e: je     0x00007fb547d91d24  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 50)

  0x00007fb547d91d14: add    $0x30,%rsp
  0x00007fb547d91d18: pop    %rbp
  0x00007fb547d91d19: mov    0x108(%r15),%r10
  0x00007fb547d91d20: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d91d23: retq   
  0x00007fb547d91d24: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d91d2e: mov    %r10,0x8(%rsp)
  0x00007fb547d91d33: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d91d3b: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d91d40: jmp    0x00007fb547d91d14
  0x00007fb547d91d42: nop
  0x00007fb547d91d43: nop
  0x00007fb547d91d44: mov    0x440(%r15),%rax
  0x00007fb547d91d4b: movabs $0x0,%r10
  0x00007fb547d91d55: mov    %r10,0x440(%r15)
  0x00007fb547d91d5c: movabs $0x0,%r10
  0x00007fb547d91d66: mov    %r10,0x448(%r15)
  0x00007fb547d91d6d: add    $0x30,%rsp
  0x00007fb547d91d71: pop    %rbp
  0x00007fb547d91d72: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d91d77: hlt    
  0x00007fb547d91d78: hlt    
  0x00007fb547d91d79: hlt    
  0x00007fb547d91d7a: hlt    
  0x00007fb547d91d7b: hlt    
  0x00007fb547d91d7c: hlt    
  0x00007fb547d91d7d: hlt    
  0x00007fb547d91d7e: hlt    
  0x00007fb547d91d7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d91d80: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d91d85: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d91d8f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d91d93: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d91d98: hlt    
[Deopt Handler Code]
  0x00007fb547d91d99: movabs $0x7fb547d91d99,%r10  ;   {section_word}
  0x00007fb547d91da3: push   %r10
  0x00007fb547d91da5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d91daa: hlt    
  0x00007fb547d91dab: hlt    
  0x00007fb547d91dac: hlt    
  0x00007fb547d91dad: hlt    
  0x00007fb547d91dae: hlt    
  0x00007fb547d91daf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 128 </print_nmethod>
<writer thread='1329935'/>
Decoding RuntimeStub - _multianewarray5_Java 0x00007fb5478f2390
  0x00007fb5478f2400: sub    $0x18,%rsp
  0x00007fb5478f2407: mov    %rbp,0x10(%rsp)
  0x00007fb5478f240c: mov    %edi,%r10d
  0x00007fb5478f240f: mov    %rsp,0x328(%r15)
  0x00007fb5478f2416: mov    %rsi,%rdi
  0x00007fb5478f2419: mov    %edx,%esi
  0x00007fb5478f241b: mov    %ecx,%edx
  0x00007fb5478f241d: mov    %r8d,%ecx
  0x00007fb5478f2420: mov    %r9d,%r8d
  0x00007fb5478f2423: mov    %r10d,%r9d
  0x00007fb5478f2426: mov    %r15,(%rsp)
  0x00007fb5478f242a: movabs $0x7fb565135ce0,%r10
  0x00007fb5478f2434: callq  *%r10
  0x00007fb5478f2437: movq   $0x0,0x328(%r15)
  0x00007fb5478f2442: movq   $0x0,0x330(%r15)
  0x00007fb5478f244d: mov    0x388(%r15),%rax
  0x00007fb5478f2454: movq   $0x0,0x388(%r15)
  0x00007fb5478f245f: mov    0x8(%r15),%r10
  0x00007fb5478f2463: test   %r10,%r10
  0x00007fb5478f2466: jne    0x00007fb5478f246e
  0x00007fb5478f2468: add    $0x10,%rsp
  0x00007fb5478f246c: pop    %rbp
  0x00007fb5478f246d: retq   
  0x00007fb5478f246e: xor    %ebx,%ebx
  0x00007fb5478f2470: movabs $0x7fb547800c00,%r10
  0x00007fb5478f247a: add    $0x10,%rsp
  0x00007fb5478f247e: pop    %rbp
  0x00007fb5478f247f: jmpq   *%r10
  0x00007fb5478f2482: hlt    
  0x00007fb5478f2483: hlt    
  0x00007fb5478f2484: hlt    
  0x00007fb5478f2485: hlt    
  0x00007fb5478f2486: hlt    
  0x00007fb5478f2487: hlt    

<writer thread='1329923'/>
<task_queued compile_id='6' method='java.lang.String hashCode ()I' bytes='49' count='384' iicount='384' level='3' stamp='0.407' comment='tiered' hot_count='384'/>
<writer thread='1329935'/>
Decoding RuntimeStub - _multianewarrayN_Java 0x00007fb5478f2090
  0x00007fb5478f2100: sub    $0x8,%rsp
  0x00007fb5478f2107: mov    %rbp,(%rsp)
  0x00007fb5478f210b: mov    %rsp,0x328(%r15)
  0x00007fb5478f2112: mov    %rsi,%rdi
  0x00007fb5478f2115: mov    %rdx,%rsi
  0x00007fb5478f2118: mov    %r15,%rdx
  0x00007fb5478f211b: movabs $0x7fb565135e90,%r10
  0x00007fb5478f2125: callq  *%r10
  0x00007fb5478f2128: movq   $0x0,0x328(%r15)
  0x00007fb5478f2133: movq   $0x0,0x330(%r15)
  0x00007fb5478f213e: mov    0x388(%r15),%rax
  0x00007fb5478f2145: movq   $0x0,0x388(%r15)
  0x00007fb5478f2150: mov    0x8(%r15),%r10
  0x00007fb5478f2154: test   %r10,%r10
  0x00007fb5478f2157: jne    0x00007fb5478f215b
  0x00007fb5478f2159: pop    %rbp
  0x00007fb5478f215a: retq   
  0x00007fb5478f215b: xor    %ebx,%ebx
  0x00007fb5478f215d: movabs $0x7fb547800c00,%r10
  0x00007fb5478f2167: pop    %rbp
  0x00007fb5478f2168: jmpq   *%r10
  0x00007fb5478f216b: hlt    
  0x00007fb5478f216c: hlt    
  0x00007fb5478f216d: hlt    
  0x00007fb5478f216e: hlt    
  0x00007fb5478f216f: hlt    

<writer thread='1329936'/>
<nmethod compile_id='5' compiler='c1' level='3' entry='0x00007fb547d92040' size='1008' address='0x00007fb547d91e90' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='808' scopes_pcs_offset='856' dependencies_offset='1000' metadata_offset='800' method='java.lang.String isLatin1 ()Z' bytes='19' count='483' iicount='483' stamp='0.409'/>
<print_nmethod stamp='0.409'>
Compiled method (c1)     408    5       3       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x00007fb547d91e90,0x00007fb547d92280] = 1008
 relocation     [0x00007fb547d92008,0x00007fb547d92038] = 48
 main code      [0x00007fb547d92040,0x00007fb547d92180] = 320
 stub code      [0x00007fb547d92180,0x00007fb547d921b0] = 48
 metadata       [0x00007fb547d921b0,0x00007fb547d921b8] = 8
 scopes data    [0x00007fb547d921b8,0x00007fb547d921e8] = 48
 scopes pcs     [0x00007fb547d921e8,0x00007fb547d92278] = 144
 dependencies   [0x00007fb547d92278,0x00007fb547d92280] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x00007fb547d92040, 0x00007fb547d921b0]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d92040: mov    0x8(%rsi),%r10d
  0x00007fb547d92044: movabs $0x800000000,%r12
  0x00007fb547d9204e: add    %r12,%r10
  0x00007fb547d92051: xor    %r12,%r12
  0x00007fb547d92054: cmp    %rax,%r10
  0x00007fb547d92057: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9205d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d92060: mov    %eax,-0x14000(%rsp)
  0x00007fb547d92067: push   %rbp
  0x00007fb547d92068: sub    $0x30,%rsp
  0x00007fb547d9206c: movabs $0x7fb52cedd9b8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92076: mov    0x100(%rax),%edi
  0x00007fb547d9207c: add    $0x8,%edi
  0x00007fb547d9207f: mov    %edi,0x100(%rax)
  0x00007fb547d92085: and    $0x1ff8,%edi
  0x00007fb547d9208b: cmp    $0x0,%edi
  0x00007fb547d9208e: je     0x00007fb547d92113  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@0 (line 3266)

  0x00007fb547d92094: movabs $0x7fb52cedd9b8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9209e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)

  0x00007fb547d920a4: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)

  0x00007fb547d920a8: cmp    $0x0,%eax
  0x00007fb547d920ab: movabs $0x7fb52cedd9b8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d920b5: movabs $0x160,%rsi
  0x00007fb547d920bf: jne    0x00007fb547d920cf
  0x00007fb547d920c5: movabs $0x170,%rsi
  0x00007fb547d920cf: mov    (%rax,%rsi,1),%rdi
  0x00007fb547d920d3: lea    0x1(%rdi),%rdi
  0x00007fb547d920d7: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547d920db: jne    0x00007fb547d920fb  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)

  0x00007fb547d920e1: movabs $0x7fb52cedd9b8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d920eb: incl   0x180(%rax)
  0x00007fb547d920f1: mov    $0x1,%eax
  0x00007fb547d920f6: jmpq   0x00007fb547d92100  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)

  0x00007fb547d920fb: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)

  0x00007fb547d92100: and    $0x1,%eax
  0x00007fb547d92103: add    $0x30,%rsp
  0x00007fb547d92107: pop    %rbp
  0x00007fb547d92108: mov    0x108(%r15),%r10
  0x00007fb547d9210f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d92112: retq   
  0x00007fb547d92113: movabs $0x7fb52ccb9300,%r10  ;   {metadata({method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9211d: mov    %r10,0x8(%rsp)
  0x00007fb547d92122: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9212a: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9212f: jmpq   0x00007fb547d92094
  0x00007fb547d92134: nop
  0x00007fb547d92135: nop
  0x00007fb547d92136: mov    0x440(%r15),%rax
  0x00007fb547d9213d: movabs $0x0,%r10
  0x00007fb547d92147: mov    %r10,0x440(%r15)
  0x00007fb547d9214e: movabs $0x0,%r10
  0x00007fb547d92158: mov    %r10,0x448(%r15)
  0x00007fb547d9215f: add    $0x30,%rsp
  0x00007fb547d92163: pop    %rbp
  0x00007fb547d92164: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d92169: hlt    
  0x00007fb547d9216a: hlt    
  0x00007fb547d9216b: hlt    
  0x00007fb547d9216c: hlt    
  0x00007fb547d9216d: hlt    
  0x00007fb547d9216e: hlt    
  0x00007fb547d9216f: hlt    
  0x00007fb547d92170: hlt    
  0x00007fb547d92171: hlt    
  0x00007fb547d92172: hlt    
  0x00007fb547d92173: hlt    
  0x00007fb547d92174: hlt    
  0x00007fb547d92175: hlt    
  0x00007fb547d92176: hlt    
  0x00007fb547d92177: hlt    
  0x00007fb547d92178: hlt    
  0x00007fb547d92179: hlt    
  0x00007fb547d9217a: hlt    
  0x00007fb547d9217b: hlt    
  0x00007fb547d9217c: hlt    
  0x00007fb547d9217d: hlt    
  0x00007fb547d9217e: hlt    
  0x00007fb547d9217f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d92180: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d92185: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9218f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d92193: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d92198: hlt    
[Deopt Handler Code]
  0x00007fb547d92199: movabs $0x7fb547d92199,%r10  ;   {section_word}
  0x00007fb547d921a3: push   %r10
  0x00007fb547d921a5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d921aa: hlt    
  0x00007fb547d921ab: hlt    
  0x00007fb547d921ac: hlt    
  0x00007fb547d921ad: hlt    
  0x00007fb547d921ae: hlt    
  0x00007fb547d921af: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 239 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='7' method='java.lang.Math floorMod (II)I' bytes='10' count='384' iicount='384' level='3' stamp='0.411' comment='tiered' hot_count='384'/>
<task_queued compile_id='8' method='java.lang.Math floorDiv (II)I' bytes='22' count='384' iicount='384' level='3' stamp='0.411' comment='tiered' hot_count='384'/>
<writer thread='1329935'/>
Decoding RuntimeStub - _complete_monitor_locking_Java 0x00007fb5478f1d90
  0x00007fb5478f1e00: sub    $0x8,%rsp
  0x00007fb5478f1e07: mov    %rbp,(%rsp)
  0x00007fb5478f1e0b: mov    %rsp,0x328(%r15)
  0x00007fb5478f1e12: mov    %rsi,%rdi
  0x00007fb5478f1e15: mov    %rdx,%rsi
  0x00007fb5478f1e18: mov    %r15,%rdx
  0x00007fb5478f1e1b: movabs $0x7fb565150b40,%r10
  0x00007fb5478f1e25: callq  *%r10
  0x00007fb5478f1e28: movq   $0x0,0x328(%r15)
  0x00007fb5478f1e33: movq   $0x0,0x330(%r15)
  0x00007fb5478f1e3e: mov    0x8(%r15),%r10
  0x00007fb5478f1e42: test   %r10,%r10
  0x00007fb5478f1e45: jne    0x00007fb5478f1e49
  0x00007fb5478f1e47: pop    %rbp
  0x00007fb5478f1e48: retq   
  0x00007fb5478f1e49: xor    %ebx,%ebx
  0x00007fb5478f1e4b: movabs $0x7fb547800c00,%r10
  0x00007fb5478f1e55: pop    %rbp
  0x00007fb5478f1e56: jmpq   *%r10
  0x00007fb5478f1e59: hlt    
  0x00007fb5478f1e5a: hlt    
  0x00007fb5478f1e5b: hlt    
  0x00007fb5478f1e5c: hlt    
  0x00007fb5478f1e5d: hlt    
  0x00007fb5478f1e5e: hlt    
  0x00007fb5478f1e5f: hlt    

<writer thread='1329923'/>
<task_queued compile_id='9' method='java.lang.String coder ()B' bytes='15' count='384' iicount='384' level='3' stamp='0.411' comment='tiered' hot_count='384'/>
<writer thread='1329935'/>
Decoding RuntimeStub - _monitor_notify_Java 0x00007fb5478f1a90
  0x00007fb5478f1b00: sub    $0x8,%rsp
  0x00007fb5478f1b07: mov    %rbp,(%rsp)
  0x00007fb5478f1b0b: mov    %rsp,0x328(%r15)
  0x00007fb5478f1b12: mov    %rsi,%rdi
  0x00007fb5478f1b15: mov    %r15,%rsi
  0x00007fb5478f1b18: movabs $0x7fb565133d30,%r10
  0x00007fb5478f1b22: callq  *%r10
  0x00007fb5478f1b25: movq   $0x0,0x328(%r15)
  0x00007fb5478f1b30: movq   $0x0,0x330(%r15)
  0x00007fb5478f1b3b: mov    0x8(%r15),%r10
  0x00007fb5478f1b3f: test   %r10,%r10
  0x00007fb5478f1b42: jne    0x00007fb5478f1b46
  0x00007fb5478f1b44: pop    %rbp
  0x00007fb5478f1b45: retq   
  0x00007fb5478f1b46: xor    %ebx,%ebx
  0x00007fb5478f1b48: movabs $0x7fb547800c00,%r10
  0x00007fb5478f1b52: pop    %rbp
  0x00007fb5478f1b53: jmpq   *%r10
  0x00007fb5478f1b56: hlt    
  0x00007fb5478f1b57: hlt    

<writer thread='1329936'/>
<nmethod compile_id='6' compiler='c1' level='3' entry='0x00007fb547d92460' size='1808' address='0x00007fb547d92290' relocation_offset='376' insts_offset='464' stub_offset='1136' scopes_data_offset='1232' scopes_pcs_offset='1400' dependencies_offset='1784' nul_chk_table_offset='1792' metadata_offset='1216' method='java.lang.String hashCode ()I' bytes='49' count='705' iicount='705' stamp='0.412'/>
<print_nmethod stamp='0.412'>
Compiled method (c1)     412    6       3       java.lang.String::hashCode (49 bytes)
 total in heap  [0x00007fb547d92290,0x00007fb547d929a0] = 1808
 relocation     [0x00007fb547d92408,0x00007fb547d92460] = 88
 main code      [0x00007fb547d92460,0x00007fb547d92700] = 672
 stub code      [0x00007fb547d92700,0x00007fb547d92750] = 80
 metadata       [0x00007fb547d92750,0x00007fb547d92760] = 16
 scopes data    [0x00007fb547d92760,0x00007fb547d92808] = 168
 scopes pcs     [0x00007fb547d92808,0x00007fb547d92988] = 384
 dependencies   [0x00007fb547d92988,0x00007fb547d92990] = 8
 nul chk table  [0x00007fb547d92990,0x00007fb547d929a0] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x00007fb547d92460, 0x00007fb547d92750]  752 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb547d92460: mov    0x8(%rsi),%r10d
  0x00007fb547d92464: movabs $0x800000000,%r12
  0x00007fb547d9246e: add    %r12,%r10
  0x00007fb547d92471: xor    %r12,%r12
  0x00007fb547d92474: cmp    %rax,%r10
  0x00007fb547d92477: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9247d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d92480: mov    %eax,-0x14000(%rsp)
  0x00007fb547d92487: push   %rbp
  0x00007fb547d92488: sub    $0x40,%rsp
  0x00007fb547d9248c: movabs $0x7fb52cedeb40,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92496: mov    0x100(%rdi),%ebx
  0x00007fb547d9249c: add    $0x8,%ebx
  0x00007fb547d9249f: mov    %ebx,0x100(%rdi)
  0x00007fb547d924a5: and    $0x1ff8,%ebx
  0x00007fb547d924ab: cmp    $0x0,%ebx
  0x00007fb547d924ae: je     0x00007fb547d9267a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0 (line 1502)

  0x00007fb547d924b4: mov    0x10(%rsi),%edi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x00007fb547d924b7: cmp    $0x0,%edi
  0x00007fb547d924ba: movabs $0x7fb52cedeb40,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d924c4: movabs $0x140,%rax
  0x00007fb547d924ce: jne    0x00007fb547d924de
  0x00007fb547d924d4: movabs $0x150,%rax
  0x00007fb547d924de: mov    (%rbx,%rax,1),%rdx
  0x00007fb547d924e2: lea    0x1(%rdx),%rdx
  0x00007fb547d924e6: mov    %rdx,(%rbx,%rax,1)
  0x00007fb547d924ea: jne    0x00007fb547d92667  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6 (line 1503)

  0x00007fb547d924f0: mov    0xc(%rsi),%ebx
  0x00007fb547d924f3: shl    $0x3,%rbx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x00007fb547d924f7: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x00007fb547d9269b
  0x00007fb547d924fa: cmp    $0x0,%eax
  0x00007fb547d924fd: movabs $0x7fb52cedeb40,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92507: movabs $0x160,%rdx
  0x00007fb547d92511: jle    0x00007fb547d92521
  0x00007fb547d92517: movabs $0x170,%rdx
  0x00007fb547d92521: mov    (%rax,%rdx,1),%rcx
  0x00007fb547d92525: lea    0x1(%rcx),%rcx
  0x00007fb547d92529: mov    %rcx,(%rax,%rdx,1)
  0x00007fb547d9252d: jle    0x00007fb547d92667  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x00007fb547d92533: mov    %rsi,%rdi
  0x00007fb547d92536: movabs $0x7fb52cedeb40,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92540: addq   $0x1,0x180(%rax)
  0x00007fb547d92548: movabs $0x7fb52cedd9b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92552: mov    0x100(%rdi),%eax
  0x00007fb547d92558: add    $0x8,%eax
  0x00007fb547d9255b: mov    %eax,0x100(%rdi)
  0x00007fb547d92561: and    $0x7ffff8,%eax
  0x00007fb547d92567: cmp    $0x0,%eax
  0x00007fb547d9256a: je     0x00007fb547d926a0
  0x00007fb547d92570: movabs $0x7fb52cedd9b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9257a: incl   0x150(%rdi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547d92580: movsbl 0x14(%rsi),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547d92584: cmp    $0x0,%edi
  0x00007fb547d92587: movabs $0x7fb52cedd9b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92591: movabs $0x160,%rax
  0x00007fb547d9259b: jne    0x00007fb547d925ab
  0x00007fb547d925a1: movabs $0x170,%rax
  0x00007fb547d925ab: mov    (%rdi,%rax,1),%rdx
  0x00007fb547d925af: lea    0x1(%rdx),%rdx
  0x00007fb547d925b3: mov    %rdx,(%rdi,%rax,1)
  0x00007fb547d925b7: jne    0x00007fb547d925d7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547d925bd: movabs $0x7fb52cedd9b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d925c7: incl   0x180(%rdi)
  0x00007fb547d925cd: mov    $0x1,%edi
  0x00007fb547d925d2: jmpq   0x00007fb547d925dc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547d925d7: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547d925dc: and    $0x1,%edi
  0x00007fb547d925df: cmp    $0x0,%edi
  0x00007fb547d925e2: movabs $0x7fb52cedeb40,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d925ec: movabs $0x1b8,%rax
  0x00007fb547d925f6: je     0x00007fb547d92606
  0x00007fb547d925fc: movabs $0x1c8,%rax
  0x00007fb547d92606: mov    (%rdi,%rax,1),%rdx
  0x00007fb547d9260a: lea    0x1(%rdx),%rdx
  0x00007fb547d9260e: mov    %rdx,(%rdi,%rax,1)
  0x00007fb547d92612: mov    %rsi,0x30(%rsp)
  0x00007fb547d92617: je     0x00007fb547d92651  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22 (line 1504)

  0x00007fb547d9261d: movabs $0x7fb52cedeb40,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92627: addq   $0x1,0x1d8(%rdi)
  0x00007fb547d9262f: mov    %rbx,%rsi          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb547d92632: nopl   0x0(%rax,%rax,1)
  0x00007fb547d92637: callq  0x00007fb547d911c0  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {static_call}
  0x00007fb547d9263c: movabs $0x7fb52cedeb40,%rsi  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92646: incl   0x1e8(%rsi)
  0x00007fb547d9264c: jmpq   0x00007fb547d9265c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32 (line 1504)

  0x00007fb547d92651: mov    %rbx,%rsi          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x00007fb547d92654: data16 xchg %ax,%ax
  0x00007fb547d92657: callq  0x00007fb54784a780  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1505)
                                                ;   {static_call}
  0x00007fb547d9265c: mov    0x30(%rsp),%rsi
  0x00007fb547d92661: mov    %eax,0x10(%rsi)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44 (line 1505)

  0x00007fb547d92664: mov    %rax,%rdi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47 (line 1507)

  0x00007fb547d92667: mov    %rdi,%rax
  0x00007fb547d9266a: add    $0x40,%rsp
  0x00007fb547d9266e: pop    %rbp
  0x00007fb547d9266f: mov    0x108(%r15),%r10
  0x00007fb547d92676: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d92679: retq   
  0x00007fb547d9267a: movabs $0x7fb52ccb5bd0,%r10  ;   {metadata({method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d92684: mov    %r10,0x8(%rsp)
  0x00007fb547d92689: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d92691: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d92696: jmpq   0x00007fb547d924b4
  0x00007fb547d9269b: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d926a0: movabs $0x7fb52ccb9300,%r10  ;   {metadata({method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d926aa: mov    %r10,0x8(%rsp)
  0x00007fb547d926af: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d926b7: callq  0x00007fb5478f8100  ; ImmutableOopMap{rbx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d926bc: jmpq   0x00007fb547d92570
  0x00007fb547d926c1: nop
  0x00007fb547d926c2: nop
  0x00007fb547d926c3: mov    0x440(%r15),%rax
  0x00007fb547d926ca: movabs $0x0,%r10
  0x00007fb547d926d4: mov    %r10,0x440(%r15)
  0x00007fb547d926db: movabs $0x0,%r10
  0x00007fb547d926e5: mov    %r10,0x448(%r15)
  0x00007fb547d926ec: add    $0x40,%rsp
  0x00007fb547d926f0: pop    %rbp
  0x00007fb547d926f1: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d926f6: hlt    
  0x00007fb547d926f7: hlt    
  0x00007fb547d926f8: hlt    
  0x00007fb547d926f9: hlt    
  0x00007fb547d926fa: hlt    
  0x00007fb547d926fb: hlt    
  0x00007fb547d926fc: hlt    
  0x00007fb547d926fd: hlt    
  0x00007fb547d926fe: hlt    
  0x00007fb547d926ff: hlt    
[Stub Code]
  0x00007fb547d92700: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d92705: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9270f: jmpq   0x00007fb547d9270f  ;   {runtime_call}
  0x00007fb547d92714: nop
  0x00007fb547d92715: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9271f: jmpq   0x00007fb547d9271f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d92724: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d92729: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d92733: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d92737: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9273c: hlt    
[Deopt Handler Code]
  0x00007fb547d9273d: movabs $0x7fb547d9273d,%r10  ;   {section_word}
  0x00007fb547d92747: push   %r10
  0x00007fb547d92749: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9274e: hlt    
  0x00007fb547d9274f: hlt    

ImmutableOopMap{[48]=Oop }pc offsets: 476 508 
ImmutableOopMap{rsi=Oop }pc offsets: 566 
ImmutableOopMap{rsi=Oop rbx=Oop }pc offsets: 576 
ImmutableOopMap{rbx=Oop rsi=Oop }pc offsets: 604 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='10' method='java.util.ImmutableCollections$SetN probe (Ljava/lang/Object;)I' bytes='56' count='512' backedge_count='191' iicount='512' level='3' stamp='0.419' comment='tiered' hot_count='512'/>
<writer thread='1329935'/>
Decoding RuntimeStub - _monitor_notifyAll_Java 0x00007fb5478f1790
  0x00007fb5478f1800: sub    $0x8,%rsp
  0x00007fb5478f1807: mov    %rbp,(%rsp)
  0x00007fb5478f180b: mov    %rsp,0x328(%r15)
  0x00007fb5478f1812: mov    %rsi,%rdi
  0x00007fb5478f1815: mov    %r15,%rsi
  0x00007fb5478f1818: movabs $0x7fb565133ef0,%r10
  0x00007fb5478f1822: callq  *%r10
  0x00007fb5478f1825: movq   $0x0,0x328(%r15)
  0x00007fb5478f1830: movq   $0x0,0x330(%r15)
  0x00007fb5478f183b: mov    0x8(%r15),%r10
  0x00007fb5478f183f: test   %r10,%r10
  0x00007fb5478f1842: jne    0x00007fb5478f1846
  0x00007fb5478f1844: pop    %rbp
  0x00007fb5478f1845: retq   
  0x00007fb5478f1846: xor    %ebx,%ebx
  0x00007fb5478f1848: movabs $0x7fb547800c00,%r10
  0x00007fb5478f1852: pop    %rbp
  0x00007fb5478f1853: jmpq   *%r10
  0x00007fb5478f1856: hlt    
  0x00007fb5478f1857: hlt    

<writer thread='1329936'/>
<nmethod compile_id='10' compiler='c1' level='3' entry='0x00007fb547d92c00' size='2880' address='0x00007fb547d92a10' relocation_offset='376' insts_offset='496' stub_offset='1872' scopes_data_offset='1976' scopes_pcs_offset='2280' dependencies_offset='2824' nul_chk_table_offset='2832' metadata_offset='1952' method='java.util.ImmutableCollections$SetN probe (Ljava/lang/Object;)I' bytes='56' count='646' backedge_count='275' iicount='646' stamp='0.419'/>
<print_nmethod stamp='0.419'>
Compiled method (c1)     418   10       3       java.util.ImmutableCollections$SetN::probe (56 bytes)
 total in heap  [0x00007fb547d92a10,0x00007fb547d93550] = 2880
 relocation     [0x00007fb547d92b88,0x00007fb547d92c00] = 120
 main code      [0x00007fb547d92c00,0x00007fb547d93160] = 1376
 stub code      [0x00007fb547d93160,0x00007fb547d931b0] = 80
 metadata       [0x00007fb547d931b0,0x00007fb547d931c8] = 24
 scopes data    [0x00007fb547d931c8,0x00007fb547d932f8] = 304
 scopes pcs     [0x00007fb547d932f8,0x00007fb547d93518] = 544
 dependencies   [0x00007fb547d93518,0x00007fb547d93520] = 8
 nul chk table  [0x00007fb547d93520,0x00007fb547d93550] = 48
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.probe(Ljava/lang/Object;)I  [0x00007fb547d92c00, 0x00007fb547d931b0]  1456 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;
  # this:     rsi:rsi   = &apos;java/util/ImmutableCollections$SetN&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x80]  (sp of caller)
  0x00007fb547d92c00: mov    0x8(%rsi),%r10d
  0x00007fb547d92c04: movabs $0x800000000,%r12
  0x00007fb547d92c0e: add    %r12,%r10
  0x00007fb547d92c11: xor    %r12,%r12
  0x00007fb547d92c14: cmp    %rax,%r10
  0x00007fb547d92c17: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d92c1d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d92c20: mov    %eax,-0x14000(%rsp)
  0x00007fb547d92c27: push   %rbp
  0x00007fb547d92c28: sub    $0x70,%rsp
  0x00007fb547d92c2c: mov    %rsi,0x50(%rsp)
  0x00007fb547d92c31: mov    %rdx,0x58(%rsp)
  0x00007fb547d92c36: movabs $0x7fb52ceed800,%rdi  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d92c40: mov    0x100(%rdi),%ebx
  0x00007fb547d92c46: add    $0x8,%ebx
  0x00007fb547d92c49: mov    %ebx,0x100(%rdi)
  0x00007fb547d92c4f: and    $0x1ff8,%ebx
  0x00007fb547d92c55: cmp    $0x0,%ebx
  0x00007fb547d92c58: je     0x00007fb547d9306f  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@0 (line 689)

  0x00007fb547d92c5e: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fb547d93090
  0x00007fb547d92c61: mov    %rdx,%rdi
  0x00007fb547d92c64: movabs $0x7fb52ceed800,%rbx  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d92c6e: mov    0x8(%rdi),%edi
  0x00007fb547d92c71: movabs $0x800000000,%r12
  0x00007fb547d92c7b: add    %r12,%rdi
  0x00007fb547d92c7e: xor    %r12,%r12
  0x00007fb547d92c81: cmp    0x150(%rbx),%rdi
  0x00007fb547d92c88: jne    0x00007fb547d92c97
  0x00007fb547d92c8a: addq   $0x1,0x158(%rbx)
  0x00007fb547d92c92: jmpq   0x00007fb547d92cfd
  0x00007fb547d92c97: cmp    0x160(%rbx),%rdi
  0x00007fb547d92c9e: jne    0x00007fb547d92cad
  0x00007fb547d92ca0: addq   $0x1,0x168(%rbx)
  0x00007fb547d92ca8: jmpq   0x00007fb547d92cfd
  0x00007fb547d92cad: cmpq   $0x0,0x150(%rbx)
  0x00007fb547d92cb8: jne    0x00007fb547d92cd1
  0x00007fb547d92cba: mov    %rdi,0x150(%rbx)
  0x00007fb547d92cc1: movq   $0x1,0x158(%rbx)
  0x00007fb547d92ccc: jmpq   0x00007fb547d92cfd
  0x00007fb547d92cd1: cmpq   $0x0,0x160(%rbx)
  0x00007fb547d92cdc: jne    0x00007fb547d92cf5
  0x00007fb547d92cde: mov    %rdi,0x160(%rbx)
  0x00007fb547d92ce5: movq   $0x1,0x168(%rbx)
  0x00007fb547d92cf0: jmpq   0x00007fb547d92cfd
  0x00007fb547d92cf5: addq   $0x1,0x140(%rbx)
  0x00007fb547d92cfd: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 689)

  0x00007fb547d92d00: nopl   0x0(%rax,%rax,1)
  0x00007fb547d92d05: movabs $0x800001808,%rax
  0x00007fb547d92d0f: callq  0x00007fb547d92460  ; ImmutableOopMap{[80]=Oop [88]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 689)
                                                ;   {virtual_call}
  0x00007fb547d92d14: mov    %rax,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 689)

  0x00007fb547d92d17: mov    0x50(%rsp),%rdi
  0x00007fb547d92d1c: mov    0x10(%rdi),%eax
  0x00007fb547d92d1f: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@5 (line 689)

  0x00007fb547d92d23: mov    0xc(%rax),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@8 (line 689)
                                                ; implicit exception: dispatches to 0x00007fb547d93095
  0x00007fb547d92d26: movabs $0x7fb52ceed800,%rax  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d92d30: addq   $0x1,0x178(%rax)
  0x00007fb547d92d38: movabs $0x7fb52ceed4c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d92d42: mov    0x100(%rax),%edx
  0x00007fb547d92d48: add    $0x8,%edx
  0x00007fb547d92d4b: mov    %edx,0x100(%rax)
  0x00007fb547d92d51: and    $0x7ffff8,%edx
  0x00007fb547d92d57: cmp    $0x0,%edx
  0x00007fb547d92d5a: je     0x00007fb547d9309a
  0x00007fb547d92d60: movabs $0x7fb52ceed4c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d92d6a: addq   $0x1,0x140(%rax)
  0x00007fb547d92d72: movabs $0x7fb52ceed658,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d92d7c: mov    0x100(%rax),%edx
  0x00007fb547d92d82: add    $0x8,%edx
  0x00007fb547d92d85: mov    %edx,0x100(%rax)
  0x00007fb547d92d8b: and    $0x7ffff8,%edx
  0x00007fb547d92d91: cmp    $0x0,%edx
  0x00007fb547d92d94: je     0x00007fb547d930bb
  0x00007fb547d92d9a: mov    %rsi,%rax
  0x00007fb547d92d9d: cmp    $0x80000000,%eax
  0x00007fb547d92da3: jne    0x00007fb547d92db4
  0x00007fb547d92da9: xor    %edx,%edx
  0x00007fb547d92dab: cmp    $0xffffffff,%ebx
  0x00007fb547d92dae: je     0x00007fb547d92db7
  0x00007fb547d92db4: cltd   
  0x00007fb547d92db5: idiv   %ebx               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)
                                                ; implicit exception: dispatches to 0x00007fb547d930dc
  0x00007fb547d92db7: mov    %rbx,%rdx
  0x00007fb547d92dba: xor    %rsi,%rdx
  0x00007fb547d92dbd: cmp    $0x0,%edx
  0x00007fb547d92dc0: movabs $0x7fb52ceed658,%rdx  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d92dca: movabs $0x140,%rcx
  0x00007fb547d92dd4: jge    0x00007fb547d92de4
  0x00007fb547d92dda: movabs $0x150,%rcx
  0x00007fb547d92de4: mov    (%rdx,%rcx,1),%r8
  0x00007fb547d92de8: lea    0x1(%r8),%r8
  0x00007fb547d92dec: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547d92df0: jge    0x00007fb547d92e36  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1166)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)

  0x00007fb547d92df6: mov    %rax,%rdx
  0x00007fb547d92df9: imul   %ebx,%edx
  0x00007fb547d92dfc: cmp    %esi,%edx
  0x00007fb547d92dfe: movabs $0x7fb52ceed658,%rdx  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d92e08: movabs $0x160,%rcx
  0x00007fb547d92e12: je     0x00007fb547d92e22
  0x00007fb547d92e18: movabs $0x170,%rcx
  0x00007fb547d92e22: mov    (%rdx,%rcx,1),%r8
  0x00007fb547d92e26: lea    0x1(%r8),%r8
  0x00007fb547d92e2a: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547d92e2e: je     0x00007fb547d92e36  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1166)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)

  0x00007fb547d92e34: dec    %eax
  0x00007fb547d92e36: imul   %ebx,%eax
  0x00007fb547d92e39: sub    %eax,%esi
  0x00007fb547d92e3b: mov    0x58(%rsp),%rdx
  0x00007fb547d92e40: mov    0x10(%rdi),%ebx
  0x00007fb547d92e43: shl    $0x3,%rbx          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@14 (line 691)

  0x00007fb547d92e47: mov    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00007fb547d930e1
  0x00007fb547d92e4a: cmp    %esi,%eax
  0x00007fb547d92e4c: jbe    0x00007fb547d930e6
  0x00007fb547d92e52: movslq %esi,%rax
  0x00007fb547d92e55: mov    0x10(%rbx,%rax,4),%ebx
  0x00007fb547d92e59: shl    $0x3,%rbx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 691)

  0x00007fb547d92e5d: cmp    $0x0,%rbx
  0x00007fb547d92e61: movabs $0x7fb52ceed800,%rax  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d92e6b: movabs $0x198,%rcx
  0x00007fb547d92e75: je     0x00007fb547d92e85
  0x00007fb547d92e7b: movabs $0x188,%rcx
  0x00007fb547d92e85: mov    (%rax,%rcx,1),%r8
  0x00007fb547d92e89: lea    0x1(%r8),%r8
  0x00007fb547d92e8d: mov    %r8,(%rax,%rcx,1)
  0x00007fb547d92e91: je     0x00007fb547d93052  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@21 (line 692)

  0x00007fb547d92e97: mov    %esi,0x60(%rsp)
  0x00007fb547d92e9b: mov    %rdx,%rax
  0x00007fb547d92e9e: movabs $0x7fb52ceed800,%rcx  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d92ea8: mov    0x8(%rax),%eax
  0x00007fb547d92eab: movabs $0x800000000,%r12
  0x00007fb547d92eb5: add    %r12,%rax
  0x00007fb547d92eb8: xor    %r12,%r12
  0x00007fb547d92ebb: cmp    0x1b8(%rcx),%rax
  0x00007fb547d92ec2: jne    0x00007fb547d92ed1
  0x00007fb547d92ec4: addq   $0x1,0x1c0(%rcx)
  0x00007fb547d92ecc: jmpq   0x00007fb547d92f37
  0x00007fb547d92ed1: cmp    0x1c8(%rcx),%rax
  0x00007fb547d92ed8: jne    0x00007fb547d92ee7
  0x00007fb547d92eda: addq   $0x1,0x1d0(%rcx)
  0x00007fb547d92ee2: jmpq   0x00007fb547d92f37
  0x00007fb547d92ee7: cmpq   $0x0,0x1b8(%rcx)
  0x00007fb547d92ef2: jne    0x00007fb547d92f0b
  0x00007fb547d92ef4: mov    %rax,0x1b8(%rcx)
  0x00007fb547d92efb: movq   $0x1,0x1c0(%rcx)
  0x00007fb547d92f06: jmpq   0x00007fb547d92f37
  0x00007fb547d92f0b: cmpq   $0x0,0x1c8(%rcx)
  0x00007fb547d92f16: jne    0x00007fb547d92f2f
  0x00007fb547d92f18: mov    %rax,0x1c8(%rcx)
  0x00007fb547d92f1f: movq   $0x1,0x1d0(%rcx)
  0x00007fb547d92f2a: jmpq   0x00007fb547d92f37
  0x00007fb547d92f2f: addq   $0x1,0x1a8(%rcx)
  0x00007fb547d92f37: mov    %rdx,%rax
  0x00007fb547d92f3a: mov    %rbx,%rdx
  0x00007fb547d92f3d: mov    %rax,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@31 (line 694)

  0x00007fb547d92f40: nopl   0x0(%rax,%rax,1)
  0x00007fb547d92f45: movabs $0xffffffffffffffff,%rax
  0x00007fb547d92f4f: callq  0x00007fb547846fa0  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@31 (line 694)
                                                ;   {virtual_call}
  0x00007fb547d92f54: cmp    $0x0,%eax
  0x00007fb547d92f57: movabs $0x7fb52ceed800,%rax  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d92f61: movabs $0x1f0,%rsi
  0x00007fb547d92f6b: jne    0x00007fb547d92f7b
  0x00007fb547d92f71: movabs $0x1e0,%rsi
  0x00007fb547d92f7b: mov    (%rax,%rsi,1),%rdi
  0x00007fb547d92f7f: lea    0x1(%rdi),%rdi
  0x00007fb547d92f83: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547d92f87: jne    0x00007fb547d9303b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@34 (line 694)

  0x00007fb547d92f8d: mov    0x50(%rsp),%rsi
  0x00007fb547d92f92: mov    0x60(%rsp),%eax
  0x00007fb547d92f96: inc    %eax
  0x00007fb547d92f98: mov    0x10(%rsi),%edi
  0x00007fb547d92f9b: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@44 (line 696)

  0x00007fb547d92f9f: mov    0xc(%rdi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@47 (line 696)
                                                ; implicit exception: dispatches to 0x00007fb547d930f4
  0x00007fb547d92fa2: cmp    %edi,%eax
  0x00007fb547d92fa4: movabs $0x7fb52ceed800,%rdi  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d92fae: movabs $0x200,%rbx
  0x00007fb547d92fb8: jne    0x00007fb547d92fc8
  0x00007fb547d92fbe: movabs $0x210,%rbx
  0x00007fb547d92fc8: mov    (%rdi,%rbx,1),%rdx
  0x00007fb547d92fcc: lea    0x1(%rdx),%rdx
  0x00007fb547d92fd0: mov    %rdx,(%rdi,%rbx,1)
  0x00007fb547d92fd4: jne    0x00007fb547d92fdf  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@48 (line 696)

  0x00007fb547d92fda: mov    $0x0,%eax
  0x00007fb547d92fdf: movabs $0x7fb52ceed800,%rdi  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d92fe9: mov    0x104(%rdi),%ebx
  0x00007fb547d92fef: add    $0x8,%ebx
  0x00007fb547d92ff2: mov    %ebx,0x104(%rdi)
  0x00007fb547d92ff8: and    $0xfff8,%ebx
  0x00007fb547d92ffe: cmp    $0x0,%ebx
  0x00007fb547d93001: je     0x00007fb547d930f9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 699)

  0x00007fb547d93007: mov    0x108(%r15),%r10   ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 699)

  0x00007fb547d9300e: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d93011: movabs $0x7fb52ceed800,%rdi  ;   {metadata(method data for {method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d9301b: incl   0x220(%rdi)
  0x00007fb547d93021: mov    %rax,%rdi
  0x00007fb547d93024: mov    0x58(%rsp),%rdx
  0x00007fb547d93029: mov    %rsi,0x50(%rsp)
  0x00007fb547d9302e: mov    %rdi,%rsi
  0x00007fb547d93031: mov    0x50(%rsp),%rdi
  0x00007fb547d93036: jmpq   0x00007fb547d92e40  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 699)

  0x00007fb547d9303b: mov    0x60(%rsp),%edi
  0x00007fb547d9303f: mov    %rdi,%rax
  0x00007fb547d93042: add    $0x70,%rsp
  0x00007fb547d93046: pop    %rbp
  0x00007fb547d93047: mov    0x108(%r15),%r10
  0x00007fb547d9304e: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d93051: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@38 (line 695)

  0x00007fb547d93052: mov    %rsi,%rdi
  0x00007fb547d93055: mov    %rdi,%rsi
  0x00007fb547d93058: neg    %esi
  0x00007fb547d9305a: mov    %rsi,%rax
  0x00007fb547d9305d: dec    %eax
  0x00007fb547d9305f: add    $0x70,%rsp
  0x00007fb547d93063: pop    %rbp
  0x00007fb547d93064: mov    0x108(%r15),%r10
  0x00007fb547d9306b: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9306e: retq   
  0x00007fb547d9306f: movabs $0x7fb52cebba10,%r10  ;   {metadata({method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d93079: mov    %r10,0x8(%rsp)
  0x00007fb547d9307e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d93086: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [80]=Oop rdx=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN::probe@-1 (line 689)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9308b: jmpq   0x00007fb547d92c5e
  0x00007fb547d93090: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop [88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 689)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d93095: callq  0x00007fb5478f3020  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@8 (line 689)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9309a: movabs $0x7fb52ce2e560,%r10  ;   {metadata({method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d930a4: mov    %r10,0x8(%rsp)
  0x00007fb547d930a9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d930b1: callq  0x00007fb5478f8100  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1 (line 1280)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d930b6: jmpq   0x00007fb547d92d60
  0x00007fb547d930bb: movabs $0x7fb52ce2e308,%r10  ;   {metadata({method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d930c5: mov    %r10,0x8(%rsp)
  0x00007fb547d930ca: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d930d2: callq  0x00007fb5478f8100  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d930d7: jmpq   0x00007fb547d92d9a
  0x00007fb547d930dc: callq  0x00007fb5478ee6a0  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00007fb547d930e1: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 691)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d930e6: mov    %rsi,(%rsp)
  0x00007fb547d930ea: mov    %rbx,0x8(%rsp)
  0x00007fb547d930ef: callq  0x00007fb5478eeca0  ; ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 691)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547d930f4: callq  0x00007fb5478f3020  ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@47 (line 696)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d930f9: movabs $0x7fb52cebba10,%r10  ;   {metadata({method} {0x00007fb52cebba10} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d93103: mov    %r10,0x8(%rsp)
  0x00007fb547d93108: movq   $0x35,(%rsp)
  0x00007fb547d93110: callq  0x00007fb5478f8100  ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 699)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d93115: jmpq   0x00007fb547d93007
  0x00007fb547d9311a: nop
  0x00007fb547d9311b: nop
  0x00007fb547d9311c: mov    0x440(%r15),%rax
  0x00007fb547d93123: movabs $0x0,%r10
  0x00007fb547d9312d: mov    %r10,0x440(%r15)
  0x00007fb547d93134: movabs $0x0,%r10
  0x00007fb547d9313e: mov    %r10,0x448(%r15)
  0x00007fb547d93145: add    $0x70,%rsp
  0x00007fb547d93149: pop    %rbp
  0x00007fb547d9314a: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9314f: hlt    
  0x00007fb547d93150: hlt    
  0x00007fb547d93151: hlt    
  0x00007fb547d93152: hlt    
  0x00007fb547d93153: hlt    
  0x00007fb547d93154: hlt    
  0x00007fb547d93155: hlt    
  0x00007fb547d93156: hlt    
  0x00007fb547d93157: hlt    
  0x00007fb547d93158: hlt    
  0x00007fb547d93159: hlt    
  0x00007fb547d9315a: hlt    
  0x00007fb547d9315b: hlt    
  0x00007fb547d9315c: hlt    
  0x00007fb547d9315d: hlt    
  0x00007fb547d9315e: hlt    
  0x00007fb547d9315f: hlt    
[Stub Code]
  0x00007fb547d93160: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d93165: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9316f: jmpq   0x00007fb547d9316f  ;   {runtime_call}
  0x00007fb547d93174: nop
  0x00007fb547d93175: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9317f: jmpq   0x00007fb547d9317f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d93184: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d93189: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d93193: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d93197: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9319c: hlt    
[Deopt Handler Code]
  0x00007fb547d9319d: movabs $0x7fb547d9319d,%r10  ;   {section_word}
  0x00007fb547d931a7: push   %r10
  0x00007fb547d931a9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d931ae: hlt    
  0x00007fb547d931af: hlt    

ImmutableOopMap{[80]=Oop [88]=Oop }pc offsets: 276 
ImmutableOopMap{[88]=Oop [80]=Oop }pc offsets: 852 
ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }pc offsets: 1038 
ImmutableOopMap{rsi=Oop [80]=Oop rdx=Oop [88]=Oop }pc offsets: 1163 
ImmutableOopMap{rdx=Oop [88]=Oop [80]=Oop }pc offsets: 1173 
ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }pc offsets: 1178 1206 1239 1249 
ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }pc offsets: 1254 1268 
ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }pc offsets: 1273 1301 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='11' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='384' iicount='384' level='3' stamp='0.433' comment='tiered' hot_count='384'/>
<writer thread='1329935'/>
Decoding RuntimeStub - _rethrow_Java 0x00007fb5478fbf90
  0x00007fb5478fc000: sub    $0x18,%rsp
  0x00007fb5478fc007: mov    %rbp,0x10(%rsp)
  0x00007fb5478fc00c: rex.W pushq 0x18(%rsp)
  0x00007fb5478fc011: rex.W popq (%rsp)
  0x00007fb5478fc015: mov    %rsp,0x328(%r15)
  0x00007fb5478fc01c: mov    %rsi,%rdi
  0x00007fb5478fc01f: mov    %r15,%rsi
  0x00007fb5478fc022: mov    (%rsp),%rdx
  0x00007fb5478fc026: movabs $0x7fb5651338c0,%r10
  0x00007fb5478fc030: callq  *%r10
  0x00007fb5478fc033: mov    %rax,%r11
  0x00007fb5478fc036: movq   $0x0,0x328(%r15)
  0x00007fb5478fc041: movq   $0x0,0x330(%r15)
  0x00007fb5478fc04c: mov    0x388(%r15),%rax
  0x00007fb5478fc053: movq   $0x0,0x388(%r15)
  0x00007fb5478fc05e: mov    0x8(%r15),%r10
  0x00007fb5478fc062: test   %r10,%r10
  0x00007fb5478fc065: jne    0x00007fb5478fc070
  0x00007fb5478fc067: add    $0x10,%rsp
  0x00007fb5478fc06b: pop    %rbp
  0x00007fb5478fc06c: pop    %rdx
  0x00007fb5478fc06d: jmpq   *%r11
  0x00007fb5478fc070: xor    %ebx,%ebx
  0x00007fb5478fc072: movabs $0x7fb547800c00,%r10
  0x00007fb5478fc07c: add    $0x10,%rsp
  0x00007fb5478fc080: pop    %rbp
  0x00007fb5478fc081: jmpq   *%r10
  0x00007fb5478fc084: hlt    
  0x00007fb5478fc085: hlt    
  0x00007fb5478fc086: hlt    
  0x00007fb5478fc087: hlt    

<writer thread='1329936'/>
<nmethod compile_id='9' compiler='c1' level='3' entry='0x00007fb547d93740' size='904' address='0x00007fb547d93590' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' metadata_offset='736' method='java.lang.String coder ()B' bytes='15' count='912' iicount='912' stamp='0.433'/>
<print_nmethod stamp='0.433'>
Compiled method (c1)     433    9       3       java.lang.String::coder (15 bytes)
 total in heap  [0x00007fb547d93590,0x00007fb547d93918] = 904
 relocation     [0x00007fb547d93708,0x00007fb547d93730] = 40
 main code      [0x00007fb547d93740,0x00007fb547d93840] = 256
 stub code      [0x00007fb547d93840,0x00007fb547d93870] = 48
 metadata       [0x00007fb547d93870,0x00007fb547d93878] = 8
 scopes data    [0x00007fb547d93878,0x00007fb547d938a0] = 40
 scopes pcs     [0x00007fb547d938a0,0x00007fb547d93910] = 112
 dependencies   [0x00007fb547d93910,0x00007fb547d93918] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x00007fb547d93740, 0x00007fb547d93870]  304 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d93740: mov    0x8(%rsi),%r10d
  0x00007fb547d93744: movabs $0x800000000,%r12
  0x00007fb547d9374e: add    %r12,%r10
  0x00007fb547d93751: xor    %r12,%r12
  0x00007fb547d93754: cmp    %rax,%r10
  0x00007fb547d93757: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9375d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d93760: mov    %eax,-0x14000(%rsp)
  0x00007fb547d93767: push   %rbp
  0x00007fb547d93768: sub    $0x30,%rsp
  0x00007fb547d9376c: movabs $0x7fb52ceed278,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d93776: mov    0x100(%rax),%edi
  0x00007fb547d9377c: add    $0x8,%edi
  0x00007fb547d9377f: mov    %edi,0x100(%rax)
  0x00007fb547d93785: and    $0x1ff8,%edi
  0x00007fb547d9378b: cmp    $0x0,%edi
  0x00007fb547d9378e: je     0x00007fb547d937ce  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@0 (line 3258)

  0x00007fb547d93794: movabs $0x7fb52ceed278,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9379e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)

  0x00007fb547d937a4: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)

  0x00007fb547d937a8: movabs $0x7fb52ceed278,%rsi  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d937b2: incl   0x160(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)

  0x00007fb547d937b8: shl    $0x18,%eax
  0x00007fb547d937bb: sar    $0x18,%eax
  0x00007fb547d937be: add    $0x30,%rsp
  0x00007fb547d937c2: pop    %rbp
  0x00007fb547d937c3: mov    0x108(%r15),%r10
  0x00007fb547d937ca: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d937cd: retq   
  0x00007fb547d937ce: movabs $0x7fb52ccb91a0,%r10  ;   {metadata({method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d937d8: mov    %r10,0x8(%rsp)
  0x00007fb547d937dd: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d937e5: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d937ea: jmp    0x00007fb547d93794
  0x00007fb547d937ec: nop
  0x00007fb547d937ed: nop
  0x00007fb547d937ee: mov    0x440(%r15),%rax
  0x00007fb547d937f5: movabs $0x0,%r10
  0x00007fb547d937ff: mov    %r10,0x440(%r15)
  0x00007fb547d93806: movabs $0x0,%r10
  0x00007fb547d93810: mov    %r10,0x448(%r15)
  0x00007fb547d93817: add    $0x30,%rsp
  0x00007fb547d9381b: pop    %rbp
  0x00007fb547d9381c: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d93821: hlt    
  0x00007fb547d93822: hlt    
  0x00007fb547d93823: hlt    
  0x00007fb547d93824: hlt    
  0x00007fb547d93825: hlt    
  0x00007fb547d93826: hlt    
  0x00007fb547d93827: hlt    
  0x00007fb547d93828: hlt    
  0x00007fb547d93829: hlt    
  0x00007fb547d9382a: hlt    
  0x00007fb547d9382b: hlt    
  0x00007fb547d9382c: hlt    
  0x00007fb547d9382d: hlt    
  0x00007fb547d9382e: hlt    
  0x00007fb547d9382f: hlt    
  0x00007fb547d93830: hlt    
  0x00007fb547d93831: hlt    
  0x00007fb547d93832: hlt    
  0x00007fb547d93833: hlt    
  0x00007fb547d93834: hlt    
  0x00007fb547d93835: hlt    
  0x00007fb547d93836: hlt    
  0x00007fb547d93837: hlt    
  0x00007fb547d93838: hlt    
  0x00007fb547d93839: hlt    
  0x00007fb547d9383a: hlt    
  0x00007fb547d9383b: hlt    
  0x00007fb547d9383c: hlt    
  0x00007fb547d9383d: hlt    
  0x00007fb547d9383e: hlt    
  0x00007fb547d9383f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d93840: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d93845: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9384f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d93853: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d93858: hlt    
[Deopt Handler Code]
  0x00007fb547d93859: movabs $0x7fb547d93859,%r10  ;   {section_word}
  0x00007fb547d93863: push   %r10
  0x00007fb547d93865: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9386a: hlt    
  0x00007fb547d9386b: hlt    
  0x00007fb547d9386c: hlt    
  0x00007fb547d9386d: hlt    
  0x00007fb547d9386e: hlt    
  0x00007fb547d9386f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 170 </print_nmethod>
<writer thread='1329923'/>
Decoding VtableStub vtbl[3]@12
  0x00007fb5478fc310: mov    0x8(%rsi),%eax
  0x00007fb5478fc313: movabs $0x800000000,%r12
  0x00007fb5478fc31d: add    %r12,%rax
  0x00007fb5478fc320: xor    %r12,%r12
  0x00007fb5478fc323: mov    0x1e8(%rax),%rbx
  0x00007fb5478fc32a: jmpq   *0x38(%rbx)
  0x00007fb5478fc32d: .byte 0x0
<writer thread='1329935'/>
Decoding RuntimeStub - _slow_arraycopy_Java 0x00007fb5478fcd90
  0x00007fb5478fce00: sub    $0x8,%rsp
  0x00007fb5478fce07: mov    %rbp,(%rsp)
  0x00007fb5478fce0b: mov    %rsp,0x328(%r15)
  0x00007fb5478fce12: mov    %rsi,%rdi
  0x00007fb5478fce15: mov    %edx,%esi
  0x00007fb5478fce17: mov    %rcx,%rdx
  0x00007fb5478fce1a: mov    %r8d,%ecx
  0x00007fb5478fce1d: mov    %r9d,%r8d
  0x00007fb5478fce20: mov    %r15,%r9
  0x00007fb5478fce23: movabs $0x7fb56514fdd0,%r10
  0x00007fb5478fce2d: callq  *%r10
  0x00007fb5478fce30: movq   $0x0,0x328(%r15)
  0x00007fb5478fce3b: movq   $0x0,0x330(%r15)
  0x00007fb5478fce46: mov    0x8(%r15),%r10
  0x00007fb5478fce4a: test   %r10,%r10
  0x00007fb5478fce4d: jne    0x00007fb5478fce51
  0x00007fb5478fce4f: pop    %rbp
  0x00007fb5478fce50: retq   
  0x00007fb5478fce51: xor    %ebx,%ebx
  0x00007fb5478fce53: movabs $0x7fb547800c00,%r10
  0x00007fb5478fce5d: pop    %rbp
  0x00007fb5478fce5e: jmpq   *%r10
  0x00007fb5478fce61: hlt    
  0x00007fb5478fce62: hlt    
  0x00007fb5478fce63: hlt    
  0x00007fb5478fce64: hlt    
  0x00007fb5478fce65: hlt    
  0x00007fb5478fce66: hlt    
  0x00007fb5478fce67: hlt    

<writer thread='1329936'/>
<nmethod compile_id='7' compiler='c1' level='3' entry='0x00007fb547d93b40' size='1200' address='0x00007fb547d93990' relocation_offset='376' insts_offset='432' stub_offset='880' scopes_data_offset='944' scopes_pcs_offset='1032' dependencies_offset='1176' nul_chk_table_offset='1184' metadata_offset='928' method='java.lang.Math floorMod (II)I' bytes='10' count='829' iicount='829' stamp='0.434'/>
<print_nmethod stamp='0.434'>
Compiled method (c1)     434    7       3       java.lang.Math::floorMod (10 bytes)
 total in heap  [0x00007fb547d93990,0x00007fb547d93e40] = 1200
 relocation     [0x00007fb547d93b08,0x00007fb547d93b38] = 48
 main code      [0x00007fb547d93b40,0x00007fb547d93d00] = 448
 stub code      [0x00007fb547d93d00,0x00007fb547d93d30] = 48
 metadata       [0x00007fb547d93d30,0x00007fb547d93d40] = 16
 scopes data    [0x00007fb547d93d40,0x00007fb547d93d98] = 88
 scopes pcs     [0x00007fb547d93d98,0x00007fb547d93e28] = 144
 dependencies   [0x00007fb547d93e28,0x00007fb547d93e30] = 8
 nul chk table  [0x00007fb547d93e30,0x00007fb547d93e40] = 16
----------------------------------------------------------------------
java/lang/Math.floorMod(II)I  [0x00007fb547d93b40, 0x00007fb547d93d30]  496 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fb547d93b40: mov    %eax,-0x14000(%rsp)
  0x00007fb547d93b47: push   %rbp
  0x00007fb547d93b48: sub    $0x40,%rsp
  0x00007fb547d93b4c: mov    %rdx,%rdi
  0x00007fb547d93b4f: movabs $0x7fb52ceed4c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d93b59: mov    0x100(%rax),%edx
  0x00007fb547d93b5f: add    $0x8,%edx
  0x00007fb547d93b62: mov    %edx,0x100(%rax)
  0x00007fb547d93b68: and    $0x1ff8,%edx
  0x00007fb547d93b6e: cmp    $0x0,%edx
  0x00007fb547d93b71: je     0x00007fb547d93c65  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorMod@0 (line 1280)

  0x00007fb547d93b77: movabs $0x7fb52ceed4c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d93b81: addq   $0x1,0x140(%rax)
  0x00007fb547d93b89: movabs $0x7fb52ceed658,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d93b93: mov    0x100(%rax),%edx
  0x00007fb547d93b99: add    $0x8,%edx
  0x00007fb547d93b9c: mov    %edx,0x100(%rax)
  0x00007fb547d93ba2: and    $0x7ffff8,%edx
  0x00007fb547d93ba8: cmp    $0x0,%edx
  0x00007fb547d93bab: je     0x00007fb547d93c86
  0x00007fb547d93bb1: mov    %rsi,%rax
  0x00007fb547d93bb4: cmp    $0x80000000,%eax
  0x00007fb547d93bba: jne    0x00007fb547d93bcb
  0x00007fb547d93bc0: xor    %edx,%edx
  0x00007fb547d93bc2: cmp    $0xffffffff,%edi
  0x00007fb547d93bc5: je     0x00007fb547d93bce
  0x00007fb547d93bcb: cltd   
  0x00007fb547d93bcc: idiv   %edi               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; implicit exception: dispatches to 0x00007fb547d93ca7
  0x00007fb547d93bce: mov    %rdi,%rbx
  0x00007fb547d93bd1: xor    %rsi,%rbx
  0x00007fb547d93bd4: cmp    $0x0,%ebx
  0x00007fb547d93bd7: movabs $0x7fb52ceed658,%rbx  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d93be1: movabs $0x140,%rdx
  0x00007fb547d93beb: jge    0x00007fb547d93bfb
  0x00007fb547d93bf1: movabs $0x150,%rdx
  0x00007fb547d93bfb: mov    (%rbx,%rdx,1),%rcx
  0x00007fb547d93bff: lea    0x1(%rcx),%rcx
  0x00007fb547d93c03: mov    %rcx,(%rbx,%rdx,1)
  0x00007fb547d93c07: jge    0x00007fb547d93c4d  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1166)
                                                ; - java.lang.Math::floorMod@3 (line 1280)

  0x00007fb547d93c0d: mov    %rax,%rbx
  0x00007fb547d93c10: imul   %edi,%ebx
  0x00007fb547d93c13: cmp    %esi,%ebx
  0x00007fb547d93c15: movabs $0x7fb52ceed658,%rbx  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d93c1f: movabs $0x160,%rdx
  0x00007fb547d93c29: je     0x00007fb547d93c39
  0x00007fb547d93c2f: movabs $0x170,%rdx
  0x00007fb547d93c39: mov    (%rbx,%rdx,1),%rcx
  0x00007fb547d93c3d: lea    0x1(%rcx),%rcx
  0x00007fb547d93c41: mov    %rcx,(%rbx,%rdx,1)
  0x00007fb547d93c45: je     0x00007fb547d93c4d  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1166)
                                                ; - java.lang.Math::floorMod@3 (line 1280)

  0x00007fb547d93c4b: dec    %eax
  0x00007fb547d93c4d: imul   %edi,%eax
  0x00007fb547d93c50: sub    %eax,%esi
  0x00007fb547d93c52: mov    %rsi,%rax
  0x00007fb547d93c55: add    $0x40,%rsp
  0x00007fb547d93c59: pop    %rbp
  0x00007fb547d93c5a: mov    0x108(%r15),%r10
  0x00007fb547d93c61: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d93c64: retq   
  0x00007fb547d93c65: movabs $0x7fb52ce2e560,%r10  ;   {metadata({method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d93c6f: mov    %r10,0x8(%rsp)
  0x00007fb547d93c74: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d93c7c: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1 (line 1280)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d93c81: jmpq   0x00007fb547d93b77
  0x00007fb547d93c86: movabs $0x7fb52ce2e308,%r10  ;   {metadata({method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d93c90: mov    %r10,0x8(%rsp)
  0x00007fb547d93c95: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d93c9d: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d93ca2: jmpq   0x00007fb547d93bb1
  0x00007fb547d93ca7: callq  0x00007fb5478ee6a0  ; ImmutableOopMap{}
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00007fb547d93cac: nop
  0x00007fb547d93cad: nop
  0x00007fb547d93cae: mov    0x440(%r15),%rax
  0x00007fb547d93cb5: movabs $0x0,%r10
  0x00007fb547d93cbf: mov    %r10,0x440(%r15)
  0x00007fb547d93cc6: movabs $0x0,%r10
  0x00007fb547d93cd0: mov    %r10,0x448(%r15)
  0x00007fb547d93cd7: add    $0x40,%rsp
  0x00007fb547d93cdb: pop    %rbp
  0x00007fb547d93cdc: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d93ce1: hlt    
  0x00007fb547d93ce2: hlt    
  0x00007fb547d93ce3: hlt    
  0x00007fb547d93ce4: hlt    
  0x00007fb547d93ce5: hlt    
  0x00007fb547d93ce6: hlt    
  0x00007fb547d93ce7: hlt    
  0x00007fb547d93ce8: hlt    
  0x00007fb547d93ce9: hlt    
  0x00007fb547d93cea: hlt    
  0x00007fb547d93ceb: hlt    
  0x00007fb547d93cec: hlt    
  0x00007fb547d93ced: hlt    
  0x00007fb547d93cee: hlt    
  0x00007fb547d93cef: hlt    
  0x00007fb547d93cf0: hlt    
  0x00007fb547d93cf1: hlt    
  0x00007fb547d93cf2: hlt    
  0x00007fb547d93cf3: hlt    
  0x00007fb547d93cf4: hlt    
  0x00007fb547d93cf5: hlt    
  0x00007fb547d93cf6: hlt    
  0x00007fb547d93cf7: hlt    
  0x00007fb547d93cf8: hlt    
  0x00007fb547d93cf9: hlt    
  0x00007fb547d93cfa: hlt    
  0x00007fb547d93cfb: hlt    
  0x00007fb547d93cfc: hlt    
  0x00007fb547d93cfd: hlt    
  0x00007fb547d93cfe: hlt    
  0x00007fb547d93cff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d93d00: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d93d05: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d93d0f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d93d13: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d93d18: hlt    
[Deopt Handler Code]
  0x00007fb547d93d19: movabs $0x7fb547d93d19,%r10  ;   {section_word}
  0x00007fb547d93d23: push   %r10
  0x00007fb547d93d25: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d93d2a: hlt    
  0x00007fb547d93d2b: hlt    
  0x00007fb547d93d2c: hlt    
  0x00007fb547d93d2d: hlt    
  0x00007fb547d93d2e: hlt    
  0x00007fb547d93d2f: hlt    

ImmutableOopMap{}pc offsets: 321 354 364 </print_nmethod>
<writer thread='1329923'/>
Decoding VtableStub vtbl[1]@12
  0x00007fb5478fc360: mov    0x8(%rsi),%eax
  0x00007fb5478fc363: movabs $0x800000000,%r12
  0x00007fb5478fc36d: add    %r12,%rax
  0x00007fb5478fc370: xor    %r12,%r12
  0x00007fb5478fc373: mov    0x1d8(%rax),%rbx
  0x00007fb5478fc37a: jmpq   *0x38(%rbx)
  0x00007fb5478fc37d: .byte 0x0
<writer thread='1329935'/>
Decoding RuntimeStub - _register_finalizer_Java 0x00007fb5478fd090
  0x00007fb5478fd100: sub    $0x8,%rsp
  0x00007fb5478fd107: mov    %rbp,(%rsp)
  0x00007fb5478fd10b: mov    %rsp,0x328(%r15)
  0x00007fb5478fd112: mov    %rsi,%rdi
  0x00007fb5478fd115: mov    %r15,%rsi
  0x00007fb5478fd118: movabs $0x7fb565133b60,%r10
  0x00007fb5478fd122: callq  *%r10
  0x00007fb5478fd125: movq   $0x0,0x328(%r15)
  0x00007fb5478fd130: movq   $0x0,0x330(%r15)
  0x00007fb5478fd13b: mov    0x8(%r15),%r10
  0x00007fb5478fd13f: test   %r10,%r10
  0x00007fb5478fd142: jne    0x00007fb5478fd146
  0x00007fb5478fd144: pop    %rbp
  0x00007fb5478fd145: retq   
  0x00007fb5478fd146: xor    %ebx,%ebx
  0x00007fb5478fd148: movabs $0x7fb547800c00,%r10
  0x00007fb5478fd152: pop    %rbp
  0x00007fb5478fd153: jmpq   *%r10
  0x00007fb5478fd156: hlt    
  0x00007fb5478fd157: hlt    

<writer thread='1329923'/>
<task_queued compile_id='12' method='java.util.ImmutableCollections$SetN hashCode ()I' bytes='46' count='384' backedge_count='186' iicount='384' level='3' stamp='0.438' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='11' compiler='c1' level='3' entry='0x00007fb547d940a0' size='3032' address='0x00007fb547d93e90' relocation_offset='376' insts_offset='528' stub_offset='2064' scopes_data_offset='2168' scopes_pcs_offset='2448' dependencies_offset='3008' nul_chk_table_offset='3016' metadata_offset='2144' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='494' iicount='495' stamp='0.438'/>
<print_nmethod stamp='0.438'>
Compiled method (c1)     437   11       3       java.lang.String::equals (65 bytes)
 total in heap  [0x00007fb547d93e90,0x00007fb547d94a68] = 3032
 relocation     [0x00007fb547d94008,0x00007fb547d94090] = 136
 main code      [0x00007fb547d940a0,0x00007fb547d946a0] = 1536
 stub code      [0x00007fb547d946a0,0x00007fb547d946f0] = 80
 metadata       [0x00007fb547d946f0,0x00007fb547d94708] = 24
 scopes data    [0x00007fb547d94708,0x00007fb547d94820] = 280
 scopes pcs     [0x00007fb547d94820,0x00007fb547d94a50] = 560
 dependencies   [0x00007fb547d94a50,0x00007fb547d94a58] = 8
 nul chk table  [0x00007fb547d94a58,0x00007fb547d94a68] = 16
----------------------------------------------------------------------
java/lang/String.equals(Ljava/lang/Object;)Z  [0x00007fb547d940a0, 0x00007fb547d946f0]  1616 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d940a0: mov    0x8(%rsi),%r10d
  0x00007fb547d940a4: movabs $0x800000000,%r12
  0x00007fb547d940ae: add    %r12,%r10
  0x00007fb547d940b1: xor    %r12,%r12
  0x00007fb547d940b4: cmp    %rax,%r10
  0x00007fb547d940b7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d940bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d940c0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d940c7: push   %rbp
  0x00007fb547d940c8: sub    $0x30,%rsp
  0x00007fb547d940cc: movabs $0x7fb52ceeeef8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d940d6: mov    0x100(%rdi),%ebx
  0x00007fb547d940dc: add    $0x8,%ebx
  0x00007fb547d940df: mov    %ebx,0x100(%rdi)
  0x00007fb547d940e5: and    $0x1ff8,%ebx
  0x00007fb547d940eb: cmp    $0x0,%ebx
  0x00007fb547d940ee: je     0x00007fb547d945d9  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@0 (line 1003)

  0x00007fb547d940f4: cmp    %rdx,%rsi
  0x00007fb547d940f7: movabs $0x7fb52ceeeef8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94101: movabs $0x150,%rbx
  0x00007fb547d9410b: je     0x00007fb547d9411b
  0x00007fb547d94111: movabs $0x140,%rbx
  0x00007fb547d9411b: mov    (%rdi,%rbx,1),%rax
  0x00007fb547d9411f: lea    0x1(%rax),%rax
  0x00007fb547d94123: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547d94127: je     0x00007fb547d945c4  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2 (line 1003)

  0x00007fb547d9412d: cmp    $0x0,%rdx
  0x00007fb547d94131: jne    0x00007fb547d94149
  0x00007fb547d94133: movabs $0x7fb52ceeeef8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9413d: orb    $0x1,0x159(%rax)
  0x00007fb547d94144: jmpq   0x00007fb547d94221
  0x00007fb547d94149: movabs $0x800001808,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fb547d94153: mov    0x8(%rdx),%ebx
  0x00007fb547d94156: movabs $0x800000000,%r12
  0x00007fb547d94160: add    %r12,%rbx
  0x00007fb547d94163: xor    %r12,%r12
  0x00007fb547d94166: cmp    %rbx,%rcx
  0x00007fb547d94169: jne    0x00007fb547d94205
  0x00007fb547d9416f: movabs $0x7fb52ceeeef8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94179: mov    0x8(%rdx),%ecx
  0x00007fb547d9417c: movabs $0x800000000,%r12
  0x00007fb547d94186: add    %r12,%rcx
  0x00007fb547d94189: xor    %r12,%r12
  0x00007fb547d9418c: cmp    0x170(%rax),%rcx
  0x00007fb547d94193: jne    0x00007fb547d941a2
  0x00007fb547d94195: addq   $0x1,0x178(%rax)
  0x00007fb547d9419d: jmpq   0x00007fb547d94226
  0x00007fb547d941a2: cmp    0x180(%rax),%rcx
  0x00007fb547d941a9: jne    0x00007fb547d941b8
  0x00007fb547d941ab: addq   $0x1,0x188(%rax)
  0x00007fb547d941b3: jmpq   0x00007fb547d94226
  0x00007fb547d941b8: cmpq   $0x0,0x170(%rax)
  0x00007fb547d941c3: jne    0x00007fb547d941dc
  0x00007fb547d941c5: mov    %rcx,0x170(%rax)
  0x00007fb547d941cc: movq   $0x1,0x178(%rax)
  0x00007fb547d941d7: jmpq   0x00007fb547d94226
  0x00007fb547d941dc: cmpq   $0x0,0x180(%rax)
  0x00007fb547d941e7: jne    0x00007fb547d94200
  0x00007fb547d941e9: mov    %rcx,0x180(%rax)
  0x00007fb547d941f0: movq   $0x1,0x188(%rax)
  0x00007fb547d941fb: jmpq   0x00007fb547d94226
  0x00007fb547d94200: jmpq   0x00007fb547d94226
  0x00007fb547d94205: movabs $0x7fb52ceeeef8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9420f: subq   $0x1,0x160(%rax)
  0x00007fb547d94217: jmpq   0x00007fb547d94221
  0x00007fb547d9421c: jmpq   0x00007fb547d94226
  0x00007fb547d94221: xor    %rdi,%rdi
  0x00007fb547d94224: jmp    0x00007fb547d94230
  0x00007fb547d94226: movabs $0x1,%rdi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8 (line 1006)

  0x00007fb547d94230: cmp    $0x0,%edi
  0x00007fb547d94233: movabs $0x7fb52ceeeef8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9423d: movabs $0x198,%rbx
  0x00007fb547d94247: je     0x00007fb547d94257
  0x00007fb547d9424d: movabs $0x1a8,%rbx
  0x00007fb547d94257: mov    (%rdi,%rbx,1),%rax
  0x00007fb547d9425b: lea    0x1(%rax),%rax
  0x00007fb547d9425f: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547d94263: je     0x00007fb547d945af  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@11 (line 1006)

  0x00007fb547d94269: cmp    $0x0,%rdx
  0x00007fb547d9426d: jne    0x00007fb547d94285
  0x00007fb547d9426f: movabs $0x7fb52ceeeef8,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94279: orb    $0x1,0x1b1(%rbx)
  0x00007fb547d94280: jmpq   0x00007fb547d9435d
  0x00007fb547d94285: movabs $0x800001808,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007fb547d9428f: mov    0x8(%rdx),%edi
  0x00007fb547d94292: movabs $0x800000000,%r12
  0x00007fb547d9429c: add    %r12,%rdi
  0x00007fb547d9429f: xor    %r12,%r12
  0x00007fb547d942a2: cmp    %rdi,%rax
  0x00007fb547d942a5: jne    0x00007fb547d94341
  0x00007fb547d942ab: movabs $0x7fb52ceeeef8,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d942b5: mov    0x8(%rdx),%eax
  0x00007fb547d942b8: movabs $0x800000000,%r12
  0x00007fb547d942c2: add    %r12,%rax
  0x00007fb547d942c5: xor    %r12,%r12
  0x00007fb547d942c8: cmp    0x1c8(%rbx),%rax
  0x00007fb547d942cf: jne    0x00007fb547d942de
  0x00007fb547d942d1: addq   $0x1,0x1d0(%rbx)
  0x00007fb547d942d9: jmpq   0x00007fb547d9435d
  0x00007fb547d942de: cmp    0x1d8(%rbx),%rax
  0x00007fb547d942e5: jne    0x00007fb547d942f4
  0x00007fb547d942e7: addq   $0x1,0x1e0(%rbx)
  0x00007fb547d942ef: jmpq   0x00007fb547d9435d
  0x00007fb547d942f4: cmpq   $0x0,0x1c8(%rbx)
  0x00007fb547d942ff: jne    0x00007fb547d94318
  0x00007fb547d94301: mov    %rax,0x1c8(%rbx)
  0x00007fb547d94308: movq   $0x1,0x1d0(%rbx)
  0x00007fb547d94313: jmpq   0x00007fb547d9435d
  0x00007fb547d94318: cmpq   $0x0,0x1d8(%rbx)
  0x00007fb547d94323: jne    0x00007fb547d9433c
  0x00007fb547d94325: mov    %rax,0x1d8(%rbx)
  0x00007fb547d9432c: movq   $0x1,0x1e0(%rbx)
  0x00007fb547d94337: jmpq   0x00007fb547d9435d
  0x00007fb547d9433c: jmpq   0x00007fb547d9435d
  0x00007fb547d94341: movabs $0x7fb52ceeeef8,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9434b: subq   $0x1,0x1b8(%rbx)
  0x00007fb547d94353: jmpq   0x00007fb547d945fa
  0x00007fb547d94358: jmpq   0x00007fb547d9435d
  0x00007fb547d9435d: mov    %rdx,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)

  0x00007fb547d94360: mov    %rsi,%rdx
  0x00007fb547d94363: movabs $0x7fb52ceeeef8,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9436d: addq   $0x1,0x1f0(%rbx)
  0x00007fb547d94375: movabs $0x7fb52ceed278,%rdx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9437f: mov    0x100(%rdx),%ebx
  0x00007fb547d94385: add    $0x8,%ebx
  0x00007fb547d94388: mov    %ebx,0x100(%rdx)
  0x00007fb547d9438e: and    $0x7ffff8,%ebx
  0x00007fb547d94394: cmp    $0x0,%ebx
  0x00007fb547d94397: je     0x00007fb547d94603
  0x00007fb547d9439d: movabs $0x7fb52ceed278,%rdx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d943a7: incl   0x150(%rdx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x00007fb547d943ad: movsbl 0x14(%rsi),%edx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x00007fb547d943b1: movabs $0x7fb52ceed278,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d943bb: incl   0x160(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x00007fb547d943c1: mov    %rdx,%rbx
  0x00007fb547d943c4: shl    $0x18,%ebx
  0x00007fb547d943c7: sar    $0x18,%ebx
  0x00007fb547d943ca: cmp    (%rdi),%rax        ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ; implicit exception: dispatches to 0x00007fb547d94624
  0x00007fb547d943cd: mov    %rdi,%rax
  0x00007fb547d943d0: movabs $0x7fb52ceeeef8,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d943da: addq   $0x1,0x228(%rcx)
  0x00007fb547d943e2: movabs $0x7fb52ceed278,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d943ec: mov    0x100(%rax),%ecx
  0x00007fb547d943f2: add    $0x8,%ecx
  0x00007fb547d943f5: mov    %ecx,0x100(%rax)
  0x00007fb547d943fb: and    $0x7ffff8,%ecx
  0x00007fb547d94401: cmp    $0x0,%ecx
  0x00007fb547d94404: je     0x00007fb547d94629
  0x00007fb547d9440a: movabs $0x7fb52ceed278,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94414: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x00007fb547d9441a: movsbl 0x14(%rdi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x00007fb547d9441e: movabs $0x7fb52ceed278,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94428: incl   0x160(%rcx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x00007fb547d9442e: shl    $0x18,%eax
  0x00007fb547d94431: sar    $0x18,%eax
  0x00007fb547d94434: cmp    %eax,%ebx
  0x00007fb547d94436: movabs $0x7fb52ceeeef8,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94440: movabs $0x260,%rax
  0x00007fb547d9444a: jne    0x00007fb547d9445a
  0x00007fb547d94450: movabs $0x270,%rax
  0x00007fb547d9445a: mov    (%rbx,%rax,1),%rcx
  0x00007fb547d9445e: lea    0x1(%rcx),%rcx
  0x00007fb547d94462: mov    %rcx,(%rbx,%rax,1)
  0x00007fb547d94466: jne    0x00007fb547d945af  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)

  0x00007fb547d9446c: mov    %rsi,%rbx
  0x00007fb547d9446f: movabs $0x7fb52ceeeef8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94479: addq   $0x1,0x280(%rax)
  0x00007fb547d94481: movabs $0x7fb52cedd9b8,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9448b: mov    0x100(%rbx),%eax
  0x00007fb547d94491: add    $0x8,%eax
  0x00007fb547d94494: mov    %eax,0x100(%rbx)
  0x00007fb547d9449a: and    $0x7ffff8,%eax
  0x00007fb547d944a0: cmp    $0x0,%eax
  0x00007fb547d944a3: je     0x00007fb547d9464a
  0x00007fb547d944a9: movabs $0x7fb52cedd9b8,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d944b3: incl   0x150(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007fb547d944b9: cmp    $0x0,%edx
  0x00007fb547d944bc: movabs $0x7fb52cedd9b8,%rdx  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d944c6: movabs $0x160,%rbx
  0x00007fb547d944d0: jne    0x00007fb547d944e0
  0x00007fb547d944d6: movabs $0x170,%rbx
  0x00007fb547d944e0: mov    (%rdx,%rbx,1),%rax
  0x00007fb547d944e4: lea    0x1(%rax),%rax
  0x00007fb547d944e8: mov    %rax,(%rdx,%rbx,1)
  0x00007fb547d944ec: jne    0x00007fb547d9450c  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007fb547d944f2: movabs $0x7fb52cedd9b8,%rdx  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d944fc: incl   0x180(%rdx)
  0x00007fb547d94502: mov    $0x1,%edx
  0x00007fb547d94507: jmpq   0x00007fb547d94511  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007fb547d9450c: mov    $0x0,%edx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007fb547d94511: and    $0x1,%edx
  0x00007fb547d94514: cmp    $0x0,%edx
  0x00007fb547d94517: movabs $0x7fb52ceeeef8,%rdx  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94521: movabs $0x2b8,%rbx
  0x00007fb547d9452b: je     0x00007fb547d9453b
  0x00007fb547d94531: movabs $0x2c8,%rbx
  0x00007fb547d9453b: mov    (%rdx,%rbx,1),%rax
  0x00007fb547d9453f: lea    0x1(%rax),%rax
  0x00007fb547d94543: mov    %rax,(%rdx,%rbx,1)
  0x00007fb547d94547: je     0x00007fb547d94589  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@34 (line 1009)

  0x00007fb547d9454d: mov    0xc(%rsi),%esi
  0x00007fb547d94550: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38 (line 1009)

  0x00007fb547d94554: mov    0xc(%rdi),%edx
  0x00007fb547d94557: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42 (line 1009)

  0x00007fb547d9455b: movabs $0x7fb52ceeeef8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94565: addq   $0x1,0x2d8(%rdi)
  0x00007fb547d9456d: xchg   %ax,%ax
  0x00007fb547d9456f: callq  0x00007fb547d946a5  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45 (line 1009)
                                                ;   {static_call}
  0x00007fb547d94574: movabs $0x7fb52ceeeef8,%rsi  ;   {metadata(method data for {method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9457e: incl   0x2e8(%rsi)
  0x00007fb547d94584: jmpq   0x00007fb547d9459c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@48 (line 1009)

  0x00007fb547d94589: mov    0xc(%rsi),%esi
  0x00007fb547d9458c: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@52 (line 1010)

  0x00007fb547d94590: mov    0xc(%rdi),%edx
  0x00007fb547d94593: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@56 (line 1010)

  0x00007fb547d94597: callq  0x00007fb54784a780  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@59 (line 1010)
                                                ;   {static_call}
  0x00007fb547d9459c: and    $0x1,%eax
  0x00007fb547d9459f: add    $0x30,%rsp
  0x00007fb547d945a3: pop    %rbp
  0x00007fb547d945a4: mov    0x108(%r15),%r10
  0x00007fb547d945ab: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d945ae: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@62 (line 1009)

  0x00007fb547d945af: mov    $0x0,%eax
  0x00007fb547d945b4: add    $0x30,%rsp
  0x00007fb547d945b8: pop    %rbp
  0x00007fb547d945b9: mov    0x108(%r15),%r10
  0x00007fb547d945c0: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d945c3: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@64 (line 1013)

  0x00007fb547d945c4: mov    $0x1,%eax
  0x00007fb547d945c9: add    $0x30,%rsp
  0x00007fb547d945cd: pop    %rbp
  0x00007fb547d945ce: mov    0x108(%r15),%r10
  0x00007fb547d945d5: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d945d8: retq   
  0x00007fb547d945d9: movabs $0x7fb52ccb4e10,%r10  ;   {metadata({method} {0x00007fb52ccb4e10} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d945e3: mov    %r10,0x8(%rsp)
  0x00007fb547d945e8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d945f0: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 1003)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d945f5: jmpq   0x00007fb547d940f4
  0x00007fb547d945fa: mov    %rdx,(%rsp)
  0x00007fb547d945fe: callq  0x00007fb5478f5420  ; ImmutableOopMap{rsi=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547d94603: movabs $0x7fb52ccb91a0,%r10  ;   {metadata({method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9460d: mov    %r10,0x8(%rsp)
  0x00007fb547d94612: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9461a: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9461f: jmpq   0x00007fb547d9439d
  0x00007fb547d94624: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d94629: movabs $0x7fb52ccb91a0,%r10  ;   {metadata({method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94633: mov    %r10,0x8(%rsp)
  0x00007fb547d94638: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d94640: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d94645: jmpq   0x00007fb547d9440a
  0x00007fb547d9464a: movabs $0x7fb52ccb9300,%r10  ;   {metadata({method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d94654: mov    %r10,0x8(%rsp)
  0x00007fb547d94659: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d94661: callq  0x00007fb5478f8100  ; ImmutableOopMap{rdi=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d94666: jmpq   0x00007fb547d944a9
  0x00007fb547d9466b: nop
  0x00007fb547d9466c: nop
  0x00007fb547d9466d: mov    0x440(%r15),%rax
  0x00007fb547d94674: movabs $0x0,%r10
  0x00007fb547d9467e: mov    %r10,0x440(%r15)
  0x00007fb547d94685: movabs $0x0,%r10
  0x00007fb547d9468f: mov    %r10,0x448(%r15)
  0x00007fb547d94696: add    $0x30,%rsp
  0x00007fb547d9469a: pop    %rbp
  0x00007fb547d9469b: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x00007fb547d946a0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d946a5: movabs $0x7fb52ce08688,%rbx  ;   {static_stub}
  0x00007fb547d946af: jmpq   0x00007fb547842660  ;   {runtime_call I2C/C2I adapters}
  0x00007fb547d946b4: nop
  0x00007fb547d946b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d946bf: jmpq   0x00007fb547d946bf  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d946c4: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d946c9: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d946d3: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d946d7: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d946dc: hlt    
[Deopt Handler Code]
  0x00007fb547d946dd: movabs $0x7fb547d946dd,%r10  ;   {section_word}
  0x00007fb547d946e7: push   %r10
  0x00007fb547d946e9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d946ee: hlt    
  0x00007fb547d946ef: hlt    

ImmutableOopMap{}pc offsets: 1236 1276 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 1365 
ImmutableOopMap{rsi=Oop }pc offsets: 1379 
ImmutableOopMap{rsi=Oop rdi=Oop }pc offsets: 1407 1417 1445 
ImmutableOopMap{rdi=Oop rsi=Oop }pc offsets: 1478 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='13' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='754' backedge_count='18457' iicount='754' stamp='0.451' comment='tiered' hot_count='754'/>
<task_queued compile_id='14' method='java.util.ImmutableCollections emptySet ()Ljava/util/Set;' bytes='4' count='384' iicount='384' level='3' stamp='0.451' comment='tiered' hot_count='384'/>
<task_queued compile_id='15' method='java.util.Set of ()Ljava/util/Set;' bytes='4' count='384' iicount='384' level='3' stamp='0.451' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='12' compiler='c1' level='3' entry='0x00007fb547d94c60' size='1704' address='0x00007fb547d94a90' relocation_offset='376' insts_offset='464' stub_offset='1136' scopes_data_offset='1208' scopes_pcs_offset='1368' dependencies_offset='1672' nul_chk_table_offset='1680' metadata_offset='1200' method='java.util.ImmutableCollections$SetN hashCode ()I' bytes='46' count='501' backedge_count='212' iicount='501' stamp='0.451'/>
<print_nmethod stamp='0.451'>
Compiled method (c1)     451   12       3       java.util.ImmutableCollections$SetN::hashCode (46 bytes)
 total in heap  [0x00007fb547d94a90,0x00007fb547d95138] = 1704
 relocation     [0x00007fb547d94c08,0x00007fb547d94c50] = 72
 main code      [0x00007fb547d94c60,0x00007fb547d94f00] = 672
 stub code      [0x00007fb547d94f00,0x00007fb547d94f40] = 64
 metadata       [0x00007fb547d94f40,0x00007fb547d94f48] = 8
 scopes data    [0x00007fb547d94f48,0x00007fb547d94fe8] = 160
 scopes pcs     [0x00007fb547d94fe8,0x00007fb547d95118] = 304
 dependencies   [0x00007fb547d95118,0x00007fb547d95120] = 8
 nul chk table  [0x00007fb547d95120,0x00007fb547d95138] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.hashCode()I  [0x00007fb547d94c60, 0x00007fb547d94f40]  736 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb547d94c60: mov    0x8(%rsi),%r10d
  0x00007fb547d94c64: movabs $0x800000000,%r12
  0x00007fb547d94c6e: add    %r12,%r10
  0x00007fb547d94c71: xor    %r12,%r12
  0x00007fb547d94c74: cmp    %rax,%r10
  0x00007fb547d94c77: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d94c7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d94c80: mov    %eax,-0x14000(%rsp)
  0x00007fb547d94c87: push   %rbp
  0x00007fb547d94c88: sub    $0x40,%rsp
  0x00007fb547d94c8c: movabs $0x7fb52ceef440,%rdi  ;   {metadata(method data for {method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d94c96: mov    0x100(%rdi),%ebx
  0x00007fb547d94c9c: add    $0x8,%ebx
  0x00007fb547d94c9f: mov    %ebx,0x100(%rdi)
  0x00007fb547d94ca5: and    $0x1ff8,%ebx
  0x00007fb547d94cab: cmp    $0x0,%ebx
  0x00007fb547d94cae: je     0x00007fb547d94e77  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@0 (line 675)

  0x00007fb547d94cb4: mov    0x10(%rsi),%edi
  0x00007fb547d94cb7: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@3 (line 676)

  0x00007fb547d94cbb: mov    %rdi,0x28(%rsp)
  0x00007fb547d94cc0: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@8 (line 676)
                                                ; implicit exception: dispatches to 0x00007fb547d94e98
  0x00007fb547d94cc3: mov    %ebx,0x30(%rsp)
  0x00007fb547d94cc7: mov    $0x0,%eax
  0x00007fb547d94ccc: mov    $0x0,%edx
  0x00007fb547d94cd1: jmpq   0x00007fb547d94e2c  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@13 (line 676)

  0x00007fb547d94cd6: xchg   %ax,%ax
  0x00007fb547d94cd8: movslq %eax,%rsi
  0x00007fb547d94cdb: mov    0x10(%rdi,%rsi,4),%esi
  0x00007fb547d94cdf: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@22 (line 676)

  0x00007fb547d94ce3: cmp    $0x0,%rsi
  0x00007fb547d94ce7: movabs $0x7fb52ceef440,%rcx  ;   {metadata(method data for {method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d94cf1: movabs $0x160,%r8
  0x00007fb547d94cfb: je     0x00007fb547d94d0b
  0x00007fb547d94d01: movabs $0x170,%r8
  0x00007fb547d94d0b: mov    (%rcx,%r8,1),%r9
  0x00007fb547d94d0f: lea    0x1(%r9),%r9
  0x00007fb547d94d13: mov    %r9,(%rcx,%r8,1)
  0x00007fb547d94d17: mov    %eax,0x24(%rsp)
  0x00007fb547d94d1b: je     0x00007fb547d94ddb  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@27 (line 677)

  0x00007fb547d94d21: mov    %edx,0x20(%rsp)
  0x00007fb547d94d25: cmp    (%rsi),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@33 (line 678)
                                                ; implicit exception: dispatches to 0x00007fb547d94e9d
  0x00007fb547d94d28: mov    %rsi,%rcx
  0x00007fb547d94d2b: movabs $0x7fb52ceef440,%r8  ;   {metadata(method data for {method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d94d35: mov    0x8(%rcx),%ecx
  0x00007fb547d94d38: movabs $0x800000000,%r12
  0x00007fb547d94d42: add    %r12,%rcx
  0x00007fb547d94d45: xor    %r12,%r12
  0x00007fb547d94d48: cmp    0x190(%r8),%rcx
  0x00007fb547d94d4f: jne    0x00007fb547d94d5e
  0x00007fb547d94d51: addq   $0x1,0x198(%r8)
  0x00007fb547d94d59: jmpq   0x00007fb547d94dc4
  0x00007fb547d94d5e: cmp    0x1a0(%r8),%rcx
  0x00007fb547d94d65: jne    0x00007fb547d94d74
  0x00007fb547d94d67: addq   $0x1,0x1a8(%r8)
  0x00007fb547d94d6f: jmpq   0x00007fb547d94dc4
  0x00007fb547d94d74: cmpq   $0x0,0x190(%r8)
  0x00007fb547d94d7f: jne    0x00007fb547d94d98
  0x00007fb547d94d81: mov    %rcx,0x190(%r8)
  0x00007fb547d94d88: movq   $0x1,0x198(%r8)
  0x00007fb547d94d93: jmpq   0x00007fb547d94dc4
  0x00007fb547d94d98: cmpq   $0x0,0x1a0(%r8)
  0x00007fb547d94da3: jne    0x00007fb547d94dbc
  0x00007fb547d94da5: mov    %rcx,0x1a0(%r8)
  0x00007fb547d94dac: movq   $0x1,0x1a8(%r8)
  0x00007fb547d94db7: jmpq   0x00007fb547d94dc4
  0x00007fb547d94dbc: addq   $0x1,0x180(%r8)
  0x00007fb547d94dc4: nop
  0x00007fb547d94dc5: movabs $0xffffffffffffffff,%rax
  0x00007fb547d94dcf: callq  0x00007fb54784aa80  ; ImmutableOopMap{[40]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@33 (line 678)
                                                ;   {virtual_call}
  0x00007fb547d94dd4: add    0x20(%rsp),%eax
  0x00007fb547d94dd8: mov    %rax,%rdx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@38 (line 676)

  0x00007fb547d94ddb: mov    0x24(%rsp),%eax
  0x00007fb547d94ddf: inc    %eax
  0x00007fb547d94de1: movabs $0x7fb52ceef440,%rsi  ;   {metadata(method data for {method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d94deb: mov    0x104(%rsi),%edi
  0x00007fb547d94df1: add    $0x8,%edi
  0x00007fb547d94df4: mov    %edi,0x104(%rsi)
  0x00007fb547d94dfa: and    $0xfff8,%edi
  0x00007fb547d94e00: cmp    $0x0,%edi
  0x00007fb547d94e03: je     0x00007fb547d94ea2  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@41 (line 676)

  0x00007fb547d94e09: mov    0x108(%r15),%r10   ; ImmutableOopMap{[40]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@41 (line 676)

  0x00007fb547d94e10: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d94e13: movabs $0x7fb52ceef440,%rsi  ;   {metadata(method data for {method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d94e1d: incl   0x1b8(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@41 (line 676)

  0x00007fb547d94e23: mov    0x30(%rsp),%ebx
  0x00007fb547d94e27: mov    0x28(%rsp),%rdi
  0x00007fb547d94e2c: cmp    %ebx,%eax
  0x00007fb547d94e2e: movabs $0x7fb52ceef440,%rsi  ;   {metadata(method data for {method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d94e38: movabs $0x150,%rcx
  0x00007fb547d94e42: jl     0x00007fb547d94e52
  0x00007fb547d94e48: movabs $0x140,%rcx
  0x00007fb547d94e52: mov    (%rsi,%rcx,1),%r8
  0x00007fb547d94e56: lea    0x1(%r8),%r8
  0x00007fb547d94e5a: mov    %r8,(%rsi,%rcx,1)
  0x00007fb547d94e5e: jl     0x00007fb547d94cd8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@16 (line 676)

  0x00007fb547d94e64: mov    %rdx,%rax
  0x00007fb547d94e67: add    $0x40,%rsp
  0x00007fb547d94e6b: pop    %rbp
  0x00007fb547d94e6c: mov    0x108(%r15),%r10
  0x00007fb547d94e73: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d94e76: retq   
  0x00007fb547d94e77: movabs $0x7fb52cebb908,%r10  ;   {metadata({method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d94e81: mov    %r10,0x8(%rsp)
  0x00007fb547d94e86: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d94e8e: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN::hashCode@-1 (line 675)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d94e93: jmpq   0x00007fb547d94cb4
  0x00007fb547d94e98: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdi=Oop [40]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@8 (line 676)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d94e9d: callq  0x00007fb5478f3020  ; ImmutableOopMap{[40]=Oop rsi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@33 (line 678)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d94ea2: movabs $0x7fb52cebb908,%r10  ;   {metadata({method} {0x00007fb52cebb908} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;)}
  0x00007fb547d94eac: mov    %r10,0x8(%rsp)
  0x00007fb547d94eb1: movq   $0x29,(%rsp)
  0x00007fb547d94eb9: callq  0x00007fb5478f8100  ; ImmutableOopMap{[40]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@41 (line 676)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d94ebe: jmpq   0x00007fb547d94e09
  0x00007fb547d94ec3: nop
  0x00007fb547d94ec4: nop
  0x00007fb547d94ec5: mov    0x440(%r15),%rax
  0x00007fb547d94ecc: movabs $0x0,%r10
  0x00007fb547d94ed6: mov    %r10,0x440(%r15)
  0x00007fb547d94edd: movabs $0x0,%r10
  0x00007fb547d94ee7: mov    %r10,0x448(%r15)
  0x00007fb547d94eee: add    $0x40,%rsp
  0x00007fb547d94ef2: pop    %rbp
  0x00007fb547d94ef3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d94ef8: hlt    
  0x00007fb547d94ef9: hlt    
  0x00007fb547d94efa: hlt    
  0x00007fb547d94efb: hlt    
  0x00007fb547d94efc: hlt    
  0x00007fb547d94efd: hlt    
  0x00007fb547d94efe: hlt    
  0x00007fb547d94eff: hlt    
[Stub Code]
  0x00007fb547d94f00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d94f05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d94f0f: jmpq   0x00007fb547d94f0f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d94f14: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d94f19: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d94f23: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d94f27: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d94f2c: hlt    
[Deopt Handler Code]
  0x00007fb547d94f2d: movabs $0x7fb547d94f2d,%r10  ;   {section_word}
  0x00007fb547d94f37: push   %r10
  0x00007fb547d94f39: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d94f3e: hlt    
  0x00007fb547d94f3f: hlt    

ImmutableOopMap{[40]=Oop }pc offsets: 372 432 
ImmutableOopMap{rsi=Oop }pc offsets: 563 
ImmutableOopMap{rdi=Oop [40]=Oop }pc offsets: 573 
ImmutableOopMap{[40]=Oop rsi=Oop }pc offsets: 578 
ImmutableOopMap{[40]=Oop }pc offsets: 606 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='16' method='java.lang.StringLatin1 equals ([B[B)Z' bytes='36' count='578' backedge_count='368' iicount='578' level='3' stamp='0.456' comment='tiered' hot_count='578'/>
<writer thread='1329935'/>
<nmethod compile_id='13' compiler='c2' level='4' entry='0x00007fb54f2c81a0' size='1232' address='0x00007fb54f2c8010' relocation_offset='376' insts_offset='400' stub_offset='720' scopes_data_offset='752' scopes_pcs_offset='888' dependencies_offset='1208' nul_chk_table_offset='1216' metadata_offset='744' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='889' backedge_count='22905' iicount='889' stamp='0.456'/>
<make_not_entrant thread='1329935' compile_id='1' compiler='c1' level='3' stamp='0.456'/>
<print_nmethod stamp='0.456'>
Compiled method (c2)     456   13       4       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x00007fb54f2c8010,0x00007fb54f2c84e0] = 1232
 relocation     [0x00007fb54f2c8188,0x00007fb54f2c8198] = 16
 main code      [0x00007fb54f2c81a0,0x00007fb54f2c82e0] = 320
 stub code      [0x00007fb54f2c82e0,0x00007fb54f2c82f8] = 24
 metadata       [0x00007fb54f2c82f8,0x00007fb54f2c8300] = 8
 scopes data    [0x00007fb54f2c8300,0x00007fb54f2c8388] = 136
 scopes pcs     [0x00007fb54f2c8388,0x00007fb54f2c84c8] = 320
 dependencies   [0x00007fb54f2c84c8,0x00007fb54f2c84d0] = 8
 nul chk table  [0x00007fb54f2c84d0,0x00007fb54f2c84e0] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x00007fb54f2c81a0, 0x00007fb54f2c82f8]  344 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce08fb8} &apos;hashCode&apos; &apos;([B)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x30]  (sp of caller)
  0x00007fb54f2c81a0: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c81a7: push   %rbp
  0x00007fb54f2c81a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1 (line 194)

  0x00007fb54f2c81ac: mov    0xc(%rsi),%ebp     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ; implicit exception: dispatches to 0x00007fb54f2c82c4
  0x00007fb54f2c81af: test   %ebp,%ebp
  0x00007fb54f2c81b1: jbe    0x00007fb54f2c82b0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x00007fb54f2c81b7: mov    %ebp,%r8d
  0x00007fb54f2c81ba: dec    %r8d
  0x00007fb54f2c81bd: cmp    %ebp,%r8d
  0x00007fb54f2c81c0: jae    0x00007fb54f2c82b4
  0x00007fb54f2c81c6: movzbl 0x10(%rsi),%r11d   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31 (line 196)

  0x00007fb54f2c81cb: mov    %ebp,%ecx
  0x00007fb54f2c81cd: add    $0xfffffffd,%ecx
  0x00007fb54f2c81d0: mov    $0x80000000,%r9d
  0x00007fb54f2c81d6: cmp    %ecx,%r8d
  0x00007fb54f2c81d9: cmovl  %r9d,%ecx
  0x00007fb54f2c81dd: mov    $0x1,%r8d
  0x00007fb54f2c81e3: cmp    $0x1,%ecx
  0x00007fb54f2c81e6: jle    0x00007fb54f2c8277
  0x00007fb54f2c81ec: mov    %r11d,%r9d
  0x00007fb54f2c81ef: shl    $0x5,%r9d
  0x00007fb54f2c81f3: sub    %r11d,%r9d
  0x00007fb54f2c81f6: mov    $0xfa0,%edi
  0x00007fb54f2c81fb: mov    %ecx,%edx
  0x00007fb54f2c81fd: sub    %r8d,%edx
  0x00007fb54f2c8200: cmp    %edi,%edx
  0x00007fb54f2c8202: cmovg  %edi,%edx
  0x00007fb54f2c8205: add    %r8d,%edx
  0x00007fb54f2c8208: nopl   0x0(%rax,%rax,1)   ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)

  0x00007fb54f2c8210: movslq %r8d,%r10          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)

  0x00007fb54f2c8213: movzbl 0x10(%rsi,%r10,1),%r11d
  0x00007fb54f2c8219: movzbl 0x13(%rsi,%r10,1),%ebx
  0x00007fb54f2c821f: movzbl 0x11(%rsi,%r10,1),%r13d
  0x00007fb54f2c8225: movzbl 0x12(%rsi,%r10,1),%eax
  0x00007fb54f2c822b: add    %r11d,%r9d
  0x00007fb54f2c822e: mov    %r9d,%r11d
  0x00007fb54f2c8231: shl    $0x5,%r11d
  0x00007fb54f2c8235: sub    %r9d,%r11d
  0x00007fb54f2c8238: add    %r13d,%r11d
  0x00007fb54f2c823b: mov    %r11d,%r10d
  0x00007fb54f2c823e: shl    $0x5,%r10d
  0x00007fb54f2c8242: sub    %r11d,%r10d
  0x00007fb54f2c8245: add    %eax,%r10d
  0x00007fb54f2c8248: mov    %r10d,%r11d
  0x00007fb54f2c824b: shl    $0x5,%r11d
  0x00007fb54f2c824f: sub    %r10d,%r11d
  0x00007fb54f2c8252: add    %ebx,%r11d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)

  0x00007fb54f2c8255: mov    %r11d,%r9d
  0x00007fb54f2c8258: shl    $0x5,%r9d
  0x00007fb54f2c825c: sub    %r11d,%r9d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)

  0x00007fb54f2c825f: add    $0x4,%r8d          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)

  0x00007fb54f2c8263: cmp    %edx,%r8d
  0x00007fb54f2c8266: jl     0x00007fb54f2c8210  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x00007fb54f2c8268: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x00007fb54f2c826f: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ;   {poll}
  0x00007fb54f2c8272: cmp    %ecx,%r8d
  0x00007fb54f2c8275: jl     0x00007fb54f2c81fb
  0x00007fb54f2c8277: cmp    %ebp,%r8d
  0x00007fb54f2c827a: jge    0x00007fb54f2c82ab  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16 (line 195)

  0x00007fb54f2c827c: movzbl 0x10(%rsi,%r8,1),%r10d
  0x00007fb54f2c8282: mov    %r11d,%eax
  0x00007fb54f2c8285: shl    $0x5,%eax
  0x00007fb54f2c8288: sub    %r11d,%eax
  0x00007fb54f2c828b: add    %r10d,%eax         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)

  0x00007fb54f2c828e: inc    %r8d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)

  0x00007fb54f2c8291: cmp    %ebp,%r8d
  0x00007fb54f2c8294: jge    0x00007fb54f2c829b
  0x00007fb54f2c8296: mov    %eax,%r11d
  0x00007fb54f2c8299: jmp    0x00007fb54f2c827c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x00007fb54f2c829b: add    $0x20,%rsp
  0x00007fb54f2c829f: pop    %rbp
  0x00007fb54f2c82a0: mov    0x108(%r15),%r10
  0x00007fb54f2c82a7: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2c82aa: retq   
  0x00007fb54f2c82ab: mov    %r11d,%eax
  0x00007fb54f2c82ae: jmp    0x00007fb54f2c829b
  0x00007fb54f2c82b0: xor    %eax,%eax
  0x00007fb54f2c82b2: jmp    0x00007fb54f2c829b
  0x00007fb54f2c82b4: mov    %rsi,(%rsp)
  0x00007fb54f2c82b8: mov    $0xffffff7e,%esi
  0x00007fb54f2c82bd: xchg   %ax,%ax
  0x00007fb54f2c82bf: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2c82c4: mov    $0xfffffff6,%esi
  0x00007fb54f2c82c9: xchg   %ax,%ax
  0x00007fb54f2c82cb: callq  0x00007fb547849e00  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2c82d0: hlt    
  0x00007fb54f2c82d1: hlt    
  0x00007fb54f2c82d2: hlt    
  0x00007fb54f2c82d3: hlt    
  0x00007fb54f2c82d4: hlt    
  0x00007fb54f2c82d5: hlt    
  0x00007fb54f2c82d6: hlt    
  0x00007fb54f2c82d7: hlt    
  0x00007fb54f2c82d8: hlt    
  0x00007fb54f2c82d9: hlt    
  0x00007fb54f2c82da: hlt    
  0x00007fb54f2c82db: hlt    
  0x00007fb54f2c82dc: hlt    
  0x00007fb54f2c82dd: hlt    
  0x00007fb54f2c82de: hlt    
  0x00007fb54f2c82df: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2c82e0: jmpq   0x00007fb547861300  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb54f2c82e5: callq  0x00007fb54f2c82ea
  0x00007fb54f2c82ea: subq   $0x5,(%rsp)
  0x00007fb54f2c82ef: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2c82f4: hlt    
  0x00007fb54f2c82f5: hlt    
  0x00007fb54f2c82f6: hlt    
  0x00007fb54f2c82f7: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 207 
ImmutableOopMap{[0]=Oop }pc offsets: 292 
ImmutableOopMap{}pc offsets: 304 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='17' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='384' iicount='384' level='3' stamp='0.459' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='16' compiler='c1' level='3' entry='0x00007fb547d95360' size='1560' address='0x00007fb547d95190' relocation_offset='376' insts_offset='464' stub_offset='1008' scopes_data_offset='1064' scopes_pcs_offset='1192' dependencies_offset='1528' nul_chk_table_offset='1536' metadata_offset='1056' method='java.lang.StringLatin1 equals ([B[B)Z' bytes='36' count='598' backedge_count='398' iicount='598' stamp='0.459'/>
<print_nmethod stamp='0.459'>
Compiled method (c1)     459   16       3       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x00007fb547d95190,0x00007fb547d957a8] = 1560
 relocation     [0x00007fb547d95308,0x00007fb547d95348] = 64
 main code      [0x00007fb547d95360,0x00007fb547d95580] = 544
 stub code      [0x00007fb547d95580,0x00007fb547d955b0] = 48
 metadata       [0x00007fb547d955b0,0x00007fb547d955b8] = 8
 scopes data    [0x00007fb547d955b8,0x00007fb547d95638] = 128
 scopes pcs     [0x00007fb547d95638,0x00007fb547d95788] = 336
 dependencies   [0x00007fb547d95788,0x00007fb547d95790] = 8
 nul chk table  [0x00007fb547d95790,0x00007fb547d957a8] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.equals([B[B)Z  [0x00007fb547d95360, 0x00007fb547d955b0]  592 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx:rdx   = &apos;[B&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d95360: mov    %eax,-0x14000(%rsp)
  0x00007fb547d95367: push   %rbp
  0x00007fb547d95368: sub    $0x30,%rsp
  0x00007fb547d9536c: movabs $0x7fb52ceef250,%rax  ;   {metadata(method data for {method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d95376: mov    0x100(%rax),%edi
  0x00007fb547d9537c: add    $0x8,%edi
  0x00007fb547d9537f: mov    %edi,0x100(%rax)
  0x00007fb547d95385: and    $0x1ff8,%edi
  0x00007fb547d9538b: cmp    $0x0,%edi
  0x00007fb547d9538e: je     0x00007fb547d954f1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@0 (line 94)

  0x00007fb547d95394: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ; implicit exception: dispatches to 0x00007fb547d95512
  0x00007fb547d95397: mov    0xc(%rdx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ; implicit exception: dispatches to 0x00007fb547d95517
  0x00007fb547d9539a: cmp    %edi,%eax
  0x00007fb547d9539c: movabs $0x7fb52ceef250,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d953a6: movabs $0x140,%rbx
  0x00007fb547d953b0: jne    0x00007fb547d953c0
  0x00007fb547d953b6: movabs $0x150,%rbx
  0x00007fb547d953c0: mov    (%rdi,%rbx,1),%rcx
  0x00007fb547d953c4: lea    0x1(%rcx),%rcx
  0x00007fb547d953c8: mov    %rcx,(%rdi,%rbx,1)
  0x00007fb547d953cc: jne    0x00007fb547d954dc  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@4 (line 94)

  0x00007fb547d953d2: mov    $0x0,%edi
  0x00007fb547d953d7: jmpq   0x00007fb547d95475  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@9 (line 95)

  0x00007fb547d953dc: nopl   0x0(%rax)
  0x00007fb547d953e0: movslq %edi,%rbx
  0x00007fb547d953e3: movsbl 0x10(%rsi,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x00007fb547d953e8: cmp    0xc(%rdx),%edi
  0x00007fb547d953eb: jae    0x00007fb547d9551c
  0x00007fb547d953f1: movslq %edi,%rcx
  0x00007fb547d953f4: movsbl 0x10(%rdx,%rcx,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007fb547d953f9: cmp    %ecx,%ebx
  0x00007fb547d953fb: movabs $0x7fb52ceef250,%rbx  ;   {metadata(method data for {method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d95405: movabs $0x190,%rcx
  0x00007fb547d9540f: jne    0x00007fb547d9541f
  0x00007fb547d95415: movabs $0x180,%rcx
  0x00007fb547d9541f: mov    (%rbx,%rcx,1),%r8
  0x00007fb547d95423: lea    0x1(%r8),%r8
  0x00007fb547d95427: mov    %r8,(%rbx,%rcx,1)
  0x00007fb547d9542b: jne    0x00007fb547d954b2  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x00007fb547d95431: inc    %edi
  0x00007fb547d95433: movabs $0x7fb52ceef250,%rbx  ;   {metadata(method data for {method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d9543d: mov    0x104(%rbx),%ecx
  0x00007fb547d95443: add    $0x8,%ecx
  0x00007fb547d95446: mov    %ecx,0x104(%rbx)
  0x00007fb547d9544c: and    $0xfff8,%ecx
  0x00007fb547d95452: cmp    $0x0,%ecx
  0x00007fb547d95455: je     0x00007fb547d9552a  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x00007fb547d9545b: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x00007fb547d95462: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d95465: movabs $0x7fb52ceef250,%rbx  ;   {metadata(method data for {method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d9546f: incl   0x1a0(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x00007fb547d95475: cmp    %eax,%edi
  0x00007fb547d95477: movabs $0x7fb52ceef250,%rbx  ;   {metadata(method data for {method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d95481: movabs $0x160,%rcx
  0x00007fb547d9548b: jge    0x00007fb547d9549b
  0x00007fb547d95491: movabs $0x170,%rcx
  0x00007fb547d9549b: mov    (%rbx,%rcx,1),%r8
  0x00007fb547d9549f: lea    0x1(%r8),%r8
  0x00007fb547d954a3: mov    %r8,(%rbx,%rcx,1)
  0x00007fb547d954a7: jge    0x00007fb547d954c7
  0x00007fb547d954ad: jmpq   0x00007fb547d953e0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12 (line 95)

  0x00007fb547d954b2: mov    $0x0,%eax
  0x00007fb547d954b7: add    $0x30,%rsp
  0x00007fb547d954bb: pop    %rbp
  0x00007fb547d954bc: mov    0x108(%r15),%r10
  0x00007fb547d954c3: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d954c6: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@25 (line 97)

  0x00007fb547d954c7: mov    $0x1,%eax
  0x00007fb547d954cc: add    $0x30,%rsp
  0x00007fb547d954d0: pop    %rbp
  0x00007fb547d954d1: mov    0x108(%r15),%r10
  0x00007fb547d954d8: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d954db: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@33 (line 100)

  0x00007fb547d954dc: mov    $0x0,%eax
  0x00007fb547d954e1: add    $0x30,%rsp
  0x00007fb547d954e5: pop    %rbp
  0x00007fb547d954e6: mov    0x108(%r15),%r10
  0x00007fb547d954ed: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d954f0: retq   
  0x00007fb547d954f1: movabs $0x7fb52ce08688,%r10  ;   {metadata({method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d954fb: mov    %r10,0x8(%rsp)
  0x00007fb547d95500: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d95508: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::equals@-1 (line 94)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9550d: jmpq   0x00007fb547d95394
  0x00007fb547d95512: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d95517: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9551c: mov    %rdi,(%rsp)
  0x00007fb547d95520: mov    %rdx,0x8(%rsp)
  0x00007fb547d95525: callq  0x00007fb5478eeca0  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547d9552a: movabs $0x7fb52ce08688,%r10  ;   {metadata({method} {0x00007fb52ce08688} &apos;equals&apos; &apos;([B[B)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d95534: mov    %r10,0x8(%rsp)
  0x00007fb547d95539: movq   $0x1d,(%rsp)
  0x00007fb547d95541: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d95546: jmpq   0x00007fb547d9545b
  0x00007fb547d9554b: nop
  0x00007fb547d9554c: nop
  0x00007fb547d9554d: mov    0x440(%r15),%rax
  0x00007fb547d95554: movabs $0x0,%r10
  0x00007fb547d9555e: mov    %r10,0x440(%r15)
  0x00007fb547d95565: movabs $0x0,%r10
  0x00007fb547d9556f: mov    %r10,0x448(%r15)
  0x00007fb547d95576: add    $0x30,%rsp
  0x00007fb547d9557a: pop    %rbp
  0x00007fb547d9557b: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
[Stub Code]
  0x00007fb547d95580: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d95585: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9558f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d95593: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d95598: hlt    
[Deopt Handler Code]
  0x00007fb547d95599: movabs $0x7fb547d95599,%r10  ;   {section_word}
  0x00007fb547d955a3: push   %r10
  0x00007fb547d955a5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d955aa: hlt    
  0x00007fb547d955ab: hlt    
  0x00007fb547d955ac: hlt    
  0x00007fb547d955ad: hlt    
  0x00007fb547d955ae: hlt    
  0x00007fb547d955af: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 258 429 439 444 458 486 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='18' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='1536' iicount='1536' stamp='0.464' comment='tiered' hot_count='1536'/>
<writer thread='1329936'/>
<nmethod compile_id='8' compiler='c1' level='3' entry='0x00007fb547d959c0' size='1016' address='0x00007fb547d95810' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='808' scopes_pcs_offset='864' dependencies_offset='992' nul_chk_table_offset='1000' metadata_offset='800' method='java.lang.Math floorDiv (II)I' bytes='22' count='1376' iicount='1376' stamp='0.465'/>
<print_nmethod stamp='0.465'>
Compiled method (c1)     464    8       3       java.lang.Math::floorDiv (22 bytes)
 total in heap  [0x00007fb547d95810,0x00007fb547d95c08] = 1016
 relocation     [0x00007fb547d95988,0x00007fb547d959b0] = 40
 main code      [0x00007fb547d959c0,0x00007fb547d95b00] = 320
 stub code      [0x00007fb547d95b00,0x00007fb547d95b30] = 48
 metadata       [0x00007fb547d95b30,0x00007fb547d95b38] = 8
 scopes data    [0x00007fb547d95b38,0x00007fb547d95b70] = 56
 scopes pcs     [0x00007fb547d95b70,0x00007fb547d95bf0] = 128
 dependencies   [0x00007fb547d95bf0,0x00007fb547d95bf8] = 8
 nul chk table  [0x00007fb547d95bf8,0x00007fb547d95c08] = 16
----------------------------------------------------------------------
java/lang/Math.floorDiv(II)I  [0x00007fb547d959c0, 0x00007fb547d95b30]  368 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d959c0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d959c7: push   %rbp
  0x00007fb547d959c8: sub    $0x30,%rsp
  0x00007fb547d959cc: mov    %rdx,%rdi
  0x00007fb547d959cf: movabs $0x7fb52ceed658,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d959d9: mov    0x100(%rax),%edx
  0x00007fb547d959df: add    $0x8,%edx
  0x00007fb547d959e2: mov    %edx,0x100(%rax)
  0x00007fb547d959e8: and    $0x1ff8,%edx
  0x00007fb547d959ee: cmp    $0x0,%edx
  0x00007fb547d959f1: je     0x00007fb547d95aa3  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@0 (line 1164)

  0x00007fb547d959f7: mov    %rsi,%rax
  0x00007fb547d959fa: cmp    $0x80000000,%eax
  0x00007fb547d95a00: jne    0x00007fb547d95a11
  0x00007fb547d95a06: xor    %edx,%edx
  0x00007fb547d95a08: cmp    $0xffffffff,%edi
  0x00007fb547d95a0b: je     0x00007fb547d95a14
  0x00007fb547d95a11: cltd   
  0x00007fb547d95a12: idiv   %edi               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1164)
                                                ; implicit exception: dispatches to 0x00007fb547d95ac4
  0x00007fb547d95a14: mov    %rsi,%rbx
  0x00007fb547d95a17: xor    %rdi,%rbx
  0x00007fb547d95a1a: cmp    $0x0,%ebx
  0x00007fb547d95a1d: movabs $0x7fb52ceed658,%rbx  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d95a27: movabs $0x140,%rdx
  0x00007fb547d95a31: jge    0x00007fb547d95a41
  0x00007fb547d95a37: movabs $0x150,%rdx
  0x00007fb547d95a41: mov    (%rbx,%rdx,1),%rcx
  0x00007fb547d95a45: lea    0x1(%rcx),%rcx
  0x00007fb547d95a49: mov    %rcx,(%rbx,%rdx,1)
  0x00007fb547d95a4d: jge    0x00007fb547d95a93  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1166)

  0x00007fb547d95a53: mov    %rax,%rbx
  0x00007fb547d95a56: imul   %edi,%ebx
  0x00007fb547d95a59: cmp    %esi,%ebx
  0x00007fb547d95a5b: movabs $0x7fb52ceed658,%rsi  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d95a65: movabs $0x160,%rdi
  0x00007fb547d95a6f: je     0x00007fb547d95a7f
  0x00007fb547d95a75: movabs $0x170,%rdi
  0x00007fb547d95a7f: mov    (%rsi,%rdi,1),%rbx
  0x00007fb547d95a83: lea    0x1(%rbx),%rbx
  0x00007fb547d95a87: mov    %rbx,(%rsi,%rdi,1)
  0x00007fb547d95a8b: je     0x00007fb547d95a93  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1166)

  0x00007fb547d95a91: dec    %eax
  0x00007fb547d95a93: add    $0x30,%rsp
  0x00007fb547d95a97: pop    %rbp
  0x00007fb547d95a98: mov    0x108(%r15),%r10
  0x00007fb547d95a9f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d95aa2: retq   
  0x00007fb547d95aa3: movabs $0x7fb52ce2e308,%r10  ;   {metadata({method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d95aad: mov    %r10,0x8(%rsp)
  0x00007fb547d95ab2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d95aba: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1 (line 1164)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d95abf: jmpq   0x00007fb547d959f7
  0x00007fb547d95ac4: callq  0x00007fb5478ee6a0  ; ImmutableOopMap{}
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1164)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00007fb547d95ac9: nop
  0x00007fb547d95aca: nop
  0x00007fb547d95acb: mov    0x440(%r15),%rax
  0x00007fb547d95ad2: movabs $0x0,%r10
  0x00007fb547d95adc: mov    %r10,0x440(%r15)
  0x00007fb547d95ae3: movabs $0x0,%r10
  0x00007fb547d95aed: mov    %r10,0x448(%r15)
  0x00007fb547d95af4: add    $0x30,%rsp
  0x00007fb547d95af8: pop    %rbp
  0x00007fb547d95af9: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d95afe: hlt    
  0x00007fb547d95aff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d95b00: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d95b05: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d95b0f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d95b13: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d95b18: hlt    
[Deopt Handler Code]
  0x00007fb547d95b19: movabs $0x7fb547d95b19,%r10  ;   {section_word}
  0x00007fb547d95b23: push   %r10
  0x00007fb547d95b25: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d95b2a: hlt    
  0x00007fb547d95b2b: hlt    
  0x00007fb547d95b2c: hlt    
  0x00007fb547d95b2d: hlt    
  0x00007fb547d95b2e: hlt    
  0x00007fb547d95b2f: hlt    

ImmutableOopMap{}pc offsets: 255 265 </print_nmethod>
<writer thread='1329935'/>
<nmethod compile_id='18' compiler='c2' level='4' entry='0x00007fb54f2c86a0' size='568' address='0x00007fb54f2c8510' relocation_offset='376' insts_offset='400' stub_offset='464' scopes_data_offset='504' scopes_pcs_offset='512' dependencies_offset='560' metadata_offset='488' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='1558' iicount='1558' stamp='0.466'/>
<make_not_entrant thread='1329935' compile_id='4' compiler='c1' level='3' stamp='0.466'/>
<print_nmethod stamp='0.466'>
Compiled method (c2)     466   18       4       java.lang.Object::&lt;init&gt; (1 bytes)
 total in heap  [0x00007fb54f2c8510,0x00007fb54f2c8748] = 568
 relocation     [0x00007fb54f2c8688,0x00007fb54f2c8698] = 16
 main code      [0x00007fb54f2c86a0,0x00007fb54f2c86e0] = 64
 stub code      [0x00007fb54f2c86e0,0x00007fb54f2c86f8] = 24
 metadata       [0x00007fb54f2c86f8,0x00007fb54f2c8708] = 16
 scopes data    [0x00007fb54f2c8708,0x00007fb54f2c8710] = 8
 scopes pcs     [0x00007fb54f2c8710,0x00007fb54f2c8740] = 48
 dependencies   [0x00007fb54f2c8740,0x00007fb54f2c8748] = 8
----------------------------------------------------------------------
java/lang/Object.&lt;init&gt;()V  [0x00007fb54f2c86a0, 0x00007fb54f2c86f8]  88 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x00007fb54f2c86a0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c86a4: movabs $0x800000000,%r12
  0x00007fb54f2c86ae: add    %r12,%r10
  0x00007fb54f2c86b1: xor    %r12,%r12
  0x00007fb54f2c86b4: cmp    %r10,%rax
  0x00007fb54f2c86b7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c86bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2c86c0: sub    $0x18,%rsp
  0x00007fb54f2c86c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)

  0x00007fb54f2c86cc: add    $0x10,%rsp
  0x00007fb54f2c86d0: pop    %rbp
  0x00007fb54f2c86d1: mov    0x108(%r15),%r10
  0x00007fb54f2c86d8: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2c86db: retq   
  0x00007fb54f2c86dc: hlt    
  0x00007fb54f2c86dd: hlt    
  0x00007fb54f2c86de: hlt    
  0x00007fb54f2c86df: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2c86e0: jmpq   0x00007fb547861300  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb54f2c86e5: callq  0x00007fb54f2c86ea
  0x00007fb54f2c86ea: subq   $0x5,(%rsp)
  0x00007fb54f2c86ef: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2c86f4: hlt    
  0x00007fb54f2c86f5: hlt    
  0x00007fb54f2c86f6: hlt    
  0x00007fb54f2c86f7: hlt    
</print_nmethod>
<writer thread='1329936'/>
<nmethod compile_id='14' compiler='c1' level='3' entry='0x00007fb547d95e40' size='768' address='0x00007fb547d95c90' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' metadata_offset='672' method='java.util.ImmutableCollections emptySet ()Ljava/util/Set;' bytes='4' count='697' iicount='697' stamp='0.468'/>
<print_nmethod stamp='0.468'>
Compiled method (c1)     467   14       3       java.util.ImmutableCollections::emptySet (4 bytes)
 total in heap  [0x00007fb547d95c90,0x00007fb547d95f90] = 768
 relocation     [0x00007fb547d95e08,0x00007fb547d95e30] = 40
 main code      [0x00007fb547d95e40,0x00007fb547d95f00] = 192
 stub code      [0x00007fb547d95f00,0x00007fb547d95f30] = 48
 metadata       [0x00007fb547d95f30,0x00007fb547d95f38] = 8
 scopes data    [0x00007fb547d95f38,0x00007fb547d95f48] = 16
 scopes pcs     [0x00007fb547d95f48,0x00007fb547d95f88] = 64
 dependencies   [0x00007fb547d95f88,0x00007fb547d95f90] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections.emptySet()Ljava/util/Set;  [0x00007fb547d95e40, 0x00007fb547d95f30]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ceb6bf0} &apos;emptySet&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/ImmutableCollections&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d95e40: mov    %eax,-0x14000(%rsp)
  0x00007fb547d95e47: push   %rbp
  0x00007fb547d95e48: sub    $0x30,%rsp
  0x00007fb547d95e4c: movabs $0x7fb52ceef790,%rax  ;   {metadata(method data for {method} {0x00007fb52ceb6bf0} &apos;emptySet&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/ImmutableCollections&apos;)}
  0x00007fb547d95e56: mov    0x100(%rax),%esi
  0x00007fb547d95e5c: add    $0x8,%esi
  0x00007fb547d95e5f: mov    %esi,0x100(%rax)
  0x00007fb547d95e65: and    $0x1ff8,%esi
  0x00007fb547d95e6b: cmp    $0x0,%esi
  0x00007fb547d95e6e: je     0x00007fb547d95e8e  ;*getstatic EMPTY_SET {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections::emptySet@0 (line 492)

  0x00007fb547d95e74: movabs $0x62d823540,%rax  ;   {oop(a &apos;java/util/ImmutableCollections$SetN&apos;{0x000000062d823540})}
  0x00007fb547d95e7e: add    $0x30,%rsp
  0x00007fb547d95e82: pop    %rbp
  0x00007fb547d95e83: mov    0x108(%r15),%r10
  0x00007fb547d95e8a: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d95e8d: retq   
  0x00007fb547d95e8e: movabs $0x7fb52ceb6bf0,%r10  ;   {metadata({method} {0x00007fb52ceb6bf0} &apos;emptySet&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/ImmutableCollections&apos;)}
  0x00007fb547d95e98: mov    %r10,0x8(%rsp)
  0x00007fb547d95e9d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d95ea5: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections::emptySet@-1 (line 492)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d95eaa: jmp    0x00007fb547d95e74
  0x00007fb547d95eac: nop
  0x00007fb547d95ead: nop
  0x00007fb547d95eae: mov    0x440(%r15),%rax
  0x00007fb547d95eb5: movabs $0x0,%r10
  0x00007fb547d95ebf: mov    %r10,0x440(%r15)
  0x00007fb547d95ec6: movabs $0x0,%r10
  0x00007fb547d95ed0: mov    %r10,0x448(%r15)
  0x00007fb547d95ed7: add    $0x30,%rsp
  0x00007fb547d95edb: pop    %rbp
  0x00007fb547d95edc: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d95ee1: hlt    
  0x00007fb547d95ee2: hlt    
  0x00007fb547d95ee3: hlt    
  0x00007fb547d95ee4: hlt    
  0x00007fb547d95ee5: hlt    
  0x00007fb547d95ee6: hlt    
  0x00007fb547d95ee7: hlt    
  0x00007fb547d95ee8: hlt    
  0x00007fb547d95ee9: hlt    
  0x00007fb547d95eea: hlt    
  0x00007fb547d95eeb: hlt    
  0x00007fb547d95eec: hlt    
  0x00007fb547d95eed: hlt    
  0x00007fb547d95eee: hlt    
  0x00007fb547d95eef: hlt    
  0x00007fb547d95ef0: hlt    
  0x00007fb547d95ef1: hlt    
  0x00007fb547d95ef2: hlt    
  0x00007fb547d95ef3: hlt    
  0x00007fb547d95ef4: hlt    
  0x00007fb547d95ef5: hlt    
  0x00007fb547d95ef6: hlt    
  0x00007fb547d95ef7: hlt    
  0x00007fb547d95ef8: hlt    
  0x00007fb547d95ef9: hlt    
  0x00007fb547d95efa: hlt    
  0x00007fb547d95efb: hlt    
  0x00007fb547d95efc: hlt    
  0x00007fb547d95efd: hlt    
  0x00007fb547d95efe: hlt    
  0x00007fb547d95eff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d95f00: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d95f05: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d95f0f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d95f13: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d95f18: hlt    
[Deopt Handler Code]
  0x00007fb547d95f19: movabs $0x7fb547d95f19,%r10  ;   {section_word}
  0x00007fb547d95f23: push   %r10
  0x00007fb547d95f25: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d95f2a: hlt    
  0x00007fb547d95f2b: hlt    
  0x00007fb547d95f2c: hlt    
  0x00007fb547d95f2d: hlt    
  0x00007fb547d95f2e: hlt    
  0x00007fb547d95f2f: hlt    

ImmutableOopMap{}pc offsets: 106 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='19' method='java.lang.module.ModuleDescriptor name ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.470' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='17' compiler='c1' level='3' entry='0x00007fb547d961e0' size='1200' address='0x00007fb547d96010' relocation_offset='376' insts_offset='464' stub_offset='880' scopes_data_offset='952' scopes_pcs_offset='1016' dependencies_offset='1192' metadata_offset='944' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='832' iicount='832' stamp='0.471'/>
<print_nmethod stamp='0.471'>
Compiled method (c1)     470   17       3       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x00007fb547d96010,0x00007fb547d964c0] = 1200
 relocation     [0x00007fb547d96188,0x00007fb547d961c8] = 64
 main code      [0x00007fb547d961e0,0x00007fb547d96380] = 416
 stub code      [0x00007fb547d96380,0x00007fb547d963c0] = 64
 metadata       [0x00007fb547d963c0,0x00007fb547d963c8] = 8
 scopes data    [0x00007fb547d963c8,0x00007fb547d96408] = 64
 scopes pcs     [0x00007fb547d96408,0x00007fb547d964b8] = 176
 dependencies   [0x00007fb547d964b8,0x00007fb547d964c0] = 8
----------------------------------------------------------------------
java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;  [0x00007fb547d961e0, 0x00007fb547d963c0]  480 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d961e0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d961e7: push   %rbp
  0x00007fb547d961e8: sub    $0x30,%rsp
  0x00007fb547d961ec: movabs $0x7fb52ceefac0,%rax  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547d961f6: mov    0x100(%rax),%edx
  0x00007fb547d961fc: add    $0x8,%edx
  0x00007fb547d961ff: mov    %edx,0x100(%rax)
  0x00007fb547d96205: and    $0x1ff8,%edx
  0x00007fb547d9620b: cmp    $0x0,%edx
  0x00007fb547d9620e: je     0x00007fb547d962f6  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@0 (line 220)

  0x00007fb547d96214: cmp    $0x0,%rsi
  0x00007fb547d96218: movabs $0x7fb52ceefac0,%rax  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547d96222: movabs $0x150,%rdx
  0x00007fb547d9622c: je     0x00007fb547d9623c
  0x00007fb547d96232: movabs $0x140,%rdx
  0x00007fb547d9623c: mov    (%rax,%rdx,1),%rdi
  0x00007fb547d96240: lea    0x1(%rdi),%rdi
  0x00007fb547d96244: mov    %rdi,(%rax,%rdx,1)
  0x00007fb547d96248: je     0x00007fb547d96261  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)

  0x00007fb547d9624e: mov    %rsi,%rax
  0x00007fb547d96251: add    $0x30,%rsp
  0x00007fb547d96255: pop    %rbp
  0x00007fb547d96256: mov    0x108(%r15),%r10
  0x00007fb547d9625d: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d96260: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@13 (line 222)

  0x00007fb547d96261: nopl   0x0(%rax)
  0x00007fb547d96268: jmpq   0x00007fb547d96326  ;   {no_reloc}
  0x00007fb547d9626d: add    %al,(%rax)
  0x00007fb547d9626f: add    %al,(%rax)
  0x00007fb547d96271: add    %cl,-0x75(%rcx)
  0x00007fb547d96274: xchg   %ebx,(%rax)
  0x00007fb547d96276: add    %eax,(%rax)
  0x00007fb547d96278: add    %cl,-0x73(%rax)
  0x00007fb547d9627b: js     0x00007fb547d962a5
  0x00007fb547d9627d: cmp    0x128(%r15),%rdi
  0x00007fb547d96284: ja     0x00007fb547d96330
  0x00007fb547d9628a: mov    %rdi,0x118(%r15)
  0x00007fb547d96291: mov    0xb8(%rdx),%rcx
  0x00007fb547d96298: mov    %rcx,(%rax)
  0x00007fb547d9629b: mov    %rdx,%rcx
  0x00007fb547d9629e: movabs $0x800000000,%r12
  0x00007fb547d962a8: sub    %r12,%rcx
  0x00007fb547d962ab: xor    %r12,%r12
  0x00007fb547d962ae: mov    %ecx,0x8(%rax)
  0x00007fb547d962b1: xor    %rcx,%rcx
  0x00007fb547d962b4: mov    %ecx,0xc(%rax)
  0x00007fb547d962b7: xor    %rcx,%rcx
  0x00007fb547d962ba: mov    %rcx,0x10(%rax)
  0x00007fb547d962be: mov    %rcx,0x18(%rax)
  0x00007fb547d962c2: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)

  0x00007fb547d962c6: mov    %rax,%rsi
  0x00007fb547d962c9: movabs $0x7fb52ceefac0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547d962d3: addq   $0x1,0x160(%rdi)
  0x00007fb547d962db: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)

  0x00007fb547d962de: mov    %rax,0x20(%rsp)
  0x00007fb547d962e3: nopl   0x0(%rax)
  0x00007fb547d962e7: callq  0x00007fb54784ad80  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ;   {optimized virtual_call}
  0x00007fb547d962ec: mov    0x20(%rsp),%rax
  0x00007fb547d962f1: jmpq   0x00007fb547d96365
  0x00007fb547d962f6: movabs $0x7fb52cdce768,%r10  ;   {metadata({method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547d96300: mov    %r10,0x8(%rsp)
  0x00007fb547d96305: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9630d: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d96312: jmpq   0x00007fb547d96214
  0x00007fb547d96317: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547d96321: mov    $0xa050f00,%eax
  0x00007fb547d96326: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547d9632b: jmpq   0x00007fb547d96268
  0x00007fb547d96330: mov    %rdx,%rdx
  0x00007fb547d96333: callq  0x00007fb5478f3900  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547d96338: jmp    0x00007fb547d962c6
  0x00007fb547d9633a: nop
  0x00007fb547d9633b: nop
  0x00007fb547d9633c: mov    0x440(%r15),%rax
  0x00007fb547d96343: movabs $0x0,%r10
  0x00007fb547d9634d: mov    %r10,0x440(%r15)
  0x00007fb547d96354: movabs $0x0,%r10
  0x00007fb547d9635e: mov    %r10,0x448(%r15)
  0x00007fb547d96365: add    $0x30,%rsp
  0x00007fb547d96369: pop    %rbp
  0x00007fb547d9636a: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9636f: hlt    
  0x00007fb547d96370: hlt    
  0x00007fb547d96371: hlt    
  0x00007fb547d96372: hlt    
  0x00007fb547d96373: hlt    
  0x00007fb547d96374: hlt    
  0x00007fb547d96375: hlt    
  0x00007fb547d96376: hlt    
  0x00007fb547d96377: hlt    
  0x00007fb547d96378: hlt    
  0x00007fb547d96379: hlt    
  0x00007fb547d9637a: hlt    
  0x00007fb547d9637b: hlt    
  0x00007fb547d9637c: hlt    
  0x00007fb547d9637d: hlt    
  0x00007fb547d9637e: hlt    
  0x00007fb547d9637f: hlt    
[Stub Code]
  0x00007fb547d96380: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d96385: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9638f: jmpq   0x00007fb547d9638f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d96394: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d96399: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d963a3: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d963a7: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d963ac: hlt    
[Deopt Handler Code]
  0x00007fb547d963ad: movabs $0x7fb547d963ad,%r10  ;   {section_word}
  0x00007fb547d963b7: push   %r10
  0x00007fb547d963b9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d963be: hlt    
  0x00007fb547d963bf: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 268 
ImmutableOopMap{rsi=Oop }pc offsets: 306 
ImmutableOopMap{}pc offsets: 331 344 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='20' method='java.lang.module.ModuleReference descriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='128' iicount='128' level='1' stamp='0.474' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='15' compiler='c1' level='3' entry='0x00007fb547d966c0' size='864' address='0x00007fb547d96510' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='752' scopes_pcs_offset='776' dependencies_offset='856' metadata_offset='736' method='java.util.Set of ()Ljava/util/Set;' bytes='4' count='603' iicount='603' stamp='0.474'/>
<print_nmethod stamp='0.474'>
Compiled method (c1)     474   15       3       java.util.Set::of (4 bytes)
 total in heap  [0x00007fb547d96510,0x00007fb547d96870] = 864
 relocation     [0x00007fb547d96688,0x00007fb547d966b8] = 48
 main code      [0x00007fb547d966c0,0x00007fb547d967c0] = 256
 stub code      [0x00007fb547d967c0,0x00007fb547d967f0] = 48
 metadata       [0x00007fb547d967f0,0x00007fb547d96800] = 16
 scopes data    [0x00007fb547d96800,0x00007fb547d96818] = 24
 scopes pcs     [0x00007fb547d96818,0x00007fb547d96868] = 80
 dependencies   [0x00007fb547d96868,0x00007fb547d96870] = 8
----------------------------------------------------------------------
java/util/Set.of()Ljava/util/Set;  [0x00007fb547d966c0, 0x00007fb547d967f0]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cdc8ef0} &apos;of&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/Set&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d966c0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d966c7: push   %rbp
  0x00007fb547d966c8: sub    $0x30,%rsp
  0x00007fb547d966cc: movabs $0x7fb52ceef938,%rax  ;   {metadata(method data for {method} {0x00007fb52cdc8ef0} &apos;of&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/Set&apos;)}
  0x00007fb547d966d6: mov    0x100(%rax),%esi
  0x00007fb547d966dc: add    $0x8,%esi
  0x00007fb547d966df: mov    %esi,0x100(%rax)
  0x00007fb547d966e5: and    $0x1ff8,%esi
  0x00007fb547d966eb: cmp    $0x0,%esi
  0x00007fb547d966ee: je     0x00007fb547d96748  ;*invokestatic emptySet {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Set::of@0 (line 452)

  0x00007fb547d966f4: movabs $0x7fb52ceef938,%rax  ;   {metadata(method data for {method} {0x00007fb52cdc8ef0} &apos;of&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/Set&apos;)}
  0x00007fb547d966fe: addq   $0x1,0x140(%rax)
  0x00007fb547d96706: movabs $0x7fb52ceef790,%rax  ;   {metadata(method data for {method} {0x00007fb52ceb6bf0} &apos;emptySet&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/ImmutableCollections&apos;)}
  0x00007fb547d96710: mov    0x100(%rax),%esi
  0x00007fb547d96716: add    $0x8,%esi
  0x00007fb547d96719: mov    %esi,0x100(%rax)
  0x00007fb547d9671f: and    $0x7ffff8,%esi
  0x00007fb547d96725: cmp    $0x0,%esi
  0x00007fb547d96728: je     0x00007fb547d96766
  0x00007fb547d9672e: movabs $0x62d823540,%rax  ;   {oop(a &apos;java/util/ImmutableCollections$SetN&apos;{0x000000062d823540})}
  0x00007fb547d96738: add    $0x30,%rsp
  0x00007fb547d9673c: pop    %rbp
  0x00007fb547d9673d: mov    0x108(%r15),%r10
  0x00007fb547d96744: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d96747: retq   
  0x00007fb547d96748: movabs $0x7fb52cdc8ef0,%r10  ;   {metadata({method} {0x00007fb52cdc8ef0} &apos;of&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/Set&apos;)}
  0x00007fb547d96752: mov    %r10,0x8(%rsp)
  0x00007fb547d96757: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9675f: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.Set::of@-1 (line 452)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d96764: jmp    0x00007fb547d966f4
  0x00007fb547d96766: movabs $0x7fb52ceb6bf0,%r10  ;   {metadata({method} {0x00007fb52ceb6bf0} &apos;emptySet&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/util/ImmutableCollections&apos;)}
  0x00007fb547d96770: mov    %r10,0x8(%rsp)
  0x00007fb547d96775: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9677d: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections::emptySet@-1 (line 492)
                                                ; - java.util.Set::of@0 (line 452)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d96782: jmp    0x00007fb547d9672e
  0x00007fb547d96784: nop
  0x00007fb547d96785: nop
  0x00007fb547d96786: mov    0x440(%r15),%rax
  0x00007fb547d9678d: movabs $0x0,%r10
  0x00007fb547d96797: mov    %r10,0x440(%r15)
  0x00007fb547d9679e: movabs $0x0,%r10
  0x00007fb547d967a8: mov    %r10,0x448(%r15)
  0x00007fb547d967af: add    $0x30,%rsp
  0x00007fb547d967b3: pop    %rbp
  0x00007fb547d967b4: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d967b9: hlt    
  0x00007fb547d967ba: hlt    
  0x00007fb547d967bb: hlt    
  0x00007fb547d967bc: hlt    
  0x00007fb547d967bd: hlt    
  0x00007fb547d967be: hlt    
  0x00007fb547d967bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d967c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d967c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d967cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d967d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d967d8: hlt    
[Deopt Handler Code]
  0x00007fb547d967d9: movabs $0x7fb547d967d9,%r10  ;   {section_word}
  0x00007fb547d967e3: push   %r10
  0x00007fb547d967e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d967ea: hlt    
  0x00007fb547d967eb: hlt    
  0x00007fb547d967ec: hlt    
  0x00007fb547d967ed: hlt    
  0x00007fb547d967ee: hlt    
  0x00007fb547d967ef: hlt    

ImmutableOopMap{}pc offsets: 164 194 </print_nmethod>
<writer thread='1329923'/>

argument handler #32 for: receiver java.lang.Class.isAssignableFrom(Ljava/lang/Class;)Z (fingerprint = 5416, 32 bytes generated)
  0x00007fb54784bf8a: lea    (%r14),%rsi
  0x00007fb54784bf8d: lea    -0x8(%r14),%rax
  0x00007fb54784bf91: xor    %edx,%edx
  0x00007fb54784bf93: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bf9b: cmovne %rax,%rdx
  0x00007fb54784bf9f: movabs $0x7fb54780caa0,%rax
  0x00007fb54784bfa9: retq   
<writer thread='1329936'/>
<nmethod compile_id='20' compiler='c1' level='1' entry='0x00007fb54f2c89c0' size='704' address='0x00007fb54f2c8810' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.module.ModuleReference descriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='160' iicount='160' stamp='0.479'/>
<print_nmethod stamp='0.479'>
Compiled method (c1)     479   20       1       java.lang.module.ModuleReference::descriptor (5 bytes)
 total in heap  [0x00007fb54f2c8810,0x00007fb54f2c8ad0] = 704
 relocation     [0x00007fb54f2c8988,0x00007fb54f2c89a8] = 32
 main code      [0x00007fb54f2c89c0,0x00007fb54f2c8a40] = 128
 stub code      [0x00007fb54f2c8a40,0x00007fb54f2c8a70] = 48
 metadata       [0x00007fb54f2c8a70,0x00007fb54f2c8a78] = 8
 scopes data    [0x00007fb54f2c8a78,0x00007fb54f2c8a88] = 16
 scopes pcs     [0x00007fb54f2c8a88,0x00007fb54f2c8ac8] = 64
 dependencies   [0x00007fb54f2c8ac8,0x00007fb54f2c8ad0] = 8
----------------------------------------------------------------------
java/lang/module/ModuleReference.descriptor()Ljava/lang/module/ModuleDescriptor;  [0x00007fb54f2c89c0, 0x00007fb54f2c8a70]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cef9b10} &apos;descriptor&apos; &apos;()Ljava/lang/module/ModuleDescriptor;&apos; in &apos;java/lang/module/ModuleReference&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2c89c0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c89c4: movabs $0x800000000,%r12
  0x00007fb54f2c89ce: add    %r12,%r10
  0x00007fb54f2c89d1: xor    %r12,%r12
  0x00007fb54f2c89d4: cmp    %rax,%r10
  0x00007fb54f2c89d7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c89dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2c89e0: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c89e7: push   %rbp
  0x00007fb54f2c89e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleReference::descriptor@0 (line 74)

  0x00007fb54f2c89ec: mov    0xc(%rsi),%eax
  0x00007fb54f2c89ef: shl    $0x3,%rax          ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleReference::descriptor@1 (line 74)

  0x00007fb54f2c89f3: add    $0x30,%rsp
  0x00007fb54f2c89f7: pop    %rbp
  0x00007fb54f2c89f8: mov    0x108(%r15),%r10
  0x00007fb54f2c89ff: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2c8a02: retq   
  0x00007fb54f2c8a03: nop
  0x00007fb54f2c8a04: nop
  0x00007fb54f2c8a05: mov    0x440(%r15),%rax
  0x00007fb54f2c8a0c: movabs $0x0,%r10
  0x00007fb54f2c8a16: mov    %r10,0x440(%r15)
  0x00007fb54f2c8a1d: movabs $0x0,%r10
  0x00007fb54f2c8a27: mov    %r10,0x448(%r15)
  0x00007fb54f2c8a2e: add    $0x30,%rsp
  0x00007fb54f2c8a32: pop    %rbp
  0x00007fb54f2c8a33: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2c8a38: hlt    
  0x00007fb54f2c8a39: hlt    
  0x00007fb54f2c8a3a: hlt    
  0x00007fb54f2c8a3b: hlt    
  0x00007fb54f2c8a3c: hlt    
  0x00007fb54f2c8a3d: hlt    
  0x00007fb54f2c8a3e: hlt    
  0x00007fb54f2c8a3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2c8a40: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2c8a45: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2c8a4f: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c8a53: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2c8a58: hlt    
[Deopt Handler Code]
  0x00007fb54f2c8a59: movabs $0x7fb54f2c8a59,%r10  ;   {section_word}
  0x00007fb54f2c8a63: push   %r10
  0x00007fb54f2c8a65: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2c8a6a: hlt    
  0x00007fb54f2c8a6b: hlt    
  0x00007fb54f2c8a6c: hlt    
  0x00007fb54f2c8a6d: hlt    
  0x00007fb54f2c8a6e: hlt    
  0x00007fb54f2c8a6f: hlt    
</print_nmethod>
<nmethod compile_id='19' compiler='c1' level='1' entry='0x00007fb54f2c8cc0' size='704' address='0x00007fb54f2c8b10' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.module.ModuleDescriptor name ()Ljava/lang/String;' bytes='5' count='183' iicount='183' stamp='0.480'/>
<print_nmethod stamp='0.480'>
Compiled method (c1)     479   19       1       java.lang.module.ModuleDescriptor::name (5 bytes)
 total in heap  [0x00007fb54f2c8b10,0x00007fb54f2c8dd0] = 704
 relocation     [0x00007fb54f2c8c88,0x00007fb54f2c8ca8] = 32
 main code      [0x00007fb54f2c8cc0,0x00007fb54f2c8d40] = 128
 stub code      [0x00007fb54f2c8d40,0x00007fb54f2c8d70] = 48
 metadata       [0x00007fb54f2c8d70,0x00007fb54f2c8d78] = 8
 scopes data    [0x00007fb54f2c8d78,0x00007fb54f2c8d88] = 16
 scopes pcs     [0x00007fb54f2c8d88,0x00007fb54f2c8dc8] = 64
 dependencies   [0x00007fb54f2c8dc8,0x00007fb54f2c8dd0] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.name()Ljava/lang/String;  [0x00007fb54f2c8cc0, 0x00007fb54f2c8d70]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ceb1588} &apos;name&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/module/ModuleDescriptor&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2c8cc0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c8cc4: movabs $0x800000000,%r12
  0x00007fb54f2c8cce: add    %r12,%r10
  0x00007fb54f2c8cd1: xor    %r12,%r12
  0x00007fb54f2c8cd4: cmp    %rax,%r10
  0x00007fb54f2c8cd7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c8cdd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2c8ce0: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c8ce7: push   %rbp
  0x00007fb54f2c8ce8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::name@0 (line 1305)

  0x00007fb54f2c8cec: mov    0x14(%rsi),%eax
  0x00007fb54f2c8cef: shl    $0x3,%rax          ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::name@1 (line 1305)

  0x00007fb54f2c8cf3: add    $0x30,%rsp
  0x00007fb54f2c8cf7: pop    %rbp
  0x00007fb54f2c8cf8: mov    0x108(%r15),%r10
  0x00007fb54f2c8cff: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2c8d02: retq   
  0x00007fb54f2c8d03: nop
  0x00007fb54f2c8d04: nop
  0x00007fb54f2c8d05: mov    0x440(%r15),%rax
  0x00007fb54f2c8d0c: movabs $0x0,%r10
  0x00007fb54f2c8d16: mov    %r10,0x440(%r15)
  0x00007fb54f2c8d1d: movabs $0x0,%r10
  0x00007fb54f2c8d27: mov    %r10,0x448(%r15)
  0x00007fb54f2c8d2e: add    $0x30,%rsp
  0x00007fb54f2c8d32: pop    %rbp
  0x00007fb54f2c8d33: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2c8d38: hlt    
  0x00007fb54f2c8d39: hlt    
  0x00007fb54f2c8d3a: hlt    
  0x00007fb54f2c8d3b: hlt    
  0x00007fb54f2c8d3c: hlt    
  0x00007fb54f2c8d3d: hlt    
  0x00007fb54f2c8d3e: hlt    
  0x00007fb54f2c8d3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2c8d40: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2c8d45: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2c8d4f: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c8d53: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2c8d58: hlt    
[Deopt Handler Code]
  0x00007fb54f2c8d59: movabs $0x7fb54f2c8d59,%r10  ;   {section_word}
  0x00007fb54f2c8d63: push   %r10
  0x00007fb54f2c8d65: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2c8d6a: hlt    
  0x00007fb54f2c8d6b: hlt    
  0x00007fb54f2c8d6c: hlt    
  0x00007fb54f2c8d6d: hlt    
  0x00007fb54f2c8d6e: hlt    
  0x00007fb54f2c8d6f: hlt    
</print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='21' method='java.util.AbstractCollection &lt;init&gt; ()V' bytes='5' count='384' iicount='384' level='3' stamp='0.481' comment='tiered' hot_count='384'/>
<task_queued compile_id='22' method='java.lang.String charAt (I)C' bytes='25' count='256' iicount='256' level='3' stamp='0.481' comment='tiered' hot_count='256'/>

argument handler #33 for: receiver java.io.UnixFileSystem.canonicalize0(Ljava/lang/String;)Ljava/lang/String; (fingerprint = 5432, 32 bytes generated)
  0x00007fb54784bfaa: lea    (%r14),%rsi
  0x00007fb54784bfad: lea    -0x8(%r14),%rax
  0x00007fb54784bfb1: xor    %edx,%edx
  0x00007fb54784bfb3: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bfbb: cmovne %rax,%rdx
  0x00007fb54784bfbf: movabs $0x7fb54780cabb,%rax
  0x00007fb54784bfc9: retq   
<writer thread='1329936'/>
<nmethod compile_id='21' compiler='c1' level='3' entry='0x00007fb547d96a40' size='912' address='0x00007fb547d96890' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='792' scopes_pcs_offset='824' dependencies_offset='904' metadata_offset='768' method='java.util.AbstractCollection &lt;init&gt; ()V' bytes='5' count='385' iicount='385' stamp='0.481'/>
<print_nmethod stamp='0.481'>
Compiled method (c1)     481   21       3       java.util.AbstractCollection::&lt;init&gt; (5 bytes)
 total in heap  [0x00007fb547d96890,0x00007fb547d96c20] = 912
 relocation     [0x00007fb547d96a08,0x00007fb547d96a38] = 48
 main code      [0x00007fb547d96a40,0x00007fb547d96b60] = 288
 stub code      [0x00007fb547d96b60,0x00007fb547d96b90] = 48
 metadata       [0x00007fb547d96b90,0x00007fb547d96ba8] = 24
 scopes data    [0x00007fb547d96ba8,0x00007fb547d96bc8] = 32
 scopes pcs     [0x00007fb547d96bc8,0x00007fb547d96c18] = 80
 dependencies   [0x00007fb547d96c18,0x00007fb547d96c20] = 8
----------------------------------------------------------------------
java/util/AbstractCollection.&lt;init&gt;()V  [0x00007fb547d96a40, 0x00007fb547d96b90]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdcc1b0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d96a40: mov    0x8(%rsi),%r10d
  0x00007fb547d96a44: movabs $0x800000000,%r12
  0x00007fb547d96a4e: add    %r12,%r10
  0x00007fb547d96a51: xor    %r12,%r12
  0x00007fb547d96a54: cmp    %rax,%r10
  0x00007fb547d96a57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d96a5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d96a60: mov    %eax,-0x14000(%rsp)
  0x00007fb547d96a67: push   %rbp
  0x00007fb547d96a68: sub    $0x30,%rsp
  0x00007fb547d96a6c: movabs $0x7fb52cf21510,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdcc1b0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fb547d96a76: mov    0x100(%rdi),%ebx
  0x00007fb547d96a7c: add    $0x8,%ebx
  0x00007fb547d96a7f: mov    %ebx,0x100(%rdi)
  0x00007fb547d96a85: and    $0x1ff8,%ebx
  0x00007fb547d96a8b: cmp    $0x0,%ebx
  0x00007fb547d96a8e: je     0x00007fb547d96ae1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractCollection::&lt;init&gt;@0 (line 66)

  0x00007fb547d96a94: mov    %rsi,%rdi
  0x00007fb547d96a97: movabs $0x7fb52cf21510,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdcc1b0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fb547d96aa1: addq   $0x1,0x140(%rbx)
  0x00007fb547d96aa9: movabs $0x7fb52cedd4a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d96ab3: mov    0x100(%rdi),%ebx
  0x00007fb547d96ab9: add    $0x8,%ebx
  0x00007fb547d96abc: mov    %ebx,0x100(%rdi)
  0x00007fb547d96ac2: and    $0x7ffff8,%ebx
  0x00007fb547d96ac8: cmp    $0x0,%ebx
  0x00007fb547d96acb: je     0x00007fb547d96aff
  0x00007fb547d96ad1: add    $0x30,%rsp
  0x00007fb547d96ad5: pop    %rbp
  0x00007fb547d96ad6: mov    0x108(%r15),%r10
  0x00007fb547d96add: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d96ae0: retq   
  0x00007fb547d96ae1: movabs $0x7fb52cdcc1b0,%r10  ;   {metadata({method} {0x00007fb52cdcc1b0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fb547d96aeb: mov    %r10,0x8(%rsp)
  0x00007fb547d96af0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d96af8: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::&lt;init&gt;@-1 (line 66)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d96afd: jmp    0x00007fb547d96a94
  0x00007fb547d96aff: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d96b09: mov    %r10,0x8(%rsp)
  0x00007fb547d96b0e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d96b16: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.AbstractCollection::&lt;init&gt;@1 (line 66)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d96b1b: jmp    0x00007fb547d96ad1
  0x00007fb547d96b1d: nop
  0x00007fb547d96b1e: nop
  0x00007fb547d96b1f: mov    0x440(%r15),%rax
  0x00007fb547d96b26: movabs $0x0,%r10
  0x00007fb547d96b30: mov    %r10,0x440(%r15)
  0x00007fb547d96b37: movabs $0x0,%r10
  0x00007fb547d96b41: mov    %r10,0x448(%r15)
  0x00007fb547d96b48: add    $0x30,%rsp
  0x00007fb547d96b4c: pop    %rbp
  0x00007fb547d96b4d: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d96b52: hlt    
  0x00007fb547d96b53: hlt    
  0x00007fb547d96b54: hlt    
  0x00007fb547d96b55: hlt    
  0x00007fb547d96b56: hlt    
  0x00007fb547d96b57: hlt    
  0x00007fb547d96b58: hlt    
  0x00007fb547d96b59: hlt    
  0x00007fb547d96b5a: hlt    
  0x00007fb547d96b5b: hlt    
  0x00007fb547d96b5c: hlt    
  0x00007fb547d96b5d: hlt    
  0x00007fb547d96b5e: hlt    
  0x00007fb547d96b5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d96b60: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d96b65: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d96b6f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d96b73: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d96b78: hlt    
[Deopt Handler Code]
  0x00007fb547d96b79: movabs $0x7fb547d96b79,%r10  ;   {section_word}
  0x00007fb547d96b83: push   %r10
  0x00007fb547d96b85: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d96b8a: hlt    
  0x00007fb547d96b8b: hlt    
  0x00007fb547d96b8c: hlt    
  0x00007fb547d96b8d: hlt    
  0x00007fb547d96b8e: hlt    
  0x00007fb547d96b8f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 189 219 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='23' method='java.lang.StringLatin1 charAt ([BI)C' bytes='28' count='384' iicount='384' level='3' stamp='0.483' comment='tiered' hot_count='384'/>

argument handler #34 for: receiver java.lang.Class.getDeclaredConstructors0(Z)[Ljava/lang/reflect/Constructor; (fingerprint = 5178, 18 bytes generated)
  0x00007fb54784bfca: lea    (%r14),%rsi
  0x00007fb54784bfcd: mov    -0x8(%r14),%edx
  0x00007fb54784bfd1: movabs $0x7fb54780cabb,%rax
  0x00007fb54784bfdb: retq   
<writer thread='1329936'/>
<nmethod compile_id='22' compiler='c1' level='3' entry='0x00007fb547d96e80' size='2144' address='0x00007fb547d96c90' relocation_offset='376' insts_offset='496' stub_offset='1360' scopes_data_offset='1464' scopes_pcs_offset='1672' dependencies_offset='2120' nul_chk_table_offset='2128' metadata_offset='1440' method='java.lang.String charAt (I)C' bytes='25' count='445' iicount='445' stamp='0.484'/>
<print_nmethod stamp='0.484'>
Compiled method (c1)     483   22       3       java.lang.String::charAt (25 bytes)
 total in heap  [0x00007fb547d96c90,0x00007fb547d974f0] = 2144
 relocation     [0x00007fb547d96e08,0x00007fb547d96e70] = 104
 main code      [0x00007fb547d96e80,0x00007fb547d971e0] = 864
 stub code      [0x00007fb547d971e0,0x00007fb547d97230] = 80
 metadata       [0x00007fb547d97230,0x00007fb547d97248] = 24
 scopes data    [0x00007fb547d97248,0x00007fb547d97318] = 208
 scopes pcs     [0x00007fb547d97318,0x00007fb547d974d8] = 448
 dependencies   [0x00007fb547d974d8,0x00007fb547d974e0] = 8
 nul chk table  [0x00007fb547d974e0,0x00007fb547d974f0] = 16
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x00007fb547d96e80, 0x00007fb547d97230]  944 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccb44b8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x00007fb547d96e80: mov    0x8(%rsi),%r10d
  0x00007fb547d96e84: movabs $0x800000000,%r12
  0x00007fb547d96e8e: add    %r12,%r10
  0x00007fb547d96e91: xor    %r12,%r12
  0x00007fb547d96e94: cmp    %rax,%r10
  0x00007fb547d96e97: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d96e9d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d96ea0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d96ea7: push   %rbp
  0x00007fb547d96ea8: sub    $0x50,%rsp
  0x00007fb547d96eac: mov    %rdx,%rdi
  0x00007fb547d96eaf: movabs $0x7fb52cf27080,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb44b8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d96eb9: mov    0x100(%rax),%edx
  0x00007fb547d96ebf: add    $0x8,%edx
  0x00007fb547d96ec2: mov    %edx,0x100(%rax)
  0x00007fb547d96ec8: and    $0x1ff8,%edx
  0x00007fb547d96ece: cmp    $0x0,%edx
  0x00007fb547d96ed1: je     0x00007fb547d97106  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@0 (line 692)

  0x00007fb547d96ed7: mov    %rsi,%rax
  0x00007fb547d96eda: movabs $0x7fb52cf27080,%rdx  ;   {metadata(method data for {method} {0x00007fb52ccb44b8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d96ee4: addq   $0x1,0x140(%rdx)
  0x00007fb547d96eec: movabs $0x7fb52cedd9b8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d96ef6: mov    0x100(%rax),%edx
  0x00007fb547d96efc: add    $0x8,%edx
  0x00007fb547d96eff: mov    %edx,0x100(%rax)
  0x00007fb547d96f05: and    $0x7ffff8,%edx
  0x00007fb547d96f0b: cmp    $0x0,%edx
  0x00007fb547d96f0e: je     0x00007fb547d97127
  0x00007fb547d96f14: movabs $0x7fb52cedd9b8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d96f1e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x00007fb547d96f24: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x00007fb547d96f28: cmp    $0x0,%eax
  0x00007fb547d96f2b: movabs $0x7fb52cedd9b8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d96f35: movabs $0x160,%rdx
  0x00007fb547d96f3f: jne    0x00007fb547d96f4f
  0x00007fb547d96f45: movabs $0x170,%rdx
  0x00007fb547d96f4f: mov    (%rax,%rdx,1),%rbx
  0x00007fb547d96f53: lea    0x1(%rbx),%rbx
  0x00007fb547d96f57: mov    %rbx,(%rax,%rdx,1)
  0x00007fb547d96f5b: jne    0x00007fb547d96f7b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x00007fb547d96f61: movabs $0x7fb52cedd9b8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d96f6b: incl   0x180(%rax)
  0x00007fb547d96f71: mov    $0x1,%eax
  0x00007fb547d96f76: jmpq   0x00007fb547d96f80  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x00007fb547d96f7b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x00007fb547d96f80: and    $0x1,%eax
  0x00007fb547d96f83: cmp    $0x0,%eax
  0x00007fb547d96f86: movabs $0x7fb52cf27080,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb44b8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d96f90: movabs $0x178,%rdx
  0x00007fb547d96f9a: je     0x00007fb547d96faa
  0x00007fb547d96fa0: movabs $0x188,%rdx
  0x00007fb547d96faa: mov    (%rax,%rdx,1),%rbx
  0x00007fb547d96fae: lea    0x1(%rbx),%rbx
  0x00007fb547d96fb2: mov    %rbx,(%rax,%rdx,1)
  0x00007fb547d96fb6: je     0x00007fb547d9709b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4 (line 692)

  0x00007fb547d96fbc: mov    0xc(%rsi),%eax
  0x00007fb547d96fbf: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)

  0x00007fb547d96fc3: movabs $0x7fb52cf27080,%rsi  ;   {metadata(method data for {method} {0x00007fb52ccb44b8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d96fcd: addq   $0x1,0x198(%rsi)
  0x00007fb547d96fd5: movabs $0x7fb52cf28e80,%rsi  ;   {metadata(method data for {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d96fdf: mov    0x100(%rsi),%edx
  0x00007fb547d96fe5: add    $0x8,%edx
  0x00007fb547d96fe8: mov    %edx,0x100(%rsi)
  0x00007fb547d96fee: and    $0x7ffff8,%edx
  0x00007fb547d96ff4: cmp    $0x0,%edx
  0x00007fb547d96ff7: je     0x00007fb547d97148
  0x00007fb547d96ffd: cmp    $0x0,%edi
  0x00007fb547d97000: movabs $0x7fb52cf28e80,%rsi  ;   {metadata(method data for {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d9700a: movabs $0x140,%rdx
  0x00007fb547d97014: jl     0x00007fb547d97024
  0x00007fb547d9701a: movabs $0x150,%rdx
  0x00007fb547d97024: mov    (%rsi,%rdx,1),%rbx
  0x00007fb547d97028: lea    0x1(%rbx),%rbx
  0x00007fb547d9702c: mov    %rbx,(%rsi,%rdx,1)
  0x00007fb547d97030: jl     0x00007fb547d970c2  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x00007fb547d97036: mov    0xc(%rax),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; implicit exception: dispatches to 0x00007fb547d97169
  0x00007fb547d97039: cmp    %esi,%edi
  0x00007fb547d9703b: movabs $0x7fb52cf28e80,%rsi  ;   {metadata(method data for {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d97045: movabs $0x170,%rdx
  0x00007fb547d9704f: jge    0x00007fb547d9705f
  0x00007fb547d97055: movabs $0x160,%rdx
  0x00007fb547d9705f: mov    (%rsi,%rdx,1),%rbx
  0x00007fb547d97063: lea    0x1(%rbx),%rbx
  0x00007fb547d97067: mov    %rbx,(%rsi,%rdx,1)
  0x00007fb547d9706b: jge    0x00007fb547d970c2  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x00007fb547d97071: movslq %edi,%rdi
  0x00007fb547d97074: movsbl 0x10(%rax,%rdi,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x00007fb547d97079: and    $0xff,%eax
  0x00007fb547d9707f: and    $0xffff,%eax
  0x00007fb547d97085: and    $0xffff,%eax
  0x00007fb547d9708b: add    $0x50,%rsp
  0x00007fb547d9708f: pop    %rbp
  0x00007fb547d97090: mov    0x108(%r15),%r10
  0x00007fb547d97097: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9709a: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@15 (line 693)

  0x00007fb547d9709b: mov    0xc(%rsi),%esi
  0x00007fb547d9709e: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@17 (line 695)

  0x00007fb547d970a2: mov    %rdi,%rdx          ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@21 (line 695)

  0x00007fb547d970a5: xchg   %ax,%ax
  0x00007fb547d970a7: callq  0x00007fb54784a780  ; ImmutableOopMap{}
                                                ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ;   {static_call}
  0x00007fb547d970ac: and    $0xffff,%eax
  0x00007fb547d970b2: add    $0x50,%rsp
  0x00007fb547d970b6: pop    %rbp
  0x00007fb547d970b7: mov    0x108(%r15),%r10
  0x00007fb547d970be: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d970c1: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@24 (line 695)

  0x00007fb547d970c2: nopw   0x0(%rax,%rax,1)
  0x00007fb547d970c8: jmpq   0x00007fb547d9717d  ;   {no_reloc}
  0x00007fb547d970cd: add    %al,(%rax)
  0x00007fb547d970cf: add    %al,(%rax)
  0x00007fb547d970d1: add    %ch,%cl
  0x00007fb547d970d3: mov    $0x0,%al
  0x00007fb547d970d5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x00007fb547d970d7: mov    %rax,%rdx
  0x00007fb547d970da: movabs $0x7fb52cf28e80,%rsi  ;   {metadata(method data for {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d970e4: addq   $0x1,0x180(%rsi)
  0x00007fb547d970ec: mov    %rdi,%rdx
  0x00007fb547d970ef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x00007fb547d970f2: mov    %rax,0x38(%rsp)
  0x00007fb547d970f7: callq  0x00007fb54784ad80  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {optimized virtual_call}
  0x00007fb547d970fc: mov    0x38(%rsp),%rax
  0x00007fb547d97101: jmpq   0x00007fb547d971bf
  0x00007fb547d97106: movabs $0x7fb52ccb44b8,%r10  ;   {metadata({method} {0x00007fb52ccb44b8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d97110: mov    %r10,0x8(%rsp)
  0x00007fb547d97115: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9711d: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 692)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d97122: jmpq   0x00007fb547d96ed7
  0x00007fb547d97127: movabs $0x7fb52ccb9300,%r10  ;   {metadata({method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d97131: mov    %r10,0x8(%rsp)
  0x00007fb547d97136: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9713e: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d97143: jmpq   0x00007fb547d96f14
  0x00007fb547d97148: movabs $0x7fb52ce07ea8,%r10  ;   {metadata({method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d97152: mov    %r10,0x8(%rsp)
  0x00007fb547d97157: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9715f: callq  0x00007fb5478f8100  ; ImmutableOopMap{rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d97164: jmpq   0x00007fb547d96ffd
  0x00007fb547d97169: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9716e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547d97178: mov    $0xa050f00,%eax
  0x00007fb547d9717d: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547d97182: jmpq   0x00007fb547d970c8
  0x00007fb547d97187: mov    %rdx,%rdx
  0x00007fb547d9718a: callq  0x00007fb5478f3600  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00007fb547d9718f: jmpq   0x00007fb547d970d7
  0x00007fb547d97194: nop
  0x00007fb547d97195: nop
  0x00007fb547d97196: mov    0x440(%r15),%rax
  0x00007fb547d9719d: movabs $0x0,%r10
  0x00007fb547d971a7: mov    %r10,0x440(%r15)
  0x00007fb547d971ae: movabs $0x0,%r10
  0x00007fb547d971b8: mov    %r10,0x448(%r15)
  0x00007fb547d971bf: add    $0x50,%rsp
  0x00007fb547d971c3: pop    %rbp
  0x00007fb547d971c4: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d971c9: hlt    
  0x00007fb547d971ca: hlt    
  0x00007fb547d971cb: hlt    
  0x00007fb547d971cc: hlt    
  0x00007fb547d971cd: hlt    
  0x00007fb547d971ce: hlt    
  0x00007fb547d971cf: hlt    
  0x00007fb547d971d0: hlt    
  0x00007fb547d971d1: hlt    
  0x00007fb547d971d2: hlt    
  0x00007fb547d971d3: hlt    
  0x00007fb547d971d4: hlt    
  0x00007fb547d971d5: hlt    
  0x00007fb547d971d6: hlt    
  0x00007fb547d971d7: hlt    
  0x00007fb547d971d8: hlt    
  0x00007fb547d971d9: hlt    
  0x00007fb547d971da: hlt    
  0x00007fb547d971db: hlt    
  0x00007fb547d971dc: hlt    
  0x00007fb547d971dd: hlt    
  0x00007fb547d971de: hlt    
  0x00007fb547d971df: hlt    
[Stub Code]
  0x00007fb547d971e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d971e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d971ef: jmpq   0x00007fb547d971ef  ;   {runtime_call}
  0x00007fb547d971f4: nop
  0x00007fb547d971f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d971ff: jmpq   0x00007fb547d971ff  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d97204: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d97209: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d97213: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d97217: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9721c: hlt    
[Deopt Handler Code]
  0x00007fb547d9721d: movabs $0x7fb547d9721d,%r10  ;   {section_word}
  0x00007fb547d97227: push   %r10
  0x00007fb547d97229: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9722e: hlt    
  0x00007fb547d9722f: hlt    

ImmutableOopMap{}pc offsets: 556 
ImmutableOopMap{[56]=Oop }pc offsets: 636 
ImmutableOopMap{rsi=Oop }pc offsets: 674 707 
ImmutableOopMap{rax=Oop }pc offsets: 740 750 
ImmutableOopMap{}pc offsets: 770 783 </print_nmethod>
<writer thread='1329923'/>

argument handler #35 for: static jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object; (fingerprint = 86841, 45 bytes generated)
  0x00007fb54784bfdc: lea    (%r14),%rax
  0x00007fb54784bfdf: xor    %edx,%edx
  0x00007fb54784bfe1: cmpq   $0x0,(%r14)
  0x00007fb54784bfe8: cmovne %rax,%rdx
  0x00007fb54784bfec: lea    -0x8(%r14),%rax
  0x00007fb54784bff0: xor    %ecx,%ecx
  0x00007fb54784bff2: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784bffa: cmovne %rax,%rcx
  0x00007fb54784bffe: movabs $0x7fb54780cabb,%rax
  0x00007fb54784c008: retq   
<writer thread='1329936'/>
<nmethod compile_id='23' compiler='c1' level='3' entry='0x00007fb547d976e0' size='1312' address='0x00007fb547d97510' relocation_offset='376' insts_offset='464' stub_offset='880' scopes_data_offset='952' scopes_pcs_offset='1048' dependencies_offset='1288' nul_chk_table_offset='1296' metadata_offset='944' method='java.lang.StringLatin1 charAt ([BI)C' bytes='28' count='445' iicount='445' stamp='0.495'/>
<print_nmethod stamp='0.495'>
Compiled method (c1)     494   23       3       java.lang.StringLatin1::charAt (28 bytes)
 total in heap  [0x00007fb547d97510,0x00007fb547d97a30] = 1312
 relocation     [0x00007fb547d97688,0x00007fb547d976c8] = 64
 main code      [0x00007fb547d976e0,0x00007fb547d97880] = 416
 stub code      [0x00007fb547d97880,0x00007fb547d978c0] = 64
 metadata       [0x00007fb547d978c0,0x00007fb547d978c8] = 8
 scopes data    [0x00007fb547d978c8,0x00007fb547d97928] = 96
 scopes pcs     [0x00007fb547d97928,0x00007fb547d97a18] = 240
 dependencies   [0x00007fb547d97a18,0x00007fb547d97a20] = 8
 nul chk table  [0x00007fb547d97a20,0x00007fb547d97a30] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.charAt([BI)C  [0x00007fb547d976e0, 0x00007fb547d978c0]  480 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d976e0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d976e7: push   %rbp
  0x00007fb547d976e8: sub    $0x30,%rsp
  0x00007fb547d976ec: mov    %rdx,%rdi
  0x00007fb547d976ef: movabs $0x7fb52cf28e80,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d976f9: mov    0x100(%rax),%edx
  0x00007fb547d976ff: add    $0x8,%edx
  0x00007fb547d97702: mov    %edx,0x100(%rax)
  0x00007fb547d97708: and    $0x1ff8,%edx
  0x00007fb547d9770e: cmp    $0x0,%edx
  0x00007fb547d97711: je     0x00007fb547d977ee  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@0 (line 46)

  0x00007fb547d97717: cmp    $0x0,%edi
  0x00007fb547d9771a: movabs $0x7fb52cf28e80,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d97724: movabs $0x140,%rdx
  0x00007fb547d9772e: jl     0x00007fb547d9773e
  0x00007fb547d97734: movabs $0x150,%rdx
  0x00007fb547d9773e: mov    (%rax,%rdx,1),%rbx
  0x00007fb547d97742: lea    0x1(%rbx),%rbx
  0x00007fb547d97746: mov    %rbx,(%rax,%rdx,1)
  0x00007fb547d9774a: jl     0x00007fb547d977af  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)

  0x00007fb547d97750: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; implicit exception: dispatches to 0x00007fb547d9780f
  0x00007fb547d97753: cmp    %eax,%edi
  0x00007fb547d97755: movabs $0x7fb52cf28e80,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d9775f: movabs $0x170,%rdx
  0x00007fb547d97769: jge    0x00007fb547d97779
  0x00007fb547d9776f: movabs $0x160,%rdx
  0x00007fb547d97779: mov    (%rax,%rdx,1),%rbx
  0x00007fb547d9777d: lea    0x1(%rbx),%rbx
  0x00007fb547d97781: mov    %rbx,(%rax,%rdx,1)
  0x00007fb547d97785: jge    0x00007fb547d977af  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7 (line 46)

  0x00007fb547d9778b: movslq %edi,%rdi
  0x00007fb547d9778e: movsbl 0x10(%rsi,%rdi,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)

  0x00007fb547d97793: and    $0xff,%eax
  0x00007fb547d97799: and    $0xffff,%eax
  0x00007fb547d9779f: add    $0x30,%rsp
  0x00007fb547d977a3: pop    %rbp
  0x00007fb547d977a4: mov    0x108(%r15),%r10
  0x00007fb547d977ab: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d977ae: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@27 (line 49)

  0x00007fb547d977af: nop
  0x00007fb547d977b0: jmpq   0x00007fb547d97823  ;   {no_reloc}
  0x00007fb547d977b5: add    %al,(%rax)
  0x00007fb547d977b7: add    %al,(%rax)
  0x00007fb547d977b9: add    %ch,%cl
  0x00007fb547d977bb: outsb  %ds:(%rsi),(%dx)
  0x00007fb547d977bc: add    %al,(%rax)
  0x00007fb547d977be: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)

  0x00007fb547d977c1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d977c4: orb    $0x0,0x7fb52cf2(%rsi)
  0x00007fb547d977cb: add    %cl,-0x7d(%rax)
  0x00007fb547d977ce: xchg   %al,0x1000001(%rax)
  0x00007fb547d977d4: mov    %rdi,%rdx
  0x00007fb547d977d7: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)

  0x00007fb547d977da: mov    %rax,0x20(%rsp)
  0x00007fb547d977df: callq  0x00007fb54784ad80  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ;   {optimized virtual_call}
  0x00007fb547d977e4: mov    0x20(%rsp),%rax
  0x00007fb547d977e9: jmpq   0x00007fb547d97862
  0x00007fb547d977ee: movabs $0x7fb52ce07ea8,%r10  ;   {metadata({method} {0x00007fb52ce07ea8} &apos;charAt&apos; &apos;([BI)C&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547d977f8: mov    %r10,0x8(%rsp)
  0x00007fb547d977fd: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d97805: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9780a: jmpq   0x00007fb547d97717
  0x00007fb547d9780f: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d97814: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547d9781e: mov    $0xa050f00,%eax
  0x00007fb547d97823: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547d97828: jmp    0x00007fb547d977b0
  0x00007fb547d9782a: nop
  0x00007fb547d9782b: nop
  0x00007fb547d9782c: nop
  0x00007fb547d9782d: mov    %rdx,%rdx
  0x00007fb547d97830: callq  0x00007fb5478f3600  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00007fb547d97835: jmp    0x00007fb547d977bf
  0x00007fb547d97837: nop
  0x00007fb547d97838: nop
  0x00007fb547d97839: mov    0x440(%r15),%rax
  0x00007fb547d97840: movabs $0x0,%r10
  0x00007fb547d9784a: mov    %r10,0x440(%r15)
  0x00007fb547d97851: movabs $0x0,%r10
  0x00007fb547d9785b: mov    %r10,0x448(%r15)
  0x00007fb547d97862: add    $0x30,%rsp
  0x00007fb547d97866: pop    %rbp
  0x00007fb547d97867: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9786c: hlt    
  0x00007fb547d9786d: hlt    
  0x00007fb547d9786e: hlt    
  0x00007fb547d9786f: hlt    
  0x00007fb547d97870: hlt    
  0x00007fb547d97871: hlt    
  0x00007fb547d97872: hlt    
  0x00007fb547d97873: hlt    
  0x00007fb547d97874: hlt    
  0x00007fb547d97875: hlt    
  0x00007fb547d97876: hlt    
  0x00007fb547d97877: hlt    
  0x00007fb547d97878: hlt    
  0x00007fb547d97879: hlt    
  0x00007fb547d9787a: hlt    
  0x00007fb547d9787b: hlt    
  0x00007fb547d9787c: hlt    
  0x00007fb547d9787d: hlt    
  0x00007fb547d9787e: hlt    
  0x00007fb547d9787f: hlt    
[Stub Code]
  0x00007fb547d97880: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d97885: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9788f: jmpq   0x00007fb547d9788f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d97894: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d97899: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d978a3: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d978a7: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d978ac: hlt    
[Deopt Handler Code]
  0x00007fb547d978ad: movabs $0x7fb547d978ad,%r10  ;   {section_word}
  0x00007fb547d978b7: push   %r10
  0x00007fb547d978b9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d978be: hlt    
  0x00007fb547d978bf: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 260 
ImmutableOopMap{rsi=Oop }pc offsets: 298 308 
ImmutableOopMap{}pc offsets: 328 341 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='24' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='256' iicount='256' level='3' stamp='0.496' comment='tiered' hot_count='256'/>
<task_queued compile_id='25' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='256' iicount='256' level='3' stamp='0.496' comment='tiered' hot_count='256'/>
<task_queued compile_id='26' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='384' iicount='384' level='3' stamp='0.497' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='24' compiler='c1' level='3' entry='0x00007fb547d97c40' size='960' address='0x00007fb547d97a90' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' metadata_offset='768' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='658' iicount='658' stamp='0.497'/>
<print_nmethod stamp='0.497'>
Compiled method (c1)     496   24       3       java.util.ImmutableCollections$SetN$SetNIterator::hasNext (13 bytes)
 total in heap  [0x00007fb547d97a90,0x00007fb547d97e50] = 960
 relocation     [0x00007fb547d97c08,0x00007fb547d97c30] = 40
 main code      [0x00007fb547d97c40,0x00007fb547d97d60] = 288
 stub code      [0x00007fb547d97d60,0x00007fb547d97d90] = 48
 metadata       [0x00007fb547d97d90,0x00007fb547d97d98] = 8
 scopes data    [0x00007fb547d97d98,0x00007fb547d97dc8] = 48
 scopes pcs     [0x00007fb547d97dc8,0x00007fb547d97e48] = 128
 dependencies   [0x00007fb547d97e48,0x00007fb547d97e50] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.hasNext()Z  [0x00007fb547d97c40, 0x00007fb547d97d90]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d97c40: mov    0x8(%rsi),%r10d
  0x00007fb547d97c44: movabs $0x800000000,%r12
  0x00007fb547d97c4e: add    %r12,%r10
  0x00007fb547d97c51: xor    %r12,%r12
  0x00007fb547d97c54: cmp    %rax,%r10
  0x00007fb547d97c57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d97c5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d97c60: mov    %eax,-0x14000(%rsp)
  0x00007fb547d97c67: push   %rbp
  0x00007fb547d97c68: sub    $0x30,%rsp
  0x00007fb547d97c6c: movabs $0x7fb52cf443b8,%rax  ;   {metadata(method data for {method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d97c76: mov    0x100(%rax),%edi
  0x00007fb547d97c7c: add    $0x8,%edi
  0x00007fb547d97c7f: mov    %edi,0x100(%rax)
  0x00007fb547d97c85: and    $0x1ff8,%edi
  0x00007fb547d97c8b: cmp    $0x0,%edi
  0x00007fb547d97c8e: je     0x00007fb547d97d02  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@0 (line 637)

  0x00007fb547d97c94: mov    0xc(%rsi),%eax     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 637)

  0x00007fb547d97c97: cmp    $0x0,%eax
  0x00007fb547d97c9a: movabs $0x7fb52cf443b8,%rax  ;   {metadata(method data for {method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d97ca4: movabs $0x140,%rsi
  0x00007fb547d97cae: jle    0x00007fb547d97cbe
  0x00007fb547d97cb4: movabs $0x150,%rsi
  0x00007fb547d97cbe: mov    (%rax,%rsi,1),%rdi
  0x00007fb547d97cc2: lea    0x1(%rdi),%rdi
  0x00007fb547d97cc6: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547d97cca: jle    0x00007fb547d97cea  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 637)

  0x00007fb547d97cd0: movabs $0x7fb52cf443b8,%rax  ;   {metadata(method data for {method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d97cda: incl   0x160(%rax)
  0x00007fb547d97ce0: mov    $0x1,%eax
  0x00007fb547d97ce5: jmpq   0x00007fb547d97cef  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@8 (line 637)

  0x00007fb547d97cea: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@12 (line 637)

  0x00007fb547d97cef: and    $0x1,%eax
  0x00007fb547d97cf2: add    $0x30,%rsp
  0x00007fb547d97cf6: pop    %rbp
  0x00007fb547d97cf7: mov    0x108(%r15),%r10
  0x00007fb547d97cfe: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d97d01: retq   
  0x00007fb547d97d02: movabs $0x7fb52cf43260,%r10  ;   {metadata({method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d97d0c: mov    %r10,0x8(%rsp)
  0x00007fb547d97d11: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d97d19: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 637)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d97d1e: jmpq   0x00007fb547d97c94
  0x00007fb547d97d23: nop
  0x00007fb547d97d24: nop
  0x00007fb547d97d25: mov    0x440(%r15),%rax
  0x00007fb547d97d2c: movabs $0x0,%r10
  0x00007fb547d97d36: mov    %r10,0x440(%r15)
  0x00007fb547d97d3d: movabs $0x0,%r10
  0x00007fb547d97d47: mov    %r10,0x448(%r15)
  0x00007fb547d97d4e: add    $0x30,%rsp
  0x00007fb547d97d52: pop    %rbp
  0x00007fb547d97d53: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d97d58: hlt    
  0x00007fb547d97d59: hlt    
  0x00007fb547d97d5a: hlt    
  0x00007fb547d97d5b: hlt    
  0x00007fb547d97d5c: hlt    
  0x00007fb547d97d5d: hlt    
  0x00007fb547d97d5e: hlt    
  0x00007fb547d97d5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d97d60: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d97d65: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d97d6f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d97d73: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d97d78: hlt    
[Deopt Handler Code]
  0x00007fb547d97d79: movabs $0x7fb547d97d79,%r10  ;   {section_word}
  0x00007fb547d97d83: push   %r10
  0x00007fb547d97d85: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d97d8a: hlt    
  0x00007fb547d97d8b: hlt    
  0x00007fb547d97d8c: hlt    
  0x00007fb547d97d8d: hlt    
  0x00007fb547d97d8e: hlt    
  0x00007fb547d97d8f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 222 </print_nmethod>
<writer thread='1329923'/>

argument handler #36 for: static java.lang.Module.defineModule0(Ljava/lang/Module;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V (fingerprint = 355672893, 93 bytes generated)
  0x00007fb54784c009: lea    (%r14),%rax
  0x00007fb54784c00c: xor    %edx,%edx
  0x00007fb54784c00e: cmpq   $0x0,(%r14)
  0x00007fb54784c015: cmovne %rax,%rdx
  0x00007fb54784c019: mov    -0x8(%r14),%ecx
  0x00007fb54784c01d: lea    -0x10(%r14),%rax
  0x00007fb54784c021: xor    %r8d,%r8d
  0x00007fb54784c024: cmpq   $0x0,-0x10(%r14)
  0x00007fb54784c02c: cmovne %rax,%r8
  0x00007fb54784c030: lea    -0x18(%r14),%rax
  0x00007fb54784c034: xor    %r9d,%r9d
  0x00007fb54784c037: cmpq   $0x0,-0x18(%r14)
  0x00007fb54784c03f: cmovne %rax,%r9
  0x00007fb54784c043: lea    -0x20(%r14),%rax
  0x00007fb54784c047: xor    %r10d,%r10d
  0x00007fb54784c04a: cmpq   $0x0,-0x20(%r14)
  0x00007fb54784c052: cmovne %rax,%r10
  0x00007fb54784c056: mov    %r10,0x8(%rsp)
  0x00007fb54784c05b: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c065: retq   
<writer thread='1329936'/>
<nmethod compile_id='26' compiler='c1' level='3' entry='0x00007fb547d98040' size='1128' address='0x00007fb547d97e90' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='808' scopes_pcs_offset='888' dependencies_offset='1096' nul_chk_table_offset='1104' metadata_offset='800' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='656' iicount='656' stamp='0.500'/>
<print_nmethod stamp='0.500'>
Compiled method (c1)     499   26       3       java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)
 total in heap  [0x00007fb547d97e90,0x00007fb547d982f8] = 1128
 relocation     [0x00007fb547d98008,0x00007fb547d98038] = 48
 main code      [0x00007fb547d98040,0x00007fb547d98180] = 320
 stub code      [0x00007fb547d98180,0x00007fb547d981b0] = 48
 metadata       [0x00007fb547d981b0,0x00007fb547d981b8] = 8
 scopes data    [0x00007fb547d981b8,0x00007fb547d98208] = 80
 scopes pcs     [0x00007fb547d98208,0x00007fb547d982d8] = 208
 dependencies   [0x00007fb547d982d8,0x00007fb547d982e0] = 8
 nul chk table  [0x00007fb547d982e0,0x00007fb547d982f8] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.nextIndex()I  [0x00007fb547d98040, 0x00007fb547d981b0]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cf43350} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d98040: mov    0x8(%rsi),%r10d
  0x00007fb547d98044: movabs $0x800000000,%r12
  0x00007fb547d9804e: add    %r12,%r10
  0x00007fb547d98051: xor    %r12,%r12
  0x00007fb547d98054: cmp    %rax,%r10
  0x00007fb547d98057: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9805d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d98060: mov    %eax,-0x14000(%rsp)
  0x00007fb547d98067: push   %rbp
  0x00007fb547d98068: sub    $0x30,%rsp
  0x00007fb547d9806c: movabs $0x7fb52cf44878,%rax  ;   {metadata(method data for {method} {0x00007fb52cf43350} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d98076: mov    0x100(%rax),%edi
  0x00007fb547d9807c: add    $0x8,%edi
  0x00007fb547d9807f: mov    %edi,0x100(%rax)
  0x00007fb547d98085: and    $0x1ff8,%edi
  0x00007fb547d9808b: cmp    $0x0,%edi
  0x00007fb547d9808e: je     0x00007fb547d98108  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@0 (line 641)

  0x00007fb547d98094: mov    0x10(%rsi),%eax    ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@1 (line 641)

  0x00007fb547d98097: movabs $0x7fb52cf44878,%rdi  ;   {metadata(method data for {method} {0x00007fb52cf43350} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d980a1: incl   0x140(%rdi)        ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@8 (line 642)

  0x00007fb547d980a7: dec    %eax
  0x00007fb547d980a9: cmp    $0x0,%eax
  0x00007fb547d980ac: movabs $0x7fb52cf44878,%rdi  ;   {metadata(method data for {method} {0x00007fb52cf43350} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d980b6: movabs $0x198,%rbx
  0x00007fb547d980c0: jge    0x00007fb547d980d0
  0x00007fb547d980c6: movabs $0x1a8,%rbx
  0x00007fb547d980d0: mov    (%rdi,%rbx,1),%rdx
  0x00007fb547d980d4: lea    0x1(%rdx),%rdx
  0x00007fb547d980d8: mov    %rdx,(%rdi,%rbx,1)
  0x00007fb547d980dc: jge    0x00007fb547d980f5  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@35 (line 647)

  0x00007fb547d980e2: mov    0x14(%rsi),%eax
  0x00007fb547d980e5: shl    $0x3,%rax          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@39 (line 648)

  0x00007fb547d980e9: mov    0x10(%rax),%eax    ; implicit exception: dispatches to 0x00007fb547d98129
  0x00007fb547d980ec: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@42 (line 648)

  0x00007fb547d980f0: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@45 (line 648)
                                                ; implicit exception: dispatches to 0x00007fb547d9812e
  0x00007fb547d980f3: dec    %eax
  0x00007fb547d980f5: mov    %eax,0x10(%rsi)    ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@52 (line 651)

  0x00007fb547d980f8: add    $0x30,%rsp
  0x00007fb547d980fc: pop    %rbp
  0x00007fb547d980fd: mov    0x108(%r15),%r10
  0x00007fb547d98104: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d98107: retq   
  0x00007fb547d98108: movabs $0x7fb52cf43350,%r10  ;   {metadata({method} {0x00007fb52cf43350} &apos;nextIndex&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d98112: mov    %r10,0x8(%rsp)
  0x00007fb547d98117: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9811f: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@-1 (line 641)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d98124: jmpq   0x00007fb547d98094
  0x00007fb547d98129: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@42 (line 648)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9812e: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@45 (line 648)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d98133: nop
  0x00007fb547d98134: nop
  0x00007fb547d98135: mov    0x440(%r15),%rax
  0x00007fb547d9813c: movabs $0x0,%r10
  0x00007fb547d98146: mov    %r10,0x440(%r15)
  0x00007fb547d9814d: movabs $0x0,%r10
  0x00007fb547d98157: mov    %r10,0x448(%r15)
  0x00007fb547d9815e: add    $0x30,%rsp
  0x00007fb547d98162: pop    %rbp
  0x00007fb547d98163: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d98168: hlt    
  0x00007fb547d98169: hlt    
  0x00007fb547d9816a: hlt    
  0x00007fb547d9816b: hlt    
  0x00007fb547d9816c: hlt    
  0x00007fb547d9816d: hlt    
  0x00007fb547d9816e: hlt    
  0x00007fb547d9816f: hlt    
  0x00007fb547d98170: hlt    
  0x00007fb547d98171: hlt    
  0x00007fb547d98172: hlt    
  0x00007fb547d98173: hlt    
  0x00007fb547d98174: hlt    
  0x00007fb547d98175: hlt    
  0x00007fb547d98176: hlt    
  0x00007fb547d98177: hlt    
  0x00007fb547d98178: hlt    
  0x00007fb547d98179: hlt    
  0x00007fb547d9817a: hlt    
  0x00007fb547d9817b: hlt    
  0x00007fb547d9817c: hlt    
  0x00007fb547d9817d: hlt    
  0x00007fb547d9817e: hlt    
  0x00007fb547d9817f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d98180: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d98185: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9818f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d98193: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d98198: hlt    
[Deopt Handler Code]
  0x00007fb547d98199: movabs $0x7fb547d98199,%r10  ;   {section_word}
  0x00007fb547d981a3: push   %r10
  0x00007fb547d981a5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d981aa: hlt    
  0x00007fb547d981ab: hlt    
  0x00007fb547d981ac: hlt    
  0x00007fb547d981ad: hlt    
  0x00007fb547d981ae: hlt    
  0x00007fb547d981af: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 228 238 243 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='27' method='java.util.ImmutableCollections$AbstractImmutableCollection &lt;init&gt; ()V' bytes='5' count='384' iicount='384' level='3' stamp='0.503' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='27' compiler='c1' level='3' entry='0x00007fb547d984c0' size='1048' address='0x00007fb547d98310' relocation_offset='376' insts_offset='432' stub_offset='816' scopes_data_offset='896' scopes_pcs_offset='944' dependencies_offset='1040' metadata_offset='864' method='java.util.ImmutableCollections$AbstractImmutableCollection &lt;init&gt; ()V' bytes='5' count='402' iicount='402' stamp='0.503'/>
<print_nmethod stamp='0.503'>
Compiled method (c1)     503   27       3       java.util.ImmutableCollections$AbstractImmutableCollection::&lt;init&gt; (5 bytes)
 total in heap  [0x00007fb547d98310,0x00007fb547d98728] = 1048
 relocation     [0x00007fb547d98488,0x00007fb547d984c0] = 56
 main code      [0x00007fb547d984c0,0x00007fb547d98640] = 384
 stub code      [0x00007fb547d98640,0x00007fb547d98670] = 48
 metadata       [0x00007fb547d98670,0x00007fb547d98690] = 32
 scopes data    [0x00007fb547d98690,0x00007fb547d986c0] = 48
 scopes pcs     [0x00007fb547d986c0,0x00007fb547d98720] = 96
 dependencies   [0x00007fb547d98720,0x00007fb547d98728] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$AbstractImmutableCollection.&lt;init&gt;()V  [0x00007fb547d984c0, 0x00007fb547d98670]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdcb460} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/ImmutableCollections$AbstractImmutableCollection&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d984c0: mov    0x8(%rsi),%r10d
  0x00007fb547d984c4: movabs $0x800000000,%r12
  0x00007fb547d984ce: add    %r12,%r10
  0x00007fb547d984d1: xor    %r12,%r12
  0x00007fb547d984d4: cmp    %rax,%r10
  0x00007fb547d984d7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d984dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d984e0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d984e7: push   %rbp
  0x00007fb547d984e8: sub    $0x30,%rsp
  0x00007fb547d984ec: movabs $0x7fb52cf44b50,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdcb460} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/ImmutableCollections$AbstractImmutableCollection&apos;)}
  0x00007fb547d984f6: mov    0x100(%rdi),%ebx
  0x00007fb547d984fc: add    $0x8,%ebx
  0x00007fb547d984ff: mov    %ebx,0x100(%rdi)
  0x00007fb547d98505: and    $0x1ff8,%ebx
  0x00007fb547d9850b: cmp    $0x0,%ebx
  0x00007fb547d9850e: je     0x00007fb547d9859e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$AbstractImmutableCollection::&lt;init&gt;@0 (line 74)

  0x00007fb547d98514: mov    %rsi,%rdi
  0x00007fb547d98517: movabs $0x7fb52cf44b50,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdcb460} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/ImmutableCollections$AbstractImmutableCollection&apos;)}
  0x00007fb547d98521: addq   $0x1,0x140(%rbx)
  0x00007fb547d98529: movabs $0x7fb52cf21510,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdcc1b0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fb547d98533: mov    0x100(%rdi),%ebx
  0x00007fb547d98539: add    $0x8,%ebx
  0x00007fb547d9853c: mov    %ebx,0x100(%rdi)
  0x00007fb547d98542: and    $0x7ffff8,%ebx
  0x00007fb547d98548: cmp    $0x0,%ebx
  0x00007fb547d9854b: je     0x00007fb547d985bf
  0x00007fb547d98551: mov    %rsi,%rdi
  0x00007fb547d98554: movabs $0x7fb52cf21510,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdcc1b0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fb547d9855e: addq   $0x1,0x140(%rbx)
  0x00007fb547d98566: movabs $0x7fb52cedd4a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d98570: mov    0x100(%rdi),%ebx
  0x00007fb547d98576: add    $0x8,%ebx
  0x00007fb547d98579: mov    %ebx,0x100(%rdi)
  0x00007fb547d9857f: and    $0x7ffff8,%ebx
  0x00007fb547d98585: cmp    $0x0,%ebx
  0x00007fb547d98588: je     0x00007fb547d985e0
  0x00007fb547d9858e: add    $0x30,%rsp
  0x00007fb547d98592: pop    %rbp
  0x00007fb547d98593: mov    0x108(%r15),%r10
  0x00007fb547d9859a: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9859d: retq   
  0x00007fb547d9859e: movabs $0x7fb52cdcb460,%r10  ;   {metadata({method} {0x00007fb52cdcb460} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/ImmutableCollections$AbstractImmutableCollection&apos;)}
  0x00007fb547d985a8: mov    %r10,0x8(%rsp)
  0x00007fb547d985ad: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d985b5: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$AbstractImmutableCollection::&lt;init&gt;@-1 (line 74)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d985ba: jmpq   0x00007fb547d98514
  0x00007fb547d985bf: movabs $0x7fb52cdcc1b0,%r10  ;   {metadata({method} {0x00007fb52cdcc1b0} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractCollection&apos;)}
  0x00007fb547d985c9: mov    %r10,0x8(%rsp)
  0x00007fb547d985ce: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d985d6: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::&lt;init&gt;@-1 (line 66)
                                                ; - java.util.ImmutableCollections$AbstractImmutableCollection::&lt;init&gt;@1 (line 74)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d985db: jmpq   0x00007fb547d98551
  0x00007fb547d985e0: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d985ea: mov    %r10,0x8(%rsp)
  0x00007fb547d985ef: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d985f7: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.AbstractCollection::&lt;init&gt;@1 (line 66)
                                                ; - java.util.ImmutableCollections$AbstractImmutableCollection::&lt;init&gt;@1 (line 74)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d985fc: jmp    0x00007fb547d9858e
  0x00007fb547d985fe: nop
  0x00007fb547d985ff: nop
  0x00007fb547d98600: mov    0x440(%r15),%rax
  0x00007fb547d98607: movabs $0x0,%r10
  0x00007fb547d98611: mov    %r10,0x440(%r15)
  0x00007fb547d98618: movabs $0x0,%r10
  0x00007fb547d98622: mov    %r10,0x448(%r15)
  0x00007fb547d98629: add    $0x30,%rsp
  0x00007fb547d9862d: pop    %rbp
  0x00007fb547d9862e: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d98633: hlt    
  0x00007fb547d98634: hlt    
  0x00007fb547d98635: hlt    
  0x00007fb547d98636: hlt    
  0x00007fb547d98637: hlt    
  0x00007fb547d98638: hlt    
  0x00007fb547d98639: hlt    
  0x00007fb547d9863a: hlt    
  0x00007fb547d9863b: hlt    
  0x00007fb547d9863c: hlt    
  0x00007fb547d9863d: hlt    
  0x00007fb547d9863e: hlt    
  0x00007fb547d9863f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d98640: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d98645: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9864f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d98653: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d98658: hlt    
[Deopt Handler Code]
  0x00007fb547d98659: movabs $0x7fb547d98659,%r10  ;   {section_word}
  0x00007fb547d98663: push   %r10
  0x00007fb547d98665: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9866a: hlt    
  0x00007fb547d9866b: hlt    
  0x00007fb547d9866c: hlt    
  0x00007fb547d9866d: hlt    
  0x00007fb547d9866e: hlt    
  0x00007fb547d9866f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 250 283 316 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='28' method='java.util.KeyValueHolder getKey ()Ljava/lang/Object;' bytes='5' count='128' iicount='128' level='1' stamp='0.507' comment='tiered' hot_count='128'/>
<task_queued compile_id='29' method='java.util.KeyValueHolder getValue ()Ljava/lang/Object;' bytes='5' count='128' iicount='128' level='1' stamp='0.507' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='28' compiler='c1' level='1' entry='0x00007fb54f2c8fc0' size='704' address='0x00007fb54f2c8e10' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.util.KeyValueHolder getKey ()Ljava/lang/Object;' bytes='5' count='244' iicount='244' stamp='0.507'/>
<print_nmethod stamp='0.507'>
Compiled method (c1)     506   28       1       java.util.KeyValueHolder::getKey (5 bytes)
 total in heap  [0x00007fb54f2c8e10,0x00007fb54f2c90d0] = 704
 relocation     [0x00007fb54f2c8f88,0x00007fb54f2c8fa8] = 32
 main code      [0x00007fb54f2c8fc0,0x00007fb54f2c9040] = 128
 stub code      [0x00007fb54f2c9040,0x00007fb54f2c9070] = 48
 metadata       [0x00007fb54f2c9070,0x00007fb54f2c9078] = 8
 scopes data    [0x00007fb54f2c9078,0x00007fb54f2c9088] = 16
 scopes pcs     [0x00007fb54f2c9088,0x00007fb54f2c90c8] = 64
 dependencies   [0x00007fb54f2c90c8,0x00007fb54f2c90d0] = 8
----------------------------------------------------------------------
java/util/KeyValueHolder.getKey()Ljava/lang/Object;  [0x00007fb54f2c8fc0, 0x00007fb54f2c9070]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cefc4a8} &apos;getKey&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/KeyValueHolder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2c8fc0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c8fc4: movabs $0x800000000,%r12
  0x00007fb54f2c8fce: add    %r12,%r10
  0x00007fb54f2c8fd1: xor    %r12,%r12
  0x00007fb54f2c8fd4: cmp    %rax,%r10
  0x00007fb54f2c8fd7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c8fdd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2c8fe0: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c8fe7: push   %rbp
  0x00007fb54f2c8fe8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.KeyValueHolder::getKey@0 (line 70)

  0x00007fb54f2c8fec: mov    0xc(%rsi),%eax
  0x00007fb54f2c8fef: shl    $0x3,%rax          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.KeyValueHolder::getKey@1 (line 70)

  0x00007fb54f2c8ff3: add    $0x30,%rsp
  0x00007fb54f2c8ff7: pop    %rbp
  0x00007fb54f2c8ff8: mov    0x108(%r15),%r10
  0x00007fb54f2c8fff: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2c9002: retq   
  0x00007fb54f2c9003: nop
  0x00007fb54f2c9004: nop
  0x00007fb54f2c9005: mov    0x440(%r15),%rax
  0x00007fb54f2c900c: movabs $0x0,%r10
  0x00007fb54f2c9016: mov    %r10,0x440(%r15)
  0x00007fb54f2c901d: movabs $0x0,%r10
  0x00007fb54f2c9027: mov    %r10,0x448(%r15)
  0x00007fb54f2c902e: add    $0x30,%rsp
  0x00007fb54f2c9032: pop    %rbp
  0x00007fb54f2c9033: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2c9038: hlt    
  0x00007fb54f2c9039: hlt    
  0x00007fb54f2c903a: hlt    
  0x00007fb54f2c903b: hlt    
  0x00007fb54f2c903c: hlt    
  0x00007fb54f2c903d: hlt    
  0x00007fb54f2c903e: hlt    
  0x00007fb54f2c903f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2c9040: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2c9045: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2c904f: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c9053: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2c9058: hlt    
[Deopt Handler Code]
  0x00007fb54f2c9059: movabs $0x7fb54f2c9059,%r10  ;   {section_word}
  0x00007fb54f2c9063: push   %r10
  0x00007fb54f2c9065: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2c906a: hlt    
  0x00007fb54f2c906b: hlt    
  0x00007fb54f2c906c: hlt    
  0x00007fb54f2c906d: hlt    
  0x00007fb54f2c906e: hlt    
  0x00007fb54f2c906f: hlt    
</print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='30' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='384' iicount='384' level='3' stamp='0.511' comment='tiered' hot_count='384'/>
<task_queued compile_id='31' method='java.util.ImmutableCollections$MapN probe (Ljava/lang/Object;)I' bytes='60' count='384' backedge_count='195' iicount='384' level='3' stamp='0.511' comment='tiered' hot_count='384'/>
<task_queued compile_id='32' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='384' backedge_count='375' iicount='384' level='3' stamp='0.511' comment='tiered' hot_count='384'/>
<task_queued compile_id='33' method='java.util.ImmutableCollections$AbstractImmutableSet &lt;init&gt; ()V' bytes='5' count='384' iicount='384' level='3' stamp='0.511' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='31' compiler='c1' level='3' entry='0x00007fb547d98980' size='2912' address='0x00007fb547d98790' relocation_offset='376' insts_offset='496' stub_offset='1904' scopes_data_offset='2008' scopes_pcs_offset='2312' dependencies_offset='2856' nul_chk_table_offset='2864' metadata_offset='1984' method='java.util.ImmutableCollections$MapN probe (Ljava/lang/Object;)I' bytes='60' count='562' backedge_count='261' iicount='562' stamp='0.511'/>
<print_nmethod stamp='0.511'>
Compiled method (c1)     511   31       3       java.util.ImmutableCollections$MapN::probe (60 bytes)
 total in heap  [0x00007fb547d98790,0x00007fb547d992f0] = 2912
 relocation     [0x00007fb547d98908,0x00007fb547d98980] = 120
 main code      [0x00007fb547d98980,0x00007fb547d98f00] = 1408
 stub code      [0x00007fb547d98f00,0x00007fb547d98f50] = 80
 metadata       [0x00007fb547d98f50,0x00007fb547d98f68] = 24
 scopes data    [0x00007fb547d98f68,0x00007fb547d99098] = 304
 scopes pcs     [0x00007fb547d99098,0x00007fb547d992b8] = 544
 dependencies   [0x00007fb547d992b8,0x00007fb547d992c0] = 8
 nul chk table  [0x00007fb547d992c0,0x00007fb547d992f0] = 48
----------------------------------------------------------------------
java/util/ImmutableCollections$MapN.probe(Ljava/lang/Object;)I  [0x00007fb547d98980, 0x00007fb547d98f50]  1488 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;
  # this:     rsi:rsi   = &apos;java/util/ImmutableCollections$MapN&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x00007fb547d98980: mov    0x8(%rsi),%r10d
  0x00007fb547d98984: movabs $0x800000000,%r12
  0x00007fb547d9898e: add    %r12,%r10
  0x00007fb547d98991: xor    %r12,%r12
  0x00007fb547d98994: cmp    %rax,%r10
  0x00007fb547d98997: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9899d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d989a0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d989a7: push   %rbp
  0x00007fb547d989a8: sub    $0x80,%rsp
  0x00007fb547d989af: mov    %rsi,0x58(%rsp)
  0x00007fb547d989b4: mov    %rdx,0x60(%rsp)
  0x00007fb547d989b9: movabs $0x7fb52cf4bd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d989c3: mov    0x100(%rdi),%ebx
  0x00007fb547d989c9: add    $0x8,%ebx
  0x00007fb547d989cc: mov    %ebx,0x100(%rdi)
  0x00007fb547d989d2: and    $0x1ff8,%ebx
  0x00007fb547d989d8: cmp    $0x0,%ebx
  0x00007fb547d989db: je     0x00007fb547d98dfe  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@0 (line 956)

  0x00007fb547d989e1: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fb547d98e1f
  0x00007fb547d989e4: mov    %rdx,%rdi
  0x00007fb547d989e7: movabs $0x7fb52cf4bd60,%rbx  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d989f1: mov    0x8(%rdi),%edi
  0x00007fb547d989f4: movabs $0x800000000,%r12
  0x00007fb547d989fe: add    %r12,%rdi
  0x00007fb547d98a01: xor    %r12,%r12
  0x00007fb547d98a04: cmp    0x150(%rbx),%rdi
  0x00007fb547d98a0b: jne    0x00007fb547d98a1a
  0x00007fb547d98a0d: addq   $0x1,0x158(%rbx)
  0x00007fb547d98a15: jmpq   0x00007fb547d98a80
  0x00007fb547d98a1a: cmp    0x160(%rbx),%rdi
  0x00007fb547d98a21: jne    0x00007fb547d98a30
  0x00007fb547d98a23: addq   $0x1,0x168(%rbx)
  0x00007fb547d98a2b: jmpq   0x00007fb547d98a80
  0x00007fb547d98a30: cmpq   $0x0,0x150(%rbx)
  0x00007fb547d98a3b: jne    0x00007fb547d98a54
  0x00007fb547d98a3d: mov    %rdi,0x150(%rbx)
  0x00007fb547d98a44: movq   $0x1,0x158(%rbx)
  0x00007fb547d98a4f: jmpq   0x00007fb547d98a80
  0x00007fb547d98a54: cmpq   $0x0,0x160(%rbx)
  0x00007fb547d98a5f: jne    0x00007fb547d98a78
  0x00007fb547d98a61: mov    %rdi,0x160(%rbx)
  0x00007fb547d98a68: movq   $0x1,0x168(%rbx)
  0x00007fb547d98a73: jmpq   0x00007fb547d98a80
  0x00007fb547d98a78: addq   $0x1,0x140(%rbx)
  0x00007fb547d98a80: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@1 (line 956)

  0x00007fb547d98a83: xchg   %ax,%ax
  0x00007fb547d98a85: movabs $0xffffffffffffffff,%rax
  0x00007fb547d98a8f: callq  0x00007fb54784aa80  ; ImmutableOopMap{[88]=Oop [96]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@1 (line 956)
                                                ;   {virtual_call}
  0x00007fb547d98a94: mov    %rax,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@1 (line 956)

  0x00007fb547d98a97: mov    0x58(%rsp),%rdi
  0x00007fb547d98a9c: mov    0x18(%rdi),%eax
  0x00007fb547d98a9f: shl    $0x3,%rax          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@5 (line 956)

  0x00007fb547d98aa3: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@8 (line 956)
                                                ; implicit exception: dispatches to 0x00007fb547d98e24
  0x00007fb547d98aa6: mov    %rax,%rbx
  0x00007fb547d98aa9: sar    %ebx
  0x00007fb547d98aab: movabs $0x7fb52cf4bd60,%rax  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98ab5: addq   $0x1,0x178(%rax)
  0x00007fb547d98abd: movabs $0x7fb52ceed4c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d98ac7: mov    0x100(%rax),%edx
  0x00007fb547d98acd: add    $0x8,%edx
  0x00007fb547d98ad0: mov    %edx,0x100(%rax)
  0x00007fb547d98ad6: and    $0x7ffff8,%edx
  0x00007fb547d98adc: cmp    $0x0,%edx
  0x00007fb547d98adf: je     0x00007fb547d98e29
  0x00007fb547d98ae5: movabs $0x7fb52ceed4c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d98aef: addq   $0x1,0x140(%rax)
  0x00007fb547d98af7: movabs $0x7fb52ceed658,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d98b01: mov    0x100(%rax),%edx
  0x00007fb547d98b07: add    $0x8,%edx
  0x00007fb547d98b0a: mov    %edx,0x100(%rax)
  0x00007fb547d98b10: and    $0x7ffff8,%edx
  0x00007fb547d98b16: cmp    $0x0,%edx
  0x00007fb547d98b19: je     0x00007fb547d98e4a
  0x00007fb547d98b1f: mov    %rsi,%rax
  0x00007fb547d98b22: cmp    $0x80000000,%eax
  0x00007fb547d98b28: jne    0x00007fb547d98b39
  0x00007fb547d98b2e: xor    %edx,%edx
  0x00007fb547d98b30: cmp    $0xffffffff,%ebx
  0x00007fb547d98b33: je     0x00007fb547d98b3c
  0x00007fb547d98b39: cltd   
  0x00007fb547d98b3a: idiv   %ebx               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)
                                                ; implicit exception: dispatches to 0x00007fb547d98e6b
  0x00007fb547d98b3c: mov    %rbx,%rdx
  0x00007fb547d98b3f: xor    %rsi,%rdx
  0x00007fb547d98b42: cmp    $0x0,%edx
  0x00007fb547d98b45: movabs $0x7fb52ceed658,%rdx  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d98b4f: movabs $0x140,%rcx
  0x00007fb547d98b59: jge    0x00007fb547d98b69
  0x00007fb547d98b5f: movabs $0x150,%rcx
  0x00007fb547d98b69: mov    (%rdx,%rcx,1),%r8
  0x00007fb547d98b6d: lea    0x1(%r8),%r8
  0x00007fb547d98b71: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547d98b75: jge    0x00007fb547d98bbb  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1166)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)

  0x00007fb547d98b7b: mov    %rax,%rdx
  0x00007fb547d98b7e: imul   %ebx,%edx
  0x00007fb547d98b81: cmp    %esi,%edx
  0x00007fb547d98b83: movabs $0x7fb52ceed658,%rdx  ;   {metadata(method data for {method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d98b8d: movabs $0x160,%rcx
  0x00007fb547d98b97: je     0x00007fb547d98ba7
  0x00007fb547d98b9d: movabs $0x170,%rcx
  0x00007fb547d98ba7: mov    (%rdx,%rcx,1),%r8
  0x00007fb547d98bab: lea    0x1(%r8),%r8
  0x00007fb547d98baf: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547d98bb3: je     0x00007fb547d98bbb  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1166)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)

  0x00007fb547d98bb9: dec    %eax
  0x00007fb547d98bbb: imul   %ebx,%eax
  0x00007fb547d98bbe: sub    %eax,%esi
  0x00007fb547d98bc0: shl    %esi
  0x00007fb547d98bc2: mov    0x60(%rsp),%rdx
  0x00007fb547d98bc7: nop
  0x00007fb547d98bc8: mov    0x18(%rdi),%ebx
  0x00007fb547d98bcb: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@18 (line 959)

  0x00007fb547d98bcf: mov    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00007fb547d98e70
  0x00007fb547d98bd2: cmp    %esi,%eax
  0x00007fb547d98bd4: jbe    0x00007fb547d98e75
  0x00007fb547d98bda: movslq %esi,%rax
  0x00007fb547d98bdd: mov    0x10(%rbx,%rax,4),%ebx
  0x00007fb547d98be1: shl    $0x3,%rbx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@22 (line 959)

  0x00007fb547d98be5: cmp    $0x0,%rbx
  0x00007fb547d98be9: movabs $0x7fb52cf4bd60,%rax  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98bf3: movabs $0x198,%rcx
  0x00007fb547d98bfd: je     0x00007fb547d98c0d
  0x00007fb547d98c03: movabs $0x188,%rcx
  0x00007fb547d98c0d: mov    (%rax,%rcx,1),%r8
  0x00007fb547d98c11: lea    0x1(%r8),%r8
  0x00007fb547d98c15: mov    %r8,(%rax,%rcx,1)
  0x00007fb547d98c19: je     0x00007fb547d98dde  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@25 (line 960)

  0x00007fb547d98c1f: mov    %esi,0x68(%rsp)
  0x00007fb547d98c23: mov    %rdx,%rax
  0x00007fb547d98c26: movabs $0x7fb52cf4bd60,%rcx  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98c30: mov    0x8(%rax),%eax
  0x00007fb547d98c33: movabs $0x800000000,%r12
  0x00007fb547d98c3d: add    %r12,%rax
  0x00007fb547d98c40: xor    %r12,%r12
  0x00007fb547d98c43: cmp    0x1b8(%rcx),%rax
  0x00007fb547d98c4a: jne    0x00007fb547d98c59
  0x00007fb547d98c4c: addq   $0x1,0x1c0(%rcx)
  0x00007fb547d98c54: jmpq   0x00007fb547d98cbf
  0x00007fb547d98c59: cmp    0x1c8(%rcx),%rax
  0x00007fb547d98c60: jne    0x00007fb547d98c6f
  0x00007fb547d98c62: addq   $0x1,0x1d0(%rcx)
  0x00007fb547d98c6a: jmpq   0x00007fb547d98cbf
  0x00007fb547d98c6f: cmpq   $0x0,0x1b8(%rcx)
  0x00007fb547d98c7a: jne    0x00007fb547d98c93
  0x00007fb547d98c7c: mov    %rax,0x1b8(%rcx)
  0x00007fb547d98c83: movq   $0x1,0x1c0(%rcx)
  0x00007fb547d98c8e: jmpq   0x00007fb547d98cbf
  0x00007fb547d98c93: cmpq   $0x0,0x1c8(%rcx)
  0x00007fb547d98c9e: jne    0x00007fb547d98cb7
  0x00007fb547d98ca0: mov    %rax,0x1c8(%rcx)
  0x00007fb547d98ca7: movq   $0x1,0x1d0(%rcx)
  0x00007fb547d98cb2: jmpq   0x00007fb547d98cbf
  0x00007fb547d98cb7: addq   $0x1,0x1a8(%rcx)
  0x00007fb547d98cbf: mov    %rdx,%rax
  0x00007fb547d98cc2: mov    %rbx,%rdx
  0x00007fb547d98cc5: mov    %rax,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@35 (line 962)

  0x00007fb547d98cc8: nopl   0x0(%rax,%rax,1)
  0x00007fb547d98ccd: movabs $0xffffffffffffffff,%rax
  0x00007fb547d98cd7: callq  0x00007fb54784aa80  ; ImmutableOopMap{[96]=Oop [88]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@35 (line 962)
                                                ;   {virtual_call}
  0x00007fb547d98cdc: cmp    $0x0,%eax
  0x00007fb547d98cdf: movabs $0x7fb52cf4bd60,%rax  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98ce9: movabs $0x1f0,%rsi
  0x00007fb547d98cf3: jne    0x00007fb547d98d03
  0x00007fb547d98cf9: movabs $0x1e0,%rsi
  0x00007fb547d98d03: mov    (%rax,%rsi,1),%rdi
  0x00007fb547d98d07: lea    0x1(%rdi),%rdi
  0x00007fb547d98d0b: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547d98d0f: jne    0x00007fb547d98dc4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@38 (line 962)

  0x00007fb547d98d15: mov    0x58(%rsp),%rsi
  0x00007fb547d98d1a: mov    0x68(%rsp),%eax
  0x00007fb547d98d1e: add    $0x2,%eax
  0x00007fb547d98d21: mov    0x18(%rsi),%edi
  0x00007fb547d98d24: shl    $0x3,%rdi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@48 (line 964)

  0x00007fb547d98d28: mov    0xc(%rdi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@51 (line 964)
                                                ; implicit exception: dispatches to 0x00007fb547d98e83
  0x00007fb547d98d2b: cmp    %edi,%eax
  0x00007fb547d98d2d: movabs $0x7fb52cf4bd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98d37: movabs $0x200,%rbx
  0x00007fb547d98d41: jne    0x00007fb547d98d51
  0x00007fb547d98d47: movabs $0x210,%rbx
  0x00007fb547d98d51: mov    (%rdi,%rbx,1),%rdx
  0x00007fb547d98d55: lea    0x1(%rdx),%rdx
  0x00007fb547d98d59: mov    %rdx,(%rdi,%rbx,1)
  0x00007fb547d98d5d: jne    0x00007fb547d98d68  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@52 (line 964)

  0x00007fb547d98d63: mov    $0x0,%eax
  0x00007fb547d98d68: movabs $0x7fb52cf4bd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98d72: mov    0x104(%rdi),%ebx
  0x00007fb547d98d78: add    $0x8,%ebx
  0x00007fb547d98d7b: mov    %ebx,0x104(%rdi)
  0x00007fb547d98d81: and    $0xfff8,%ebx
  0x00007fb547d98d87: cmp    $0x0,%ebx
  0x00007fb547d98d8a: je     0x00007fb547d98e88  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@57 (line 967)

  0x00007fb547d98d90: mov    0x108(%r15),%r10   ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@57 (line 967)

  0x00007fb547d98d97: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d98d9a: movabs $0x7fb52cf4bd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98da4: incl   0x220(%rdi)
  0x00007fb547d98daa: mov    %rax,%rdi
  0x00007fb547d98dad: mov    0x60(%rsp),%rdx
  0x00007fb547d98db2: mov    %rsi,0x58(%rsp)
  0x00007fb547d98db7: mov    %rdi,%rsi
  0x00007fb547d98dba: mov    0x58(%rsp),%rdi
  0x00007fb547d98dbf: jmpq   0x00007fb547d98bc8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@57 (line 967)

  0x00007fb547d98dc4: mov    0x68(%rsp),%edi
  0x00007fb547d98dc8: mov    %rdi,%rax
  0x00007fb547d98dcb: add    $0x80,%rsp
  0x00007fb547d98dd2: pop    %rbp
  0x00007fb547d98dd3: mov    0x108(%r15),%r10
  0x00007fb547d98dda: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d98ddd: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@42 (line 963)

  0x00007fb547d98dde: mov    %rsi,%rdi
  0x00007fb547d98de1: mov    %rdi,%rsi
  0x00007fb547d98de4: neg    %esi
  0x00007fb547d98de6: mov    %rsi,%rax
  0x00007fb547d98de9: dec    %eax
  0x00007fb547d98deb: add    $0x80,%rsp
  0x00007fb547d98df2: pop    %rbp
  0x00007fb547d98df3: mov    0x108(%r15),%r10
  0x00007fb547d98dfa: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d98dfd: retq   
  0x00007fb547d98dfe: movabs $0x7fb52ce29840,%r10  ;   {metadata({method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98e08: mov    %r10,0x8(%rsp)
  0x00007fb547d98e0d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d98e15: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$MapN::probe@-1 (line 956)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d98e1a: jmpq   0x00007fb547d989e1
  0x00007fb547d98e1f: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop [96]=Oop [88]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@1 (line 956)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d98e24: callq  0x00007fb5478f3020  ; ImmutableOopMap{[96]=Oop rdi=Oop [88]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@8 (line 956)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d98e29: movabs $0x7fb52ce2e560,%r10  ;   {metadata({method} {0x00007fb52ce2e560} &apos;floorMod&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d98e33: mov    %r10,0x8(%rsp)
  0x00007fb547d98e38: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d98e40: callq  0x00007fb5478f8100  ; ImmutableOopMap{[96]=Oop rdi=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1 (line 1280)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d98e45: jmpq   0x00007fb547d98ae5
  0x00007fb547d98e4a: movabs $0x7fb52ce2e308,%r10  ;   {metadata({method} {0x00007fb52ce2e308} &apos;floorDiv&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547d98e54: mov    %r10,0x8(%rsp)
  0x00007fb547d98e59: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d98e61: callq  0x00007fb5478f8100  ; ImmutableOopMap{[96]=Oop rdi=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d98e66: jmpq   0x00007fb547d98b1f
  0x00007fb547d98e6b: callq  0x00007fb5478ee6a0  ; ImmutableOopMap{[96]=Oop rdi=Oop [88]=Oop }
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1164)
                                                ; - java.lang.Math::floorMod@3 (line 1280)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00007fb547d98e70: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdi=Oop [88]=Oop rdx=Oop [96]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@22 (line 959)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d98e75: mov    %rsi,(%rsp)
  0x00007fb547d98e79: mov    %rbx,0x8(%rsp)
  0x00007fb547d98e7e: callq  0x00007fb5478eeca0  ; ImmutableOopMap{rdi=Oop [88]=Oop rdx=Oop [96]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@22 (line 959)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547d98e83: callq  0x00007fb5478f3020  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@51 (line 964)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d98e88: movabs $0x7fb52ce29840,%r10  ;   {metadata({method} {0x00007fb52ce29840} &apos;probe&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/ImmutableCollections$MapN&apos;)}
  0x00007fb547d98e92: mov    %r10,0x8(%rsp)
  0x00007fb547d98e97: movq   $0x39,(%rsp)
  0x00007fb547d98e9f: callq  0x00007fb5478f8100  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@57 (line 967)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d98ea4: jmpq   0x00007fb547d98d90
  0x00007fb547d98ea9: nop
  0x00007fb547d98eaa: nop
  0x00007fb547d98eab: mov    0x440(%r15),%rax
  0x00007fb547d98eb2: movabs $0x0,%r10
  0x00007fb547d98ebc: mov    %r10,0x440(%r15)
  0x00007fb547d98ec3: movabs $0x0,%r10
  0x00007fb547d98ecd: mov    %r10,0x448(%r15)
  0x00007fb547d98ed4: add    $0x80,%rsp
  0x00007fb547d98edb: pop    %rbp
  0x00007fb547d98edc: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d98ee1: hlt    
  0x00007fb547d98ee2: hlt    
  0x00007fb547d98ee3: hlt    
  0x00007fb547d98ee4: hlt    
  0x00007fb547d98ee5: hlt    
  0x00007fb547d98ee6: hlt    
  0x00007fb547d98ee7: hlt    
  0x00007fb547d98ee8: hlt    
  0x00007fb547d98ee9: hlt    
  0x00007fb547d98eea: hlt    
  0x00007fb547d98eeb: hlt    
  0x00007fb547d98eec: hlt    
  0x00007fb547d98eed: hlt    
  0x00007fb547d98eee: hlt    
  0x00007fb547d98eef: hlt    
  0x00007fb547d98ef0: hlt    
  0x00007fb547d98ef1: hlt    
  0x00007fb547d98ef2: hlt    
  0x00007fb547d98ef3: hlt    
  0x00007fb547d98ef4: hlt    
  0x00007fb547d98ef5: hlt    
  0x00007fb547d98ef6: hlt    
  0x00007fb547d98ef7: hlt    
  0x00007fb547d98ef8: hlt    
  0x00007fb547d98ef9: hlt    
  0x00007fb547d98efa: hlt    
  0x00007fb547d98efb: hlt    
  0x00007fb547d98efc: hlt    
  0x00007fb547d98efd: hlt    
  0x00007fb547d98efe: hlt    
  0x00007fb547d98eff: hlt    
[Stub Code]
  0x00007fb547d98f00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d98f05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d98f0f: jmpq   0x00007fb547d98f0f  ;   {runtime_call}
  0x00007fb547d98f14: nop
  0x00007fb547d98f15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d98f1f: jmpq   0x00007fb547d98f1f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d98f24: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d98f29: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d98f33: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d98f37: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d98f3c: hlt    
[Deopt Handler Code]
  0x00007fb547d98f3d: movabs $0x7fb547d98f3d,%r10  ;   {section_word}
  0x00007fb547d98f47: push   %r10
  0x00007fb547d98f49: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d98f4e: hlt    
  0x00007fb547d98f4f: hlt    

ImmutableOopMap{[88]=Oop [96]=Oop }pc offsets: 276 
ImmutableOopMap{[96]=Oop [88]=Oop }pc offsets: 860 
ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }pc offsets: 1047 
ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }pc offsets: 1178 
ImmutableOopMap{rdx=Oop [96]=Oop [88]=Oop }pc offsets: 1188 
ImmutableOopMap{[96]=Oop rdi=Oop [88]=Oop }pc offsets: 1193 1221 1254 1264 
ImmutableOopMap{rdi=Oop [88]=Oop rdx=Oop [96]=Oop rbx=Oop }pc offsets: 1269 1283 
ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }pc offsets: 1288 1316 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='34' method='java.lang.module.ResolvedModule reference ()Ljava/lang/module/ModuleReference;' bytes='5' count='128' iicount='128' level='1' stamp='0.520' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='32' compiler='c1' level='3' entry='0x00007fb547d99500' size='2144' address='0x00007fb547d99310' relocation_offset='376' insts_offset='496' stub_offset='1328' scopes_data_offset='1424' scopes_pcs_offset='1616' dependencies_offset='2112' nul_chk_table_offset='2120' metadata_offset='1408' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='637' backedge_count='596' iicount='637' stamp='0.520'/>
<print_nmethod stamp='0.520'>
Compiled method (c1)     520   32       3       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)
 total in heap  [0x00007fb547d99310,0x00007fb547d99b70] = 2144
 relocation     [0x00007fb547d99488,0x00007fb547d994f0] = 104
 main code      [0x00007fb547d99500,0x00007fb547d99840] = 832
 stub code      [0x00007fb547d99840,0x00007fb547d99890] = 80
 metadata       [0x00007fb547d99890,0x00007fb547d998a0] = 16
 scopes data    [0x00007fb547d998a0,0x00007fb547d99960] = 192
 scopes pcs     [0x00007fb547d99960,0x00007fb547d99b50] = 496
 dependencies   [0x00007fb547d99b50,0x00007fb547d99b58] = 8
 nul chk table  [0x00007fb547d99b58,0x00007fb547d99b70] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.next()Ljava/lang/Object;  [0x00007fb547d99500, 0x00007fb547d99890]  912 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007fb547d99500: mov    0x8(%rsi),%r10d
  0x00007fb547d99504: movabs $0x800000000,%r12
  0x00007fb547d9950e: add    %r12,%r10
  0x00007fb547d99511: xor    %r12,%r12
  0x00007fb547d99514: cmp    %rax,%r10
  0x00007fb547d99517: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9951d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d99520: mov    %eax,-0x14000(%rsp)
  0x00007fb547d99527: push   %rbp
  0x00007fb547d99528: sub    $0x50,%rsp
  0x00007fb547d9952c: mov    %rsi,0x38(%rsp)
  0x00007fb547d99531: movabs $0x7fb52cf4e800,%rdi  ;   {metadata(method data for {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d9953b: mov    0x100(%rdi),%ebx
  0x00007fb547d99541: add    $0x8,%ebx
  0x00007fb547d99544: mov    %ebx,0x100(%rdi)
  0x00007fb547d9954a: and    $0x1ff8,%ebx
  0x00007fb547d99550: cmp    $0x0,%ebx
  0x00007fb547d99553: je     0x00007fb547d99766  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@0 (line 656)

  0x00007fb547d99559: mov    %rsi,%rdi
  0x00007fb547d9955c: movabs $0x7fb52cf4e800,%rbx  ;   {metadata(method data for {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d99566: addq   $0x1,0x140(%rbx)
  0x00007fb547d9956e: movabs $0x7fb52cf443b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d99578: mov    0x100(%rdi),%ebx
  0x00007fb547d9957e: add    $0x8,%ebx
  0x00007fb547d99581: mov    %ebx,0x100(%rdi)
  0x00007fb547d99587: and    $0x7ffff8,%ebx
  0x00007fb547d9958d: cmp    $0x0,%ebx
  0x00007fb547d99590: je     0x00007fb547d99787
  0x00007fb547d99596: mov    0xc(%rsi),%edi     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x00007fb547d99599: cmp    $0x0,%edi
  0x00007fb547d9959c: movabs $0x7fb52cf443b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d995a6: movabs $0x140,%rbx
  0x00007fb547d995b0: jle    0x00007fb547d995c0
  0x00007fb547d995b6: movabs $0x150,%rbx
  0x00007fb547d995c0: mov    (%rdi,%rbx,1),%rax
  0x00007fb547d995c4: lea    0x1(%rax),%rax
  0x00007fb547d995c8: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547d995cc: jle    0x00007fb547d995ec  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x00007fb547d995d2: movabs $0x7fb52cf443b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d995dc: incl   0x160(%rdi)
  0x00007fb547d995e2: mov    $0x1,%edi
  0x00007fb547d995e7: jmpq   0x00007fb547d995f1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@8 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x00007fb547d995ec: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@12 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x00007fb547d995f1: and    $0x1,%edi
  0x00007fb547d995f4: cmp    $0x0,%edi
  0x00007fb547d995f7: movabs $0x7fb52cf4e800,%rdi  ;   {metadata(method data for {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d99601: movabs $0x178,%rbx
  0x00007fb547d9960b: je     0x00007fb547d9961b
  0x00007fb547d99611: movabs $0x188,%rbx
  0x00007fb547d9961b: mov    (%rdi,%rbx,1),%rax
  0x00007fb547d9961f: lea    0x1(%rax),%rax
  0x00007fb547d99623: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547d99627: je     0x00007fb547d99726
  0x00007fb547d9962d: jmpq   0x00007fb547d9967f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@4 (line 656)

  0x00007fb547d99632: nopw   0x0(%rax,%rax,1)
  0x00007fb547d99638: movabs $0x7fb52cf4e800,%rax  ;   {metadata(method data for {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d99642: mov    0x104(%rax),%edx
  0x00007fb547d99648: add    $0x8,%edx
  0x00007fb547d9964b: mov    %edx,0x104(%rax)
  0x00007fb547d99651: and    $0xfff8,%edx
  0x00007fb547d99657: cmp    $0x0,%edx
  0x00007fb547d9965a: je     0x00007fb547d997a8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)

  0x00007fb547d99660: mov    0x108(%r15),%r10   ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)

  0x00007fb547d99667: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d9966a: movabs $0x7fb52cf4e800,%rax  ;   {metadata(method data for {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d99674: incl   0x1f0(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)

  0x00007fb547d9967a: mov    0x38(%rsp),%rsi
  0x00007fb547d9967f: mov    0x14(%rsi),%edi
  0x00007fb547d99682: shl    $0x3,%rdi          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@8 (line 659)

  0x00007fb547d99686: mov    0x10(%rdi),%edi    ; implicit exception: dispatches to 0x00007fb547d997c9
  0x00007fb547d99689: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 659)

  0x00007fb547d9968d: mov    %rsi,%rbx
  0x00007fb547d99690: movabs $0x7fb52cf4e800,%rax  ;   {metadata(method data for {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d9969a: addq   $0x1,0x198(%rax)
  0x00007fb547d996a2: mov    %rsi,%rbx
  0x00007fb547d996a5: mov    %rbx,%rsi          ;*invokevirtual nextIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 659)

  0x00007fb547d996a8: mov    %rdi,0x30(%rsp)
  0x00007fb547d996ad: xchg   %ax,%ax
  0x00007fb547d996af: callq  0x00007fb547d98060  ; ImmutableOopMap{[56]=Oop [48]=Oop }
                                                ;*invokevirtual nextIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 659)
                                                ;   {optimized virtual_call}
  0x00007fb547d996b4: mov    0x30(%rsp),%rdi
  0x00007fb547d996b9: mov    0xc(%rdi),%edx     ; implicit exception: dispatches to 0x00007fb547d997ce
  0x00007fb547d996bc: cmp    %eax,%edx
  0x00007fb547d996be: jbe    0x00007fb547d997d3
  0x00007fb547d996c4: movslq %eax,%rax
  0x00007fb547d996c7: mov    0x10(%rdi,%rax,4),%eax
  0x00007fb547d996cb: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)

  0x00007fb547d996cf: cmp    $0x0,%rax
  0x00007fb547d996d3: movabs $0x7fb52cf4e800,%rdx  ;   {metadata(method data for {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d996dd: movabs $0x1e0,%rsi
  0x00007fb547d996e7: je     0x00007fb547d996f7
  0x00007fb547d996ed: movabs $0x1d0,%rsi
  0x00007fb547d996f7: mov    (%rdx,%rsi,1),%rdi
  0x00007fb547d996fb: lea    0x1(%rdi),%rdi
  0x00007fb547d996ff: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb547d99703: je     0x00007fb547d99638  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@21 (line 659)

  0x00007fb547d99709: mov    0x38(%rsp),%rsi
  0x00007fb547d9970e: mov    0xc(%rsi),%edx     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@29 (line 660)

  0x00007fb547d99711: dec    %edx
  0x00007fb547d99713: mov    %edx,0xc(%rsi)     ;*putfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@34 (line 660)

  0x00007fb547d99716: add    $0x50,%rsp
  0x00007fb547d9971a: pop    %rbp
  0x00007fb547d9971b: mov    0x108(%r15),%r10
  0x00007fb547d99722: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d99725: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@38 (line 661)

  0x00007fb547d99726: xchg   %ax,%ax
  0x00007fb547d99728: jmpq   0x00007fb547d997f0  ;   {no_reloc}
  0x00007fb547d9972d: add    %al,(%rax)
  0x00007fb547d9972f: add    %al,(%rax)
  0x00007fb547d99731: add    %ch,%cl
  0x00007fb547d99733: retq   
  0x00007fb547d99734: add    %al,(%rax)
  0x00007fb547d99736: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)

  0x00007fb547d99739: lock movabs $0x7fb52cf4e800,%rdi
                                                ;   {metadata(method data for {method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d99744: addq   $0x1,0x208(%rdi)
  0x00007fb547d9974c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@43 (line 663)

  0x00007fb547d9974f: mov    %rax,0x40(%rsp)
  0x00007fb547d99754: data16 xchg %ax,%ax
  0x00007fb547d99757: callq  0x00007fb54784ad80  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@43 (line 663)
                                                ;   {optimized virtual_call}
  0x00007fb547d9975c: mov    0x40(%rsp),%rax
  0x00007fb547d99761: jmpq   0x00007fb547d99832
  0x00007fb547d99766: movabs $0x7fb52cf43438,%r10  ;   {metadata({method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d99770: mov    %r10,0x8(%rsp)
  0x00007fb547d99775: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9977d: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@-1 (line 656)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d99782: jmpq   0x00007fb547d99559
  0x00007fb547d99787: movabs $0x7fb52cf43260,%r10  ;   {metadata({method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d99791: mov    %r10,0x8(%rsp)
  0x00007fb547d99796: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9979e: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d997a3: jmpq   0x00007fb547d99596
  0x00007fb547d997a8: movabs $0x7fb52cf43438,%r10  ;   {metadata({method} {0x00007fb52cf43438} &apos;next&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;)}
  0x00007fb547d997b2: mov    %r10,0x8(%rsp)
  0x00007fb547d997b7: movq   $0x18,(%rsp)
  0x00007fb547d997bf: callq  0x00007fb5478f8100  ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d997c4: jmpq   0x00007fb547d99660
  0x00007fb547d997c9: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 659)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d997ce: callq  0x00007fb5478f3020  ; ImmutableOopMap{[56]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d997d3: mov    %rax,(%rsp)
  0x00007fb547d997d7: mov    %rdi,0x8(%rsp)
  0x00007fb547d997dc: callq  0x00007fb5478eeca0  ; ImmutableOopMap{[56]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547d997e1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547d997eb: mov    $0xa050f00,%eax
  0x00007fb547d997f0: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547d997f5: jmpq   0x00007fb547d99728
  0x00007fb547d997fa: mov    %rdx,%rdx
  0x00007fb547d997fd: callq  0x00007fb5478f3600  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00007fb547d99802: jmpq   0x00007fb547d99737
  0x00007fb547d99807: nop
  0x00007fb547d99808: nop
  0x00007fb547d99809: mov    0x440(%r15),%rax
  0x00007fb547d99810: movabs $0x0,%r10
  0x00007fb547d9981a: mov    %r10,0x440(%r15)
  0x00007fb547d99821: movabs $0x0,%r10
  0x00007fb547d9982b: mov    %r10,0x448(%r15)
  0x00007fb547d99832: add    $0x50,%rsp
  0x00007fb547d99836: pop    %rbp
  0x00007fb547d99837: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9983c: hlt    
  0x00007fb547d9983d: hlt    
  0x00007fb547d9983e: hlt    
  0x00007fb547d9983f: hlt    
[Stub Code]
  0x00007fb547d99840: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d99845: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9984f: jmpq   0x00007fb547d9984f  ;   {runtime_call}
  0x00007fb547d99854: nop
  0x00007fb547d99855: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9985f: jmpq   0x00007fb547d9985f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d99864: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d99869: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d99873: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d99877: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9987c: hlt    
[Deopt Handler Code]
  0x00007fb547d9987d: movabs $0x7fb547d9987d,%r10  ;   {section_word}
  0x00007fb547d99887: push   %r10
  0x00007fb547d99889: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9988e: hlt    
  0x00007fb547d9988f: hlt    

ImmutableOopMap{[56]=Oop }pc offsets: 359 
ImmutableOopMap{[56]=Oop [48]=Oop }pc offsets: 436 
ImmutableOopMap{[64]=Oop }pc offsets: 604 
ImmutableOopMap{rsi=Oop [56]=Oop }pc offsets: 642 675 
ImmutableOopMap{[56]=Oop }pc offsets: 708 
ImmutableOopMap{rsi=Oop [56]=Oop }pc offsets: 718 
ImmutableOopMap{[56]=Oop rdi=Oop }pc offsets: 723 737 
ImmutableOopMap{}pc offsets: 757 770 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='35' method='java.util.concurrent.ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='432' count='512' backedge_count='9' iicount='512' level='3' stamp='0.534' comment='tiered' hot_count='512'/>
<task_queued compile_id='36' method='java.util.concurrent.ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;)V' bytes='20' count='512' iicount='512' level='3' stamp='0.534' comment='tiered' hot_count='512'/>
<task_queued compile_id='37' method='java.util.concurrent.ConcurrentHashMap addCount (JI)V' bytes='289' count='512' backedge_count='1' iicount='512' level='3' stamp='0.534' comment='tiered' hot_count='512'/>
<print_native_nmethod method='jdk.internal.misc.Unsafe compareAndSetLong (Ljava/lang/Object;JJJ)Z' bytes='0' count='512' iicount='512' stamp='0.534' address='0x00007fb54f2c9110'>
Compiled method (nm)     534   38     n 0       jdk.internal.misc.Unsafe::compareAndSetLong (native)
 total in heap  [0x00007fb54f2c9110,0x00007fb54f2c94d0] = 960
 relocation     [0x00007fb54f2c9288,0x00007fb54f2c92b8] = 48
 main code      [0x00007fb54f2c92c0,0x00007fb54f2c94d0] = 528
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z  [0x00007fb54f2c92c0, 0x00007fb54f2c94d0]  528 bytes
[Entry Point]
  # {method} {0x00007fb52cd67a28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2c92c0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c92c4: movabs $0x800000000,%r12
  0x00007fb54f2c92ce: add    %r12,%r10
  0x00007fb54f2c92d1: xor    %r12,%r12
  0x00007fb54f2c92d4: cmp    %r10,%rax
  0x00007fb54f2c92d7: je     0x00007fb54f2c92e8
  0x00007fb54f2c92dd: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c92e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2c92e8: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c92ef: push   %rbp
  0x00007fb54f2c92f0: mov    %rsp,%rbp
  0x00007fb54f2c92f3: sub    $0x40,%rsp
  0x00007fb54f2c92f7: mov    %rdx,0x8(%rsp)
  0x00007fb54f2c92fc: cmp    $0x0,%rdx
  0x00007fb54f2c9300: lea    0x8(%rsp),%rdx
  0x00007fb54f2c9305: cmove  0x8(%rsp),%rdx
  0x00007fb54f2c930b: mov    %rsi,(%rsp)
  0x00007fb54f2c930f: cmp    $0x0,%rsi
  0x00007fb54f2c9313: lea    (%rsp),%rsi
  0x00007fb54f2c9317: cmove  (%rsp),%rsi        ; ImmutableOopMap{[8]=Oop [0]=Oop }
  0x00007fb54f2c931c: vzeroupper 
  0x00007fb54f2c931f: movabs $0x7fb54f2c931c,%r10  ;   {internal_word}
  0x00007fb54f2c9329: mov    %r10,0x330(%r15)
  0x00007fb54f2c9330: mov    %rsp,0x328(%r15)
  0x00007fb54f2c9337: cmpb   $0x0,0x166c0499(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c933e: je     0x00007fb54f2c9382
  0x00007fb54f2c9344: push   %rsi
  0x00007fb54f2c9345: push   %rdx
  0x00007fb54f2c9346: push   %rcx
  0x00007fb54f2c9347: push   %r8
  0x00007fb54f2c9349: push   %r9
  0x00007fb54f2c934b: movabs $0x7fb52cd67a28,%rsi  ;   {metadata({method} {0x00007fb52cd67a28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb54f2c9355: mov    %r15,%rdi
  0x00007fb54f2c9358: test   $0xf,%esp
  0x00007fb54f2c935e: je     0x00007fb54f2c9376
  0x00007fb54f2c9364: sub    $0x8,%rsp
  0x00007fb54f2c9368: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c936d: add    $0x8,%rsp
  0x00007fb54f2c9371: jmpq   0x00007fb54f2c937b
  0x00007fb54f2c9376: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c937b: pop    %r9
  0x00007fb54f2c937d: pop    %r8
  0x00007fb54f2c937f: pop    %rcx
  0x00007fb54f2c9380: pop    %rdx
  0x00007fb54f2c9381: pop    %rsi
  0x00007fb54f2c9382: lea    0x348(%r15),%rdi
  0x00007fb54f2c9389: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2c9394: callq  0x00007fb5653061a0  ;   {runtime_call Unsafe_CompareAndSetLong}
  0x00007fb54f2c9399: vzeroupper 
  0x00007fb54f2c939c: and    $0xff,%eax
  0x00007fb54f2c93a2: setne  %al
  0x00007fb54f2c93a5: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2c93b0: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2c93b6: testb  $0x8,0x108(%r15)
  0x00007fb54f2c93be: jne    0x00007fb54f2c93d5
  0x00007fb54f2c93c4: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2c93cf: je     0x00007fb54f2c93f9
  0x00007fb54f2c93d5: vzeroupper 
  0x00007fb54f2c93d8: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c93dc: mov    %r15,%rdi
  0x00007fb54f2c93df: mov    %rsp,%r12
  0x00007fb54f2c93e2: sub    $0x0,%rsp
  0x00007fb54f2c93e6: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c93ea: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2c93ef: mov    %r12,%rsp
  0x00007fb54f2c93f2: xor    %r12,%r12
  0x00007fb54f2c93f5: mov    -0x8(%rbp),%rax
  0x00007fb54f2c93f9: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2c9404: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2c940f: je     0x00007fb54f2c94a5
  0x00007fb54f2c9415: cmpb   $0x0,0x166c03bb(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c941c: je     0x00007fb54f2c945a
  0x00007fb54f2c9422: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9426: movabs $0x7fb52cd67a28,%rsi  ;   {metadata({method} {0x00007fb52cd67a28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb54f2c9430: mov    %r15,%rdi
  0x00007fb54f2c9433: test   $0xf,%esp
  0x00007fb54f2c9439: je     0x00007fb54f2c9451
  0x00007fb54f2c943f: sub    $0x8,%rsp
  0x00007fb54f2c9443: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9448: add    $0x8,%rsp
  0x00007fb54f2c944c: jmpq   0x00007fb54f2c9456
  0x00007fb54f2c9451: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9456: mov    -0x8(%rbp),%rax
  0x00007fb54f2c945a: movabs $0x0,%r10
  0x00007fb54f2c9464: mov    %r10,0x328(%r15)
  0x00007fb54f2c946b: movabs $0x0,%r10
  0x00007fb54f2c9475: mov    %r10,0x330(%r15)
  0x00007fb54f2c947c: vzeroupper 
  0x00007fb54f2c947f: mov    0xe0(%r15),%rcx
  0x00007fb54f2c9486: movl   $0x0,0x100(%rcx)
  0x00007fb54f2c9490: leaveq 
  0x00007fb54f2c9491: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2c9499: jne    0x00007fb54f2c94a0
  0x00007fb54f2c949f: retq   
  0x00007fb54f2c94a0: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2c94a5: vzeroupper 
  0x00007fb54f2c94a8: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c94ac: mov    %rsp,%r12
  0x00007fb54f2c94af: sub    $0x0,%rsp
  0x00007fb54f2c94b3: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c94b7: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2c94bc: mov    %r12,%rsp
  0x00007fb54f2c94bf: xor    %r12,%r12
  0x00007fb54f2c94c2: mov    -0x8(%rbp),%rax
  0x00007fb54f2c94c6: jmpq   0x00007fb54f2c9415
  0x00007fb54f2c94cb: hlt    
  0x00007fb54f2c94cc: hlt    
  0x00007fb54f2c94cd: hlt    
  0x00007fb54f2c94ce: hlt    
  0x00007fb54f2c94cf: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[8]=Oop [0]=Oop off=92}
</print_native_nmethod>
<nmethod compile_id='38' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2c92c0' size='960' address='0x00007fb54f2c9110' relocation_offset='376' consts_offset='960' insts_offset='432' method='jdk.internal.misc.Unsafe compareAndSetLong (Ljava/lang/Object;JJJ)Z' bytes='0' count='512' iicount='512' stamp='0.539'/>
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z  [0x00007fb54f2c92c0, 0x00007fb54f2c94d0]  528 bytes
[Entry Point]
  # {method} {0x00007fb52cd67a28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2c92c0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c92c4: movabs $0x800000000,%r12
  0x00007fb54f2c92ce: add    %r12,%r10
  0x00007fb54f2c92d1: xor    %r12,%r12
  0x00007fb54f2c92d4: cmp    %r10,%rax
  0x00007fb54f2c92d7: je     0x00007fb54f2c92e8
  0x00007fb54f2c92dd: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c92e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2c92e8: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c92ef: push   %rbp
  0x00007fb54f2c92f0: mov    %rsp,%rbp
  0x00007fb54f2c92f3: sub    $0x40,%rsp
  0x00007fb54f2c92f7: mov    %rdx,0x8(%rsp)
  0x00007fb54f2c92fc: cmp    $0x0,%rdx
  0x00007fb54f2c9300: lea    0x8(%rsp),%rdx
  0x00007fb54f2c9305: cmove  0x8(%rsp),%rdx
  0x00007fb54f2c930b: mov    %rsi,(%rsp)
  0x00007fb54f2c930f: cmp    $0x0,%rsi
  0x00007fb54f2c9313: lea    (%rsp),%rsi
  0x00007fb54f2c9317: cmove  (%rsp),%rsi        ; ImmutableOopMap{[8]=Oop [0]=Oop }
  0x00007fb54f2c931c: vzeroupper 
  0x00007fb54f2c931f: movabs $0x7fb54f2c931c,%r10  ;   {internal_word}
  0x00007fb54f2c9329: mov    %r10,0x330(%r15)
  0x00007fb54f2c9330: mov    %rsp,0x328(%r15)
  0x00007fb54f2c9337: cmpb   $0x0,0x166c0499(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c933e: je     0x00007fb54f2c9382
  0x00007fb54f2c9344: push   %rsi
  0x00007fb54f2c9345: push   %rdx
  0x00007fb54f2c9346: push   %rcx
  0x00007fb54f2c9347: push   %r8
  0x00007fb54f2c9349: push   %r9
  0x00007fb54f2c934b: movabs $0x7fb52cd67a28,%rsi  ;   {metadata({method} {0x00007fb52cd67a28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb54f2c9355: mov    %r15,%rdi
  0x00007fb54f2c9358: test   $0xf,%esp
  0x00007fb54f2c935e: je     0x00007fb54f2c9376
  0x00007fb54f2c9364: sub    $0x8,%rsp
  0x00007fb54f2c9368: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c936d: add    $0x8,%rsp
  0x00007fb54f2c9371: jmpq   0x00007fb54f2c937b
  0x00007fb54f2c9376: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c937b: pop    %r9
  0x00007fb54f2c937d: pop    %r8
  0x00007fb54f2c937f: pop    %rcx
  0x00007fb54f2c9380: pop    %rdx
  0x00007fb54f2c9381: pop    %rsi
  0x00007fb54f2c9382: lea    0x348(%r15),%rdi
  0x00007fb54f2c9389: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2c9394: callq  0x00007fb5653061a0  ;   {runtime_call Unsafe_CompareAndSetLong}
  0x00007fb54f2c9399: vzeroupper 
  0x00007fb54f2c939c: and    $0xff,%eax
  0x00007fb54f2c93a2: setne  %al
  0x00007fb54f2c93a5: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2c93b0: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2c93b6: testb  $0x8,0x108(%r15)
  0x00007fb54f2c93be: jne    0x00007fb54f2c93d5
  0x00007fb54f2c93c4: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2c93cf: je     0x00007fb54f2c93f9
  0x00007fb54f2c93d5: vzeroupper 
  0x00007fb54f2c93d8: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c93dc: mov    %r15,%rdi
  0x00007fb54f2c93df: mov    %rsp,%r12
  0x00007fb54f2c93e2: sub    $0x0,%rsp
  0x00007fb54f2c93e6: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c93ea: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2c93ef: mov    %r12,%rsp
  0x00007fb54f2c93f2: xor    %r12,%r12
  0x00007fb54f2c93f5: mov    -0x8(%rbp),%rax
  0x00007fb54f2c93f9: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2c9404: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2c940f: je     0x00007fb54f2c94a5
  0x00007fb54f2c9415: cmpb   $0x0,0x166c03bb(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c941c: je     0x00007fb54f2c945a
  0x00007fb54f2c9422: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9426: movabs $0x7fb52cd67a28,%rsi  ;   {metadata({method} {0x00007fb52cd67a28} &apos;compareAndSetLong&apos; &apos;(Ljava/lang/Object;JJJ)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb54f2c9430: mov    %r15,%rdi
  0x00007fb54f2c9433: test   $0xf,%esp
  0x00007fb54f2c9439: je     0x00007fb54f2c9451
  0x00007fb54f2c943f: sub    $0x8,%rsp
  0x00007fb54f2c9443: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9448: add    $0x8,%rsp
  0x00007fb54f2c944c: jmpq   0x00007fb54f2c9456
  0x00007fb54f2c9451: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9456: mov    -0x8(%rbp),%rax
  0x00007fb54f2c945a: movabs $0x0,%r10
  0x00007fb54f2c9464: mov    %r10,0x328(%r15)
  0x00007fb54f2c946b: movabs $0x0,%r10
  0x00007fb54f2c9475: mov    %r10,0x330(%r15)
  0x00007fb54f2c947c: vzeroupper 
  0x00007fb54f2c947f: mov    0xe0(%r15),%rcx
  0x00007fb54f2c9486: movl   $0x0,0x100(%rcx)
  0x00007fb54f2c9490: leaveq 
  0x00007fb54f2c9491: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2c9499: jne    0x00007fb54f2c94a0
  0x00007fb54f2c949f: retq   
  0x00007fb54f2c94a0: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2c94a5: vzeroupper 
  0x00007fb54f2c94a8: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c94ac: mov    %rsp,%r12
  0x00007fb54f2c94af: sub    $0x0,%rsp
  0x00007fb54f2c94b3: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c94b7: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2c94bc: mov    %r12,%rsp
  0x00007fb54f2c94bf: xor    %r12,%r12
  0x00007fb54f2c94c2: mov    -0x8(%rbp),%rax
  0x00007fb54f2c94c6: jmpq   0x00007fb54f2c9415
  0x00007fb54f2c94cb: hlt    
  0x00007fb54f2c94cc: hlt    
  0x00007fb54f2c94cd: hlt    
  0x00007fb54f2c94ce: hlt    
  0x00007fb54f2c94cf: hlt    
<writer thread='1329936'/>
<nmethod compile_id='25' compiler='c1' level='3' entry='0x00007fb547d99d40' size='776' address='0x00007fb547d99b90' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='680' scopes_pcs_offset='704' dependencies_offset='768' metadata_offset='672' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='585' iicount='585' stamp='0.541'/>
<print_nmethod stamp='0.541'>
Compiled method (c1)     541   25       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
 total in heap  [0x00007fb547d99b90,0x00007fb547d99e98] = 776
 relocation     [0x00007fb547d99d08,0x00007fb547d99d30] = 40
 main code      [0x00007fb547d99d40,0x00007fb547d99e00] = 192
 stub code      [0x00007fb547d99e00,0x00007fb547d99e30] = 48
 metadata       [0x00007fb547d99e30,0x00007fb547d99e38] = 8
 scopes data    [0x00007fb547d99e38,0x00007fb547d99e50] = 24
 scopes pcs     [0x00007fb547d99e50,0x00007fb547d99e90] = 64
 dependencies   [0x00007fb547d99e90,0x00007fb547d99e98] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.spread(I)I  [0x00007fb547d99d40, 0x00007fb547d99e30]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cde2d28} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d99d40: mov    %eax,-0x14000(%rsp)
  0x00007fb547d99d47: push   %rbp
  0x00007fb547d99d48: sub    $0x30,%rsp
  0x00007fb547d99d4c: movabs $0x7fb52cf4f270,%rax  ;   {metadata(method data for {method} {0x00007fb52cde2d28} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d99d56: mov    0x100(%rax),%edi
  0x00007fb547d99d5c: add    $0x8,%edi
  0x00007fb547d99d5f: mov    %edi,0x100(%rax)
  0x00007fb547d99d65: and    $0x1ff8,%edi
  0x00007fb547d99d6b: cmp    $0x0,%edi
  0x00007fb547d99d6e: je     0x00007fb547d99d93  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 697)

  0x00007fb547d99d74: mov    %rsi,%rax
  0x00007fb547d99d77: shr    $0x10,%eax
  0x00007fb547d99d7a: xor    %rsi,%rax
  0x00007fb547d99d7d: and    $0x7fffffff,%eax
  0x00007fb547d99d83: add    $0x30,%rsp
  0x00007fb547d99d87: pop    %rbp
  0x00007fb547d99d88: mov    0x108(%r15),%r10
  0x00007fb547d99d8f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d99d92: retq   
  0x00007fb547d99d93: movabs $0x7fb52cde2d28,%r10  ;   {metadata({method} {0x00007fb52cde2d28} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d99d9d: mov    %r10,0x8(%rsp)
  0x00007fb547d99da2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d99daa: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d99daf: jmp    0x00007fb547d99d74
  0x00007fb547d99db1: nop
  0x00007fb547d99db2: nop
  0x00007fb547d99db3: mov    0x440(%r15),%rax
  0x00007fb547d99dba: movabs $0x0,%r10
  0x00007fb547d99dc4: mov    %r10,0x440(%r15)
  0x00007fb547d99dcb: movabs $0x0,%r10
  0x00007fb547d99dd5: mov    %r10,0x448(%r15)
  0x00007fb547d99ddc: add    $0x30,%rsp
  0x00007fb547d99de0: pop    %rbp
  0x00007fb547d99de1: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d99de6: hlt    
  0x00007fb547d99de7: hlt    
  0x00007fb547d99de8: hlt    
  0x00007fb547d99de9: hlt    
  0x00007fb547d99dea: hlt    
  0x00007fb547d99deb: hlt    
  0x00007fb547d99dec: hlt    
  0x00007fb547d99ded: hlt    
  0x00007fb547d99dee: hlt    
  0x00007fb547d99def: hlt    
  0x00007fb547d99df0: hlt    
  0x00007fb547d99df1: hlt    
  0x00007fb547d99df2: hlt    
  0x00007fb547d99df3: hlt    
  0x00007fb547d99df4: hlt    
  0x00007fb547d99df5: hlt    
  0x00007fb547d99df6: hlt    
  0x00007fb547d99df7: hlt    
  0x00007fb547d99df8: hlt    
  0x00007fb547d99df9: hlt    
  0x00007fb547d99dfa: hlt    
  0x00007fb547d99dfb: hlt    
  0x00007fb547d99dfc: hlt    
  0x00007fb547d99dfd: hlt    
  0x00007fb547d99dfe: hlt    
  0x00007fb547d99dff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d99e00: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d99e05: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d99e0f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d99e13: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d99e18: hlt    
[Deopt Handler Code]
  0x00007fb547d99e19: movabs $0x7fb547d99e19,%r10  ;   {section_word}
  0x00007fb547d99e23: push   %r10
  0x00007fb547d99e25: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d99e2a: hlt    
  0x00007fb547d99e2b: hlt    
  0x00007fb547d99e2c: hlt    
  0x00007fb547d99e2d: hlt    
  0x00007fb547d99e2e: hlt    
  0x00007fb547d99e2f: hlt    

ImmutableOopMap{}pc offsets: 111 </print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='jdk.internal.misc.Unsafe compareAndSetObject (Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' bytes='0' count='512' iicount='512' stamp='0.542' address='0x00007fb54f2c9510'>
Compiled method (nm)     542   39     n 0       jdk.internal.misc.Unsafe::compareAndSetObject (native)
 total in heap  [0x00007fb54f2c9510,0x00007fb54f2c98f8] = 1000
 relocation     [0x00007fb54f2c9688,0x00007fb54f2c96b8] = 48
 main code      [0x00007fb54f2c96c0,0x00007fb54f2c98f8] = 568
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z  [0x00007fb54f2c96c0, 0x00007fb54f2c98f8]  568 bytes
[Entry Point]
  # {method} {0x00007fb52cd63410} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2c96c0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c96c4: movabs $0x800000000,%r12
  0x00007fb54f2c96ce: add    %r12,%r10
  0x00007fb54f2c96d1: xor    %r12,%r12
  0x00007fb54f2c96d4: cmp    %r10,%rax
  0x00007fb54f2c96d7: je     0x00007fb54f2c96e8
  0x00007fb54f2c96dd: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c96e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2c96e8: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c96ef: push   %rbp
  0x00007fb54f2c96f0: mov    %rsp,%rbp
  0x00007fb54f2c96f3: sub    $0x40,%rsp
  0x00007fb54f2c96f7: mov    %r9,0x20(%rsp)
  0x00007fb54f2c96fc: cmp    $0x0,%r9
  0x00007fb54f2c9700: lea    0x20(%rsp),%r9
  0x00007fb54f2c9705: cmove  0x20(%rsp),%r9
  0x00007fb54f2c970b: mov    %r8,0x18(%rsp)
  0x00007fb54f2c9710: cmp    $0x0,%r8
  0x00007fb54f2c9714: lea    0x18(%rsp),%r8
  0x00007fb54f2c9719: cmove  0x18(%rsp),%r8
  0x00007fb54f2c971f: mov    %rdx,0x8(%rsp)
  0x00007fb54f2c9724: cmp    $0x0,%rdx
  0x00007fb54f2c9728: lea    0x8(%rsp),%rdx
  0x00007fb54f2c972d: cmove  0x8(%rsp),%rdx
  0x00007fb54f2c9733: mov    %rsi,(%rsp)
  0x00007fb54f2c9737: cmp    $0x0,%rsi
  0x00007fb54f2c973b: lea    (%rsp),%rsi
  0x00007fb54f2c973f: cmove  (%rsp),%rsi        ; ImmutableOopMap{[32]=Oop [24]=Oop [8]=Oop [0]=Oop }
  0x00007fb54f2c9744: vzeroupper 
  0x00007fb54f2c9747: movabs $0x7fb54f2c9744,%r10  ;   {internal_word}
  0x00007fb54f2c9751: mov    %r10,0x330(%r15)
  0x00007fb54f2c9758: mov    %rsp,0x328(%r15)
  0x00007fb54f2c975f: cmpb   $0x0,0x166c0071(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c9766: je     0x00007fb54f2c97aa
  0x00007fb54f2c976c: push   %rsi
  0x00007fb54f2c976d: push   %rdx
  0x00007fb54f2c976e: push   %rcx
  0x00007fb54f2c976f: push   %r8
  0x00007fb54f2c9771: push   %r9
  0x00007fb54f2c9773: movabs $0x7fb52cd63410,%rsi  ;   {metadata({method} {0x00007fb52cd63410} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb54f2c977d: mov    %r15,%rdi
  0x00007fb54f2c9780: test   $0xf,%esp
  0x00007fb54f2c9786: je     0x00007fb54f2c979e
  0x00007fb54f2c978c: sub    $0x8,%rsp
  0x00007fb54f2c9790: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c9795: add    $0x8,%rsp
  0x00007fb54f2c9799: jmpq   0x00007fb54f2c97a3
  0x00007fb54f2c979e: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c97a3: pop    %r9
  0x00007fb54f2c97a5: pop    %r8
  0x00007fb54f2c97a7: pop    %rcx
  0x00007fb54f2c97a8: pop    %rdx
  0x00007fb54f2c97a9: pop    %rsi
  0x00007fb54f2c97aa: lea    0x348(%r15),%rdi
  0x00007fb54f2c97b1: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2c97bc: callq  0x00007fb565309ca0  ;   {runtime_call Unsafe_CompareAndSetObject}
  0x00007fb54f2c97c1: vzeroupper 
  0x00007fb54f2c97c4: and    $0xff,%eax
  0x00007fb54f2c97ca: setne  %al
  0x00007fb54f2c97cd: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2c97d8: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2c97de: testb  $0x8,0x108(%r15)
  0x00007fb54f2c97e6: jne    0x00007fb54f2c97fd
  0x00007fb54f2c97ec: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2c97f7: je     0x00007fb54f2c9821
  0x00007fb54f2c97fd: vzeroupper 
  0x00007fb54f2c9800: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9804: mov    %r15,%rdi
  0x00007fb54f2c9807: mov    %rsp,%r12
  0x00007fb54f2c980a: sub    $0x0,%rsp
  0x00007fb54f2c980e: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c9812: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2c9817: mov    %r12,%rsp
  0x00007fb54f2c981a: xor    %r12,%r12
  0x00007fb54f2c981d: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9821: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2c982c: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2c9837: je     0x00007fb54f2c98cd
  0x00007fb54f2c983d: cmpb   $0x0,0x166bff93(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c9844: je     0x00007fb54f2c9882
  0x00007fb54f2c984a: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c984e: movabs $0x7fb52cd63410,%rsi  ;   {metadata({method} {0x00007fb52cd63410} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb54f2c9858: mov    %r15,%rdi
  0x00007fb54f2c985b: test   $0xf,%esp
  0x00007fb54f2c9861: je     0x00007fb54f2c9879
  0x00007fb54f2c9867: sub    $0x8,%rsp
  0x00007fb54f2c986b: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9870: add    $0x8,%rsp
  0x00007fb54f2c9874: jmpq   0x00007fb54f2c987e
  0x00007fb54f2c9879: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c987e: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9882: movabs $0x0,%r10
  0x00007fb54f2c988c: mov    %r10,0x328(%r15)
  0x00007fb54f2c9893: movabs $0x0,%r10
  0x00007fb54f2c989d: mov    %r10,0x330(%r15)
  0x00007fb54f2c98a4: vzeroupper 
  0x00007fb54f2c98a7: mov    0xe0(%r15),%rcx
  0x00007fb54f2c98ae: movl   $0x0,0x100(%rcx)
  0x00007fb54f2c98b8: leaveq 
  0x00007fb54f2c98b9: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2c98c1: jne    0x00007fb54f2c98c8
  0x00007fb54f2c98c7: retq   
  0x00007fb54f2c98c8: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2c98cd: vzeroupper 
  0x00007fb54f2c98d0: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c98d4: mov    %rsp,%r12
  0x00007fb54f2c98d7: sub    $0x0,%rsp
  0x00007fb54f2c98db: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c98df: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2c98e4: mov    %r12,%rsp
  0x00007fb54f2c98e7: xor    %r12,%r12
  0x00007fb54f2c98ea: mov    -0x8(%rbp),%rax
  0x00007fb54f2c98ee: jmpq   0x00007fb54f2c983d
  0x00007fb54f2c98f3: hlt    
  0x00007fb54f2c98f4: hlt    
  0x00007fb54f2c98f5: hlt    
  0x00007fb54f2c98f6: hlt    
  0x00007fb54f2c98f7: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[32]=Oop [24]=Oop [8]=Oop [0]=Oop off=132}
</print_native_nmethod>
<nmethod compile_id='39' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2c96c0' size='1000' address='0x00007fb54f2c9510' relocation_offset='376' consts_offset='1000' insts_offset='432' method='jdk.internal.misc.Unsafe compareAndSetObject (Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' bytes='0' count='512' iicount='512' stamp='0.548'/>
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z  [0x00007fb54f2c96c0, 0x00007fb54f2c98f8]  568 bytes
[Entry Point]
  # {method} {0x00007fb52cd63410} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/misc/Unsafe&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2c96c0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c96c4: movabs $0x800000000,%r12
  0x00007fb54f2c96ce: add    %r12,%r10
  0x00007fb54f2c96d1: xor    %r12,%r12
  0x00007fb54f2c96d4: cmp    %r10,%rax
  0x00007fb54f2c96d7: je     0x00007fb54f2c96e8
  0x00007fb54f2c96dd: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c96e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2c96e8: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c96ef: push   %rbp
  0x00007fb54f2c96f0: mov    %rsp,%rbp
  0x00007fb54f2c96f3: sub    $0x40,%rsp
  0x00007fb54f2c96f7: mov    %r9,0x20(%rsp)
  0x00007fb54f2c96fc: cmp    $0x0,%r9
  0x00007fb54f2c9700: lea    0x20(%rsp),%r9
  0x00007fb54f2c9705: cmove  0x20(%rsp),%r9
  0x00007fb54f2c970b: mov    %r8,0x18(%rsp)
  0x00007fb54f2c9710: cmp    $0x0,%r8
  0x00007fb54f2c9714: lea    0x18(%rsp),%r8
  0x00007fb54f2c9719: cmove  0x18(%rsp),%r8
  0x00007fb54f2c971f: mov    %rdx,0x8(%rsp)
  0x00007fb54f2c9724: cmp    $0x0,%rdx
  0x00007fb54f2c9728: lea    0x8(%rsp),%rdx
  0x00007fb54f2c972d: cmove  0x8(%rsp),%rdx
  0x00007fb54f2c9733: mov    %rsi,(%rsp)
  0x00007fb54f2c9737: cmp    $0x0,%rsi
  0x00007fb54f2c973b: lea    (%rsp),%rsi
  0x00007fb54f2c973f: cmove  (%rsp),%rsi        ; ImmutableOopMap{[32]=Oop [24]=Oop [8]=Oop [0]=Oop }
  0x00007fb54f2c9744: vzeroupper 
  0x00007fb54f2c9747: movabs $0x7fb54f2c9744,%r10  ;   {internal_word}
  0x00007fb54f2c9751: mov    %r10,0x330(%r15)
  0x00007fb54f2c9758: mov    %rsp,0x328(%r15)
  0x00007fb54f2c975f: cmpb   $0x0,0x166c0071(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c9766: je     0x00007fb54f2c97aa
  0x00007fb54f2c976c: push   %rsi
  0x00007fb54f2c976d: push   %rdx
  0x00007fb54f2c976e: push   %rcx
  0x00007fb54f2c976f: push   %r8
  0x00007fb54f2c9771: push   %r9
  0x00007fb54f2c9773: movabs $0x7fb52cd63410,%rsi  ;   {metadata({method} {0x00007fb52cd63410} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb54f2c977d: mov    %r15,%rdi
  0x00007fb54f2c9780: test   $0xf,%esp
  0x00007fb54f2c9786: je     0x00007fb54f2c979e
  0x00007fb54f2c978c: sub    $0x8,%rsp
  0x00007fb54f2c9790: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c9795: add    $0x8,%rsp
  0x00007fb54f2c9799: jmpq   0x00007fb54f2c97a3
  0x00007fb54f2c979e: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c97a3: pop    %r9
  0x00007fb54f2c97a5: pop    %r8
  0x00007fb54f2c97a7: pop    %rcx
  0x00007fb54f2c97a8: pop    %rdx
  0x00007fb54f2c97a9: pop    %rsi
  0x00007fb54f2c97aa: lea    0x348(%r15),%rdi
  0x00007fb54f2c97b1: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2c97bc: callq  0x00007fb565309ca0  ;   {runtime_call Unsafe_CompareAndSetObject}
  0x00007fb54f2c97c1: vzeroupper 
  0x00007fb54f2c97c4: and    $0xff,%eax
  0x00007fb54f2c97ca: setne  %al
  0x00007fb54f2c97cd: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2c97d8: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2c97de: testb  $0x8,0x108(%r15)
  0x00007fb54f2c97e6: jne    0x00007fb54f2c97fd
  0x00007fb54f2c97ec: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2c97f7: je     0x00007fb54f2c9821
  0x00007fb54f2c97fd: vzeroupper 
  0x00007fb54f2c9800: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9804: mov    %r15,%rdi
  0x00007fb54f2c9807: mov    %rsp,%r12
  0x00007fb54f2c980a: sub    $0x0,%rsp
  0x00007fb54f2c980e: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c9812: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2c9817: mov    %r12,%rsp
  0x00007fb54f2c981a: xor    %r12,%r12
  0x00007fb54f2c981d: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9821: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2c982c: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2c9837: je     0x00007fb54f2c98cd
  0x00007fb54f2c983d: cmpb   $0x0,0x166bff93(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c9844: je     0x00007fb54f2c9882
  0x00007fb54f2c984a: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c984e: movabs $0x7fb52cd63410,%rsi  ;   {metadata({method} {0x00007fb52cd63410} &apos;compareAndSetObject&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb54f2c9858: mov    %r15,%rdi
  0x00007fb54f2c985b: test   $0xf,%esp
  0x00007fb54f2c9861: je     0x00007fb54f2c9879
  0x00007fb54f2c9867: sub    $0x8,%rsp
  0x00007fb54f2c986b: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9870: add    $0x8,%rsp
  0x00007fb54f2c9874: jmpq   0x00007fb54f2c987e
  0x00007fb54f2c9879: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c987e: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9882: movabs $0x0,%r10
  0x00007fb54f2c988c: mov    %r10,0x328(%r15)
  0x00007fb54f2c9893: movabs $0x0,%r10
  0x00007fb54f2c989d: mov    %r10,0x330(%r15)
  0x00007fb54f2c98a4: vzeroupper 
  0x00007fb54f2c98a7: mov    0xe0(%r15),%rcx
  0x00007fb54f2c98ae: movl   $0x0,0x100(%rcx)
  0x00007fb54f2c98b8: leaveq 
  0x00007fb54f2c98b9: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2c98c1: jne    0x00007fb54f2c98c8
  0x00007fb54f2c98c7: retq   
  0x00007fb54f2c98c8: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2c98cd: vzeroupper 
  0x00007fb54f2c98d0: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c98d4: mov    %rsp,%r12
  0x00007fb54f2c98d7: sub    $0x0,%rsp
  0x00007fb54f2c98db: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c98df: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2c98e4: mov    %r12,%rsp
  0x00007fb54f2c98e7: xor    %r12,%r12
  0x00007fb54f2c98ea: mov    -0x8(%rbp),%rax
  0x00007fb54f2c98ee: jmpq   0x00007fb54f2c983d
  0x00007fb54f2c98f3: hlt    
  0x00007fb54f2c98f4: hlt    
  0x00007fb54f2c98f5: hlt    
  0x00007fb54f2c98f6: hlt    
  0x00007fb54f2c98f7: hlt    
<writer thread='1329936'/>
<nmethod compile_id='35' compiler='c1' level='3' entry='0x00007fb547d9a2a0' size='14624' address='0x00007fb547d99f10' relocation_offset='376' insts_offset='912' stub_offset='9520' scopes_data_offset='9800' scopes_pcs_offset='11888' dependencies_offset='14256' handler_table_offset='14264' nul_chk_table_offset='14576' oops_offset='9728' metadata_offset='9736' method='java.util.concurrent.ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='432' count='571' backedge_count='10' iicount='571' stamp='0.550'/>
<writer thread='1329923'/>
<task_queued compile_id='40' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='512' iicount='512' level='3' stamp='0.550' comment='tiered' hot_count='512'/>
<writer thread='1329936'/>
<print_nmethod stamp='0.550'>
Compiled method (c1)     550   35   !   3       java.util.concurrent.ConcurrentHashMap::putVal (432 bytes)
 total in heap  [0x00007fb547d99f10,0x00007fb547d9d830] = 14624
 relocation     [0x00007fb547d9a088,0x00007fb547d9a298] = 528
 main code      [0x00007fb547d9a2a0,0x00007fb547d9c440] = 8608
 stub code      [0x00007fb547d9c440,0x00007fb547d9c510] = 208
 oops           [0x00007fb547d9c510,0x00007fb547d9c518] = 8
 metadata       [0x00007fb547d9c518,0x00007fb547d9c558] = 64
 scopes data    [0x00007fb547d9c558,0x00007fb547d9cd80] = 2088
 scopes pcs     [0x00007fb547d9cd80,0x00007fb547d9d6c0] = 2368
 dependencies   [0x00007fb547d9d6c0,0x00007fb547d9d6c8] = 8
 handler table  [0x00007fb547d9d6c8,0x00007fb547d9d800] = 312
 nul chk table  [0x00007fb547d9d800,0x00007fb547d9d830] = 48
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;  [0x00007fb547d9a2a0, 0x00007fb547d9c510]  8816 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8        = boolean
  #           [sp+0x140]  (sp of caller)
  0x00007fb547d9a2a0: mov    0x8(%rsi),%r10d
  0x00007fb547d9a2a4: movabs $0x800000000,%r12
  0x00007fb547d9a2ae: add    %r12,%r10
  0x00007fb547d9a2b1: xor    %r12,%r12
  0x00007fb547d9a2b4: cmp    %rax,%r10
  0x00007fb547d9a2b7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9a2bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d9a2c0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d9a2c7: push   %rbp
  0x00007fb547d9a2c8: sub    $0x130,%rsp
  0x00007fb547d9a2cf: mov    %rsi,0xa8(%rsp)
  0x00007fb547d9a2d7: mov    %rdx,0xb0(%rsp)
  0x00007fb547d9a2df: mov    %rcx,0xb8(%rsp)
  0x00007fb547d9a2e7: mov    %r8d,0xc0(%rsp)
  0x00007fb547d9a2ef: movabs $0x7fb52cf4f3d0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a2f9: mov    0x100(%rdi),%ebx
  0x00007fb547d9a2ff: add    $0x8,%ebx
  0x00007fb547d9a302: mov    %ebx,0x100(%rdi)
  0x00007fb547d9a308: and    $0x1ff8,%ebx
  0x00007fb547d9a30e: cmp    $0x0,%ebx
  0x00007fb547d9a311: je     0x00007fb547d9bf63  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0 (line 1011)

  0x00007fb547d9a317: cmp    $0x0,%rdx
  0x00007fb547d9a31b: movabs $0x7fb52cf4f3d0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a325: movabs $0x140,%rbx
  0x00007fb547d9a32f: je     0x00007fb547d9a33f
  0x00007fb547d9a335: movabs $0x150,%rbx
  0x00007fb547d9a33f: mov    (%rdi,%rbx,1),%rax
  0x00007fb547d9a343: lea    0x1(%rax),%rax
  0x00007fb547d9a347: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547d9a34b: je     0x00007fb547d9be74  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1 (line 1011)

  0x00007fb547d9a351: cmp    $0x0,%rcx
  0x00007fb547d9a355: movabs $0x7fb52cf4f3d0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a35f: movabs $0x170,%rbx
  0x00007fb547d9a369: je     0x00007fb547d9a379
  0x00007fb547d9a36f: movabs $0x160,%rbx
  0x00007fb547d9a379: mov    (%rdi,%rbx,1),%rax
  0x00007fb547d9a37d: lea    0x1(%rax),%rax
  0x00007fb547d9a381: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547d9a385: je     0x00007fb547d9be74  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5 (line 1011)

  0x00007fb547d9a38b: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fb547d9bf84
  0x00007fb547d9a38e: mov    %rdx,%rdi
  0x00007fb547d9a391: movabs $0x7fb52cf4f3d0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a39b: mov    0x8(%rdi),%edi
  0x00007fb547d9a39e: movabs $0x800000000,%r12
  0x00007fb547d9a3a8: add    %r12,%rdi
  0x00007fb547d9a3ab: xor    %r12,%r12
  0x00007fb547d9a3ae: cmp    0x1a0(%rbx),%rdi
  0x00007fb547d9a3b5: jne    0x00007fb547d9a3c4
  0x00007fb547d9a3b7: addq   $0x1,0x1a8(%rbx)
  0x00007fb547d9a3bf: jmpq   0x00007fb547d9a42a
  0x00007fb547d9a3c4: cmp    0x1b0(%rbx),%rdi
  0x00007fb547d9a3cb: jne    0x00007fb547d9a3da
  0x00007fb547d9a3cd: addq   $0x1,0x1b8(%rbx)
  0x00007fb547d9a3d5: jmpq   0x00007fb547d9a42a
  0x00007fb547d9a3da: cmpq   $0x0,0x1a0(%rbx)
  0x00007fb547d9a3e5: jne    0x00007fb547d9a3fe
  0x00007fb547d9a3e7: mov    %rdi,0x1a0(%rbx)
  0x00007fb547d9a3ee: movq   $0x1,0x1a8(%rbx)
  0x00007fb547d9a3f9: jmpq   0x00007fb547d9a42a
  0x00007fb547d9a3fe: cmpq   $0x0,0x1b0(%rbx)
  0x00007fb547d9a409: jne    0x00007fb547d9a422
  0x00007fb547d9a40b: mov    %rdi,0x1b0(%rbx)
  0x00007fb547d9a412: movq   $0x1,0x1b8(%rbx)
  0x00007fb547d9a41d: jmpq   0x00007fb547d9a42a
  0x00007fb547d9a422: addq   $0x1,0x190(%rbx)
  0x00007fb547d9a42a: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)

  0x00007fb547d9a42d: movabs $0x800001808,%rax
  0x00007fb547d9a437: callq  0x00007fb547d92460  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {virtual_call}
  0x00007fb547d9a43c: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a446: addq   $0x1,0x1c8(%rsi)
  0x00007fb547d9a44e: movabs $0x7fb52cf4f270,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde2d28} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a458: mov    0x100(%rsi),%edi
  0x00007fb547d9a45e: add    $0x8,%edi
  0x00007fb547d9a461: mov    %edi,0x100(%rsi)
  0x00007fb547d9a467: and    $0x7ffff8,%edi
  0x00007fb547d9a46d: cmp    $0x0,%edi
  0x00007fb547d9a470: je     0x00007fb547d9bf89
  0x00007fb547d9a476: mov    %rax,%rsi
  0x00007fb547d9a479: shr    $0x10,%esi
  0x00007fb547d9a47c: xor    %rax,%rsi
  0x00007fb547d9a47f: and    $0x7fffffff,%esi
  0x00007fb547d9a485: mov    %esi,0xc8(%rsp)
  0x00007fb547d9a48c: mov    0xa8(%rsp),%rdi
  0x00007fb547d9a494: mov    0x28(%rdi),%ebx
  0x00007fb547d9a497: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29 (line 1014)

  0x00007fb547d9a49b: mov    $0x0,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34 (line 1016)

  0x00007fb547d9a4a0: mov    %eax,0xc4(%rsp)
  0x00007fb547d9a4a7: nop
  0x00007fb547d9a4a8: cmp    $0x0,%rbx
  0x00007fb547d9a4ac: movabs $0x7fb52cf4f3d0,%r9  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a4b6: movabs $0x1d8,%r11
  0x00007fb547d9a4c0: je     0x00007fb547d9a4d0
  0x00007fb547d9a4c6: movabs $0x1e8,%r11
  0x00007fb547d9a4d0: mov    (%r9,%r11,1),%r13
  0x00007fb547d9a4d4: lea    0x1(%r13),%r13
  0x00007fb547d9a4d8: mov    %r13,(%r9,%r11,1)
  0x00007fb547d9a4dc: je     0x00007fb547d9a520  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36 (line 1016)

  0x00007fb547d9a4e2: mov    0xc(%rbx),%r9d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ; implicit exception: dispatches to 0x00007fb547d9bfaa
  0x00007fb547d9a4e6: cmp    $0x0,%r9d
  0x00007fb547d9a4ea: movabs $0x7fb52cf4f3d0,%r11  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a4f4: movabs $0x1f8,%r13
  0x00007fb547d9a4fe: jne    0x00007fb547d9a50e
  0x00007fb547d9a504: movabs $0x208,%r13
  0x00007fb547d9a50e: mov    (%r11,%r13,1),%r14
  0x00007fb547d9a512: lea    0x1(%r14),%r14
  0x00007fb547d9a516: mov    %r14,(%r11,%r13,1)
  0x00007fb547d9a51a: jne    0x00007fb547d9a570  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45 (line 1016)

  0x00007fb547d9a520: mov    %rdi,%rbx
  0x00007fb547d9a523: movabs $0x7fb52cf4f3d0,%r9  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a52d: addq   $0x1,0x218(%r9)
  0x00007fb547d9a535: mov    %rdi,%rsi          ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)

  0x00007fb547d9a538: nopl   0x0(%rax)
  0x00007fb547d9a53f: callq  0x00007fb54784ad80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }
                                                ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
                                                ;   {optimized virtual_call}
  0x00007fb547d9a544: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a54e: incl   0x250(%rcx)
  0x00007fb547d9a554: mov    0xc4(%rsp),%esi
  0x00007fb547d9a55b: mov    0xc0(%rsp),%r8d
  0x00007fb547d9a563: mov    0xb8(%rsp),%rcx
  0x00007fb547d9a56b: jmpq   0x00007fb547d9bc47  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54 (line 1017)

  0x00007fb547d9a570: dec    %r9d
  0x00007fb547d9a573: and    0xc8(%rsp),%r9d
  0x00007fb547d9a57b: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a585: addq   $0x1,0x268(%rcx)
  0x00007fb547d9a58d: movabs $0x7fb52cebbd60,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a597: mov    0x100(%rcx),%edx
  0x00007fb547d9a59d: add    $0x8,%edx
  0x00007fb547d9a5a0: mov    %edx,0x100(%rcx)
  0x00007fb547d9a5a6: and    $0x7ffff8,%edx
  0x00007fb547d9a5ac: cmp    $0x0,%edx
  0x00007fb547d9a5af: je     0x00007fb547d9bfaf
  0x00007fb547d9a5b5: movslq %r9d,%rdx
  0x00007fb547d9a5b8: mov    $0x2,%ecx
  0x00007fb547d9a5bd: shl    %cl,%rdx
  0x00007fb547d9a5c0: movabs $0x10,%r10
  0x00007fb547d9a5ca: add    %r10,%rdx
  0x00007fb547d9a5cd: movabs $0x7fb52cebbd60,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a5d7: lea    0x178(%rsi),%rsi
  0x00007fb547d9a5de: mov    %rbx,%rdi
  0x00007fb547d9a5e1: mov    0x8(%rdi),%edi
  0x00007fb547d9a5e4: movabs $0x800000000,%r12
  0x00007fb547d9a5ee: add    %r12,%rdi
  0x00007fb547d9a5f1: xor    %r12,%r12
  0x00007fb547d9a5f4: xor    0x8(%rsi),%rdi
  0x00007fb547d9a5f8: test   $0xfffffffffffffffc,%rdi
  0x00007fb547d9a5ff: je     0x00007fb547d9a612
  0x00007fb547d9a601: test   $0x2,%rdi
  0x00007fb547d9a608: jne    0x00007fb547d9a612
  0x00007fb547d9a60a: orq    $0x2,0x8(%rsi)
  0x00007fb547d9a612: movabs $0x62d808180,%rsi  ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x000000062d808180})}
  0x00007fb547d9a61c: movabs $0x7fb52cebbd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a626: addq   $0x1,0x140(%rdi)
  0x00007fb547d9a62e: movabs $0x7fb52cebc348,%rsi  ;   {metadata(method data for {method} {0x00007fb52cd68f60} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb547d9a638: mov    0x100(%rsi),%edi
  0x00007fb547d9a63e: add    $0x8,%edi
  0x00007fb547d9a641: mov    %edi,0x100(%rsi)
  0x00007fb547d9a647: and    $0x7ffff8,%edi
  0x00007fb547d9a64d: cmp    $0x0,%edi
  0x00007fb547d9a650: je     0x00007fb547d9bfd0
  0x00007fb547d9a656: mov    (%rbx,%rdx,1),%esi
  0x00007fb547d9a659: shl    $0x3,%rsi
  0x00007fb547d9a65d: mov    %rbx,%rdi
  0x00007fb547d9a660: movabs $0xc,%rax
  0x00007fb547d9a66a: cmp    %rax,%rdx
  0x00007fb547d9a66d: jne    0x00007fb547d9a6ae
  0x00007fb547d9a673: cmp    $0x0,%rdi
  0x00007fb547d9a677: je     0x00007fb547d9a6ae
  0x00007fb547d9a67d: mov    0x8(%rdi),%edi
  0x00007fb547d9a680: movabs $0x800000000,%r12
  0x00007fb547d9a68a: add    %r12,%rdi
  0x00007fb547d9a68d: xor    %r12,%r12
  0x00007fb547d9a690: movsbl 0x18b(%rdi),%edi
  0x00007fb547d9a697: cmp    $0x0,%edi
  0x00007fb547d9a69a: je     0x00007fb547d9a6ae
  0x00007fb547d9a6a0: movsbl 0x30(%r15),%edi
  0x00007fb547d9a6a5: cmp    $0x0,%edi
  0x00007fb547d9a6a8: jne    0x00007fb547d9bff1
  0x00007fb547d9a6ae: cmp    $0x0,%rsi
  0x00007fb547d9a6b2: jne    0x00007fb547d9a6ca
  0x00007fb547d9a6b4: movabs $0x7fb52cebbd60,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a6be: orb    $0x1,0x189(%rax)
  0x00007fb547d9a6c5: jmpq   0x00007fb547d9a7a3
  0x00007fb547d9a6ca: movabs $0x80001a9e8,%rcx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9a6d4: mov    0x8(%rsi),%eax
  0x00007fb547d9a6d7: movabs $0x800000000,%r12
  0x00007fb547d9a6e1: add    %r12,%rax
  0x00007fb547d9a6e4: xor    %r12,%r12
  0x00007fb547d9a6e7: cmp    0x38(%rax),%rcx
  0x00007fb547d9a6eb: jne    0x00007fb547d9a787
  0x00007fb547d9a6f1: movabs $0x7fb52cebbd60,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a6fb: mov    0x8(%rsi),%ecx
  0x00007fb547d9a6fe: movabs $0x800000000,%r12
  0x00007fb547d9a708: add    %r12,%rcx
  0x00007fb547d9a70b: xor    %r12,%r12
  0x00007fb547d9a70e: cmp    0x1a0(%rax),%rcx
  0x00007fb547d9a715: jne    0x00007fb547d9a724
  0x00007fb547d9a717: addq   $0x1,0x1a8(%rax)
  0x00007fb547d9a71f: jmpq   0x00007fb547d9a7a3
  0x00007fb547d9a724: cmp    0x1b0(%rax),%rcx
  0x00007fb547d9a72b: jne    0x00007fb547d9a73a
  0x00007fb547d9a72d: addq   $0x1,0x1b8(%rax)
  0x00007fb547d9a735: jmpq   0x00007fb547d9a7a3
  0x00007fb547d9a73a: cmpq   $0x0,0x1a0(%rax)
  0x00007fb547d9a745: jne    0x00007fb547d9a75e
  0x00007fb547d9a747: mov    %rcx,0x1a0(%rax)
  0x00007fb547d9a74e: movq   $0x1,0x1a8(%rax)
  0x00007fb547d9a759: jmpq   0x00007fb547d9a7a3
  0x00007fb547d9a75e: cmpq   $0x0,0x1b0(%rax)
  0x00007fb547d9a769: jne    0x00007fb547d9a782
  0x00007fb547d9a76b: mov    %rcx,0x1b0(%rax)
  0x00007fb547d9a772: movq   $0x1,0x1b8(%rax)
  0x00007fb547d9a77d: jmpq   0x00007fb547d9a7a3
  0x00007fb547d9a782: jmpq   0x00007fb547d9a7a3
  0x00007fb547d9a787: movabs $0x7fb52cebbd60,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a791: subq   $0x1,0x190(%rax)
  0x00007fb547d9a799: jmpq   0x00007fb547d9c009
  0x00007fb547d9a79e: jmpq   0x00007fb547d9a7a3
  0x00007fb547d9a7a3: mov    %rsi,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)

  0x00007fb547d9a7a6: mov    %rdi,0xd0(%rsp)
  0x00007fb547d9a7ae: cmp    $0x0,%rdi
  0x00007fb547d9a7b2: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a7bc: movabs $0x278,%rax
  0x00007fb547d9a7c6: jne    0x00007fb547d9a7d6
  0x00007fb547d9a7cc: movabs $0x288,%rax
  0x00007fb547d9a7d6: mov    (%rsi,%rax,1),%rcx
  0x00007fb547d9a7da: lea    0x1(%rcx),%rcx
  0x00007fb547d9a7de: mov    %rcx,(%rsi,%rax,1)
  0x00007fb547d9a7e2: mov    %rdx,%r8
  0x00007fb547d9a7e5: jne    0x00007fb547d9aa26  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75 (line 1018)

  0x00007fb547d9a7eb: mov    0xc8(%rsp),%esi
  0x00007fb547d9a7f2: mov    0xb8(%rsp),%rcx
  0x00007fb547d9a7fa: mov    0xb0(%rsp),%rdx
  0x00007fb547d9a802: mov    %rdx,%r11
  0x00007fb547d9a805: movabs $0x80001a9e8,%rdx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9a80f: mov    %rcx,%r14
  0x00007fb547d9a812: mov    %rsi,%r13
  0x00007fb547d9a815: mov    0x118(%r15),%rax
  0x00007fb547d9a81c: lea    0x20(%rax),%rdi
  0x00007fb547d9a820: cmp    0x128(%r15),%rdi
  0x00007fb547d9a827: ja     0x00007fb547d9c012
  0x00007fb547d9a82d: mov    %rdi,0x118(%r15)
  0x00007fb547d9a834: mov    0xb8(%rdx),%rcx
  0x00007fb547d9a83b: mov    %rcx,(%rax)
  0x00007fb547d9a83e: mov    %rdx,%rcx
  0x00007fb547d9a841: movabs $0x800000000,%r12
  0x00007fb547d9a84b: sub    %r12,%rcx
  0x00007fb547d9a84e: xor    %r12,%r12
  0x00007fb547d9a851: mov    %ecx,0x8(%rax)
  0x00007fb547d9a854: xor    %rcx,%rcx
  0x00007fb547d9a857: mov    %ecx,0xc(%rax)
  0x00007fb547d9a85a: xor    %rcx,%rcx
  0x00007fb547d9a85d: mov    %rcx,0x10(%rax)
  0x00007fb547d9a861: mov    %rcx,0x18(%rax)
  0x00007fb547d9a865: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)

  0x00007fb547d9a868: mov    %rdx,%rax
  0x00007fb547d9a86b: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a875: addq   $0x1,0x298(%rcx)
  0x00007fb547d9a87d: movabs $0x7fb52cf4fcd8,%rax  ;   {metadata(method data for {method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9a887: mov    0x100(%rax),%ecx
  0x00007fb547d9a88d: add    $0x8,%ecx
  0x00007fb547d9a890: mov    %ecx,0x100(%rax)
  0x00007fb547d9a896: and    $0x7ffff8,%ecx
  0x00007fb547d9a89c: cmp    $0x0,%ecx
  0x00007fb547d9a89f: je     0x00007fb547d9c01f
  0x00007fb547d9a8a5: mov    %rdx,%rax
  0x00007fb547d9a8a8: movabs $0x7fb52cf4fcd8,%rcx  ;   {metadata(method data for {method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9a8b2: addq   $0x1,0x140(%rcx)
  0x00007fb547d9a8ba: movabs $0x7fb52cedd4a0,%rax  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d9a8c4: mov    0x100(%rax),%ecx
  0x00007fb547d9a8ca: add    $0x8,%ecx
  0x00007fb547d9a8cd: mov    %ecx,0x100(%rax)
  0x00007fb547d9a8d3: and    $0x7ffff8,%ecx
  0x00007fb547d9a8d9: cmp    $0x0,%ecx
  0x00007fb547d9a8dc: je     0x00007fb547d9c040
  0x00007fb547d9a8e2: mov    %r13d,0xc(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 632)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x00007fb547d9a8e6: movsbl 0x30(%r15),%eax
  0x00007fb547d9a8eb: cmp    $0x0,%eax
  0x00007fb547d9a8ee: jne    0x00007fb547d9c061
  0x00007fb547d9a8f4: mov    %r11,%r10
  0x00007fb547d9a8f7: shr    $0x3,%r10
  0x00007fb547d9a8fb: mov    %r10d,0x10(%rdx)
  0x00007fb547d9a8ff: mov    %rdx,%rax
  0x00007fb547d9a902: xor    %r11,%rax
  0x00007fb547d9a905: shr    $0x15,%rax
  0x00007fb547d9a909: cmp    $0x0,%rax
  0x00007fb547d9a90d: jne    0x00007fb547d9c080  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@11 (line 633)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x00007fb547d9a913: movsbl 0x30(%r15),%eax
  0x00007fb547d9a918: cmp    $0x0,%eax
  0x00007fb547d9a91b: jne    0x00007fb547d9c098
  0x00007fb547d9a921: mov    %r14,%r10
  0x00007fb547d9a924: shr    $0x3,%r10
  0x00007fb547d9a928: mov    %r10d,0x14(%rdx)
  0x00007fb547d9a92c: lock addl $0x0,-0x40(%rsp)
  0x00007fb547d9a932: mov    %rdx,%rax
  0x00007fb547d9a935: xor    %r14,%rax
  0x00007fb547d9a938: shr    $0x15,%rax
  0x00007fb547d9a93c: cmp    $0x0,%rax
  0x00007fb547d9a940: jne    0x00007fb547d9c0b7  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@16 (line 634)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x00007fb547d9a946: movabs $0x7fb52cf4f3d0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a950: addq   $0x1,0x2a8(%rax)
  0x00007fb547d9a958: movabs $0x7fb52cf504f0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde31e8} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a962: mov    0x100(%rax),%ecx
  0x00007fb547d9a968: add    $0x8,%ecx
  0x00007fb547d9a96b: mov    %ecx,0x100(%rax)
  0x00007fb547d9a971: and    $0x7ffff8,%ecx
  0x00007fb547d9a977: cmp    $0x0,%ecx
  0x00007fb547d9a97a: je     0x00007fb547d9c0cf
  0x00007fb547d9a980: lea    (%rbx,%r8,1),%rcx
  0x00007fb547d9a984: movsbl 0x30(%r15),%eax
  0x00007fb547d9a989: cmp    $0x0,%eax
  0x00007fb547d9a98c: jne    0x00007fb547d9c0f0
  0x00007fb547d9a992: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547d9a99c: shr    $0x3,%rax
  0x00007fb547d9a9a0: mov    %rdx,%r10
  0x00007fb547d9a9a3: shr    $0x3,%r10
  0x00007fb547d9a9a7: lock cmpxchg %r10d,(%rcx)
  0x00007fb547d9a9ac: mov    $0x1,%esi
  0x00007fb547d9a9b1: je     0x00007fb547d9a9bc
  0x00007fb547d9a9b7: mov    $0x0,%esi
  0x00007fb547d9a9bc: mov    %rcx,%rdi
  0x00007fb547d9a9bf: xor    %rdx,%rdi
  0x00007fb547d9a9c2: shr    $0x15,%rdi
  0x00007fb547d9a9c6: cmp    $0x0,%rdi
  0x00007fb547d9a9ca: jne    0x00007fb547d9c10e  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17 (line 765)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)

  0x00007fb547d9a9d0: and    $0x1,%esi
  0x00007fb547d9a9d3: cmp    $0x0,%esi
  0x00007fb547d9a9d6: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9a9e0: movabs $0x2c8,%rcx
  0x00007fb547d9a9ea: jne    0x00007fb547d9a9fa
  0x00007fb547d9a9f0: movabs $0x2b8,%rcx
  0x00007fb547d9a9fa: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547d9a9fe: lea    0x1(%rsi),%rsi
  0x00007fb547d9aa02: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547d9aa06: jne    0x00007fb547d9bdae  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@97 (line 1019)

  0x00007fb547d9aa0c: mov    %rbx,%rax
  0x00007fb547d9aa0f: mov    0xc4(%rsp),%esi
  0x00007fb547d9aa16: mov    0xc0(%rsp),%r8d
  0x00007fb547d9aa1e: mov    %r14,%rcx
  0x00007fb547d9aa21: jmpq   0x00007fb547d9bc47  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x00007fb547d9aa26: mov    0xc8(%rsp),%r13d
  0x00007fb547d9aa2e: mov    0xb8(%rsp),%r14
  0x00007fb547d9aa36: mov    0xb0(%rsp),%r11
  0x00007fb547d9aa3e: mov    0xc(%rdi),%eax     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                ; implicit exception: dispatches to 0x00007fb547d9c126
  0x00007fb547d9aa41: cmp    $0xffffffff,%eax
  0x00007fb547d9aa44: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9aa4e: movabs $0x2f0,%rcx
  0x00007fb547d9aa58: jne    0x00007fb547d9aa68
  0x00007fb547d9aa5e: movabs $0x300,%rcx
  0x00007fb547d9aa68: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547d9aa6c: lea    0x1(%rsi),%rsi
  0x00007fb547d9aa70: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547d9aa74: jne    0x00007fb547d9aad8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@112 (line 1022)

  0x00007fb547d9aa7a: mov    0xa8(%rsp),%rax
  0x00007fb547d9aa82: movabs $0x7fb52cf4f3d0,%r8  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9aa8c: addq   $0x1,0x310(%r8)
  0x00007fb547d9aa94: mov    %rbx,%rdx
  0x00007fb547d9aa97: mov    %rdi,%rcx
  0x00007fb547d9aa9a: mov    0xa8(%rsp),%rsi    ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)

  0x00007fb547d9aaa2: nopl   0x0(%rax,%rax,1)
  0x00007fb547d9aaa7: callq  0x00007fb54784ad80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)
                                                ;   {optimized virtual_call}
  0x00007fb547d9aaac: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9aab6: incl   0x348(%rdx)
  0x00007fb547d9aabc: mov    0xc4(%rsp),%esi
  0x00007fb547d9aac3: mov    0xc0(%rsp),%r8d
  0x00007fb547d9aacb: mov    0xb8(%rsp),%rcx
  0x00007fb547d9aad3: jmpq   0x00007fb547d9bc47  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@125 (line 1023)

  0x00007fb547d9aad8: mov    0xc0(%rsp),%ecx
  0x00007fb547d9aadf: cmp    $0x0,%ecx
  0x00007fb547d9aae2: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9aaec: movabs $0x370,%rsi
  0x00007fb547d9aaf6: jne    0x00007fb547d9ab06
  0x00007fb547d9aafc: movabs $0x360,%rsi
  0x00007fb547d9ab06: mov    (%rdx,%rsi,1),%r11
  0x00007fb547d9ab0a: lea    0x1(%r11),%r11
  0x00007fb547d9ab0e: mov    %r11,(%rdx,%rsi,1)
  0x00007fb547d9ab12: jne    0x00007fb547d9ab3c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@129 (line 1024)

  0x00007fb547d9ab18: mov    %eax,0xcc(%rsp)
  0x00007fb547d9ab1f: mov    %r8,0xe0(%rsp)
  0x00007fb547d9ab27: mov    %r9d,0xe8(%rsp)
  0x00007fb547d9ab2f: mov    %rbx,0xd8(%rsp)
  0x00007fb547d9ab37: jmpq   0x00007fb547d9ad9e  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x00007fb547d9ab3c: cmp    0xc8(%rsp),%eax
  0x00007fb547d9ab43: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9ab4d: movabs $0x390,%rsi
  0x00007fb547d9ab57: je     0x00007fb547d9ab67
  0x00007fb547d9ab5d: movabs $0x380,%rsi
  0x00007fb547d9ab67: mov    (%rdx,%rsi,1),%r11
  0x00007fb547d9ab6b: lea    0x1(%r11),%r11
  0x00007fb547d9ab6f: mov    %r11,(%rdx,%rsi,1)
  0x00007fb547d9ab73: je     0x00007fb547d9ab9d  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@136 (line 1024)

  0x00007fb547d9ab79: mov    %eax,0xcc(%rsp)
  0x00007fb547d9ab80: mov    %r8,0xe0(%rsp)
  0x00007fb547d9ab88: mov    %r9d,0xe8(%rsp)
  0x00007fb547d9ab90: mov    %rbx,0xd8(%rsp)
  0x00007fb547d9ab98: jmpq   0x00007fb547d9ad9e  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x00007fb547d9ab9d: mov    0xb0(%rsp),%rdx
  0x00007fb547d9aba5: mov    0x10(%rdi),%esi
  0x00007fb547d9aba8: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@141 (line 1024)

  0x00007fb547d9abac: cmp    %rdx,%rsi
  0x00007fb547d9abaf: movabs $0x7fb52cf4f3d0,%r11  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9abb9: movabs $0x3b0,%r13
  0x00007fb547d9abc3: jne    0x00007fb547d9abd3
  0x00007fb547d9abc9: movabs $0x3a0,%r13
  0x00007fb547d9abd3: mov    (%r11,%r13,1),%r14
  0x00007fb547d9abd7: lea    0x1(%r14),%r14
  0x00007fb547d9abdb: mov    %r14,(%r11,%r13,1)
  0x00007fb547d9abdf: jne    0x00007fb547d9ac09  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@148 (line 1024)

  0x00007fb547d9abe5: mov    %eax,0xcc(%rsp)
  0x00007fb547d9abec: mov    %r8,0xe0(%rsp)
  0x00007fb547d9abf4: mov    %r9d,0xe8(%rsp)
  0x00007fb547d9abfc: mov    %rbx,0xd8(%rsp)
  0x00007fb547d9ac04: jmpq   0x00007fb547d9ad5d  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@165 (line 1026)

  0x00007fb547d9ac09: cmp    $0x0,%rsi
  0x00007fb547d9ac0d: movabs $0x7fb52cf4f3d0,%r11  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9ac17: movabs $0x3c0,%r13
  0x00007fb547d9ac21: je     0x00007fb547d9ac31
  0x00007fb547d9ac27: movabs $0x3d0,%r13
  0x00007fb547d9ac31: mov    (%r11,%r13,1),%r14
  0x00007fb547d9ac35: lea    0x1(%r14),%r14
  0x00007fb547d9ac39: mov    %r14,(%r11,%r13,1)
  0x00007fb547d9ac3d: mov    %eax,0xcc(%rsp)
  0x00007fb547d9ac44: mov    %r8,0xe0(%rsp)
  0x00007fb547d9ac4c: mov    %r9d,0xe8(%rsp)
  0x00007fb547d9ac54: mov    %rbx,0xd8(%rsp)
  0x00007fb547d9ac5c: je     0x00007fb547d9ad9e  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@153 (line 1024)

  0x00007fb547d9ac62: mov    %rdx,%r11
  0x00007fb547d9ac65: movabs $0x7fb52cf4f3d0,%r13  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9ac6f: mov    0x8(%r11),%r11d
  0x00007fb547d9ac73: movabs $0x800000000,%r12
  0x00007fb547d9ac7d: add    %r12,%r11
  0x00007fb547d9ac80: xor    %r12,%r12
  0x00007fb547d9ac83: cmp    0x3f0(%r13),%r11
  0x00007fb547d9ac8a: jne    0x00007fb547d9ac99
  0x00007fb547d9ac8c: addq   $0x1,0x3f8(%r13)
  0x00007fb547d9ac94: jmpq   0x00007fb547d9acff
  0x00007fb547d9ac99: cmp    0x400(%r13),%r11
  0x00007fb547d9aca0: jne    0x00007fb547d9acaf
  0x00007fb547d9aca2: addq   $0x1,0x408(%r13)
  0x00007fb547d9acaa: jmpq   0x00007fb547d9acff
  0x00007fb547d9acaf: cmpq   $0x0,0x3f0(%r13)
  0x00007fb547d9acba: jne    0x00007fb547d9acd3
  0x00007fb547d9acbc: mov    %r11,0x3f0(%r13)
  0x00007fb547d9acc3: movq   $0x1,0x3f8(%r13)
  0x00007fb547d9acce: jmpq   0x00007fb547d9acff
  0x00007fb547d9acd3: cmpq   $0x0,0x400(%r13)
  0x00007fb547d9acde: jne    0x00007fb547d9acf7
  0x00007fb547d9ace0: mov    %r11,0x400(%r13)
  0x00007fb547d9ace7: movq   $0x1,0x408(%r13)
  0x00007fb547d9acf2: jmpq   0x00007fb547d9acff
  0x00007fb547d9acf7: addq   $0x1,0x3e0(%r13)
  0x00007fb547d9acff: mov    %rdx,%r11
  0x00007fb547d9ad02: mov    %rsi,%rdx
  0x00007fb547d9ad05: mov    %r11,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)

  0x00007fb547d9ad08: nopl   0x0(%rax,%rax,1)
  0x00007fb547d9ad0d: movabs $0xffffffffffffffff,%rax
  0x00007fb547d9ad17: callq  0x00007fb54784aa80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)
                                                ;   {virtual_call}
  0x00007fb547d9ad1c: cmp    $0x0,%eax
  0x00007fb547d9ad1f: movabs $0x7fb52cf4f3d0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9ad29: movabs $0x418,%rdx
  0x00007fb547d9ad33: je     0x00007fb547d9ad43
  0x00007fb547d9ad39: movabs $0x428,%rdx
  0x00007fb547d9ad43: mov    (%rax,%rdx,1),%rsi
  0x00007fb547d9ad47: lea    0x1(%rsi),%rsi
  0x00007fb547d9ad4b: mov    %rsi,(%rax,%rdx,1)
  0x00007fb547d9ad4f: mov    0xd0(%rsp),%rdi
  0x00007fb547d9ad57: je     0x00007fb547d9ad9e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162 (line 1026)

  0x00007fb547d9ad5d: mov    0x14(%rdi),%esi
  0x00007fb547d9ad60: shl    $0x3,%rsi          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@167 (line 1026)

  0x00007fb547d9ad64: cmp    $0x0,%rsi
  0x00007fb547d9ad68: movabs $0x7fb52cf4f3d0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9ad72: movabs $0x448,%rdx
  0x00007fb547d9ad7c: jne    0x00007fb547d9ad8c
  0x00007fb547d9ad82: movabs $0x438,%rdx
  0x00007fb547d9ad8c: mov    (%rax,%rdx,1),%rbx
  0x00007fb547d9ad90: lea    0x1(%rbx),%rbx
  0x00007fb547d9ad94: mov    %rbx,(%rax,%rdx,1)
  0x00007fb547d9ad98: jne    0x00007fb547d9bd98  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@173 (line 1026)

  0x00007fb547d9ad9e: lea    0x118(%rsp),%rdx
  0x00007fb547d9ada6: mov    %rdi,0x8(%rdx)
  0x00007fb547d9adaa: mov    (%rdi),%rax
  0x00007fb547d9adad: mov    %rax,%rsi
  0x00007fb547d9adb0: and    $0x7,%rsi
  0x00007fb547d9adb4: cmp    $0x5,%rsi
  0x00007fb547d9adb8: jne    0x00007fb547d9ae67
  0x00007fb547d9adbe: mov    0x8(%rdi),%esi
  0x00007fb547d9adc1: movabs $0x800000000,%r12
  0x00007fb547d9adcb: add    %r12,%rsi
  0x00007fb547d9adce: xor    %r12,%r12
  0x00007fb547d9add1: mov    0xb8(%rsi),%rsi
  0x00007fb547d9add8: or     %r15,%rsi
  0x00007fb547d9addb: xor    %rax,%rsi
  0x00007fb547d9adde: and    $0xffffffffffffff87,%rsi
  0x00007fb547d9ade2: je     0x00007fb547d9ae8f
  0x00007fb547d9ade8: test   $0x7,%rsi
  0x00007fb547d9adef: jne    0x00007fb547d9ae48
  0x00007fb547d9adf5: test   $0x300,%rsi
  0x00007fb547d9adfc: jne    0x00007fb547d9ae1b
  0x00007fb547d9adfe: and    $0x37f,%rax
  0x00007fb547d9ae05: mov    %rax,%rsi
  0x00007fb547d9ae08: or     %r15,%rsi
  0x00007fb547d9ae0b: lock cmpxchg %rsi,(%rdi)
  0x00007fb547d9ae10: jne    0x00007fb547d9c12b
  0x00007fb547d9ae16: jmpq   0x00007fb547d9ae8f
  0x00007fb547d9ae1b: mov    0x8(%rdi),%esi
  0x00007fb547d9ae1e: movabs $0x800000000,%r12
  0x00007fb547d9ae28: add    %r12,%rsi
  0x00007fb547d9ae2b: xor    %r12,%r12
  0x00007fb547d9ae2e: mov    0xb8(%rsi),%rsi
  0x00007fb547d9ae35: or     %r15,%rsi
  0x00007fb547d9ae38: lock cmpxchg %rsi,(%rdi)
  0x00007fb547d9ae3d: jne    0x00007fb547d9c12b
  0x00007fb547d9ae43: jmpq   0x00007fb547d9ae8f
  0x00007fb547d9ae48: mov    0x8(%rdi),%esi
  0x00007fb547d9ae4b: movabs $0x800000000,%r12
  0x00007fb547d9ae55: add    %r12,%rsi
  0x00007fb547d9ae58: xor    %r12,%r12
  0x00007fb547d9ae5b: mov    0xb8(%rsi),%rsi
  0x00007fb547d9ae62: lock cmpxchg %rsi,(%rdi)
  0x00007fb547d9ae67: mov    (%rdi),%rax
  0x00007fb547d9ae6a: or     $0x1,%rax
  0x00007fb547d9ae6e: mov    %rax,(%rdx)
  0x00007fb547d9ae71: lock cmpxchg %rdx,(%rdi)
  0x00007fb547d9ae76: je     0x00007fb547d9ae8f
  0x00007fb547d9ae7c: sub    %rsp,%rax
  0x00007fb547d9ae7f: and    $0xfffffffffffff007,%rax
  0x00007fb547d9ae86: mov    %rax,(%rdx)
  0x00007fb547d9ae89: jne    0x00007fb547d9c12b  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)

  0x00007fb547d9ae8f: mov    0xe0(%rsp),%rdx
  0x00007fb547d9ae97: mov    0xd8(%rsp),%rbx
  0x00007fb547d9ae9f: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9aea9: addq   $0x1,0x458(%rsi)
  0x00007fb547d9aeb1: movabs $0x7fb52cebbd60,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9aebb: mov    0x100(%rsi),%eax
  0x00007fb547d9aec1: add    $0x8,%eax
  0x00007fb547d9aec4: mov    %eax,0x100(%rsi)
  0x00007fb547d9aeca: and    $0x7ffff8,%eax
  0x00007fb547d9aed0: cmp    $0x0,%eax
  0x00007fb547d9aed3: je     0x00007fb547d9c13e
  0x00007fb547d9aed9: movabs $0x7fb52cebbd60,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9aee3: lea    0x178(%rsi),%rsi
  0x00007fb547d9aeea: mov    %rbx,%rax
  0x00007fb547d9aeed: mov    0x8(%rax),%eax
  0x00007fb547d9aef0: movabs $0x800000000,%r12
  0x00007fb547d9aefa: add    %r12,%rax
  0x00007fb547d9aefd: xor    %r12,%r12
  0x00007fb547d9af00: xor    0x8(%rsi),%rax
  0x00007fb547d9af04: test   $0xfffffffffffffffc,%rax
  0x00007fb547d9af0a: je     0x00007fb547d9af1c
  0x00007fb547d9af0c: test   $0x2,%rax
  0x00007fb547d9af12: jne    0x00007fb547d9af1c
  0x00007fb547d9af14: orq    $0x2,0x8(%rsi)
  0x00007fb547d9af1c: movabs $0x62d808180,%rsi  ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x000000062d808180})}
  0x00007fb547d9af26: movabs $0x7fb52cebbd60,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9af30: addq   $0x1,0x140(%rax)
  0x00007fb547d9af38: movabs $0x7fb52cebc348,%rsi  ;   {metadata(method data for {method} {0x00007fb52cd68f60} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb547d9af42: mov    0x100(%rsi),%eax
  0x00007fb547d9af48: add    $0x8,%eax
  0x00007fb547d9af4b: mov    %eax,0x100(%rsi)
  0x00007fb547d9af51: and    $0x7ffff8,%eax
  0x00007fb547d9af57: cmp    $0x0,%eax
  0x00007fb547d9af5a: je     0x00007fb547d9c15f
  0x00007fb547d9af60: mov    (%rbx,%rdx,1),%esi
  0x00007fb547d9af63: shl    $0x3,%rsi
  0x00007fb547d9af67: mov    %rbx,%rax
  0x00007fb547d9af6a: movabs $0xc,%rcx
  0x00007fb547d9af74: cmp    %rcx,%rdx
  0x00007fb547d9af77: jne    0x00007fb547d9afb8
  0x00007fb547d9af7d: cmp    $0x0,%rax
  0x00007fb547d9af81: je     0x00007fb547d9afb8
  0x00007fb547d9af87: mov    0x8(%rax),%edx
  0x00007fb547d9af8a: movabs $0x800000000,%r12
  0x00007fb547d9af94: add    %r12,%rdx
  0x00007fb547d9af97: xor    %r12,%r12
  0x00007fb547d9af9a: movsbl 0x18b(%rdx),%edx
  0x00007fb547d9afa1: cmp    $0x0,%edx
  0x00007fb547d9afa4: je     0x00007fb547d9afb8
  0x00007fb547d9afaa: movsbl 0x30(%r15),%edx
  0x00007fb547d9afaf: cmp    $0x0,%edx
  0x00007fb547d9afb2: jne    0x00007fb547d9c180
  0x00007fb547d9afb8: cmp    $0x0,%rsi
  0x00007fb547d9afbc: jne    0x00007fb547d9afd4
  0x00007fb547d9afbe: movabs $0x7fb52cebbd60,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9afc8: orb    $0x1,0x189(%rax)
  0x00007fb547d9afcf: jmpq   0x00007fb547d9b0ad
  0x00007fb547d9afd4: movabs $0x80001a9e8,%rcx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9afde: mov    0x8(%rsi),%eax
  0x00007fb547d9afe1: movabs $0x800000000,%r12
  0x00007fb547d9afeb: add    %r12,%rax
  0x00007fb547d9afee: xor    %r12,%r12
  0x00007fb547d9aff1: cmp    0x38(%rax),%rcx
  0x00007fb547d9aff5: jne    0x00007fb547d9b091
  0x00007fb547d9affb: movabs $0x7fb52cebbd60,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b005: mov    0x8(%rsi),%ecx
  0x00007fb547d9b008: movabs $0x800000000,%r12
  0x00007fb547d9b012: add    %r12,%rcx
  0x00007fb547d9b015: xor    %r12,%r12
  0x00007fb547d9b018: cmp    0x1a0(%rax),%rcx
  0x00007fb547d9b01f: jne    0x00007fb547d9b02e
  0x00007fb547d9b021: addq   $0x1,0x1a8(%rax)
  0x00007fb547d9b029: jmpq   0x00007fb547d9b0ad
  0x00007fb547d9b02e: cmp    0x1b0(%rax),%rcx
  0x00007fb547d9b035: jne    0x00007fb547d9b044
  0x00007fb547d9b037: addq   $0x1,0x1b8(%rax)
  0x00007fb547d9b03f: jmpq   0x00007fb547d9b0ad
  0x00007fb547d9b044: cmpq   $0x0,0x1a0(%rax)
  0x00007fb547d9b04f: jne    0x00007fb547d9b068
  0x00007fb547d9b051: mov    %rcx,0x1a0(%rax)
  0x00007fb547d9b058: movq   $0x1,0x1a8(%rax)
  0x00007fb547d9b063: jmpq   0x00007fb547d9b0ad
  0x00007fb547d9b068: cmpq   $0x0,0x1b0(%rax)
  0x00007fb547d9b073: jne    0x00007fb547d9b08c
  0x00007fb547d9b075: mov    %rcx,0x1b0(%rax)
  0x00007fb547d9b07c: movq   $0x1,0x1b8(%rax)
  0x00007fb547d9b087: jmpq   0x00007fb547d9b0ad
  0x00007fb547d9b08c: jmpq   0x00007fb547d9b0ad
  0x00007fb547d9b091: movabs $0x7fb52cebbd60,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b09b: subq   $0x1,0x190(%rax)
  0x00007fb547d9b0a3: jmpq   0x00007fb547d9c198
  0x00007fb547d9b0a8: jmpq   0x00007fb547d9b0ad
  0x00007fb547d9b0ad: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)

  0x00007fb547d9b0b0: cmp    %rdi,%rdx
  0x00007fb547d9b0b3: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b0bd: movabs $0x478,%rsi
  0x00007fb547d9b0c7: je     0x00007fb547d9b0d7
  0x00007fb547d9b0cd: movabs $0x468,%rsi
  0x00007fb547d9b0d7: mov    (%rdx,%rsi,1),%rax
  0x00007fb547d9b0db: lea    0x1(%rax),%rax
  0x00007fb547d9b0df: mov    %rax,(%rdx,%rsi,1)
  0x00007fb547d9b0e3: je     0x00007fb547d9b117  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@197 (line 1032)

  0x00007fb547d9b0e9: mov    0xc4(%rsp),%eax
  0x00007fb547d9b0f0: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x00007fb547d9b0fa: mov    %rbx,0xd8(%rsp)
  0x00007fb547d9b102: mov    0xc0(%rsp),%r8d
  0x00007fb547d9b10a: mov    0xb8(%rsp),%rcx
  0x00007fb547d9b112: jmpq   0x00007fb547d9bbbc  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)

  0x00007fb547d9b117: mov    0xcc(%rsp),%eax
  0x00007fb547d9b11e: cmp    $0x0,%eax
  0x00007fb547d9b121: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b12b: movabs $0x488,%rsi
  0x00007fb547d9b135: jl     0x00007fb547d9b145
  0x00007fb547d9b13b: movabs $0x498,%rsi
  0x00007fb547d9b145: mov    (%rdx,%rsi,1),%rax
  0x00007fb547d9b149: lea    0x1(%rax),%rax
  0x00007fb547d9b14d: mov    %rax,(%rdx,%rsi,1)
  0x00007fb547d9b151: jl     0x00007fb547d9b690  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@202 (line 1033)

  0x00007fb547d9b157: mov    %rdi,%rax
  0x00007fb547d9b15a: mov    $0x1,%ecx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212 (line 1037)

  0x00007fb547d9b15f: mov    %ecx,0xec(%rsp)
  0x00007fb547d9b166: mov    %rbx,0xd8(%rsp)
  0x00007fb547d9b16e: xchg   %ax,%ax
  0x00007fb547d9b170: mov    0xc8(%rsp),%esi
  0x00007fb547d9b177: mov    0xb0(%rsp),%rdx
  0x00007fb547d9b17f: mov    0xc(%rax),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                ; implicit exception: dispatches to 0x00007fb547d9c1a1
  0x00007fb547d9b183: cmp    %esi,%r8d
  0x00007fb547d9b186: movabs $0x7fb52cf4f3d0,%r8  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b190: movabs $0x4b8,%r9
  0x00007fb547d9b19a: je     0x00007fb547d9b1aa
  0x00007fb547d9b1a0: movabs $0x4a8,%r9
  0x00007fb547d9b1aa: mov    (%r8,%r9,1),%r11
  0x00007fb547d9b1ae: lea    0x1(%r11),%r11
  0x00007fb547d9b1b2: mov    %r11,(%r8,%r9,1)
  0x00007fb547d9b1b6: je     0x00007fb547d9b1c4  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@219 (line 1037)

  0x00007fb547d9b1bc: mov    %rax,%r8
  0x00007fb547d9b1bf: jmpq   0x00007fb547d9b345  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)

  0x00007fb547d9b1c4: mov    0x10(%rax),%r8d
  0x00007fb547d9b1c8: shl    $0x3,%r8           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224 (line 1037)

  0x00007fb547d9b1cc: cmp    %rdx,%r8
  0x00007fb547d9b1cf: movabs $0x7fb52cf4f3d0,%r9  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b1d9: movabs $0x4c8,%r11
  0x00007fb547d9b1e3: je     0x00007fb547d9b1f3
  0x00007fb547d9b1e9: movabs $0x4d8,%r11
  0x00007fb547d9b1f3: mov    (%r9,%r11,1),%r13
  0x00007fb547d9b1f7: lea    0x1(%r13),%r13
  0x00007fb547d9b1fb: mov    %r13,(%r9,%r11,1)
  0x00007fb547d9b1ff: je     0x00007fb547d9b3e7  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@231 (line 1037)

  0x00007fb547d9b205: cmp    $0x0,%r8
  0x00007fb547d9b209: movabs $0x7fb52cf4f3d0,%r9  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b213: movabs $0x4f8,%r11
  0x00007fb547d9b21d: jne    0x00007fb547d9b22d
  0x00007fb547d9b223: movabs $0x4e8,%r11
  0x00007fb547d9b22d: mov    (%r9,%r11,1),%r13
  0x00007fb547d9b231: lea    0x1(%r13),%r13
  0x00007fb547d9b235: mov    %r13,(%r9,%r11,1)
  0x00007fb547d9b239: jne    0x00007fb547d9b247  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@236 (line 1037)

  0x00007fb547d9b23f: mov    %rax,%r8
  0x00007fb547d9b242: jmpq   0x00007fb547d9b345  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)

  0x00007fb547d9b247: mov    %rax,0xf0(%rsp)
  0x00007fb547d9b24f: mov    %rdx,%r9
  0x00007fb547d9b252: movabs $0x7fb52cf4f3d0,%r11  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b25c: mov    0x8(%r9),%r9d
  0x00007fb547d9b260: movabs $0x800000000,%r12
  0x00007fb547d9b26a: add    %r12,%r9
  0x00007fb547d9b26d: xor    %r12,%r12
  0x00007fb547d9b270: cmp    0x518(%r11),%r9
  0x00007fb547d9b277: jne    0x00007fb547d9b286
  0x00007fb547d9b279: addq   $0x1,0x520(%r11)
  0x00007fb547d9b281: jmpq   0x00007fb547d9b2ec
  0x00007fb547d9b286: cmp    0x528(%r11),%r9
  0x00007fb547d9b28d: jne    0x00007fb547d9b29c
  0x00007fb547d9b28f: addq   $0x1,0x530(%r11)
  0x00007fb547d9b297: jmpq   0x00007fb547d9b2ec
  0x00007fb547d9b29c: cmpq   $0x0,0x518(%r11)
  0x00007fb547d9b2a7: jne    0x00007fb547d9b2c0
  0x00007fb547d9b2a9: mov    %r9,0x518(%r11)
  0x00007fb547d9b2b0: movq   $0x1,0x520(%r11)
  0x00007fb547d9b2bb: jmpq   0x00007fb547d9b2ec
  0x00007fb547d9b2c0: cmpq   $0x0,0x528(%r11)
  0x00007fb547d9b2cb: jne    0x00007fb547d9b2e4
  0x00007fb547d9b2cd: mov    %r9,0x528(%r11)
  0x00007fb547d9b2d4: movq   $0x1,0x530(%r11)
  0x00007fb547d9b2df: jmpq   0x00007fb547d9b2ec
  0x00007fb547d9b2e4: addq   $0x1,0x508(%r11)
  0x00007fb547d9b2ec: mov    %rdx,%r9
  0x00007fb547d9b2ef: mov    %r8,%rdx
  0x00007fb547d9b2f2: mov    %r9,%rsi           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)

  0x00007fb547d9b2f5: movabs $0xffffffffffffffff,%rax
  0x00007fb547d9b2ff: callq  0x00007fb54784aa80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop [240]=Oop [288]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)
                                                ;   {virtual_call}
  0x00007fb547d9b304: cmp    $0x0,%eax
  0x00007fb547d9b307: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b311: movabs $0x550,%rsi
  0x00007fb547d9b31b: jne    0x00007fb547d9b32b
  0x00007fb547d9b321: movabs $0x540,%rsi
  0x00007fb547d9b32b: mov    (%rdx,%rsi,1),%rdi
  0x00007fb547d9b32f: lea    0x1(%rdi),%rdi
  0x00007fb547d9b333: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb547d9b337: mov    0xf0(%rsp),%r8
  0x00007fb547d9b33f: jne    0x00007fb547d9b3ea  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@245 (line 1039)

  0x00007fb547d9b345: mov    0x18(%r8),%edx
  0x00007fb547d9b349: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@274 (line 1046)

  0x00007fb547d9b34d: cmp    $0x0,%rdx
  0x00007fb547d9b351: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b35b: movabs $0x5a8,%rdi
  0x00007fb547d9b365: je     0x00007fb547d9b375
  0x00007fb547d9b36b: movabs $0x598,%rdi
  0x00007fb547d9b375: mov    (%rsi,%rdi,1),%rax
  0x00007fb547d9b379: lea    0x1(%rax),%rax
  0x00007fb547d9b37d: mov    %rax,(%rsi,%rdi,1)
  0x00007fb547d9b381: je     0x00007fb547d9b4bb  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@280 (line 1046)

  0x00007fb547d9b387: mov    0xec(%rsp),%ecx
  0x00007fb547d9b38e: inc    %ecx
  0x00007fb547d9b390: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b39a: mov    0x104(%rsi),%edi
  0x00007fb547d9b3a0: add    $0x8,%edi
  0x00007fb547d9b3a3: mov    %edi,0x104(%rsi)
  0x00007fb547d9b3a9: and    $0xfff8,%edi
  0x00007fb547d9b3af: cmp    $0x0,%edi
  0x00007fb547d9b3b2: je     0x00007fb547d9c1a6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x00007fb547d9b3b8: mov    0x108(%r15),%r10   ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x00007fb547d9b3bf: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d9b3c2: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b3cc: incl   0x5e0(%rsi)
  0x00007fb547d9b3d2: mov    %rdx,%r8
  0x00007fb547d9b3d5: mov    %rcx,%rbx
  0x00007fb547d9b3d8: mov    %r8,%rax
  0x00007fb547d9b3db: mov    %ebx,0xec(%rsp)
  0x00007fb547d9b3e2: jmpq   0x00007fb547d9b170  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x00007fb547d9b3e7: mov    %rax,%r8
  0x00007fb547d9b3ea: mov    0xec(%rsp),%ebx
  0x00007fb547d9b3f1: mov    0xc0(%rsp),%r9d
  0x00007fb547d9b3f9: mov    0x14(%r8),%edx
  0x00007fb547d9b3fd: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250 (line 1040)

  0x00007fb547d9b401: cmp    $0x0,%r9d
  0x00007fb547d9b405: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b40f: movabs $0x570,%rdi
  0x00007fb547d9b419: je     0x00007fb547d9b429
  0x00007fb547d9b41f: movabs $0x560,%rdi
  0x00007fb547d9b429: mov    (%rsi,%rdi,1),%rax
  0x00007fb547d9b42d: lea    0x1(%rax),%rax
  0x00007fb547d9b431: mov    %rax,(%rsi,%rdi,1)
  0x00007fb547d9b435: je     0x00007fb547d9b458  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1041)

  0x00007fb547d9b43b: mov    0xc8(%rsp),%r13d
  0x00007fb547d9b443: mov    0xb8(%rsp),%r14
  0x00007fb547d9b44b: mov    0xb0(%rsp),%r11
  0x00007fb547d9b453: jmpq   0x00007fb547d9b66f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)

  0x00007fb547d9b458: mov    0xb8(%rsp),%rcx
  0x00007fb547d9b460: movsbl 0x30(%r15),%esi
  0x00007fb547d9b465: cmp    $0x0,%esi
  0x00007fb547d9b468: jne    0x00007fb547d9c1c7
  0x00007fb547d9b46e: mov    %rcx,%r10
  0x00007fb547d9b471: shr    $0x3,%r10
  0x00007fb547d9b475: mov    %r10d,0x14(%r8)
  0x00007fb547d9b479: lock addl $0x0,-0x40(%rsp)
  0x00007fb547d9b47f: mov    %r8,%rax
  0x00007fb547d9b482: xor    %rcx,%rax
  0x00007fb547d9b485: shr    $0x15,%rax
  0x00007fb547d9b489: cmp    $0x0,%rax
  0x00007fb547d9b48d: jne    0x00007fb547d9c1e7  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@262 (line 1042)

  0x00007fb547d9b493: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b49d: incl   0x580(%rsi)
  0x00007fb547d9b4a3: mov    0xc8(%rsp),%r13d
  0x00007fb547d9b4ab: mov    %rcx,%r14
  0x00007fb547d9b4ae: mov    0xb0(%rsp),%r11
  0x00007fb547d9b4b6: jmpq   0x00007fb547d9b66f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@265 (line 1042)

  0x00007fb547d9b4bb: mov    0xec(%rsp),%ebx
  0x00007fb547d9b4c2: mov    0xc8(%rsp),%esi
  0x00007fb547d9b4c9: mov    0xc0(%rsp),%r9d
  0x00007fb547d9b4d1: mov    0xb8(%rsp),%rcx
  0x00007fb547d9b4d9: mov    0xb0(%rsp),%rdx
  0x00007fb547d9b4e1: mov    %rdx,%r11
  0x00007fb547d9b4e4: movabs $0x80001a9e8,%rdx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9b4ee: mov    %rcx,%r14
  0x00007fb547d9b4f1: mov    %rsi,%r13
  0x00007fb547d9b4f4: mov    0x118(%r15),%rax
  0x00007fb547d9b4fb: lea    0x20(%rax),%rdi
  0x00007fb547d9b4ff: cmp    0x128(%r15),%rdi
  0x00007fb547d9b506: ja     0x00007fb547d9c1ff
  0x00007fb547d9b50c: mov    %rdi,0x118(%r15)
  0x00007fb547d9b513: mov    0xb8(%rdx),%rcx
  0x00007fb547d9b51a: mov    %rcx,(%rax)
  0x00007fb547d9b51d: mov    %rdx,%rcx
  0x00007fb547d9b520: movabs $0x800000000,%r12
  0x00007fb547d9b52a: sub    %r12,%rcx
  0x00007fb547d9b52d: xor    %r12,%r12
  0x00007fb547d9b530: mov    %ecx,0x8(%rax)
  0x00007fb547d9b533: xor    %rcx,%rcx
  0x00007fb547d9b536: mov    %ecx,0xc(%rax)
  0x00007fb547d9b539: xor    %rcx,%rcx
  0x00007fb547d9b53c: mov    %rcx,0x10(%rax)
  0x00007fb547d9b540: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)

  0x00007fb547d9b544: mov    %rax,%rdx
  0x00007fb547d9b547: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b551: addq   $0x1,0x5b8(%rcx)
  0x00007fb547d9b559: movabs $0x7fb52cf4fcd8,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9b563: mov    0x100(%rdx),%ecx
  0x00007fb547d9b569: add    $0x8,%ecx
  0x00007fb547d9b56c: mov    %ecx,0x100(%rdx)
  0x00007fb547d9b572: and    $0x7ffff8,%ecx
  0x00007fb547d9b578: cmp    $0x0,%ecx
  0x00007fb547d9b57b: je     0x00007fb547d9c20c
  0x00007fb547d9b581: mov    %rax,%rdx
  0x00007fb547d9b584: movabs $0x7fb52cf4fcd8,%rcx  ;   {metadata(method data for {method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9b58e: addq   $0x1,0x140(%rcx)
  0x00007fb547d9b596: movabs $0x7fb52cedd4a0,%rdx  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d9b5a0: mov    0x100(%rdx),%ecx
  0x00007fb547d9b5a6: add    $0x8,%ecx
  0x00007fb547d9b5a9: mov    %ecx,0x100(%rdx)
  0x00007fb547d9b5af: and    $0x7ffff8,%ecx
  0x00007fb547d9b5b5: cmp    $0x0,%ecx
  0x00007fb547d9b5b8: je     0x00007fb547d9c22d
  0x00007fb547d9b5be: mov    %r13d,0xc(%rax)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 632)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x00007fb547d9b5c2: movsbl 0x30(%r15),%edx
  0x00007fb547d9b5c7: cmp    $0x0,%edx
  0x00007fb547d9b5ca: jne    0x00007fb547d9c24e
  0x00007fb547d9b5d0: mov    %r11,%r10
  0x00007fb547d9b5d3: shr    $0x3,%r10
  0x00007fb547d9b5d7: mov    %r10d,0x10(%rax)
  0x00007fb547d9b5db: mov    %rax,%rdx
  0x00007fb547d9b5de: xor    %r11,%rdx
  0x00007fb547d9b5e1: shr    $0x15,%rdx
  0x00007fb547d9b5e5: cmp    $0x0,%rdx
  0x00007fb547d9b5e9: jne    0x00007fb547d9c26d  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@11 (line 633)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x00007fb547d9b5ef: movsbl 0x30(%r15),%edx
  0x00007fb547d9b5f4: cmp    $0x0,%edx
  0x00007fb547d9b5f7: jne    0x00007fb547d9c285
  0x00007fb547d9b5fd: mov    %r14,%r10
  0x00007fb547d9b600: shr    $0x3,%r10
  0x00007fb547d9b604: mov    %r10d,0x14(%rax)
  0x00007fb547d9b608: lock addl $0x0,-0x40(%rsp)
  0x00007fb547d9b60e: mov    %rax,%rdx
  0x00007fb547d9b611: xor    %r14,%rdx
  0x00007fb547d9b614: shr    $0x15,%rdx
  0x00007fb547d9b618: cmp    $0x0,%rdx
  0x00007fb547d9b61c: jne    0x00007fb547d9c2a4  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@16 (line 634)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x00007fb547d9b622: movsbl 0x30(%r15),%edx
  0x00007fb547d9b627: cmp    $0x0,%edx
  0x00007fb547d9b62a: jne    0x00007fb547d9c2bc
  0x00007fb547d9b630: mov    %rax,%r10
  0x00007fb547d9b633: shr    $0x3,%r10
  0x00007fb547d9b637: mov    %r10d,0x18(%r8)
  0x00007fb547d9b63b: lock addl $0x0,-0x40(%rsp)
  0x00007fb547d9b641: mov    %r8,%rdx
  0x00007fb547d9b644: xor    %rax,%rdx
  0x00007fb547d9b647: shr    $0x15,%rdx
  0x00007fb547d9b64b: cmp    $0x0,%rdx
  0x00007fb547d9b64f: jne    0x00007fb547d9c2dc  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@296 (line 1047)

  0x00007fb547d9b655: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b65f: incl   0x5c8(%rdx)
  0x00007fb547d9b665: movabs $0x0,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299 (line 1048)
                                                ;   {oop(NULL)}
  0x00007fb547d9b66f: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b679: incl   0x5f8(%rcx)
  0x00007fb547d9b67f: mov    %rdx,%rdi
  0x00007fb547d9b682: mov    %rbx,%rax
  0x00007fb547d9b685: mov    %r9,%r8
  0x00007fb547d9b688: mov    %r14,%rcx
  0x00007fb547d9b68b: jmpq   0x00007fb547d9bbbc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)

  0x00007fb547d9b690: mov    %rbx,0xd8(%rsp)
  0x00007fb547d9b698: mov    0xc8(%rsp),%r13d
  0x00007fb547d9b6a0: mov    0xc0(%rsp),%r9d
  0x00007fb547d9b6a8: mov    0xb8(%rsp),%r14
  0x00007fb547d9b6b0: mov    0xb0(%rsp),%r11
  0x00007fb547d9b6b8: cmp    $0x0,%rdi
  0x00007fb547d9b6bc: jne    0x00007fb547d9b6d5
  0x00007fb547d9b6be: movabs $0x7fb52cf4f3d0,%r8  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b6c8: orb    $0x1,0x609(%r8)
  0x00007fb547d9b6d0: jmpq   0x00007fb547d9b7db
  0x00007fb547d9b6d5: data16 xchg %ax,%ax
  0x00007fb547d9b6d8: jmpq   0x00007fb547d9c303  ;   {no_reloc}
  0x00007fb547d9b6dd: add    %al,(%rax)
  0x00007fb547d9b6df: add    %al,(%rax)
  0x00007fb547d9b6e1: add    %al,0x47(%rbx,%rcx,4)
  0x00007fb547d9b6e5: or     %cl,-0x44(%rcx)
  0x00007fb547d9b6e8: add    %al,(%rax)
  0x00007fb547d9b6ea: add    %al,(%rax)
  0x00007fb547d9b6ec: or     %al,(%rax)
  0x00007fb547d9b6ee: add    %al,(%rax)
  0x00007fb547d9b6f0: add    %r12,%r8
  0x00007fb547d9b6f3: xor    %r12,%r12
  0x00007fb547d9b6f6: cmp    %rsi,%r8
  0x00007fb547d9b6f9: je     0x00007fb547d9b729
  0x00007fb547d9b6ff: mov    0x10(%rsi),%ecx
  0x00007fb547d9b702: cmp    (%r8,%rcx,1),%rsi
  0x00007fb547d9b706: je     0x00007fb547d9b729
  0x00007fb547d9b70c: cmp    $0x20,%ecx
  0x00007fb547d9b70f: jne    0x00007fb547d9b7bf
  0x00007fb547d9b715: push   %r8
  0x00007fb547d9b717: push   %rsi
  0x00007fb547d9b718: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547d9b71d: pop    %r8
  0x00007fb547d9b71f: pop    %rsi
  0x00007fb547d9b720: cmp    $0x0,%esi
  0x00007fb547d9b723: je     0x00007fb547d9b7bf
  0x00007fb547d9b729: movabs $0x7fb52cf4f3d0,%r8  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b733: mov    0x8(%rdi),%esi
  0x00007fb547d9b736: movabs $0x800000000,%r12
  0x00007fb547d9b740: add    %r12,%rsi
  0x00007fb547d9b743: xor    %r12,%r12
  0x00007fb547d9b746: cmp    0x620(%r8),%rsi
  0x00007fb547d9b74d: jne    0x00007fb547d9b75c
  0x00007fb547d9b74f: addq   $0x1,0x628(%r8)
  0x00007fb547d9b757: jmpq   0x00007fb547d9b7e0
  0x00007fb547d9b75c: cmp    0x630(%r8),%rsi
  0x00007fb547d9b763: jne    0x00007fb547d9b772
  0x00007fb547d9b765: addq   $0x1,0x638(%r8)
  0x00007fb547d9b76d: jmpq   0x00007fb547d9b7e0
  0x00007fb547d9b772: cmpq   $0x0,0x620(%r8)
  0x00007fb547d9b77d: jne    0x00007fb547d9b796
  0x00007fb547d9b77f: mov    %rsi,0x620(%r8)
  0x00007fb547d9b786: movq   $0x1,0x628(%r8)
  0x00007fb547d9b791: jmpq   0x00007fb547d9b7e0
  0x00007fb547d9b796: cmpq   $0x0,0x630(%r8)
  0x00007fb547d9b7a1: jne    0x00007fb547d9b7ba
  0x00007fb547d9b7a3: mov    %rsi,0x630(%r8)
  0x00007fb547d9b7aa: movq   $0x1,0x638(%r8)
  0x00007fb547d9b7b5: jmpq   0x00007fb547d9b7e0
  0x00007fb547d9b7ba: jmpq   0x00007fb547d9b7e0
  0x00007fb547d9b7bf: movabs $0x7fb52cf4f3d0,%r8  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b7c9: subq   $0x1,0x610(%r8)
  0x00007fb547d9b7d1: jmpq   0x00007fb547d9b7db
  0x00007fb547d9b7d6: jmpq   0x00007fb547d9b7e0
  0x00007fb547d9b7db: xor    %rdx,%rdx
  0x00007fb547d9b7de: jmp    0x00007fb547d9b7ea
  0x00007fb547d9b7e0: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)

  0x00007fb547d9b7ea: cmp    $0x0,%edx
  0x00007fb547d9b7ed: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b7f7: movabs $0x648,%rcx
  0x00007fb547d9b801: je     0x00007fb547d9b811
  0x00007fb547d9b807: movabs $0x658,%rcx
  0x00007fb547d9b811: mov    (%rdx,%rcx,1),%r8
  0x00007fb547d9b815: lea    0x1(%r8),%r8
  0x00007fb547d9b819: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547d9b81d: je     0x00007fb547d9ba69  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@316 (line 1052)

  0x00007fb547d9b823: cmp    $0x0,%rdi
  0x00007fb547d9b827: jne    0x00007fb547d9b83f
  0x00007fb547d9b829: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b833: orb    $0x1,0x661(%rcx)
  0x00007fb547d9b83a: jmpq   0x00007fb547d9b940
  0x00007fb547d9b83f: nop
  0x00007fb547d9b840: jmpq   0x00007fb547d9c31c  ;   {no_reloc}
  0x00007fb547d9b845: add    %al,(%rax)
  0x00007fb547d9b847: add    %al,(%rax)
  0x00007fb547d9b849: add    %cl,-0x43b6f7b1(%rbx)
  0x00007fb547d9b84f: add    %al,(%rax)
  0x00007fb547d9b851: add    %al,(%rax)
  0x00007fb547d9b853: or     %al,(%rax)
  0x00007fb547d9b855: add    %al,(%rax)
  0x00007fb547d9b857: add    %r12,%rcx
  0x00007fb547d9b85a: xor    %r12,%r12
  0x00007fb547d9b85d: cmp    %rbx,%rcx
  0x00007fb547d9b860: je     0x00007fb547d9b88e
  0x00007fb547d9b866: mov    0x10(%rbx),%edx
  0x00007fb547d9b869: cmp    (%rcx,%rdx,1),%rbx
  0x00007fb547d9b86d: je     0x00007fb547d9b88e
  0x00007fb547d9b873: cmp    $0x20,%edx
  0x00007fb547d9b876: jne    0x00007fb547d9b924
  0x00007fb547d9b87c: push   %rcx
  0x00007fb547d9b87d: push   %rbx
  0x00007fb547d9b87e: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547d9b883: pop    %rcx
  0x00007fb547d9b884: pop    %rbx
  0x00007fb547d9b885: cmp    $0x0,%ebx
  0x00007fb547d9b888: je     0x00007fb547d9b924
  0x00007fb547d9b88e: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b898: mov    0x8(%rdi),%ebx
  0x00007fb547d9b89b: movabs $0x800000000,%r12
  0x00007fb547d9b8a5: add    %r12,%rbx
  0x00007fb547d9b8a8: xor    %r12,%r12
  0x00007fb547d9b8ab: cmp    0x678(%rcx),%rbx
  0x00007fb547d9b8b2: jne    0x00007fb547d9b8c1
  0x00007fb547d9b8b4: addq   $0x1,0x680(%rcx)
  0x00007fb547d9b8bc: jmpq   0x00007fb547d9b940
  0x00007fb547d9b8c1: cmp    0x688(%rcx),%rbx
  0x00007fb547d9b8c8: jne    0x00007fb547d9b8d7
  0x00007fb547d9b8ca: addq   $0x1,0x690(%rcx)
  0x00007fb547d9b8d2: jmpq   0x00007fb547d9b940
  0x00007fb547d9b8d7: cmpq   $0x0,0x678(%rcx)
  0x00007fb547d9b8e2: jne    0x00007fb547d9b8fb
  0x00007fb547d9b8e4: mov    %rbx,0x678(%rcx)
  0x00007fb547d9b8eb: movq   $0x1,0x680(%rcx)
  0x00007fb547d9b8f6: jmpq   0x00007fb547d9b940
  0x00007fb547d9b8fb: cmpq   $0x0,0x688(%rcx)
  0x00007fb547d9b906: jne    0x00007fb547d9b91f
  0x00007fb547d9b908: mov    %rbx,0x688(%rcx)
  0x00007fb547d9b90f: movq   $0x1,0x690(%rcx)
  0x00007fb547d9b91a: jmpq   0x00007fb547d9b940
  0x00007fb547d9b91f: jmpq   0x00007fb547d9b940
  0x00007fb547d9b924: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b92e: subq   $0x1,0x668(%rcx)
  0x00007fb547d9b936: jmpq   0x00007fb547d9c326
  0x00007fb547d9b93b: jmpq   0x00007fb547d9b940
  0x00007fb547d9b940: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)

  0x00007fb547d9b943: mov    %r13,%rdx
  0x00007fb547d9b946: mov    %r11,%rcx
  0x00007fb547d9b949: mov    %r14,%r8           ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)

  0x00007fb547d9b94c: nop
  0x00007fb547d9b94d: movabs $0xffffffffffffffff,%rax
  0x00007fb547d9b957: callq  0x00007fb54784aa80  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop [184]=Oop [176]=Oop [288]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)
                                                ;   {virtual_call}
  0x00007fb547d9b95c: cmp    $0x0,%rax
  0x00007fb547d9b960: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b96a: movabs $0x6e8,%rcx
  0x00007fb547d9b974: jne    0x00007fb547d9b984
  0x00007fb547d9b97a: movabs $0x6d8,%rcx
  0x00007fb547d9b984: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547d9b988: lea    0x1(%rsi),%rsi
  0x00007fb547d9b98c: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547d9b990: jne    0x00007fb547d9b9b5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@337 (line 1055)

  0x00007fb547d9b996: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547d9b9a0: mov    0xc0(%rsp),%r8d
  0x00007fb547d9b9a8: mov    0xb8(%rsp),%rcx
  0x00007fb547d9b9b0: jmpq   0x00007fb547d9ba4c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x00007fb547d9b9b5: mov    0xc0(%rsp),%r8d
  0x00007fb547d9b9bd: mov    0x14(%rax),%edx    ; implicit exception: dispatches to 0x00007fb547d9c32f
  0x00007fb547d9b9c0: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)

  0x00007fb547d9b9c4: cmp    $0x0,%r8d
  0x00007fb547d9b9c8: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9b9d2: movabs $0x708,%rsi
  0x00007fb547d9b9dc: je     0x00007fb547d9b9ec
  0x00007fb547d9b9e2: movabs $0x6f8,%rsi
  0x00007fb547d9b9ec: mov    (%rcx,%rsi,1),%rdi
  0x00007fb547d9b9f0: lea    0x1(%rdi),%rdi
  0x00007fb547d9b9f4: mov    %rdi,(%rcx,%rsi,1)
  0x00007fb547d9b9f8: je     0x00007fb547d9ba0e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@348 (line 1058)

  0x00007fb547d9b9fe: mov    %rdx,%rax
  0x00007fb547d9ba01: mov    0xb8(%rsp),%rcx
  0x00007fb547d9ba09: jmpq   0x00007fb547d9ba4c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x00007fb547d9ba0e: mov    0xb8(%rsp),%rcx
  0x00007fb547d9ba16: movsbl 0x30(%r15),%esi
  0x00007fb547d9ba1b: cmp    $0x0,%esi
  0x00007fb547d9ba1e: jne    0x00007fb547d9c334
  0x00007fb547d9ba24: mov    %rcx,%r10
  0x00007fb547d9ba27: shr    $0x3,%r10
  0x00007fb547d9ba2b: mov    %r10d,0x14(%rax)
  0x00007fb547d9ba2f: lock addl $0x0,-0x40(%rsp)
  0x00007fb547d9ba35: mov    %rax,%rsi
  0x00007fb547d9ba38: xor    %rcx,%rsi
  0x00007fb547d9ba3b: shr    $0x15,%rsi
  0x00007fb547d9ba3f: cmp    $0x0,%rsi
  0x00007fb547d9ba43: jne    0x00007fb547d9c353  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@354 (line 1059)

  0x00007fb547d9ba49: mov    %rdx,%rax
  0x00007fb547d9ba4c: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9ba56: incl   0x718(%rdx)
  0x00007fb547d9ba5c: mov    %rax,%rdi
  0x00007fb547d9ba5f: mov    $0x2,%eax
  0x00007fb547d9ba64: jmpq   0x00007fb547d9bbbc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x00007fb547d9ba69: mov    %r9,%r8
  0x00007fb547d9ba6c: mov    %r14,%rcx
  0x00007fb547d9ba6f: cmp    $0x0,%rdi
  0x00007fb547d9ba73: jne    0x00007fb547d9ba8b
  0x00007fb547d9ba75: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9ba7f: orb    $0x1,0x729(%rsi)
  0x00007fb547d9ba86: jmpq   0x00007fb547d9bb63
  0x00007fb547d9ba8b: movabs $0x80001b230,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$ReservationNode&apos;)}
  0x00007fb547d9ba95: mov    0x8(%rdi),%edx
  0x00007fb547d9ba98: movabs $0x800000000,%r12
  0x00007fb547d9baa2: add    %r12,%rdx
  0x00007fb547d9baa5: xor    %r12,%r12
  0x00007fb547d9baa8: cmp    %rdx,%rbx
  0x00007fb547d9baab: jne    0x00007fb547d9bb47
  0x00007fb547d9bab1: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9babb: mov    0x8(%rdi),%ebx
  0x00007fb547d9babe: movabs $0x800000000,%r12
  0x00007fb547d9bac8: add    %r12,%rbx
  0x00007fb547d9bacb: xor    %r12,%r12
  0x00007fb547d9bace: cmp    0x740(%rsi),%rbx
  0x00007fb547d9bad5: jne    0x00007fb547d9bae4
  0x00007fb547d9bad7: addq   $0x1,0x748(%rsi)
  0x00007fb547d9badf: jmpq   0x00007fb547d9bb68
  0x00007fb547d9bae4: cmp    0x750(%rsi),%rbx
  0x00007fb547d9baeb: jne    0x00007fb547d9bafa
  0x00007fb547d9baed: addq   $0x1,0x758(%rsi)
  0x00007fb547d9baf5: jmpq   0x00007fb547d9bb68
  0x00007fb547d9bafa: cmpq   $0x0,0x740(%rsi)
  0x00007fb547d9bb05: jne    0x00007fb547d9bb1e
  0x00007fb547d9bb07: mov    %rbx,0x740(%rsi)
  0x00007fb547d9bb0e: movq   $0x1,0x748(%rsi)
  0x00007fb547d9bb19: jmpq   0x00007fb547d9bb68
  0x00007fb547d9bb1e: cmpq   $0x0,0x750(%rsi)
  0x00007fb547d9bb29: jne    0x00007fb547d9bb42
  0x00007fb547d9bb2b: mov    %rbx,0x750(%rsi)
  0x00007fb547d9bb32: movq   $0x1,0x758(%rsi)
  0x00007fb547d9bb3d: jmpq   0x00007fb547d9bb68
  0x00007fb547d9bb42: jmpq   0x00007fb547d9bb68
  0x00007fb547d9bb47: movabs $0x7fb52cf4f3d0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bb51: subq   $0x1,0x730(%rsi)
  0x00007fb547d9bb59: jmpq   0x00007fb547d9bb63
  0x00007fb547d9bb5e: jmpq   0x00007fb547d9bb68
  0x00007fb547d9bb63: xor    %rax,%rax
  0x00007fb547d9bb66: jmp    0x00007fb547d9bb72
  0x00007fb547d9bb68: movabs $0x1,%rax          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362 (line 1062)

  0x00007fb547d9bb72: cmp    $0x0,%eax
  0x00007fb547d9bb75: movabs $0x7fb52cf4f3d0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bb7f: movabs $0x778,%rdx
  0x00007fb547d9bb89: jne    0x00007fb547d9bb99
  0x00007fb547d9bb8f: movabs $0x768,%rdx
  0x00007fb547d9bb99: mov    (%rax,%rdx,1),%rsi
  0x00007fb547d9bb9d: lea    0x1(%rsi),%rsi
  0x00007fb547d9bba1: mov    %rsi,(%rax,%rdx,1)
  0x00007fb547d9bba5: jne    0x00007fb547d9be11  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@365 (line 1062)

  0x00007fb547d9bbab: mov    0xc4(%rsp),%eax
  0x00007fb547d9bbb2: movabs $0x0,%rdi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)
                                                ;   {oop(NULL)}
  0x00007fb547d9bbbc: mov    %rax,%rbx
  0x00007fb547d9bbbf: lea    0x118(%rsp),%rax
  0x00007fb547d9bbc7: mov    0x8(%rax),%rsi
  0x00007fb547d9bbcb: mov    (%rsi),%rdx
  0x00007fb547d9bbce: and    $0x7,%rdx
  0x00007fb547d9bbd2: cmp    $0x5,%rdx
  0x00007fb547d9bbd6: je     0x00007fb547d9bbf3
  0x00007fb547d9bbdc: mov    (%rax),%rdx
  0x00007fb547d9bbdf: test   %rdx,%rdx
  0x00007fb547d9bbe2: je     0x00007fb547d9bbf3
  0x00007fb547d9bbe8: lock cmpxchg %rdx,(%rsi)
  0x00007fb547d9bbed: jne    0x00007fb547d9c36b  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@380 (line 1065)

  0x00007fb547d9bbf3: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bbfd: incl   0x798(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@381 (line 1065)

  0x00007fb547d9bc03: cmp    $0x0,%ebx
  0x00007fb547d9bc06: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bc10: movabs $0x7c0,%rsi
  0x00007fb547d9bc1a: jne    0x00007fb547d9bc2a
  0x00007fb547d9bc20: movabs $0x7b0,%rsi
  0x00007fb547d9bc2a: mov    (%rdx,%rsi,1),%rax
  0x00007fb547d9bc2e: lea    0x1(%rax),%rax
  0x00007fb547d9bc32: mov    %rax,(%rdx,%rsi,1)
  0x00007fb547d9bc36: jne    0x00007fb547d9bca6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@394 (line 1066)

  0x00007fb547d9bc3c: mov    0xd8(%rsp),%rax
  0x00007fb547d9bc44: mov    %rbx,%rsi
  0x00007fb547d9bc47: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bc51: mov    0x104(%rdx),%edi
  0x00007fb547d9bc57: add    $0x8,%edi
  0x00007fb547d9bc5a: mov    %edi,0x104(%rdx)
  0x00007fb547d9bc60: and    $0xfff8,%edi
  0x00007fb547d9bc66: cmp    $0x0,%edi
  0x00007fb547d9bc69: je     0x00007fb547d9c381  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x00007fb547d9bc6f: mov    0x108(%r15),%r10   ; ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x00007fb547d9bc76: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d9bc79: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bc83: incl   0x848(%rdx)
  0x00007fb547d9bc89: mov    %rax,%rdx
  0x00007fb547d9bc8c: mov    %rsi,%rax
  0x00007fb547d9bc8f: mov    %rdx,%rbx
  0x00007fb547d9bc92: mov    %eax,0xc4(%rsp)
  0x00007fb547d9bc99: mov    0xa8(%rsp),%rdi
  0x00007fb547d9bca1: jmpq   0x00007fb547d9a4a8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x00007fb547d9bca6: mov    0xd8(%rsp),%rdx
  0x00007fb547d9bcae: cmp    $0x8,%ebx
  0x00007fb547d9bcb1: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bcbb: movabs $0x7e0,%rsi
  0x00007fb547d9bcc5: jge    0x00007fb547d9bcd5
  0x00007fb547d9bccb: movabs $0x7d0,%rsi
  0x00007fb547d9bcd5: mov    (%rcx,%rsi,1),%rax
  0x00007fb547d9bcd9: lea    0x1(%rax),%rax
  0x00007fb547d9bcdd: mov    %rax,(%rcx,%rsi,1)
  0x00007fb547d9bce1: jge    0x00007fb547d9bcf3  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@401 (line 1067)

  0x00007fb547d9bce7: mov    %ebx,0x100(%rsp)
  0x00007fb547d9bcee: jmpq   0x00007fb547d9bd3c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@412 (line 1069)

  0x00007fb547d9bcf3: mov    %rdi,0xf8(%rsp)
  0x00007fb547d9bcfb: mov    %ebx,0x100(%rsp)
  0x00007fb547d9bd02: mov    0xe8(%rsp),%r9d
  0x00007fb547d9bd0a: mov    0xa8(%rsp),%rsi
  0x00007fb547d9bd12: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bd1c: addq   $0x1,0x7f0(%rcx)
  0x00007fb547d9bd24: mov    %r9,%rcx
  0x00007fb547d9bd27: mov    0xa8(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)

  0x00007fb547d9bd2f: callq  0x00007fb54784ad80  ; ImmutableOopMap{[168]=Oop [248]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)
                                                ;   {optimized virtual_call}
  0x00007fb547d9bd34: mov    0xf8(%rsp),%rdi
  0x00007fb547d9bd3c: cmp    $0x0,%rdi
  0x00007fb547d9bd40: movabs $0x7fb52cf4f3d0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bd4a: movabs $0x838,%rdx
  0x00007fb547d9bd54: jne    0x00007fb547d9bd64
  0x00007fb547d9bd5a: movabs $0x828,%rdx
  0x00007fb547d9bd64: mov    (%rax,%rdx,1),%rcx
  0x00007fb547d9bd68: lea    0x1(%rcx),%rcx
  0x00007fb547d9bd6c: mov    %rcx,(%rax,%rdx,1)
  0x00007fb547d9bd70: jne    0x00007fb547d9bd82  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@414 (line 1069)

  0x00007fb547d9bd76: mov    0x100(%rsp),%eax
  0x00007fb547d9bd7d: jmpq   0x00007fb547d9bdc5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@423 (line 1075)

  0x00007fb547d9bd82: mov    %rdi,%rax
  0x00007fb547d9bd85: add    $0x130,%rsp
  0x00007fb547d9bd8c: pop    %rbp
  0x00007fb547d9bd8d: mov    0x108(%r15),%r10
  0x00007fb547d9bd94: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9bd97: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@419 (line 1070)

  0x00007fb547d9bd98: mov    %rsi,%rax
  0x00007fb547d9bd9b: add    $0x130,%rsp
  0x00007fb547d9bda2: pop    %rbp
  0x00007fb547d9bda3: mov    0x108(%r15),%r10
  0x00007fb547d9bdaa: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9bdad: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@178 (line 1028)

  0x00007fb547d9bdae: mov    0xc4(%rsp),%eax
  0x00007fb547d9bdb5: movabs $0x7fb52cf4f3d0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bdbf: incl   0x2d8(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@100 (line 1020)

  0x00007fb547d9bdc5: mov    0xa8(%rsp),%rsi
  0x00007fb547d9bdcd: mov    %rsi,%rdx
  0x00007fb547d9bdd0: movabs $0x7fb52cf4f3d0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bdda: addq   $0x1,0x860(%rcx)
  0x00007fb547d9bde2: movabs $0x1,%rdx
  0x00007fb547d9bdec: mov    %rax,%rcx          ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)

  0x00007fb547d9bdef: callq  0x00007fb547d9c4b5  ; ImmutableOopMap{}
                                                ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)
                                                ;   {optimized virtual_call}
  0x00007fb547d9bdf4: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547d9bdfe: add    $0x130,%rsp
  0x00007fb547d9be05: pop    %rbp
  0x00007fb547d9be06: mov    0x108(%r15),%r10
  0x00007fb547d9be0d: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9be10: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@431 (line 1076)

  0x00007fb547d9be11: nopl   0x0(%rax)
  0x00007fb547d9be18: jmpq   0x00007fb547d9c3b1  ;   {no_reloc}
  0x00007fb547d9be1d: add    %al,(%rax)
  0x00007fb547d9be1f: add    %al,(%rax)
  0x00007fb547d9be21: add    %ch,%cl
  0x00007fb547d9be23: xchg   %eax,%esp
  0x00007fb547d9be24: add    $0x8b480000,%eax   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)

  0x00007fb547d9be29: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9be2c: (bad)  
  0x00007fb547d9be2d: repz hlt 
  0x00007fb547d9be2f: sub    $0xb5,%al
  0x00007fb547d9be31: jg     0x00007fb547d9be33
  0x00007fb547d9be33: add    %cl,-0x7d(%rax)
  0x00007fb547d9be36: xchg   %cl,0x1000007(%rax)
  0x00007fb547d9be3c: movabs $0x62d8f5cf0,%rdx  ;   {oop(&quot;Recursive update&quot;{0x000000062d8f5cf0})}
  0x00007fb547d9be46: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)

  0x00007fb547d9be49: mov    %rax,0x108(%rsp)
  0x00007fb547d9be51: nopw   0x0(%rax,%rax,1)
  0x00007fb547d9be57: callq  0x00007fb54784ad80  ; ImmutableOopMap{[264]=Oop [208]=Oop [288]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)
                                                ;   {optimized virtual_call}
  0x00007fb547d9be5c: mov    0x108(%rsp),%rax   ; ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)

  0x00007fb547d9be64: movabs $0x7fb547d9be64,%rdx  ;   {section_word}
  0x00007fb547d9be6e: callq  0x00007fb5478f4800  ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x00007fb547d9be73: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)

  0x00007fb547d9be74: nopl   0x0(%rax)
  0x00007fb547d9be78: jmpq   0x00007fb547d9c3d7  ;   {no_reloc}
  0x00007fb547d9be7d: add    %al,(%rax)
  0x00007fb547d9be7f: add    %al,(%rax)
  0x00007fb547d9be81: add    %cl,-0x75(%rcx)
  0x00007fb547d9be84: xchg   %ebx,(%rax)
  0x00007fb547d9be86: add    %eax,(%rax)
  0x00007fb547d9be88: add    %cl,-0x73(%rax)
  0x00007fb547d9be8b: js     0x00007fb547d9beb5
  0x00007fb547d9be8d: cmp    0x128(%r15),%rdi
  0x00007fb547d9be94: ja     0x00007fb547d9c3e1
  0x00007fb547d9be9a: mov    %rdi,0x118(%r15)
  0x00007fb547d9bea1: mov    0xb8(%rdx),%rcx
  0x00007fb547d9bea8: mov    %rcx,(%rax)
  0x00007fb547d9beab: mov    %rdx,%rcx
  0x00007fb547d9beae: movabs $0x800000000,%r12
  0x00007fb547d9beb8: sub    %r12,%rcx
  0x00007fb547d9bebb: xor    %r12,%r12
  0x00007fb547d9bebe: mov    %ecx,0x8(%rax)
  0x00007fb547d9bec1: xor    %rcx,%rcx
  0x00007fb547d9bec4: mov    %ecx,0xc(%rax)
  0x00007fb547d9bec7: xor    %rcx,%rcx
  0x00007fb547d9beca: mov    %rcx,0x10(%rax)
  0x00007fb547d9bece: mov    %rcx,0x18(%rax)
  0x00007fb547d9bed2: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)

  0x00007fb547d9bed6: mov    %rax,%rsi
  0x00007fb547d9bed9: movabs $0x7fb52cf4f3d0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bee3: addq   $0x1,0x180(%rdi)
  0x00007fb547d9beeb: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)

  0x00007fb547d9beee: mov    %rax,0x110(%rsp)
  0x00007fb547d9bef6: nop
  0x00007fb547d9bef7: callq  0x00007fb54784ad80  ; ImmutableOopMap{[272]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
                                                ;   {optimized virtual_call}
  0x00007fb547d9befc: mov    0x110(%rsp),%rax
  0x00007fb547d9bf04: jmpq   0x00007fb547d9c42f  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15 (line 1011)

  0x00007fb547d9bf09: mov    0x440(%r15),%rax
  0x00007fb547d9bf10: xor    %r10,%r10
  0x00007fb547d9bf13: mov    %r10,0x440(%r15)
  0x00007fb547d9bf1a: xor    %r10,%r10
  0x00007fb547d9bf1d: mov    %r10,0x448(%r15)
  0x00007fb547d9bf24: mov    %rax,%rsi
  0x00007fb547d9bf27: lea    0x118(%rsp),%rax
  0x00007fb547d9bf2f: mov    0x8(%rax),%rbx
  0x00007fb547d9bf33: mov    (%rbx),%rdi
  0x00007fb547d9bf36: and    $0x7,%rdi
  0x00007fb547d9bf3a: cmp    $0x5,%rdi
  0x00007fb547d9bf3e: je     0x00007fb547d9bf5b
  0x00007fb547d9bf44: mov    (%rax),%rdi
  0x00007fb547d9bf47: test   %rdi,%rdi
  0x00007fb547d9bf4a: je     0x00007fb547d9bf5b
  0x00007fb547d9bf50: lock cmpxchg %rdi,(%rbx)
  0x00007fb547d9bf55: jne    0x00007fb547d9c3ee  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@388 (line 1065)

  0x00007fb547d9bf5b: mov    %rsi,%rax
  0x00007fb547d9bf5e: jmpq   0x00007fb547d9c42f
  0x00007fb547d9bf63: movabs $0x7fb52cde4080,%r10  ;   {metadata({method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bf6d: mov    %r10,0x8(%rsp)
  0x00007fb547d9bf72: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9bf7a: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop rcx=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1 (line 1011)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9bf7f: jmpq   0x00007fb547d9a317
  0x00007fb547d9bf84: callq  0x00007fb5478f3020  ; ImmutableOopMap{[184]=Oop [168]=Oop rdx=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9bf89: movabs $0x7fb52cde2d28,%r10  ;   {metadata({method} {0x00007fb52cde2d28} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bf93: mov    %r10,0x8(%rsp)
  0x00007fb547d9bf98: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9bfa0: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20 (line 1012)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9bfa5: jmpq   0x00007fb547d9a476
  0x00007fb547d9bfaa: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdi=Oop [168]=Oop [184]=Oop [176]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9bfaf: movabs $0x7fb52cde3108,%r10  ;   {metadata({method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9bfb9: mov    %r10,0x8(%rsp)
  0x00007fb547d9bfbe: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9bfc6: callq  0x00007fb5478f8100  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9bfcb: jmpq   0x00007fb547d9a5b5
  0x00007fb547d9bfd0: movabs $0x7fb52cd68f60,%r10  ;   {metadata({method} {0x00007fb52cd68f60} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb547d9bfda: mov    %r10,0x8(%rsp)
  0x00007fb547d9bfdf: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9bfe7: callq  0x00007fb5478f8100  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9bfec: jmpq   0x00007fb547d9a656
  0x00007fb547d9bff1: cmp    $0x0,%rsi
  0x00007fb547d9bff5: je     0x00007fb547d9a6ae
  0x00007fb547d9bffb: mov    %rsi,(%rsp)
  0x00007fb547d9bfff: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c004: jmpq   0x00007fb547d9a6ae
  0x00007fb547d9c009: mov    %rsi,(%rsp)
  0x00007fb547d9c00d: callq  0x00007fb5478f5420  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547d9c012: mov    %rdx,%rdx
  0x00007fb547d9c015: callq  0x00007fb5478f3900  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547d9c01a: jmpq   0x00007fb547d9a865
  0x00007fb547d9c01f: movabs $0x7fb52cdf4258,%r10  ;   {metadata({method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9c029: mov    %r10,0x8(%rsp)
  0x00007fb547d9c02e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9c036: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c03b: jmpq   0x00007fb547d9a8a5
  0x00007fb547d9c040: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d9c04a: mov    %r10,0x8(%rsp)
  0x00007fb547d9c04f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9c057: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c05c: jmpq   0x00007fb547d9a8e2
  0x00007fb547d9c061: mov    0x10(%rdx),%eax
  0x00007fb547d9c064: shl    $0x3,%rax
  0x00007fb547d9c068: cmp    $0x0,%rax
  0x00007fb547d9c06c: je     0x00007fb547d9a8f4
  0x00007fb547d9c072: mov    %rax,(%rsp)
  0x00007fb547d9c076: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c07b: jmpq   0x00007fb547d9a8f4
  0x00007fb547d9c080: cmp    $0x0,%r11
  0x00007fb547d9c084: je     0x00007fb547d9a913
  0x00007fb547d9c08a: mov    %rdx,(%rsp)
  0x00007fb547d9c08e: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9c093: jmpq   0x00007fb547d9a913
  0x00007fb547d9c098: mov    0x14(%rdx),%eax
  0x00007fb547d9c09b: shl    $0x3,%rax
  0x00007fb547d9c09f: cmp    $0x0,%rax
  0x00007fb547d9c0a3: je     0x00007fb547d9a921
  0x00007fb547d9c0a9: mov    %rax,(%rsp)
  0x00007fb547d9c0ad: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c0b2: jmpq   0x00007fb547d9a921
  0x00007fb547d9c0b7: cmp    $0x0,%r14
  0x00007fb547d9c0bb: je     0x00007fb547d9a946
  0x00007fb547d9c0c1: mov    %rdx,(%rsp)
  0x00007fb547d9c0c5: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9c0ca: jmpq   0x00007fb547d9a946
  0x00007fb547d9c0cf: movabs $0x7fb52cde31e8,%r10  ;   {metadata({method} {0x00007fb52cde31e8} &apos;casTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9c0d9: mov    %r10,0x8(%rsp)
  0x00007fb547d9c0de: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9c0e6: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 765)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c0eb: jmpq   0x00007fb547d9a980
  0x00007fb547d9c0f0: mov    (%rcx),%eax
  0x00007fb547d9c0f2: shl    $0x3,%rax
  0x00007fb547d9c0f6: cmp    $0x0,%rax
  0x00007fb547d9c0fa: je     0x00007fb547d9a992
  0x00007fb547d9c100: mov    %rax,(%rsp)
  0x00007fb547d9c104: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c109: jmpq   0x00007fb547d9a992
  0x00007fb547d9c10e: cmp    $0x0,%rdx
  0x00007fb547d9c112: je     0x00007fb547d9a9d0
  0x00007fb547d9c118: mov    %rcx,(%rsp)
  0x00007fb547d9c11c: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9c121: jmpq   0x00007fb547d9a9d0
  0x00007fb547d9c126: callq  0x00007fb5478f3020  ; ImmutableOopMap{[168]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9c12b: mov    %rdi,0x8(%rsp)
  0x00007fb547d9c130: mov    %rdx,(%rsp)
  0x00007fb547d9c134: callq  0x00007fb5478f6000  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)
                                                ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x00007fb547d9c139: jmpq   0x00007fb547d9ae8f
  0x00007fb547d9c13e: movabs $0x7fb52cde3108,%r10  ;   {metadata({method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9c148: mov    %r10,0x8(%rsp)
  0x00007fb547d9c14d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9c155: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c15a: jmpq   0x00007fb547d9aed9
  0x00007fb547d9c15f: movabs $0x7fb52cd68f60,%r10  ;   {metadata({method} {0x00007fb52cd68f60} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb547d9c169: mov    %r10,0x8(%rsp)
  0x00007fb547d9c16e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9c176: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c17b: jmpq   0x00007fb547d9af60
  0x00007fb547d9c180: cmp    $0x0,%rsi
  0x00007fb547d9c184: je     0x00007fb547d9afb8
  0x00007fb547d9c18a: mov    %rsi,(%rsp)
  0x00007fb547d9c18e: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c193: jmpq   0x00007fb547d9afb8
  0x00007fb547d9c198: mov    %rsi,(%rsp)
  0x00007fb547d9c19c: callq  0x00007fb5478f5420  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547d9c1a1: callq  0x00007fb5478f3020  ; ImmutableOopMap{[168]=Oop [184]=Oop rax=Oop [216]=Oop [208]=Oop rdx=Oop [176]=Oop [288]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9c1a6: movabs $0x7fb52cde4080,%r10  ;   {metadata({method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9c1b0: mov    %r10,0x8(%rsp)
  0x00007fb547d9c1b5: movq   $0x131,(%rsp)
  0x00007fb547d9c1bd: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c1c2: jmpq   0x00007fb547d9b3b8
  0x00007fb547d9c1c7: mov    0x14(%r8),%esi
  0x00007fb547d9c1cb: shl    $0x3,%rsi
  0x00007fb547d9c1cf: cmp    $0x0,%rsi
  0x00007fb547d9c1d3: je     0x00007fb547d9b46e
  0x00007fb547d9c1d9: mov    %rsi,(%rsp)
  0x00007fb547d9c1dd: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c1e2: jmpq   0x00007fb547d9b46e
  0x00007fb547d9c1e7: cmp    $0x0,%rcx
  0x00007fb547d9c1eb: je     0x00007fb547d9b493
  0x00007fb547d9c1f1: mov    %r8,(%rsp)
  0x00007fb547d9c1f5: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9c1fa: jmpq   0x00007fb547d9b493
  0x00007fb547d9c1ff: mov    %rdx,%rdx
  0x00007fb547d9c202: callq  0x00007fb5478f3900  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547d9c207: jmpq   0x00007fb547d9b544
  0x00007fb547d9c20c: movabs $0x7fb52cdf4258,%r10  ;   {metadata({method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9c216: mov    %r10,0x8(%rsp)
  0x00007fb547d9c21b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9c223: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c228: jmpq   0x00007fb547d9b581
  0x00007fb547d9c22d: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d9c237: mov    %r10,0x8(%rsp)
  0x00007fb547d9c23c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9c244: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c249: jmpq   0x00007fb547d9b5be
  0x00007fb547d9c24e: mov    0x10(%rax),%edx
  0x00007fb547d9c251: shl    $0x3,%rdx
  0x00007fb547d9c255: cmp    $0x0,%rdx
  0x00007fb547d9c259: je     0x00007fb547d9b5d0
  0x00007fb547d9c25f: mov    %rdx,(%rsp)
  0x00007fb547d9c263: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c268: jmpq   0x00007fb547d9b5d0
  0x00007fb547d9c26d: cmp    $0x0,%r11
  0x00007fb547d9c271: je     0x00007fb547d9b5ef
  0x00007fb547d9c277: mov    %rax,(%rsp)
  0x00007fb547d9c27b: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9c280: jmpq   0x00007fb547d9b5ef
  0x00007fb547d9c285: mov    0x14(%rax),%edx
  0x00007fb547d9c288: shl    $0x3,%rdx
  0x00007fb547d9c28c: cmp    $0x0,%rdx
  0x00007fb547d9c290: je     0x00007fb547d9b5fd
  0x00007fb547d9c296: mov    %rdx,(%rsp)
  0x00007fb547d9c29a: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c29f: jmpq   0x00007fb547d9b5fd
  0x00007fb547d9c2a4: cmp    $0x0,%r14
  0x00007fb547d9c2a8: je     0x00007fb547d9b622
  0x00007fb547d9c2ae: mov    %rax,(%rsp)
  0x00007fb547d9c2b2: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9c2b7: jmpq   0x00007fb547d9b622
  0x00007fb547d9c2bc: mov    0x18(%r8),%edx
  0x00007fb547d9c2c0: shl    $0x3,%rdx
  0x00007fb547d9c2c4: cmp    $0x0,%rdx
  0x00007fb547d9c2c8: je     0x00007fb547d9b630
  0x00007fb547d9c2ce: mov    %rdx,(%rsp)
  0x00007fb547d9c2d2: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c2d7: jmpq   0x00007fb547d9b630
  0x00007fb547d9c2dc: cmp    $0x0,%rax
  0x00007fb547d9c2e0: je     0x00007fb547d9b655
  0x00007fb547d9c2e6: mov    %r8,(%rsp)
  0x00007fb547d9c2ea: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9c2ef: jmpq   0x00007fb547d9b655
  0x00007fb547d9c2f4: movabs $0x0,%rsi          ;   {metadata(NULL)}
  0x00007fb547d9c2fe: mov    $0xa050f00,%eax
  0x00007fb547d9c303: callq  0x00007fb5478f7080  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547d9c308: jmpq   0x00007fb547d9b6d8
  0x00007fb547d9c30d: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x00007fb547d9c317: mov    $0xa050f00,%eax
  0x00007fb547d9c31c: callq  0x00007fb5478f7080  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547d9c321: jmpq   0x00007fb547d9b840
  0x00007fb547d9c326: mov    %rdi,(%rsp)
  0x00007fb547d9c32a: callq  0x00007fb5478f5420  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547d9c32f: callq  0x00007fb5478f3020  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9c334: mov    0x14(%rax),%esi
  0x00007fb547d9c337: shl    $0x3,%rsi
  0x00007fb547d9c33b: cmp    $0x0,%rsi
  0x00007fb547d9c33f: je     0x00007fb547d9ba24
  0x00007fb547d9c345: mov    %rsi,(%rsp)
  0x00007fb547d9c349: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9c34e: jmpq   0x00007fb547d9ba24
  0x00007fb547d9c353: cmp    $0x0,%rcx
  0x00007fb547d9c357: je     0x00007fb547d9ba49
  0x00007fb547d9c35d: mov    %rax,(%rsp)
  0x00007fb547d9c361: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9c366: jmpq   0x00007fb547d9ba49
  0x00007fb547d9c36b: lea    0x118(%rsp),%rax
  0x00007fb547d9c373: mov    %rax,(%rsp)
  0x00007fb547d9c377: callq  0x00007fb5478f6600  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x00007fb547d9c37c: jmpq   0x00007fb547d9bbf3
  0x00007fb547d9c381: movabs $0x7fb52cde4080,%r10  ;   {metadata({method} {0x00007fb52cde4080} &apos;putVal&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9c38b: mov    %r10,0x8(%rsp)
  0x00007fb547d9c390: movq   $0x1a4,(%rsp)
  0x00007fb547d9c398: callq  0x00007fb5478f8100  ; ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9c39d: jmpq   0x00007fb547d9bc6f
  0x00007fb547d9c3a2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547d9c3ac: mov    $0xa050f00,%eax
  0x00007fb547d9c3b1: callq  0x00007fb5478f7080  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547d9c3b6: jmpq   0x00007fb547d9be18
  0x00007fb547d9c3bb: mov    %rdx,%rdx
  0x00007fb547d9c3be: callq  0x00007fb5478f3600  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00007fb547d9c3c3: jmpq   0x00007fb547d9be27
  0x00007fb547d9c3c8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547d9c3d2: mov    $0xa050f00,%eax
  0x00007fb547d9c3d7: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547d9c3dc: jmpq   0x00007fb547d9be78
  0x00007fb547d9c3e1: mov    %rdx,%rdx
  0x00007fb547d9c3e4: callq  0x00007fb5478f3900  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547d9c3e9: jmpq   0x00007fb547d9bed6
  0x00007fb547d9c3ee: lea    0x118(%rsp),%rax
  0x00007fb547d9c3f6: mov    %rax,(%rsp)
  0x00007fb547d9c3fa: callq  0x00007fb5478f6600  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x00007fb547d9c3ff: jmpq   0x00007fb547d9bf5b
  0x00007fb547d9c404: nop
  0x00007fb547d9c405: nop
  0x00007fb547d9c406: mov    0x440(%r15),%rax
  0x00007fb547d9c40d: movabs $0x0,%r10
  0x00007fb547d9c417: mov    %r10,0x440(%r15)
  0x00007fb547d9c41e: movabs $0x0,%r10
  0x00007fb547d9c428: mov    %r10,0x448(%r15)
  0x00007fb547d9c42f: add    $0x130,%rsp
  0x00007fb547d9c436: pop    %rbp
  0x00007fb547d9c437: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9c43c: hlt    
  0x00007fb547d9c43d: hlt    
  0x00007fb547d9c43e: hlt    
  0x00007fb547d9c43f: hlt    
[Stub Code]
  0x00007fb547d9c440: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d9c445: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c44f: jmpq   0x00007fb547d9c44f  ;   {runtime_call}
  0x00007fb547d9c454: nop
  0x00007fb547d9c455: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c45f: jmpq   0x00007fb547d9c45f  ;   {runtime_call}
  0x00007fb547d9c464: nop
  0x00007fb547d9c465: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c46f: jmpq   0x00007fb547d9c46f  ;   {runtime_call}
  0x00007fb547d9c474: nop
  0x00007fb547d9c475: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c47f: jmpq   0x00007fb547d9c47f  ;   {runtime_call}
  0x00007fb547d9c484: nop
  0x00007fb547d9c485: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c48f: jmpq   0x00007fb547d9c48f  ;   {runtime_call}
  0x00007fb547d9c494: nop
  0x00007fb547d9c495: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c49f: jmpq   0x00007fb547d9c49f  ;   {runtime_call}
  0x00007fb547d9c4a4: nop
  0x00007fb547d9c4a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c4af: jmpq   0x00007fb547d9c4af  ;   {runtime_call}
  0x00007fb547d9c4b4: nop
  0x00007fb547d9c4b5: movabs $0x7fb52cde79c0,%rbx  ;   {static_stub}
  0x00007fb547d9c4bf: jmpq   0x00007fb547842363  ;   {runtime_call I2C/C2I adapters}
  0x00007fb547d9c4c4: nop
  0x00007fb547d9c4c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c4cf: jmpq   0x00007fb547d9c4cf  ;   {runtime_call}
  0x00007fb547d9c4d4: nop
  0x00007fb547d9c4d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9c4df: jmpq   0x00007fb547d9c4df  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d9c4e4: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d9c4e9: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9c4f3: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d9c4f7: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9c4fc: hlt    
[Deopt Handler Code]
  0x00007fb547d9c4fd: movabs $0x7fb547d9c4fd,%r10  ;   {section_word}
  0x00007fb547d9c507: push   %r10
  0x00007fb547d9c509: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9c50e: hlt    
  0x00007fb547d9c50f: hlt    

ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 412 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }pc offsets: 676 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 2060 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop }pc offsets: 2684 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop [240]=Oop [288]=Oop }pc offsets: 4196 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 4383 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop [184]=Oop [176]=Oop [288]=Oop }pc offsets: 5820 
ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }pc offsets: 6614 
ImmutableOopMap{[168]=Oop [248]=Oop }pc offsets: 6804 
ImmutableOopMap{}pc offsets: 6996 
ImmutableOopMap{[264]=Oop [208]=Oop [288]=Oop }pc offsets: 7100 
ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }pc offsets: 7108 
ImmutableOopMap{[272]=Oop }pc offsets: 7260 
ImmutableOopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop rcx=Oop [184]=Oop }pc offsets: 7391 
ImmutableOopMap{[184]=Oop [168]=Oop rdx=Oop [176]=Oop }pc offsets: 7401 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 7429 
ImmutableOopMap{rdi=Oop [168]=Oop [184]=Oop [176]=Oop rbx=Oop }pc offsets: 7439 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }pc offsets: 7467 7500 7538 
ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop }pc offsets: 7546 
ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }pc offsets: 7579 7612 7755 
ImmutableOopMap{[168]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop rbx=Oop }pc offsets: 7819 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop rdi=Oop [208]=Oop [288]=Oop }pc offsets: 7833 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }pc offsets: 7866 7899 7937 
ImmutableOopMap{[168]=Oop [184]=Oop rax=Oop [216]=Oop [208]=Oop rdx=Oop [176]=Oop [288]=Oop }pc offsets: 7942 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 7970 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop [288]=Oop }pc offsets: 8039 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }pc offsets: 8072 8105 
ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }pc offsets: 8296 8321 8335 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }pc offsets: 8340 
ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }pc offsets: 8445 
ImmutableOopMap{[208]=Oop [288]=Oop }pc offsets: 8470 8483 
ImmutableOopMap{}pc offsets: 8508 8521 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='41' method='java.lang.String length ()I' bytes='11' count='512' iicount='512' level='3' stamp='0.619' comment='tiered' hot_count='512'/>
<task_queued compile_id='42' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='384' iicount='384' level='3' stamp='0.619' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='37' compiler='c1' level='3' entry='0x00007fb547d9dae0' size='4816' address='0x00007fb547d9d890' relocation_offset='376' insts_offset='592' stub_offset='2864' scopes_data_offset='3048' scopes_pcs_offset='3688' dependencies_offset='4776' nul_chk_table_offset='4784' metadata_offset='3024' method='java.util.concurrent.ConcurrentHashMap addCount (JI)V' bytes='289' count='891' backedge_count='3' iicount='891' stamp='0.619'/>
<print_nmethod stamp='0.619'>
Compiled method (c1)     619   37       3       java.util.concurrent.ConcurrentHashMap::addCount (289 bytes)
 total in heap  [0x00007fb547d9d890,0x00007fb547d9eb60] = 4816
 relocation     [0x00007fb547d9da08,0x00007fb547d9dad8] = 208
 main code      [0x00007fb547d9dae0,0x00007fb547d9e3c0] = 2272
 stub code      [0x00007fb547d9e3c0,0x00007fb547d9e460] = 160
 metadata       [0x00007fb547d9e460,0x00007fb547d9e478] = 24
 scopes data    [0x00007fb547d9e478,0x00007fb547d9e6f8] = 640
 scopes pcs     [0x00007fb547d9e6f8,0x00007fb547d9eb38] = 1088
 dependencies   [0x00007fb547d9eb38,0x00007fb547d9eb40] = 8
 nul chk table  [0x00007fb547d9eb40,0x00007fb547d9eb60] = 32
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.addCount(JI)V  [0x00007fb547d9dae0, 0x00007fb547d9e460]  2432 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x00007fb547d9dae0: mov    0x8(%rsi),%r10d
  0x00007fb547d9dae4: movabs $0x800000000,%r12
  0x00007fb547d9daee: add    %r12,%r10
  0x00007fb547d9daf1: xor    %r12,%r12
  0x00007fb547d9daf4: cmp    %rax,%r10
  0x00007fb547d9daf7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9dafd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d9db00: mov    %eax,-0x14000(%rsp)
  0x00007fb547d9db07: push   %rbp
  0x00007fb547d9db08: sub    $0xb0,%rsp
  0x00007fb547d9db0f: mov    %rsi,0x88(%rsp)
  0x00007fb547d9db17: mov    %ecx,0x74(%rsp)
  0x00007fb547d9db1b: movabs $0x7fb52cf4fe70,%rax  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9db25: mov    0x100(%rax),%ebx
  0x00007fb547d9db2b: add    $0x8,%ebx
  0x00007fb547d9db2e: mov    %ebx,0x100(%rax)
  0x00007fb547d9db34: and    $0x1ff8,%ebx
  0x00007fb547d9db3a: cmp    $0x0,%ebx
  0x00007fb547d9db3d: je     0x00007fb547d9e2ef  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@0 (line 2318)

  0x00007fb547d9db43: mov    0x30(%rsi),%edi
  0x00007fb547d9db46: shl    $0x3,%rdi          ;*getfield counterCells {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@1 (line 2318)

  0x00007fb547d9db4a: cmp    $0x0,%rdi
  0x00007fb547d9db4e: movabs $0x7fb52cf4fe70,%rax  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9db58: movabs $0x140,%rbx
  0x00007fb547d9db62: jne    0x00007fb547d9db72
  0x00007fb547d9db68: movabs $0x150,%rbx
  0x00007fb547d9db72: mov    (%rax,%rbx,1),%r8
  0x00007fb547d9db76: lea    0x1(%r8),%r8
  0x00007fb547d9db7a: mov    %r8,(%rax,%rbx,1)
  0x00007fb547d9db7e: jne    0x00007fb547d9dbe9  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@7 (line 2318)

  0x00007fb547d9db84: vmovsd 0x18(%rsi),%xmm0
  0x00007fb547d9db89: vmovq  %xmm0,%rax         ;*getfield baseCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@18 (line 2318)

  0x00007fb547d9db8e: mov    %rax,%r8
  0x00007fb547d9db91: add    %rdx,%r8
  0x00007fb547d9db94: lea    0x18(%rsi),%r9
  0x00007fb547d9db98: mov    %r8,%rbx
  0x00007fb547d9db9b: lock cmpxchg %rbx,(%r9)
  0x00007fb547d9dba0: mov    $0x1,%ebx
  0x00007fb547d9dba5: je     0x00007fb547d9dbb0
  0x00007fb547d9dbab: mov    $0x0,%ebx          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@31 (line 2319)

  0x00007fb547d9dbb0: cmp    $0x0,%ebx
  0x00007fb547d9dbb3: movabs $0x7fb52cf4fe70,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9dbbd: movabs $0x198,%rax
  0x00007fb547d9dbc7: jne    0x00007fb547d9dbd7
  0x00007fb547d9dbcd: movabs $0x1a8,%rax
  0x00007fb547d9dbd7: mov    (%rbx,%rax,1),%r9
  0x00007fb547d9dbdb: lea    0x1(%r9),%r9
  0x00007fb547d9dbdf: mov    %r9,(%rbx,%rax,1)
  0x00007fb547d9dbe3: jne    0x00007fb547d9ddf3  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@34 (line 2319)

  0x00007fb547d9dbe9: cmp    $0x0,%rdi
  0x00007fb547d9dbed: movabs $0x7fb52cf4fe70,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9dbf7: movabs $0x1c8,%rax
  0x00007fb547d9dc01: jne    0x00007fb547d9dc11
  0x00007fb547d9dc07: movabs $0x1b8,%rax
  0x00007fb547d9dc11: mov    (%rbx,%rax,1),%r8
  0x00007fb547d9dc15: lea    0x1(%r8),%r8
  0x00007fb547d9dc19: mov    %r8,(%rbx,%rax,1)
  0x00007fb547d9dc1d: jne    0x00007fb547d9dc2d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@42 (line 2322)

  0x00007fb547d9dc23: mov    $0x1,%edi
  0x00007fb547d9dc28: jmpq   0x00007fb547d9e2bc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x00007fb547d9dc2d: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2322)
                                                ; implicit exception: dispatches to 0x00007fb547d9e310
  0x00007fb547d9dc30: dec    %ebx
  0x00007fb547d9dc32: cmp    $0x0,%ebx
  0x00007fb547d9dc35: movabs $0x7fb52cf4fe70,%rax  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9dc3f: movabs $0x1e8,%r8
  0x00007fb547d9dc49: jge    0x00007fb547d9dc59
  0x00007fb547d9dc4f: movabs $0x1d8,%r8
  0x00007fb547d9dc59: mov    (%rax,%r8,1),%r9
  0x00007fb547d9dc5d: lea    0x1(%r9),%r9
  0x00007fb547d9dc61: mov    %r9,(%rax,%r8,1)
  0x00007fb547d9dc65: jge    0x00007fb547d9dc75  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@53 (line 2322)

  0x00007fb547d9dc6b: mov    $0x1,%edi
  0x00007fb547d9dc70: jmpq   0x00007fb547d9e2bc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x00007fb547d9dc75: mov    %ebx,0x70(%rsp)
  0x00007fb547d9dc79: mov    %rdi,0x78(%rsp)
  0x00007fb547d9dc7e: mov    %rdx,0x80(%rsp)
  0x00007fb547d9dc86: nop
  0x00007fb547d9dc87: callq  0x00007fb54784a780  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*invokestatic getProbe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@58 (line 2323)
                                                ;   {static_call}
  0x00007fb547d9dc8c: and    0x70(%rsp),%eax
  0x00007fb547d9dc90: mov    0x78(%rsp),%rdi
  0x00007fb547d9dc95: cmp    0xc(%rdi),%eax
  0x00007fb547d9dc98: jae    0x00007fb547d9e315
  0x00007fb547d9dc9e: movslq %eax,%rax
  0x00007fb547d9dca1: mov    0x10(%rdi,%rax,4),%eax
  0x00007fb547d9dca5: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2323)

  0x00007fb547d9dca9: cmp    $0x0,%rax
  0x00007fb547d9dcad: movabs $0x7fb52cf4fe70,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9dcb7: movabs $0x218,%rsi
  0x00007fb547d9dcc1: jne    0x00007fb547d9dcd1
  0x00007fb547d9dcc7: movabs $0x208,%rsi
  0x00007fb547d9dcd1: mov    (%rbx,%rsi,1),%rdi
  0x00007fb547d9dcd5: lea    0x1(%rdi),%rdi
  0x00007fb547d9dcd9: mov    %rdi,(%rbx,%rsi,1)
  0x00007fb547d9dcdd: jne    0x00007fb547d9dcfd  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@68 (line 2323)

  0x00007fb547d9dce3: mov    $0x1,%edi
  0x00007fb547d9dce8: mov    0x80(%rsp),%rdx
  0x00007fb547d9dcf0: mov    0x88(%rsp),%rsi
  0x00007fb547d9dcf8: jmpq   0x00007fb547d9e2bc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x00007fb547d9dcfd: mov    0x80(%rsp),%rdx
  0x00007fb547d9dd05: vmovsd 0x90(%rax),%xmm0   ; implicit exception: dispatches to 0x00007fb547d9e323
  0x00007fb547d9dd0d: vmovq  %xmm0,%rbx         ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2323)

  0x00007fb547d9dd12: mov    %rbx,%rsi
  0x00007fb547d9dd15: add    %rdx,%rsi
  0x00007fb547d9dd18: lea    0x90(%rax),%rdi
  0x00007fb547d9dd1f: mov    %rbx,%rax
  0x00007fb547d9dd22: mov    %rsi,%rbx
  0x00007fb547d9dd25: lock cmpxchg %rbx,(%rdi)
  0x00007fb547d9dd2a: mov    $0x1,%esi
  0x00007fb547d9dd2f: je     0x00007fb547d9dd3a
  0x00007fb547d9dd35: mov    $0x0,%esi          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@91 (line 2325)

  0x00007fb547d9dd3a: cmp    $0x0,%esi
  0x00007fb547d9dd3d: movabs $0x7fb52cf4fe70,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9dd47: movabs $0x260,%rbx
  0x00007fb547d9dd51: jne    0x00007fb547d9dd61
  0x00007fb547d9dd57: movabs $0x270,%rbx
  0x00007fb547d9dd61: mov    (%rdi,%rbx,1),%rax
  0x00007fb547d9dd65: lea    0x1(%rax),%rax
  0x00007fb547d9dd69: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547d9dd6d: jne    0x00007fb547d9dd83  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@97 (line 2325)

  0x00007fb547d9dd73: mov    %rsi,%rdi
  0x00007fb547d9dd76: mov    0x88(%rsp),%rsi
  0x00007fb547d9dd7e: jmpq   0x00007fb547d9e2bc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x00007fb547d9dd83: mov    0x74(%rsp),%ecx
  0x00007fb547d9dd87: cmp    $0x1,%ecx
  0x00007fb547d9dd8a: movabs $0x7fb52cf4fe70,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9dd94: movabs $0x2c8,%rdi
  0x00007fb547d9dd9e: jle    0x00007fb547d9ddae
  0x00007fb547d9dda4: movabs $0x2b8,%rdi
  0x00007fb547d9ddae: mov    (%rsi,%rdi,1),%rbx
  0x00007fb547d9ddb2: lea    0x1(%rbx),%rbx
  0x00007fb547d9ddb6: mov    %rbx,(%rsi,%rdi,1)
  0x00007fb547d9ddba: jle    0x00007fb547d9e2a9  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@110 (line 2329)

  0x00007fb547d9ddc0: mov    0x88(%rsp),%rsi
  0x00007fb547d9ddc8: movabs $0x7fb52cf4fe70,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9ddd2: addq   $0x1,0x2d8(%rdi)
  0x00007fb547d9ddda: mov    0x88(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2331)

  0x00007fb547d9dde2: nopl   0x0(%rax,%rax,1)
  0x00007fb547d9dde7: callq  0x00007fb54784ad80  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2331)
                                                ;   {optimized virtual_call}
  0x00007fb547d9ddec: mov    %rax,%r8           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@120 (line 2333)

  0x00007fb547d9ddef: mov    0x74(%rsp),%ecx
  0x00007fb547d9ddf3: cmp    $0x0,%ecx
  0x00007fb547d9ddf6: movabs $0x7fb52cf4fe70,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9de00: movabs $0x310,%rdi
  0x00007fb547d9de0a: jl     0x00007fb547d9de1a
  0x00007fb547d9de10: movabs $0x320,%rdi
  0x00007fb547d9de1a: mov    (%rsi,%rdi,1),%rbx
  0x00007fb547d9de1e: lea    0x1(%rbx),%rbx
  0x00007fb547d9de22: mov    %rbx,(%rsi,%rdi,1)
  0x00007fb547d9de26: jl     0x00007fb547d9e296  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@121 (line 2333)

  0x00007fb547d9de2c: nopl   0x0(%rax)
  0x00007fb547d9de30: mov    0x88(%rsp),%rsi
  0x00007fb547d9de38: mov    0x14(%rsi),%edi    ;*getfield sizeCtl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@127 (line 2335)

  0x00007fb547d9de3b: movslq %edi,%rbx
  0x00007fb547d9de3e: cmp    %rbx,%r8
  0x00007fb547d9de41: movabs $0x7fb52cf4fe70,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9de4b: movabs $0x330,%rax
  0x00007fb547d9de55: jl     0x00007fb547d9de65
  0x00007fb547d9de5b: movabs $0x340,%rax
  0x00007fb547d9de65: mov    (%rbx,%rax,1),%rdx
  0x00007fb547d9de69: lea    0x1(%rdx),%rdx
  0x00007fb547d9de6d: mov    %rdx,(%rbx,%rax,1)
  0x00007fb547d9de71: jl     0x00007fb547d9e296  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@134 (line 2335)

  0x00007fb547d9de77: mov    0x28(%rsi),%ebx
  0x00007fb547d9de7a: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@139 (line 2335)

  0x00007fb547d9de7e: cmp    $0x0,%rbx
  0x00007fb547d9de82: movabs $0x7fb52cf4fe70,%rax  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9de8c: movabs $0x350,%rdx
  0x00007fb547d9de96: je     0x00007fb547d9dea6
  0x00007fb547d9de9c: movabs $0x360,%rdx
  0x00007fb547d9dea6: mov    (%rax,%rdx,1),%rcx
  0x00007fb547d9deaa: lea    0x1(%rcx),%rcx
  0x00007fb547d9deae: mov    %rcx,(%rax,%rdx,1)
  0x00007fb547d9deb2: je     0x00007fb547d9e296  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@145 (line 2335)

  0x00007fb547d9deb8: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2335)
                                                ; implicit exception: dispatches to 0x00007fb547d9e328
  0x00007fb547d9debb: cmp    $0x40000000,%eax
  0x00007fb547d9dec1: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9decb: movabs $0x370,%rcx
  0x00007fb547d9ded5: jge    0x00007fb547d9dee5
  0x00007fb547d9dedb: movabs $0x380,%rcx
  0x00007fb547d9dee5: mov    (%rdx,%rcx,1),%r8
  0x00007fb547d9dee9: lea    0x1(%r8),%r8
  0x00007fb547d9deed: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547d9def1: jge    0x00007fb547d9e296  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@156 (line 2335)

  0x00007fb547d9def7: mov    %rbx,0x98(%rsp)
  0x00007fb547d9deff: mov    %edi,0x90(%rsp)
  0x00007fb547d9df06: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9df10: addq   $0x1,0x390(%rdx)
  0x00007fb547d9df18: movabs $0x7fb52cf516a8,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde7598} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9df22: mov    0x100(%rdx),%ecx
  0x00007fb547d9df28: add    $0x8,%ecx
  0x00007fb547d9df2b: mov    %ecx,0x100(%rdx)
  0x00007fb547d9df31: and    $0x7ffff8,%ecx
  0x00007fb547d9df37: cmp    $0x0,%ecx
  0x00007fb547d9df3a: je     0x00007fb547d9e32d
  0x00007fb547d9df40: movabs $0x7fb52cf516a8,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde7598} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9df4a: addq   $0x1,0x140(%rdx)
  0x00007fb547d9df52: mov    %rax,%rsi          ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)

  0x00007fb547d9df55: xchg   %ax,%ax
  0x00007fb547d9df57: callq  0x00007fb54784a780  ; ImmutableOopMap{[136]=Oop [152]=Oop }
                                                ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)
                                                ;   {static_call}
  0x00007fb547d9df5c: or     $0x8000,%eax
  0x00007fb547d9df62: mov    0x90(%rsp),%edi
  0x00007fb547d9df69: cmp    $0x0,%edi
  0x00007fb547d9df6c: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9df76: movabs $0x3a0,%rcx
  0x00007fb547d9df80: jge    0x00007fb547d9df90
  0x00007fb547d9df86: movabs $0x3b0,%rcx
  0x00007fb547d9df90: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547d9df94: lea    0x1(%rsi),%rsi
  0x00007fb547d9df98: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547d9df9c: jge    0x00007fb547d9e179  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@168 (line 2338)

  0x00007fb547d9dfa2: mov    %rdi,%rdx
  0x00007fb547d9dfa5: shr    $0x10,%edx
  0x00007fb547d9dfa8: cmp    %eax,%edx
  0x00007fb547d9dfaa: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9dfb4: movabs $0x3c0,%rcx
  0x00007fb547d9dfbe: jne    0x00007fb547d9dfce
  0x00007fb547d9dfc4: movabs $0x3d0,%rcx
  0x00007fb547d9dfce: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547d9dfd2: lea    0x1(%rsi),%rsi
  0x00007fb547d9dfd6: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547d9dfda: jne    0x00007fb547d9e296  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@178 (line 2339)

  0x00007fb547d9dfe0: mov    %rax,%rdx
  0x00007fb547d9dfe3: inc    %edx
  0x00007fb547d9dfe5: cmp    %edx,%edi
  0x00007fb547d9dfe7: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9dff1: movabs $0x3e0,%rcx
  0x00007fb547d9dffb: je     0x00007fb547d9e00b
  0x00007fb547d9e001: movabs $0x3f0,%rcx
  0x00007fb547d9e00b: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547d9e00f: lea    0x1(%rsi),%rsi
  0x00007fb547d9e013: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547d9e017: je     0x00007fb547d9e296  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@187 (line 2339)

  0x00007fb547d9e01d: add    $0xffff,%eax
  0x00007fb547d9e023: cmp    %eax,%edi
  0x00007fb547d9e025: movabs $0x7fb52cf4fe70,%rax  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e02f: movabs $0x400,%rdx
  0x00007fb547d9e039: je     0x00007fb547d9e049
  0x00007fb547d9e03f: movabs $0x410,%rdx
  0x00007fb547d9e049: mov    (%rax,%rdx,1),%rcx
  0x00007fb547d9e04d: lea    0x1(%rcx),%rcx
  0x00007fb547d9e051: mov    %rcx,(%rax,%rdx,1)
  0x00007fb547d9e055: je     0x00007fb547d9e296  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@197 (line 2339)

  0x00007fb547d9e05b: mov    0x88(%rsp),%rsi
  0x00007fb547d9e063: mov    0x2c(%rsi),%ecx
  0x00007fb547d9e066: shl    $0x3,%rcx          ;*getfield nextTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@201 (line 2339)

  0x00007fb547d9e06a: cmp    $0x0,%rcx
  0x00007fb547d9e06e: movabs $0x7fb52cf4fe70,%rax  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e078: movabs $0x420,%rdx
  0x00007fb547d9e082: je     0x00007fb547d9e092
  0x00007fb547d9e088: movabs $0x430,%rdx
  0x00007fb547d9e092: mov    (%rax,%rdx,1),%rbx
  0x00007fb547d9e096: lea    0x1(%rbx),%rbx
  0x00007fb547d9e09a: mov    %rbx,(%rax,%rdx,1)
  0x00007fb547d9e09e: je     0x00007fb547d9e296  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@207 (line 2339)

  0x00007fb547d9e0a4: mov    0x20(%rsi),%eax    ;*getfield transferIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@211 (line 2339)

  0x00007fb547d9e0a7: cmp    $0x0,%eax
  0x00007fb547d9e0aa: movabs $0x7fb52cf4fe70,%rax  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e0b4: movabs $0x450,%rdx
  0x00007fb547d9e0be: jle    0x00007fb547d9e0ce
  0x00007fb547d9e0c4: movabs $0x440,%rdx
  0x00007fb547d9e0ce: mov    (%rax,%rdx,1),%rbx
  0x00007fb547d9e0d2: lea    0x1(%rbx),%rbx
  0x00007fb547d9e0d6: mov    %rbx,(%rax,%rdx,1)
  0x00007fb547d9e0da: jle    0x00007fb547d9e286  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@214 (line 2339)

  0x00007fb547d9e0e0: mov    %rdi,%rdx
  0x00007fb547d9e0e3: inc    %edx
  0x00007fb547d9e0e5: lea    0x14(%rsi),%rbx
  0x00007fb547d9e0e9: mov    %rdi,%rax
  0x00007fb547d9e0ec: lock cmpxchg %edx,(%rbx)
  0x00007fb547d9e0f0: mov    $0x1,%edx
  0x00007fb547d9e0f5: je     0x00007fb547d9e100
  0x00007fb547d9e0fb: mov    $0x0,%edx          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@233 (line 2343)

  0x00007fb547d9e100: cmp    $0x0,%edx
  0x00007fb547d9e103: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e10d: movabs $0x4b0,%rdi
  0x00007fb547d9e117: je     0x00007fb547d9e127
  0x00007fb547d9e11d: movabs $0x4c0,%rdi
  0x00007fb547d9e127: mov    (%rdx,%rdi,1),%rbx
  0x00007fb547d9e12b: lea    0x1(%rbx),%rbx
  0x00007fb547d9e12f: mov    %rbx,(%rdx,%rdi,1)
  0x00007fb547d9e133: je     0x00007fb547d9e214  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@236 (line 2343)

  0x00007fb547d9e139: mov    %rsi,%rdx
  0x00007fb547d9e13c: movabs $0x7fb52cf4fe70,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e146: addq   $0x1,0x4d0(%rdi)
  0x00007fb547d9e14e: mov    0x98(%rsp),%rdx
  0x00007fb547d9e156: mov    %rsi,%rdi
  0x00007fb547d9e159: mov    %rdi,%rsi          ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244 (line 2344)

  0x00007fb547d9e15c: data16 xchg %ax,%ax
  0x00007fb547d9e15f: callq  0x00007fb54784ad80  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244 (line 2344)
                                                ;   {optimized virtual_call}
  0x00007fb547d9e164: movabs $0x7fb52cf4fe70,%rax  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e16e: incl   0x508(%rax)
  0x00007fb547d9e174: jmpq   0x00007fb547d9e214  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@247 (line 2344)

  0x00007fb547d9e179: mov    0x88(%rsp),%rsi
  0x00007fb547d9e181: shl    $0x10,%eax
  0x00007fb547d9e184: mov    %rax,%rdx
  0x00007fb547d9e187: add    $0x2,%edx
  0x00007fb547d9e18a: lea    0x14(%rsi),%rcx
  0x00007fb547d9e18e: mov    %rdi,%rax
  0x00007fb547d9e191: lock cmpxchg %edx,(%rcx)
  0x00007fb547d9e195: mov    $0x1,%edx
  0x00007fb547d9e19a: je     0x00007fb547d9e1a5
  0x00007fb547d9e1a0: mov    $0x0,%edx          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@266 (line 2346)

  0x00007fb547d9e1a5: cmp    $0x0,%edx
  0x00007fb547d9e1a8: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e1b2: movabs $0x558,%rcx
  0x00007fb547d9e1bc: je     0x00007fb547d9e1cc
  0x00007fb547d9e1c2: movabs $0x568,%rcx
  0x00007fb547d9e1cc: mov    (%rdx,%rcx,1),%rdi
  0x00007fb547d9e1d0: lea    0x1(%rdi),%rdi
  0x00007fb547d9e1d4: mov    %rdi,(%rdx,%rcx,1)
  0x00007fb547d9e1d8: je     0x00007fb547d9e214  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@269 (line 2346)

  0x00007fb547d9e1de: mov    0x98(%rsp),%rbx
  0x00007fb547d9e1e6: mov    %rsi,%rdx
  0x00007fb547d9e1e9: movabs $0x7fb52cf4fe70,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e1f3: addq   $0x1,0x578(%rcx)
  0x00007fb547d9e1fb: mov    %rbx,%rdx
  0x00007fb547d9e1fe: movabs $0x0,%rcx          ;   {oop(NULL)}
  0x00007fb547d9e208: mov    %rsi,%rdi
  0x00007fb547d9e20b: mov    %rdi,%rsi          ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2348)

  0x00007fb547d9e20e: nop
  0x00007fb547d9e20f: callq  0x00007fb54784ad80  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2348)
                                                ;   {optimized virtual_call}
  0x00007fb547d9e214: mov    0x88(%rsp),%rsi
  0x00007fb547d9e21c: movabs $0x7fb52cf4fe70,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e226: addq   $0x1,0x5b0(%rdi)
  0x00007fb547d9e22e: mov    0x88(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280 (line 2349)

  0x00007fb547d9e236: nop
  0x00007fb547d9e237: callq  0x00007fb54784ad80  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280 (line 2349)
                                                ;   {optimized virtual_call}
  0x00007fb547d9e23c: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e246: mov    0x104(%rdx),%ecx
  0x00007fb547d9e24c: add    $0x8,%ecx
  0x00007fb547d9e24f: mov    %ecx,0x104(%rdx)
  0x00007fb547d9e255: and    $0xfff8,%ecx
  0x00007fb547d9e25b: cmp    $0x0,%ecx
  0x00007fb547d9e25e: je     0x00007fb547d9e34e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x00007fb547d9e264: mov    0x108(%r15),%r10   ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x00007fb547d9e26b: test   %eax,(%r10)        ;   {poll}
  0x00007fb547d9e26e: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e278: incl   0x5e8(%rdx)
  0x00007fb547d9e27e: mov    %rax,%r8
  0x00007fb547d9e281: jmpq   0x00007fb547d9de30  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x00007fb547d9e286: movabs $0x7fb52cf4fe70,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e290: incl   0x460(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@217 (line 2342)

  0x00007fb547d9e296: add    $0xb0,%rsp
  0x00007fb547d9e29d: pop    %rbp
  0x00007fb547d9e29e: mov    0x108(%r15),%r10
  0x00007fb547d9e2a5: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9e2a8: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288 (line 2352)

  0x00007fb547d9e2a9: add    $0xb0,%rsp
  0x00007fb547d9e2b0: pop    %rbp
  0x00007fb547d9e2b1: mov    0x108(%r15),%r10
  0x00007fb547d9e2b8: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9e2bb: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@113 (line 2330)

  0x00007fb547d9e2bc: mov    %rsi,%rcx
  0x00007fb547d9e2bf: movabs $0x7fb52cf4fe70,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e2c9: addq   $0x1,0x280(%rbx)
  0x00007fb547d9e2d1: mov    %rdi,%rcx          ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2326)

  0x00007fb547d9e2d4: data16 xchg %ax,%ax
  0x00007fb547d9e2d7: callq  0x00007fb54784ad80  ; ImmutableOopMap{}
                                                ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2326)
                                                ;   {optimized virtual_call}
  0x00007fb547d9e2dc: add    $0xb0,%rsp
  0x00007fb547d9e2e3: pop    %rbp
  0x00007fb547d9e2e4: mov    0x108(%r15),%r10
  0x00007fb547d9e2eb: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9e2ee: retq   
  0x00007fb547d9e2ef: movabs $0x7fb52cde79c0,%r10  ;   {metadata({method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e2f9: mov    %r10,0x8(%rsp)
  0x00007fb547d9e2fe: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9e306: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@-1 (line 2318)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9e30b: jmpq   0x00007fb547d9db43
  0x00007fb547d9e310: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop [136]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2322)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9e315: mov    %rax,(%rsp)
  0x00007fb547d9e319: mov    %rdi,0x8(%rsp)
  0x00007fb547d9e31e: callq  0x00007fb5478eeca0  ; ImmutableOopMap{[136]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2323)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547d9e323: callq  0x00007fb5478f3020  ; ImmutableOopMap{[136]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2323)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9e328: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop [136]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2335)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9e32d: movabs $0x7fb52cde7598,%r10  ;   {metadata({method} {0x00007fb52cde7598} &apos;resizeStamp&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e337: mov    %r10,0x8(%rsp)
  0x00007fb547d9e33c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9e344: callq  0x00007fb5478f8100  ; ImmutableOopMap{[152]=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@-1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9e349: jmpq   0x00007fb547d9df40
  0x00007fb547d9e34e: movabs $0x7fb52cde79c0,%r10  ;   {metadata({method} {0x00007fb52cde79c0} &apos;addCount&apos; &apos;(JI)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547d9e358: mov    %r10,0x8(%rsp)
  0x00007fb547d9e35d: movq   $0x11d,(%rsp)
  0x00007fb547d9e365: callq  0x00007fb5478f8100  ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9e36a: jmpq   0x00007fb547d9e264
  0x00007fb547d9e36f: nop
  0x00007fb547d9e370: nop
  0x00007fb547d9e371: mov    0x440(%r15),%rax
  0x00007fb547d9e378: movabs $0x0,%r10
  0x00007fb547d9e382: mov    %r10,0x440(%r15)
  0x00007fb547d9e389: movabs $0x0,%r10
  0x00007fb547d9e393: mov    %r10,0x448(%r15)
  0x00007fb547d9e39a: add    $0xb0,%rsp
  0x00007fb547d9e3a1: pop    %rbp
  0x00007fb547d9e3a2: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9e3a7: hlt    
  0x00007fb547d9e3a8: hlt    
  0x00007fb547d9e3a9: hlt    
  0x00007fb547d9e3aa: hlt    
  0x00007fb547d9e3ab: hlt    
  0x00007fb547d9e3ac: hlt    
  0x00007fb547d9e3ad: hlt    
  0x00007fb547d9e3ae: hlt    
  0x00007fb547d9e3af: hlt    
  0x00007fb547d9e3b0: hlt    
  0x00007fb547d9e3b1: hlt    
  0x00007fb547d9e3b2: hlt    
  0x00007fb547d9e3b3: hlt    
  0x00007fb547d9e3b4: hlt    
  0x00007fb547d9e3b5: hlt    
  0x00007fb547d9e3b6: hlt    
  0x00007fb547d9e3b7: hlt    
  0x00007fb547d9e3b8: hlt    
  0x00007fb547d9e3b9: hlt    
  0x00007fb547d9e3ba: hlt    
  0x00007fb547d9e3bb: hlt    
  0x00007fb547d9e3bc: hlt    
  0x00007fb547d9e3bd: hlt    
  0x00007fb547d9e3be: hlt    
  0x00007fb547d9e3bf: hlt    
[Stub Code]
  0x00007fb547d9e3c0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d9e3c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9e3cf: jmpq   0x00007fb547d9e3cf  ;   {runtime_call}
  0x00007fb547d9e3d4: nop
  0x00007fb547d9e3d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9e3df: jmpq   0x00007fb547d9e3df  ;   {runtime_call}
  0x00007fb547d9e3e4: nop
  0x00007fb547d9e3e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9e3ef: jmpq   0x00007fb547d9e3ef  ;   {runtime_call}
  0x00007fb547d9e3f4: nop
  0x00007fb547d9e3f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9e3ff: jmpq   0x00007fb547d9e3ff  ;   {runtime_call}
  0x00007fb547d9e404: nop
  0x00007fb547d9e405: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9e40f: jmpq   0x00007fb547d9e40f  ;   {runtime_call}
  0x00007fb547d9e414: nop
  0x00007fb547d9e415: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9e41f: jmpq   0x00007fb547d9e41f  ;   {runtime_call}
  0x00007fb547d9e424: nop
  0x00007fb547d9e425: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9e42f: jmpq   0x00007fb547d9e42f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d9e434: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d9e439: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9e443: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d9e447: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9e44c: hlt    
[Deopt Handler Code]
  0x00007fb547d9e44d: movabs $0x7fb547d9e44d,%r10  ;   {section_word}
  0x00007fb547d9e457: push   %r10
  0x00007fb547d9e459: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9e45e: hlt    
  0x00007fb547d9e45f: hlt    

ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 428 
ImmutableOopMap{[136]=Oop }pc offsets: 780 
ImmutableOopMap{[136]=Oop [152]=Oop }pc offsets: 1148 
ImmutableOopMap{[136]=Oop }pc offsets: 1668 1844 1884 1931 
ImmutableOopMap{}pc offsets: 2044 
ImmutableOopMap{rsi=Oop [136]=Oop }pc offsets: 2091 
ImmutableOopMap{rsi=Oop [136]=Oop rdi=Oop }pc offsets: 2101 
ImmutableOopMap{[136]=Oop rdi=Oop }pc offsets: 2115 
ImmutableOopMap{[136]=Oop rax=Oop }pc offsets: 2120 
ImmutableOopMap{rsi=Oop [136]=Oop rbx=Oop }pc offsets: 2125 
ImmutableOopMap{[152]=Oop [136]=Oop }pc offsets: 2153 
ImmutableOopMap{[136]=Oop }pc offsets: 2186 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='43' method='java.util.ImmutableCollections$SetN size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.639' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='36' compiler='c1' level='3' entry='0x00007fb547d9ed40' size='1216' address='0x00007fb547d9eb90' relocation_offset='376' insts_offset='432' stub_offset='944' scopes_data_offset='1016' scopes_pcs_offset='1080' dependencies_offset='1208' metadata_offset='992' method='java.util.concurrent.ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;)V' bytes='20' count='896' iicount='896' stamp='0.639'/>
<print_nmethod stamp='0.639'>
Compiled method (c1)     639   36       3       java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (20 bytes)
 total in heap  [0x00007fb547d9eb90,0x00007fb547d9f050] = 1216
 relocation     [0x00007fb547d9ed08,0x00007fb547d9ed40] = 56
 main code      [0x00007fb547d9ed40,0x00007fb547d9ef40] = 512
 stub code      [0x00007fb547d9ef40,0x00007fb547d9ef70] = 48
 metadata       [0x00007fb547d9ef70,0x00007fb547d9ef88] = 24
 scopes data    [0x00007fb547d9ef88,0x00007fb547d9efc8] = 64
 scopes pcs     [0x00007fb547d9efc8,0x00007fb547d9f048] = 128
 dependencies   [0x00007fb547d9f048,0x00007fb547d9f050] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap$Node.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;)V  [0x00007fb547d9ed40, 0x00007fb547d9ef70]  560 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d9ed40: mov    0x8(%rsi),%r10d
  0x00007fb547d9ed44: movabs $0x800000000,%r12
  0x00007fb547d9ed4e: add    %r12,%r10
  0x00007fb547d9ed51: xor    %r12,%r12
  0x00007fb547d9ed54: cmp    %rax,%r10
  0x00007fb547d9ed57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9ed5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d9ed60: mov    %eax,-0x14000(%rsp)
  0x00007fb547d9ed67: push   %rbp
  0x00007fb547d9ed68: sub    $0x30,%rsp
  0x00007fb547d9ed6c: movabs $0x7fb52cf4fcd8,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9ed76: mov    0x100(%rdi),%ebx
  0x00007fb547d9ed7c: add    $0x8,%ebx
  0x00007fb547d9ed7f: mov    %ebx,0x100(%rdi)
  0x00007fb547d9ed85: and    $0x1ff8,%ebx
  0x00007fb547d9ed8b: cmp    $0x0,%ebx
  0x00007fb547d9ed8e: je     0x00007fb547d9ee44  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@0 (line 631)

  0x00007fb547d9ed94: mov    %rsi,%rdi
  0x00007fb547d9ed97: movabs $0x7fb52cf4fcd8,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9eda1: addq   $0x1,0x140(%rbx)
  0x00007fb547d9eda9: movabs $0x7fb52cedd4a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d9edb3: mov    0x100(%rdi),%ebx
  0x00007fb547d9edb9: add    $0x8,%ebx
  0x00007fb547d9edbc: mov    %ebx,0x100(%rdi)
  0x00007fb547d9edc2: and    $0x7ffff8,%ebx
  0x00007fb547d9edc8: cmp    $0x0,%ebx
  0x00007fb547d9edcb: je     0x00007fb547d9ee65
  0x00007fb547d9edd1: mov    %edx,0xc(%rsi)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@6 (line 632)

  0x00007fb547d9edd4: movsbl 0x30(%r15),%edi
  0x00007fb547d9edd9: cmp    $0x0,%edi
  0x00007fb547d9eddc: jne    0x00007fb547d9ee86
  0x00007fb547d9ede2: mov    %rcx,%r10
  0x00007fb547d9ede5: shr    $0x3,%r10
  0x00007fb547d9ede9: mov    %r10d,0x10(%rsi)
  0x00007fb547d9eded: mov    %rsi,%rdi
  0x00007fb547d9edf0: xor    %rcx,%rdi
  0x00007fb547d9edf3: shr    $0x15,%rdi
  0x00007fb547d9edf7: cmp    $0x0,%rdi
  0x00007fb547d9edfb: jne    0x00007fb547d9eea5  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@11 (line 633)

  0x00007fb547d9ee01: movsbl 0x30(%r15),%edi
  0x00007fb547d9ee06: cmp    $0x0,%edi
  0x00007fb547d9ee09: jne    0x00007fb547d9eebd
  0x00007fb547d9ee0f: mov    %r8,%r10
  0x00007fb547d9ee12: shr    $0x3,%r10
  0x00007fb547d9ee16: mov    %r10d,0x14(%rsi)
  0x00007fb547d9ee1a: lock addl $0x0,-0x40(%rsp)
  0x00007fb547d9ee20: mov    %rsi,%rdi
  0x00007fb547d9ee23: xor    %r8,%rdi
  0x00007fb547d9ee26: shr    $0x15,%rdi
  0x00007fb547d9ee2a: cmp    $0x0,%rdi
  0x00007fb547d9ee2e: jne    0x00007fb547d9eedc  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@16 (line 634)

  0x00007fb547d9ee34: add    $0x30,%rsp
  0x00007fb547d9ee38: pop    %rbp
  0x00007fb547d9ee39: mov    0x108(%r15),%r10
  0x00007fb547d9ee40: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9ee43: retq   
  0x00007fb547d9ee44: movabs $0x7fb52cdf4258,%r10  ;   {metadata({method} {0x00007fb52cdf4258} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547d9ee4e: mov    %r10,0x8(%rsp)
  0x00007fb547d9ee53: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9ee5b: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@-1 (line 631)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9ee60: jmpq   0x00007fb547d9ed94
  0x00007fb547d9ee65: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547d9ee6f: mov    %r10,0x8(%rsp)
  0x00007fb547d9ee74: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9ee7c: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt;@1 (line 631)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9ee81: jmpq   0x00007fb547d9edd1
  0x00007fb547d9ee86: mov    0x10(%rsi),%edi
  0x00007fb547d9ee89: shl    $0x3,%rdi
  0x00007fb547d9ee8d: cmp    $0x0,%rdi
  0x00007fb547d9ee91: je     0x00007fb547d9ede2
  0x00007fb547d9ee97: mov    %rdi,(%rsp)
  0x00007fb547d9ee9b: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9eea0: jmpq   0x00007fb547d9ede2
  0x00007fb547d9eea5: cmp    $0x0,%rcx
  0x00007fb547d9eea9: je     0x00007fb547d9ee01
  0x00007fb547d9eeaf: mov    %rsi,(%rsp)
  0x00007fb547d9eeb3: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9eeb8: jmpq   0x00007fb547d9ee01
  0x00007fb547d9eebd: mov    0x14(%rsi),%edi
  0x00007fb547d9eec0: shl    $0x3,%rdi
  0x00007fb547d9eec4: cmp    $0x0,%rdi
  0x00007fb547d9eec8: je     0x00007fb547d9ee0f
  0x00007fb547d9eece: mov    %rdi,(%rsp)
  0x00007fb547d9eed2: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547d9eed7: jmpq   0x00007fb547d9ee0f
  0x00007fb547d9eedc: cmp    $0x0,%r8
  0x00007fb547d9eee0: je     0x00007fb547d9ee34
  0x00007fb547d9eee6: mov    %rsi,(%rsp)
  0x00007fb547d9eeea: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547d9eeef: jmpq   0x00007fb547d9ee34
  0x00007fb547d9eef4: nop
  0x00007fb547d9eef5: nop
  0x00007fb547d9eef6: mov    0x440(%r15),%rax
  0x00007fb547d9eefd: movabs $0x0,%r10
  0x00007fb547d9ef07: mov    %r10,0x440(%r15)
  0x00007fb547d9ef0e: movabs $0x0,%r10
  0x00007fb547d9ef18: mov    %r10,0x448(%r15)
  0x00007fb547d9ef1f: add    $0x30,%rsp
  0x00007fb547d9ef23: pop    %rbp
  0x00007fb547d9ef24: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9ef29: hlt    
  0x00007fb547d9ef2a: hlt    
  0x00007fb547d9ef2b: hlt    
  0x00007fb547d9ef2c: hlt    
  0x00007fb547d9ef2d: hlt    
  0x00007fb547d9ef2e: hlt    
  0x00007fb547d9ef2f: hlt    
  0x00007fb547d9ef30: hlt    
  0x00007fb547d9ef31: hlt    
  0x00007fb547d9ef32: hlt    
  0x00007fb547d9ef33: hlt    
  0x00007fb547d9ef34: hlt    
  0x00007fb547d9ef35: hlt    
  0x00007fb547d9ef36: hlt    
  0x00007fb547d9ef37: hlt    
  0x00007fb547d9ef38: hlt    
  0x00007fb547d9ef39: hlt    
  0x00007fb547d9ef3a: hlt    
  0x00007fb547d9ef3b: hlt    
  0x00007fb547d9ef3c: hlt    
  0x00007fb547d9ef3d: hlt    
  0x00007fb547d9ef3e: hlt    
  0x00007fb547d9ef3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d9ef40: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d9ef45: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9ef4f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d9ef53: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9ef58: hlt    
[Deopt Handler Code]
  0x00007fb547d9ef59: movabs $0x7fb547d9ef59,%r10  ;   {section_word}
  0x00007fb547d9ef63: push   %r10
  0x00007fb547d9ef65: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9ef6a: hlt    
  0x00007fb547d9ef6b: hlt    
  0x00007fb547d9ef6c: hlt    
  0x00007fb547d9ef6d: hlt    
  0x00007fb547d9ef6e: hlt    
  0x00007fb547d9ef6f: hlt    

ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop }pc offsets: 288 321 </print_nmethod>
<writer thread='1329923'/>

argument handler #37 for: static java.lang.Module.addReads0(Ljava/lang/Module;Ljava/lang/Module;)V (fingerprint = 86845, 45 bytes generated)
  0x00007fb54784c066: lea    (%r14),%rax
  0x00007fb54784c069: xor    %edx,%edx
  0x00007fb54784c06b: cmpq   $0x0,(%r14)
  0x00007fb54784c072: cmovne %rax,%rdx
  0x00007fb54784c076: lea    -0x8(%r14),%rax
  0x00007fb54784c07a: xor    %ecx,%ecx
  0x00007fb54784c07c: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c084: cmovne %rax,%rcx
  0x00007fb54784c088: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c092: retq   

argument handler #38 for: static java.lang.Module.addExports0(Ljava/lang/Module;Ljava/lang/String;Ljava/lang/Module;)V (fingerprint = 1389373, 64 bytes generated)
  0x00007fb54784c093: lea    (%r14),%rax
  0x00007fb54784c096: xor    %edx,%edx
  0x00007fb54784c098: cmpq   $0x0,(%r14)
  0x00007fb54784c09f: cmovne %rax,%rdx
  0x00007fb54784c0a3: lea    -0x8(%r14),%rax
  0x00007fb54784c0a7: xor    %ecx,%ecx
  0x00007fb54784c0a9: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c0b1: cmovne %rax,%rcx
  0x00007fb54784c0b5: lea    -0x10(%r14),%rax
  0x00007fb54784c0b9: xor    %r8d,%r8d
  0x00007fb54784c0bc: cmpq   $0x0,-0x10(%r14)
  0x00007fb54784c0c4: cmovne %rax,%r8
  0x00007fb54784c0c8: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c0d2: retq   
<writer thread='1329936'/>
<nmethod compile_id='41' compiler='c1' level='3' entry='0x00007fb547d9f240' size='1128' address='0x00007fb547d9f090' relocation_offset='376' insts_offset='432' stub_offset='784' scopes_data_offset='848' scopes_pcs_offset='928' dependencies_offset='1104' nul_chk_table_offset='1112' metadata_offset='832' method='java.lang.String length ()I' bytes='11' count='808' iicount='808' stamp='0.643'/>
<print_nmethod stamp='0.643'>
Compiled method (c1)     643   41       3       java.lang.String::length (11 bytes)
 total in heap  [0x00007fb547d9f090,0x00007fb547d9f4f8] = 1128
 relocation     [0x00007fb547d9f208,0x00007fb547d9f240] = 56
 main code      [0x00007fb547d9f240,0x00007fb547d9f3a0] = 352
 stub code      [0x00007fb547d9f3a0,0x00007fb547d9f3d0] = 48
 metadata       [0x00007fb547d9f3d0,0x00007fb547d9f3e0] = 16
 scopes data    [0x00007fb547d9f3e0,0x00007fb547d9f430] = 80
 scopes pcs     [0x00007fb547d9f430,0x00007fb547d9f4e0] = 176
 dependencies   [0x00007fb547d9f4e0,0x00007fb547d9f4e8] = 8
 nul chk table  [0x00007fb547d9f4e8,0x00007fb547d9f4f8] = 16
----------------------------------------------------------------------
java/lang/String.length()I  [0x00007fb547d9f240, 0x00007fb547d9f3d0]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccb4330} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d9f240: mov    0x8(%rsi),%r10d
  0x00007fb547d9f244: movabs $0x800000000,%r12
  0x00007fb547d9f24e: add    %r12,%r10
  0x00007fb547d9f251: xor    %r12,%r12
  0x00007fb547d9f254: cmp    %rax,%r10
  0x00007fb547d9f257: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9f25d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d9f260: mov    %eax,-0x14000(%rsp)
  0x00007fb547d9f267: push   %rbp
  0x00007fb547d9f268: sub    $0x30,%rsp
  0x00007fb547d9f26c: movabs $0x7fb52cf512f8,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb4330} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9f276: mov    0x100(%rcx),%eax
  0x00007fb547d9f27c: add    $0x8,%eax
  0x00007fb547d9f27f: mov    %eax,0x100(%rcx)
  0x00007fb547d9f285: and    $0x1ff8,%eax
  0x00007fb547d9f28b: cmp    $0x0,%eax
  0x00007fb547d9f28e: je     0x00007fb547d9f317  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@0 (line 658)

  0x00007fb547d9f294: mov    0xc(%rsi),%ecx
  0x00007fb547d9f297: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)

  0x00007fb547d9f29b: mov    0xc(%rcx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; implicit exception: dispatches to 0x00007fb547d9f338
  0x00007fb547d9f29e: mov    %rsi,%rcx
  0x00007fb547d9f2a1: movabs $0x7fb52cf512f8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb4330} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9f2ab: addq   $0x1,0x140(%rdi)
  0x00007fb547d9f2b3: movabs $0x7fb52ceed278,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9f2bd: mov    0x100(%rcx),%edi
  0x00007fb547d9f2c3: add    $0x8,%edi
  0x00007fb547d9f2c6: mov    %edi,0x100(%rcx)
  0x00007fb547d9f2cc: and    $0x7ffff8,%edi
  0x00007fb547d9f2d2: cmp    $0x0,%edi
  0x00007fb547d9f2d5: je     0x00007fb547d9f33d
  0x00007fb547d9f2db: movabs $0x7fb52ceed278,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9f2e5: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)

  0x00007fb547d9f2eb: movsbl 0x14(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)

  0x00007fb547d9f2ef: movabs $0x7fb52ceed278,%rsi  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9f2f9: incl   0x160(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)

  0x00007fb547d9f2ff: shl    $0x18,%ecx
  0x00007fb547d9f302: sar    $0x18,%ecx
  0x00007fb547d9f305: sar    %cl,%eax
  0x00007fb547d9f307: add    $0x30,%rsp
  0x00007fb547d9f30b: pop    %rbp
  0x00007fb547d9f30c: mov    0x108(%r15),%r10
  0x00007fb547d9f313: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9f316: retq   
  0x00007fb547d9f317: movabs $0x7fb52ccb4330,%r10  ;   {metadata({method} {0x00007fb52ccb4330} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9f321: mov    %r10,0x8(%rsp)
  0x00007fb547d9f326: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9f32e: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9f333: jmpq   0x00007fb547d9f294
  0x00007fb547d9f338: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9f33d: movabs $0x7fb52ccb91a0,%r10  ;   {metadata({method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547d9f347: mov    %r10,0x8(%rsp)
  0x00007fb547d9f34c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9f354: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9f359: jmp    0x00007fb547d9f2db
  0x00007fb547d9f35b: nop
  0x00007fb547d9f35c: nop
  0x00007fb547d9f35d: mov    0x440(%r15),%rax
  0x00007fb547d9f364: movabs $0x0,%r10
  0x00007fb547d9f36e: mov    %r10,0x440(%r15)
  0x00007fb547d9f375: movabs $0x0,%r10
  0x00007fb547d9f37f: mov    %r10,0x448(%r15)
  0x00007fb547d9f386: add    $0x30,%rsp
  0x00007fb547d9f38a: pop    %rbp
  0x00007fb547d9f38b: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9f390: hlt    
  0x00007fb547d9f391: hlt    
  0x00007fb547d9f392: hlt    
  0x00007fb547d9f393: hlt    
  0x00007fb547d9f394: hlt    
  0x00007fb547d9f395: hlt    
  0x00007fb547d9f396: hlt    
  0x00007fb547d9f397: hlt    
  0x00007fb547d9f398: hlt    
  0x00007fb547d9f399: hlt    
  0x00007fb547d9f39a: hlt    
  0x00007fb547d9f39b: hlt    
  0x00007fb547d9f39c: hlt    
  0x00007fb547d9f39d: hlt    
  0x00007fb547d9f39e: hlt    
  0x00007fb547d9f39f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547d9f3a0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547d9f3a5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9f3af: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d9f3b3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9f3b8: hlt    
[Deopt Handler Code]
  0x00007fb547d9f3b9: movabs $0x7fb547d9f3b9,%r10  ;   {section_word}
  0x00007fb547d9f3c3: push   %r10
  0x00007fb547d9f3c5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9f3ca: hlt    
  0x00007fb547d9f3cb: hlt    
  0x00007fb547d9f3cc: hlt    
  0x00007fb547d9f3cd: hlt    
  0x00007fb547d9f3ce: hlt    
  0x00007fb547d9f3cf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 243 253 281 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='44' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='640' iicount='640' level='3' stamp='0.646' comment='tiered' hot_count='640'/>
<task_queued compile_id='45' method='java.util.HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='384' iicount='384' level='3' stamp='0.647' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='42' compiler='c1' level='3' entry='0x00007fb547d9f6c0' size='1168' address='0x00007fb547d9f510' relocation_offset='376' insts_offset='432' stub_offset='880' scopes_data_offset='952' scopes_pcs_offset='1000' dependencies_offset='1144' nul_chk_table_offset='1152' metadata_offset='944' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='835' iicount='835' stamp='0.647'/>
<print_nmethod stamp='0.647'>
Compiled method (c1)     646   42       3       java.util.HashMap::hash (20 bytes)
 total in heap  [0x00007fb547d9f510,0x00007fb547d9f9a0] = 1168
 relocation     [0x00007fb547d9f688,0x00007fb547d9f6c0] = 56
 main code      [0x00007fb547d9f6c0,0x00007fb547d9f880] = 448
 stub code      [0x00007fb547d9f880,0x00007fb547d9f8c0] = 64
 metadata       [0x00007fb547d9f8c0,0x00007fb547d9f8c8] = 8
 scopes data    [0x00007fb547d9f8c8,0x00007fb547d9f8f8] = 48
 scopes pcs     [0x00007fb547d9f8f8,0x00007fb547d9f988] = 144
 dependencies   [0x00007fb547d9f988,0x00007fb547d9f990] = 8
 nul chk table  [0x00007fb547d9f990,0x00007fb547d9f9a0] = 16
----------------------------------------------------------------------
java/util/HashMap.hash(Ljava/lang/Object;)I  [0x00007fb547d9f6c0, 0x00007fb547d9f8c0]  512 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547d9f6c0: mov    %eax,-0x14000(%rsp)
  0x00007fb547d9f6c7: push   %rbp
  0x00007fb547d9f6c8: sub    $0x30,%rsp
  0x00007fb547d9f6cc: movabs $0x7fb52cf598c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9f6d6: mov    0x100(%rdi),%ebx
  0x00007fb547d9f6dc: add    $0x8,%ebx
  0x00007fb547d9f6df: mov    %ebx,0x100(%rdi)
  0x00007fb547d9f6e5: and    $0x1ff8,%ebx
  0x00007fb547d9f6eb: cmp    $0x0,%ebx
  0x00007fb547d9f6ee: je     0x00007fb547d9f818  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@0 (line 340)

  0x00007fb547d9f6f4: cmp    $0x0,%rsi
  0x00007fb547d9f6f8: movabs $0x7fb52cf598c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9f702: movabs $0x140,%rbx
  0x00007fb547d9f70c: jne    0x00007fb547d9f71c
  0x00007fb547d9f712: movabs $0x150,%rbx
  0x00007fb547d9f71c: mov    (%rdi,%rbx,1),%rax
  0x00007fb547d9f720: lea    0x1(%rax),%rax
  0x00007fb547d9f724: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547d9f728: jne    0x00007fb547d9f748  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 340)

  0x00007fb547d9f72e: movabs $0x7fb52cf598c0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9f738: incl   0x160(%rsi)
  0x00007fb547d9f73e: mov    $0x0,%esi
  0x00007fb547d9f743: jmpq   0x00007fb547d9f805  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 340)

  0x00007fb547d9f748: cmp    (%rsi),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; implicit exception: dispatches to 0x00007fb547d9f839
  0x00007fb547d9f74b: mov    %rsi,%rdi
  0x00007fb547d9f74e: movabs $0x7fb52cf598c0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9f758: mov    0x8(%rdi),%edi
  0x00007fb547d9f75b: movabs $0x800000000,%r12
  0x00007fb547d9f765: add    %r12,%rdi
  0x00007fb547d9f768: xor    %r12,%r12
  0x00007fb547d9f76b: cmp    0x188(%rbx),%rdi
  0x00007fb547d9f772: jne    0x00007fb547d9f781
  0x00007fb547d9f774: addq   $0x1,0x190(%rbx)
  0x00007fb547d9f77c: jmpq   0x00007fb547d9f7e7
  0x00007fb547d9f781: cmp    0x198(%rbx),%rdi
  0x00007fb547d9f788: jne    0x00007fb547d9f797
  0x00007fb547d9f78a: addq   $0x1,0x1a0(%rbx)
  0x00007fb547d9f792: jmpq   0x00007fb547d9f7e7
  0x00007fb547d9f797: cmpq   $0x0,0x188(%rbx)
  0x00007fb547d9f7a2: jne    0x00007fb547d9f7bb
  0x00007fb547d9f7a4: mov    %rdi,0x188(%rbx)
  0x00007fb547d9f7ab: movq   $0x1,0x190(%rbx)
  0x00007fb547d9f7b6: jmpq   0x00007fb547d9f7e7
  0x00007fb547d9f7bb: cmpq   $0x0,0x198(%rbx)
  0x00007fb547d9f7c6: jne    0x00007fb547d9f7df
  0x00007fb547d9f7c8: mov    %rdi,0x198(%rbx)
  0x00007fb547d9f7cf: movq   $0x1,0x1a0(%rbx)
  0x00007fb547d9f7da: jmpq   0x00007fb547d9f7e7
  0x00007fb547d9f7df: addq   $0x1,0x178(%rbx)
  0x00007fb547d9f7e7: nopw   0x0(%rax,%rax,1)
  0x00007fb547d9f7ed: movabs $0xffffffffffffffff,%rax
  0x00007fb547d9f7f7: callq  0x00007fb547847120  ; ImmutableOopMap{}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ;   {virtual_call}
  0x00007fb547d9f7fc: mov    %rax,%rsi
  0x00007fb547d9f7ff: shr    $0x10,%esi
  0x00007fb547d9f802: xor    %rax,%rsi
  0x00007fb547d9f805: mov    %rsi,%rax
  0x00007fb547d9f808: add    $0x30,%rsp
  0x00007fb547d9f80c: pop    %rbp
  0x00007fb547d9f80d: mov    0x108(%r15),%r10
  0x00007fb547d9f814: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547d9f817: retq   
  0x00007fb547d9f818: movabs $0x7fb52cdd6b88,%r10  ;   {metadata({method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9f822: mov    %r10,0x8(%rsp)
  0x00007fb547d9f827: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547d9f82f: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 340)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547d9f834: jmpq   0x00007fb547d9f6f4
  0x00007fb547d9f839: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547d9f83e: nop
  0x00007fb547d9f83f: nop
  0x00007fb547d9f840: mov    0x440(%r15),%rax
  0x00007fb547d9f847: movabs $0x0,%r10
  0x00007fb547d9f851: mov    %r10,0x440(%r15)
  0x00007fb547d9f858: movabs $0x0,%r10
  0x00007fb547d9f862: mov    %r10,0x448(%r15)
  0x00007fb547d9f869: add    $0x30,%rsp
  0x00007fb547d9f86d: pop    %rbp
  0x00007fb547d9f86e: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547d9f873: hlt    
  0x00007fb547d9f874: hlt    
  0x00007fb547d9f875: hlt    
  0x00007fb547d9f876: hlt    
  0x00007fb547d9f877: hlt    
  0x00007fb547d9f878: hlt    
  0x00007fb547d9f879: hlt    
  0x00007fb547d9f87a: hlt    
  0x00007fb547d9f87b: hlt    
  0x00007fb547d9f87c: hlt    
  0x00007fb547d9f87d: hlt    
  0x00007fb547d9f87e: hlt    
  0x00007fb547d9f87f: hlt    
[Stub Code]
  0x00007fb547d9f880: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547d9f885: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547d9f88f: jmpq   0x00007fb547d9f88f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547d9f894: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547d9f899: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547d9f8a3: and    $0xfffffffffffffff0,%rsp
  0x00007fb547d9f8a7: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547d9f8ac: hlt    
[Deopt Handler Code]
  0x00007fb547d9f8ad: movabs $0x7fb547d9f8ad,%r10  ;   {section_word}
  0x00007fb547d9f8b7: push   %r10
  0x00007fb547d9f8b9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547d9f8be: hlt    
  0x00007fb547d9f8bf: hlt    

ImmutableOopMap{}pc offsets: 316 
ImmutableOopMap{rsi=Oop }pc offsets: 372 382 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='46' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='512' backedge_count='19' iicount='512' level='3' stamp='0.686' comment='tiered' hot_count='512'/>
<task_queued compile_id='47' method='java.util.HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='512' iicount='512' level='3' stamp='0.686' comment='tiered' hot_count='512'/>
<task_queued compile_id='48' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='512' iicount='512' level='3' stamp='0.686' comment='tiered' hot_count='512'/>
<task_queued compile_id='49' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='512' iicount='512' level='3' stamp='0.686' comment='tiered' hot_count='512'/>
<task_queued compile_id='50' method='java.lang.module.ModuleDescriptor$Exports source ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.686' comment='tiered' hot_count='128'/>
<task_queued compile_id='51' method='java.util.HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='640' backedge_count='31' iicount='640' level='3' stamp='0.686' comment='tiered' hot_count='640'/>
<task_queued compile_id='52' method='java.lang.module.ModuleDescriptor isAutomatic ()Z' bytes='5' count='128' iicount='128' level='1' stamp='0.687' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='46' compiler='c1' level='3' entry='0x00007fb547d9fce0' size='7992' address='0x00007fb547d9fa10' relocation_offset='376' insts_offset='720' stub_offset='5200' scopes_data_offset='5416' scopes_pcs_offset='6344' dependencies_offset='7880' nul_chk_table_offset='7888' metadata_offset='5408' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='839' backedge_count='31' iicount='839' stamp='0.687'/>
<print_nmethod stamp='0.687'>
Compiled method (c1)     686   46       3       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x00007fb547d9fa10,0x00007fb547da1948] = 7992
 relocation     [0x00007fb547d9fb88,0x00007fb547d9fcc8] = 320
 main code      [0x00007fb547d9fce0,0x00007fb547da0e60] = 4480
 stub code      [0x00007fb547da0e60,0x00007fb547da0f30] = 208
 metadata       [0x00007fb547da0f30,0x00007fb547da0f38] = 8
 scopes data    [0x00007fb547da0f38,0x00007fb547da12d8] = 928
 scopes pcs     [0x00007fb547da12d8,0x00007fb547da18d8] = 1536
 dependencies   [0x00007fb547da18d8,0x00007fb547da18e0] = 8
 nul chk table  [0x00007fb547da18e0,0x00007fb547da1948] = 104
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x00007fb547d9fce0, 0x00007fb547da0f30]  4688 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00007fb547d9fce0: mov    0x8(%rsi),%r10d
  0x00007fb547d9fce4: movabs $0x800000000,%r12
  0x00007fb547d9fcee: add    %r12,%r10
  0x00007fb547d9fcf1: xor    %r12,%r12
  0x00007fb547d9fcf4: cmp    %rax,%r10
  0x00007fb547d9fcf7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547d9fcfd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547d9fd00: mov    %eax,-0x14000(%rsp)
  0x00007fb547d9fd07: push   %rbp
  0x00007fb547d9fd08: sub    $0xa0,%rsp
  0x00007fb547d9fd0f: mov    %rsi,0x48(%rsp)
  0x00007fb547d9fd14: mov    %edx,0x40(%rsp)
  0x00007fb547d9fd18: mov    %rcx,0x50(%rsp)
  0x00007fb547d9fd1d: movabs $0x7fb52cf5c978,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9fd27: mov    0x100(%rbx),%eax
  0x00007fb547d9fd2d: add    $0x8,%eax
  0x00007fb547d9fd30: mov    %eax,0x100(%rbx)
  0x00007fb547d9fd36: and    $0x1ff8,%eax
  0x00007fb547d9fd3c: cmp    $0x0,%eax
  0x00007fb547d9fd3f: je     0x00007fb547da0cd9  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0 (line 624)

  0x00007fb547d9fd45: mov    0x24(%rsi),%ebx
  0x00007fb547d9fd48: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 624)

  0x00007fb547d9fd4c: cmp    $0x0,%rbx
  0x00007fb547d9fd50: movabs $0x7fb52cf5c978,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9fd5a: movabs $0x140,%r11
  0x00007fb547d9fd64: je     0x00007fb547d9fd74
  0x00007fb547d9fd6a: movabs $0x150,%r11
  0x00007fb547d9fd74: mov    (%rax,%r11,1),%r13
  0x00007fb547d9fd78: lea    0x1(%r13),%r13
  0x00007fb547d9fd7c: mov    %r13,(%rax,%r11,1)
  0x00007fb547d9fd80: je     0x00007fb547d9fdd5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7 (line 624)

  0x00007fb547d9fd86: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 624)
                                                ; implicit exception: dispatches to 0x00007fb547da0cfa
  0x00007fb547d9fd89: cmp    $0x0,%eax
  0x00007fb547d9fd8c: movabs $0x7fb52cf5c978,%r11  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9fd96: movabs $0x170,%r13
  0x00007fb547d9fda0: je     0x00007fb547d9fdb0
  0x00007fb547d9fda6: movabs $0x160,%r13
  0x00007fb547d9fdb0: mov    (%r11,%r13,1),%r14
  0x00007fb547d9fdb4: lea    0x1(%r14),%r14
  0x00007fb547d9fdb8: mov    %r14,(%r11,%r13,1)
  0x00007fb547d9fdbc: je     0x00007fb547d9fdd5  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 624)

  0x00007fb547d9fdc2: mov    %edi,0x60(%rsp)
  0x00007fb547d9fdc6: mov    %r9d,0x44(%rsp)
  0x00007fb547d9fdcb: mov    %r8,0x58(%rsp)
  0x00007fb547d9fdd0: jmpq   0x00007fb547d9fe10  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 626)

  0x00007fb547d9fdd5: mov    %edi,0x60(%rsp)
  0x00007fb547d9fdd9: mov    %r9d,0x44(%rsp)
  0x00007fb547d9fdde: mov    %r8,0x58(%rsp)
  0x00007fb547d9fde3: mov    %rsi,%rbx
  0x00007fb547d9fde6: movabs $0x7fb52cf5c978,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9fdf0: addq   $0x1,0x180(%rax)
  0x00007fb547d9fdf8: mov    %rsi,%rbx
  0x00007fb547d9fdfb: mov    %rbx,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 625)

  0x00007fb547d9fdfe: nop
  0x00007fb547d9fdff: callq  0x00007fb547da0e65  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 625)
                                                ;   {optimized virtual_call}
  0x00007fb547d9fe04: mov    %rax,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 625)

  0x00007fb547d9fe07: mov    0xc(%rdx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 625)
                                                ; implicit exception: dispatches to 0x00007fb547da0cff
  0x00007fb547d9fe0a: mov    %rcx,%rax
  0x00007fb547d9fe0d: mov    %rdx,%rbx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 626)

  0x00007fb547d9fe10: dec    %eax
  0x00007fb547d9fe12: and    0x40(%rsp),%eax
  0x00007fb547d9fe16: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00007fb547da0d04
  0x00007fb547d9fe19: jae    0x00007fb547da0d0e
  0x00007fb547d9fe1f: movslq %eax,%rdx
  0x00007fb547d9fe22: mov    0x10(%rbx,%rdx,4),%edi
  0x00007fb547d9fe26: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 626)

  0x00007fb547d9fe2a: cmp    $0x0,%rdi
  0x00007fb547d9fe2e: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9fe38: movabs $0x1b8,%rcx
  0x00007fb547d9fe42: jne    0x00007fb547d9fe52
  0x00007fb547d9fe48: movabs $0x1c8,%rcx
  0x00007fb547d9fe52: mov    (%rdx,%rcx,1),%r8
  0x00007fb547d9fe56: lea    0x1(%r8),%r8
  0x00007fb547d9fe5a: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547d9fe5e: jne    0x00007fb547da00b2  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44 (line 626)

  0x00007fb547d9fe64: mov    %eax,0x64(%rsp)
  0x00007fb547d9fe68: mov    %rbx,0x68(%rsp)
  0x00007fb547d9fe6d: mov    0x48(%rsp),%rsi
  0x00007fb547d9fe72: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9fe7c: mov    0x8(%rsi),%esi
  0x00007fb547d9fe7f: movabs $0x800000000,%r12
  0x00007fb547d9fe89: add    %r12,%rsi
  0x00007fb547d9fe8c: xor    %r12,%r12
  0x00007fb547d9fe8f: cmp    0x1e8(%rdx),%rsi
  0x00007fb547d9fe96: jne    0x00007fb547d9fea5
  0x00007fb547d9fe98: addq   $0x1,0x1f0(%rdx)
  0x00007fb547d9fea0: jmpq   0x00007fb547d9ff0b
  0x00007fb547d9fea5: cmp    0x1f8(%rdx),%rsi
  0x00007fb547d9feac: jne    0x00007fb547d9febb
  0x00007fb547d9feae: addq   $0x1,0x200(%rdx)
  0x00007fb547d9feb6: jmpq   0x00007fb547d9ff0b
  0x00007fb547d9febb: cmpq   $0x0,0x1e8(%rdx)
  0x00007fb547d9fec6: jne    0x00007fb547d9fedf
  0x00007fb547d9fec8: mov    %rsi,0x1e8(%rdx)
  0x00007fb547d9fecf: movq   $0x1,0x1f0(%rdx)
  0x00007fb547d9feda: jmpq   0x00007fb547d9ff0b
  0x00007fb547d9fedf: cmpq   $0x0,0x1f8(%rdx)
  0x00007fb547d9feea: jne    0x00007fb547d9ff03
  0x00007fb547d9feec: mov    %rsi,0x1f8(%rdx)
  0x00007fb547d9fef3: movq   $0x1,0x200(%rdx)
  0x00007fb547d9fefe: jmpq   0x00007fb547d9ff0b
  0x00007fb547d9ff03: addq   $0x1,0x1d8(%rdx)
  0x00007fb547d9ff0b: mov    0x40(%rsp),%edx
  0x00007fb547d9ff0f: mov    0x50(%rsp),%rcx
  0x00007fb547d9ff14: mov    0x58(%rsp),%r8
  0x00007fb547d9ff19: movabs $0x0,%r9           ;   {oop(NULL)}
  0x00007fb547d9ff23: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 627)

  0x00007fb547d9ff28: nopl   0x0(%rax,%rax,1)
  0x00007fb547d9ff2d: movabs $0xffffffffffffffff,%rax
  0x00007fb547d9ff37: callq  0x00007fb547847160  ; ImmutableOopMap{[72]=Oop [104]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 627)
                                                ;   {virtual_call}
  0x00007fb547d9ff3c: mov    0x68(%rsp),%rbx
  0x00007fb547d9ff41: cmp    $0x0,%rax
  0x00007fb547d9ff45: jne    0x00007fb547d9ff5d
  0x00007fb547d9ff47: movabs $0x7fb52cf5c978,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9ff51: orb    $0x1,0x209(%rsi)
  0x00007fb547d9ff58: jmpq   0x00007fb547da0065
  0x00007fb547d9ff5d: mov    0x8(%rbx),%edx     ; implicit exception: dispatches to 0x00007fb547da0d1c
  0x00007fb547d9ff60: movabs $0x800000000,%r12
  0x00007fb547d9ff6a: add    %r12,%rdx
  0x00007fb547d9ff6d: xor    %r12,%r12
  0x00007fb547d9ff70: mov    0x8(%rax),%esi
  0x00007fb547d9ff73: movabs $0x800000000,%r12
  0x00007fb547d9ff7d: add    %r12,%rsi
  0x00007fb547d9ff80: xor    %r12,%r12
  0x00007fb547d9ff83: mov    0xe8(%rdx),%rdx
  0x00007fb547d9ff8a: cmp    %rdx,%rsi
  0x00007fb547d9ff8d: je     0x00007fb547d9ffbb
  0x00007fb547d9ff93: mov    0x10(%rdx),%edi
  0x00007fb547d9ff96: cmp    (%rsi,%rdi,1),%rdx
  0x00007fb547d9ff9a: je     0x00007fb547d9ffbb
  0x00007fb547d9ffa0: cmp    $0x20,%edi
  0x00007fb547d9ffa3: jne    0x00007fb547da004e
  0x00007fb547d9ffa9: push   %rsi
  0x00007fb547d9ffaa: push   %rdx
  0x00007fb547d9ffab: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547d9ffb0: pop    %rsi
  0x00007fb547d9ffb1: pop    %rdx
  0x00007fb547d9ffb2: cmp    $0x0,%edx
  0x00007fb547d9ffb5: je     0x00007fb547da004e
  0x00007fb547d9ffbb: movabs $0x7fb52cf5c978,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547d9ffc5: mov    0x8(%rax),%edx
  0x00007fb547d9ffc8: movabs $0x800000000,%r12
  0x00007fb547d9ffd2: add    %r12,%rdx
  0x00007fb547d9ffd5: xor    %r12,%r12
  0x00007fb547d9ffd8: cmp    0x220(%rsi),%rdx
  0x00007fb547d9ffdf: jne    0x00007fb547d9ffee
  0x00007fb547d9ffe1: addq   $0x1,0x228(%rsi)
  0x00007fb547d9ffe9: jmpq   0x00007fb547da0065
  0x00007fb547d9ffee: cmp    0x230(%rsi),%rdx
  0x00007fb547d9fff5: jne    0x00007fb547da0004
  0x00007fb547d9fff7: addq   $0x1,0x238(%rsi)
  0x00007fb547d9ffff: jmpq   0x00007fb547da0065
  0x00007fb547da0004: cmpq   $0x0,0x220(%rsi)
  0x00007fb547da000f: jne    0x00007fb547da0028
  0x00007fb547da0011: mov    %rdx,0x220(%rsi)
  0x00007fb547da0018: movq   $0x1,0x228(%rsi)
  0x00007fb547da0023: jmpq   0x00007fb547da0065
  0x00007fb547da0028: cmpq   $0x0,0x230(%rsi)
  0x00007fb547da0033: jne    0x00007fb547da004c
  0x00007fb547da0035: mov    %rdx,0x230(%rsi)
  0x00007fb547da003c: movq   $0x1,0x238(%rsi)
  0x00007fb547da0047: jmpq   0x00007fb547da0065
  0x00007fb547da004c: jmp    0x00007fb547da0065
  0x00007fb547da004e: movabs $0x7fb52cf5c978,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0058: subq   $0x1,0x210(%rsi)
  0x00007fb547da0060: jmpq   0x00007fb547da0d21
  0x00007fb547da0065: mov    0x64(%rsp),%edx
  0x00007fb547da0069: movslq %edx,%rdx
  0x00007fb547da006c: lea    0x10(%rbx,%rdx,4),%rdx
  0x00007fb547da0071: movsbl 0x30(%r15),%esi
  0x00007fb547da0076: cmp    $0x0,%esi
  0x00007fb547da0079: jne    0x00007fb547da0d2a
  0x00007fb547da007f: mov    %rax,%r10
  0x00007fb547da0082: shr    $0x3,%r10
  0x00007fb547da0086: mov    %r10d,(%rdx)
  0x00007fb547da0089: mov    %rdx,%rsi
  0x00007fb547da008c: xor    %rax,%rsi
  0x00007fb547da008f: shr    $0x15,%rsi
  0x00007fb547da0093: cmp    $0x0,%rsi
  0x00007fb547da0097: jne    0x00007fb547da0d48  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 627)

  0x00007fb547da009d: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da00a7: incl   0x248(%rdx)
  0x00007fb547da00ad: jmpq   0x00007fb547da09fe  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60 (line 627)

  0x00007fb547da00b2: mov    0xc(%rdi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 630)
                                                ; implicit exception: dispatches to 0x00007fb547da0d60
  0x00007fb547da00b5: cmp    0x40(%rsp),%edx
  0x00007fb547da00b9: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da00c3: movabs $0x270,%rsi
  0x00007fb547da00cd: je     0x00007fb547da00dd
  0x00007fb547da00d3: movabs $0x260,%rsi
  0x00007fb547da00dd: mov    (%rdx,%rsi,1),%rax
  0x00007fb547da00e1: lea    0x1(%rax),%rax
  0x00007fb547da00e5: mov    %rax,(%rdx,%rsi,1)
  0x00007fb547da00e9: je     0x00007fb547da00f9  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 630)

  0x00007fb547da00ef: mov    %rbx,0x68(%rsp)
  0x00007fb547da00f4: jmpq   0x00007fb547da0282  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 633)

  0x00007fb547da00f9: mov    0x50(%rsp),%rcx
  0x00007fb547da00fe: mov    0x10(%rdi),%edx
  0x00007fb547da0101: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74 (line 630)

  0x00007fb547da0105: cmp    %rcx,%rdx
  0x00007fb547da0108: movabs $0x7fb52cf5c978,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0112: movabs $0x280,%rax
  0x00007fb547da011c: je     0x00007fb547da012c
  0x00007fb547da0122: movabs $0x290,%rax
  0x00007fb547da012c: mov    (%rsi,%rax,1),%r8
  0x00007fb547da0130: lea    0x1(%r8),%r8
  0x00007fb547da0134: mov    %r8,(%rsi,%rax,1)
  0x00007fb547da0138: je     0x00007fb547da09b1  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81 (line 630)

  0x00007fb547da013e: cmp    $0x0,%rcx
  0x00007fb547da0142: movabs $0x7fb52cf5c978,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da014c: movabs $0x2b0,%rax
  0x00007fb547da0156: jne    0x00007fb547da0166
  0x00007fb547da015c: movabs $0x2a0,%rax
  0x00007fb547da0166: mov    (%rsi,%rax,1),%r8
  0x00007fb547da016a: lea    0x1(%r8),%r8
  0x00007fb547da016e: mov    %r8,(%rsi,%rax,1)
  0x00007fb547da0172: jne    0x00007fb547da0182  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85 (line 630)

  0x00007fb547da0178: mov    %rbx,0x68(%rsp)
  0x00007fb547da017d: jmpq   0x00007fb547da0282  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 633)

  0x00007fb547da0182: mov    %rdi,0x70(%rsp)
  0x00007fb547da0187: mov    %rbx,0x68(%rsp)
  0x00007fb547da018c: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007fb547da0d65
  0x00007fb547da018f: mov    %rcx,%rsi
  0x00007fb547da0192: movabs $0x7fb52cf5c978,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da019c: mov    0x8(%rsi),%esi
  0x00007fb547da019f: movabs $0x800000000,%r12
  0x00007fb547da01a9: add    %r12,%rsi
  0x00007fb547da01ac: xor    %r12,%r12
  0x00007fb547da01af: cmp    0x2d0(%rax),%rsi
  0x00007fb547da01b6: jne    0x00007fb547da01c5
  0x00007fb547da01b8: addq   $0x1,0x2d8(%rax)
  0x00007fb547da01c0: jmpq   0x00007fb547da022b
  0x00007fb547da01c5: cmp    0x2e0(%rax),%rsi
  0x00007fb547da01cc: jne    0x00007fb547da01db
  0x00007fb547da01ce: addq   $0x1,0x2e8(%rax)
  0x00007fb547da01d6: jmpq   0x00007fb547da022b
  0x00007fb547da01db: cmpq   $0x0,0x2d0(%rax)
  0x00007fb547da01e6: jne    0x00007fb547da01ff
  0x00007fb547da01e8: mov    %rsi,0x2d0(%rax)
  0x00007fb547da01ef: movq   $0x1,0x2d8(%rax)
  0x00007fb547da01fa: jmpq   0x00007fb547da022b
  0x00007fb547da01ff: cmpq   $0x0,0x2e0(%rax)
  0x00007fb547da020a: jne    0x00007fb547da0223
  0x00007fb547da020c: mov    %rsi,0x2e0(%rax)
  0x00007fb547da0213: movq   $0x1,0x2e8(%rax)
  0x00007fb547da021e: jmpq   0x00007fb547da022b
  0x00007fb547da0223: addq   $0x1,0x2c0(%rax)
  0x00007fb547da022b: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 631)

  0x00007fb547da022e: nopl   0x0(%rax)
  0x00007fb547da0235: movabs $0xffffffffffffffff,%rax
  0x00007fb547da023f: callq  0x00007fb54784aa80  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [112]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 631)
                                                ;   {virtual_call}
  0x00007fb547da0244: cmp    $0x0,%eax
  0x00007fb547da0247: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0251: movabs $0x308,%rcx
  0x00007fb547da025b: jne    0x00007fb547da026b
  0x00007fb547da0261: movabs $0x2f8,%rcx
  0x00007fb547da026b: mov    (%rdx,%rcx,1),%r8
  0x00007fb547da026f: lea    0x1(%r8),%r8
  0x00007fb547da0273: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547da0277: mov    0x70(%rsp),%rdi
  0x00007fb547da027c: jne    0x00007fb547da09b1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94 (line 631)

  0x00007fb547da0282: cmp    $0x0,%rdi
  0x00007fb547da0286: jne    0x00007fb547da029f
  0x00007fb547da0288: movabs $0x7fb52cf5c978,%r8  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0292: orb    $0x1,0x329(%r8)
  0x00007fb547da029a: jmpq   0x00007fb547da0378
  0x00007fb547da029f: movabs $0x800031890,%r9   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007fb547da02a9: mov    0x8(%rdi),%ecx
  0x00007fb547da02ac: movabs $0x800000000,%r12
  0x00007fb547da02b6: add    %r12,%rcx
  0x00007fb547da02b9: xor    %r12,%r12
  0x00007fb547da02bc: cmp    %rcx,%r9
  0x00007fb547da02bf: jne    0x00007fb547da035c
  0x00007fb547da02c5: movabs $0x7fb52cf5c978,%r8  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da02cf: mov    0x8(%rdi),%r9d
  0x00007fb547da02d3: movabs $0x800000000,%r12
  0x00007fb547da02dd: add    %r12,%r9
  0x00007fb547da02e0: xor    %r12,%r12
  0x00007fb547da02e3: cmp    0x340(%r8),%r9
  0x00007fb547da02ea: jne    0x00007fb547da02f9
  0x00007fb547da02ec: addq   $0x1,0x348(%r8)
  0x00007fb547da02f4: jmpq   0x00007fb547da037d
  0x00007fb547da02f9: cmp    0x350(%r8),%r9
  0x00007fb547da0300: jne    0x00007fb547da030f
  0x00007fb547da0302: addq   $0x1,0x358(%r8)
  0x00007fb547da030a: jmpq   0x00007fb547da037d
  0x00007fb547da030f: cmpq   $0x0,0x340(%r8)
  0x00007fb547da031a: jne    0x00007fb547da0333
  0x00007fb547da031c: mov    %r9,0x340(%r8)
  0x00007fb547da0323: movq   $0x1,0x348(%r8)
  0x00007fb547da032e: jmpq   0x00007fb547da037d
  0x00007fb547da0333: cmpq   $0x0,0x350(%r8)
  0x00007fb547da033e: jne    0x00007fb547da0357
  0x00007fb547da0340: mov    %r9,0x350(%r8)
  0x00007fb547da0347: movq   $0x1,0x358(%r8)
  0x00007fb547da0352: jmpq   0x00007fb547da037d
  0x00007fb547da0357: jmpq   0x00007fb547da037d
  0x00007fb547da035c: movabs $0x7fb52cf5c978,%r8  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0366: subq   $0x1,0x330(%r8)
  0x00007fb547da036e: jmpq   0x00007fb547da0378
  0x00007fb547da0373: jmpq   0x00007fb547da037d
  0x00007fb547da0378: xor    %rdx,%rdx
  0x00007fb547da037b: jmp    0x00007fb547da0387
  0x00007fb547da037d: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106 (line 633)

  0x00007fb547da0387: cmp    $0x0,%edx
  0x00007fb547da038a: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0394: movabs $0x368,%rcx
  0x00007fb547da039e: je     0x00007fb547da03ae
  0x00007fb547da03a4: movabs $0x378,%rcx
  0x00007fb547da03ae: mov    (%rdx,%rcx,1),%r8
  0x00007fb547da03b2: lea    0x1(%r8),%r8
  0x00007fb547da03b6: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547da03ba: je     0x00007fb547da0591  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 633)

  0x00007fb547da03c0: cmp    $0x0,%rdi
  0x00007fb547da03c4: jne    0x00007fb547da03dc
  0x00007fb547da03c6: movabs $0x7fb52cf5c978,%rcx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da03d0: orb    $0x1,0x381(%rcx)
  0x00007fb547da03d7: jmpq   0x00007fb547da04b5
  0x00007fb547da03dc: movabs $0x800031890,%r8   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007fb547da03e6: mov    0x8(%rdi),%edx
  0x00007fb547da03e9: movabs $0x800000000,%r12
  0x00007fb547da03f3: add    %r12,%rdx
  0x00007fb547da03f6: xor    %r12,%r12
  0x00007fb547da03f9: cmp    %rdx,%r8
  0x00007fb547da03fc: jne    0x00007fb547da0499
  0x00007fb547da0402: movabs $0x7fb52cf5c978,%rcx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da040c: mov    0x8(%rdi),%r8d
  0x00007fb547da0410: movabs $0x800000000,%r12
  0x00007fb547da041a: add    %r12,%r8
  0x00007fb547da041d: xor    %r12,%r12
  0x00007fb547da0420: cmp    0x398(%rcx),%r8
  0x00007fb547da0427: jne    0x00007fb547da0436
  0x00007fb547da0429: addq   $0x1,0x3a0(%rcx)
  0x00007fb547da0431: jmpq   0x00007fb547da04b5
  0x00007fb547da0436: cmp    0x3a8(%rcx),%r8
  0x00007fb547da043d: jne    0x00007fb547da044c
  0x00007fb547da043f: addq   $0x1,0x3b0(%rcx)
  0x00007fb547da0447: jmpq   0x00007fb547da04b5
  0x00007fb547da044c: cmpq   $0x0,0x398(%rcx)
  0x00007fb547da0457: jne    0x00007fb547da0470
  0x00007fb547da0459: mov    %r8,0x398(%rcx)
  0x00007fb547da0460: movq   $0x1,0x3a0(%rcx)
  0x00007fb547da046b: jmpq   0x00007fb547da04b5
  0x00007fb547da0470: cmpq   $0x0,0x3a8(%rcx)
  0x00007fb547da047b: jne    0x00007fb547da0494
  0x00007fb547da047d: mov    %r8,0x3a8(%rcx)
  0x00007fb547da0484: movq   $0x1,0x3b0(%rcx)
  0x00007fb547da048f: jmpq   0x00007fb547da04b5
  0x00007fb547da0494: jmpq   0x00007fb547da04b5
  0x00007fb547da0499: movabs $0x7fb52cf5c978,%rcx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da04a3: subq   $0x1,0x388(%rcx)
  0x00007fb547da04ab: jmpq   0x00007fb547da0d6a
  0x00007fb547da04b0: jmpq   0x00007fb547da04b5
  0x00007fb547da04b5: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 634)

  0x00007fb547da04b8: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007fb547da0d73
  0x00007fb547da04bb: mov    %rsi,%rdx
  0x00007fb547da04be: movabs $0x7fb52cf5c978,%rcx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da04c8: mov    0x8(%rdx),%edx
  0x00007fb547da04cb: movabs $0x800000000,%r12
  0x00007fb547da04d5: add    %r12,%rdx
  0x00007fb547da04d8: xor    %r12,%r12
  0x00007fb547da04db: cmp    0x3d0(%rcx),%rdx
  0x00007fb547da04e2: jne    0x00007fb547da04f1
  0x00007fb547da04e4: addq   $0x1,0x3d8(%rcx)
  0x00007fb547da04ec: jmpq   0x00007fb547da0557
  0x00007fb547da04f1: cmp    0x3e0(%rcx),%rdx
  0x00007fb547da04f8: jne    0x00007fb547da0507
  0x00007fb547da04fa: addq   $0x1,0x3e8(%rcx)
  0x00007fb547da0502: jmpq   0x00007fb547da0557
  0x00007fb547da0507: cmpq   $0x0,0x3d0(%rcx)
  0x00007fb547da0512: jne    0x00007fb547da052b
  0x00007fb547da0514: mov    %rdx,0x3d0(%rcx)
  0x00007fb547da051b: movq   $0x1,0x3d8(%rcx)
  0x00007fb547da0526: jmpq   0x00007fb547da0557
  0x00007fb547da052b: cmpq   $0x0,0x3e0(%rcx)
  0x00007fb547da0536: jne    0x00007fb547da054f
  0x00007fb547da0538: mov    %rdx,0x3e0(%rcx)
  0x00007fb547da053f: movq   $0x1,0x3e8(%rcx)
  0x00007fb547da054a: jmpq   0x00007fb547da0557
  0x00007fb547da054f: addq   $0x1,0x3c0(%rcx)
  0x00007fb547da0557: mov    0x48(%rsp),%rdx
  0x00007fb547da055c: mov    0x68(%rsp),%rcx
  0x00007fb547da0561: mov    0x40(%rsp),%r8d
  0x00007fb547da0566: mov    0x50(%rsp),%r9
  0x00007fb547da056b: mov    0x58(%rsp),%rdi    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 634)

  0x00007fb547da0570: nopl   0x0(%rax)
  0x00007fb547da0577: callq  0x00007fb54784ad80  ; ImmutableOopMap{[72]=Oop [88]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 634)
                                                ;   {optimized virtual_call}
  0x00007fb547da057c: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0586: incl   0x3f8(%rdx)
  0x00007fb547da058c: jmpq   0x00007fb547da09c4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128 (line 634)

  0x00007fb547da0591: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134 (line 637)

  0x00007fb547da0596: xchg   %ax,%ax
  0x00007fb547da0598: mov    %ebx,0x78(%rsp)
  0x00007fb547da059c: mov    0x50(%rsp),%rcx
  0x00007fb547da05a1: mov    0x40(%rsp),%edx
  0x00007fb547da05a5: mov    0x18(%rdi),%eax    ; implicit exception: dispatches to 0x00007fb547da0d78
  0x00007fb547da05a8: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 637)

  0x00007fb547da05ac: mov    %rax,0x80(%rsp)
  0x00007fb547da05b4: cmp    $0x0,%rax
  0x00007fb547da05b8: movabs $0x7fb52cf5c978,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da05c2: movabs $0x420,%r8
  0x00007fb547da05cc: je     0x00007fb547da05dc
  0x00007fb547da05d2: movabs $0x410,%r8
  0x00007fb547da05dc: mov    (%rsi,%r8,1),%r9
  0x00007fb547da05e0: lea    0x1(%r9),%r9
  0x00007fb547da05e4: mov    %r9,(%rsi,%r8,1)
  0x00007fb547da05e8: je     0x00007fb547da0814  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 637)

  0x00007fb547da05ee: mov    0xc(%rax),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 643)
                                                ; implicit exception: dispatches to 0x00007fb547da0d7d
  0x00007fb547da05f1: cmp    %edx,%esi
  0x00007fb547da05f3: movabs $0x7fb52cf5c978,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da05fd: movabs $0x4d8,%rdi
  0x00007fb547da0607: jne    0x00007fb547da0617
  0x00007fb547da060d: movabs $0x4e8,%rdi
  0x00007fb547da0617: mov    (%rsi,%rdi,1),%r8
  0x00007fb547da061b: lea    0x1(%r8),%r8
  0x00007fb547da061f: mov    %r8,(%rsi,%rdi,1)
  0x00007fb547da0623: jne    0x00007fb547da0795  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 643)

  0x00007fb547da0629: mov    0x10(%rax),%esi
  0x00007fb547da062c: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186 (line 643)

  0x00007fb547da0630: cmp    %rcx,%rsi
  0x00007fb547da0633: movabs $0x7fb52cf5c978,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da063d: movabs $0x4f8,%r8
  0x00007fb547da0647: je     0x00007fb547da0657
  0x00007fb547da064d: movabs $0x508,%r8
  0x00007fb547da0657: mov    (%rdi,%r8,1),%r9
  0x00007fb547da065b: lea    0x1(%r9),%r9
  0x00007fb547da065f: mov    %r9,(%rdi,%r8,1)
  0x00007fb547da0663: je     0x00007fb547da07ea  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193 (line 643)

  0x00007fb547da0669: cmp    $0x0,%rcx
  0x00007fb547da066d: movabs $0x7fb52cf5c978,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0677: movabs $0x518,%r8
  0x00007fb547da0681: je     0x00007fb547da0691
  0x00007fb547da0687: movabs $0x528,%r8
  0x00007fb547da0691: mov    (%rdi,%r8,1),%r9
  0x00007fb547da0695: lea    0x1(%r9),%r9
  0x00007fb547da0699: mov    %r9,(%rdi,%r8,1)
  0x00007fb547da069d: je     0x00007fb547da0795  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197 (line 643)

  0x00007fb547da06a3: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007fb547da0d82
  0x00007fb547da06a6: mov    %rcx,%rdi
  0x00007fb547da06a9: movabs $0x7fb52cf5c978,%r8  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da06b3: mov    0x8(%rdi),%edi
  0x00007fb547da06b6: movabs $0x800000000,%r12
  0x00007fb547da06c0: add    %r12,%rdi
  0x00007fb547da06c3: xor    %r12,%r12
  0x00007fb547da06c6: cmp    0x548(%r8),%rdi
  0x00007fb547da06cd: jne    0x00007fb547da06dc
  0x00007fb547da06cf: addq   $0x1,0x550(%r8)
  0x00007fb547da06d7: jmpq   0x00007fb547da0742
  0x00007fb547da06dc: cmp    0x558(%r8),%rdi
  0x00007fb547da06e3: jne    0x00007fb547da06f2
  0x00007fb547da06e5: addq   $0x1,0x560(%r8)
  0x00007fb547da06ed: jmpq   0x00007fb547da0742
  0x00007fb547da06f2: cmpq   $0x0,0x548(%r8)
  0x00007fb547da06fd: jne    0x00007fb547da0716
  0x00007fb547da06ff: mov    %rdi,0x548(%r8)
  0x00007fb547da0706: movq   $0x1,0x550(%r8)
  0x00007fb547da0711: jmpq   0x00007fb547da0742
  0x00007fb547da0716: cmpq   $0x0,0x558(%r8)
  0x00007fb547da0721: jne    0x00007fb547da073a
  0x00007fb547da0723: mov    %rdi,0x558(%r8)
  0x00007fb547da072a: movq   $0x1,0x560(%r8)
  0x00007fb547da0735: jmpq   0x00007fb547da0742
  0x00007fb547da073a: addq   $0x1,0x538(%r8)
  0x00007fb547da0742: mov    %rsi,%rdx
  0x00007fb547da0745: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 644)

  0x00007fb547da0748: nopl   0x0(%rax,%rax,1)
  0x00007fb547da074d: movabs $0xffffffffffffffff,%rax
  0x00007fb547da0757: callq  0x00007fb54784aa80  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 644)
                                                ;   {virtual_call}
  0x00007fb547da075c: cmp    $0x0,%eax
  0x00007fb547da075f: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0769: movabs $0x580,%rcx
  0x00007fb547da0773: jne    0x00007fb547da0783
  0x00007fb547da0779: movabs $0x570,%rcx
  0x00007fb547da0783: mov    (%rdx,%rcx,1),%r8
  0x00007fb547da0787: lea    0x1(%r8),%r8
  0x00007fb547da078b: mov    %r8,(%rdx,%rcx,1)
  0x00007fb547da078f: jne    0x00007fb547da07f7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206 (line 644)

  0x00007fb547da0795: mov    0x78(%rsp),%ebx
  0x00007fb547da0799: inc    %ebx
  0x00007fb547da079b: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da07a5: mov    0x104(%rdx),%ecx
  0x00007fb547da07ab: add    $0x8,%ecx
  0x00007fb547da07ae: mov    %ecx,0x104(%rdx)
  0x00007fb547da07b4: and    $0xfff8,%ecx
  0x00007fb547da07ba: cmp    $0x0,%ecx
  0x00007fb547da07bd: je     0x00007fb547da0d87  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 636)

  0x00007fb547da07c3: mov    0x108(%r15),%r10   ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 636)

  0x00007fb547da07ca: test   %eax,(%r10)        ;   {poll}
  0x00007fb547da07cd: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da07d7: incl   0x5a8(%rdx)
  0x00007fb547da07dd: mov    0x80(%rsp),%rdi
  0x00007fb547da07e5: jmpq   0x00007fb547da0598  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 636)

  0x00007fb547da07ea: mov    0x80(%rsp),%rax
  0x00007fb547da07f2: jmpq   0x00007fb547da09c4  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 649)

  0x00007fb547da07f7: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0801: incl   0x590(%rdx)
  0x00007fb547da0807: mov    0x80(%rsp),%rax
  0x00007fb547da080f: jmpq   0x00007fb547da09c4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209 (line 645)

  0x00007fb547da0814: mov    %rdi,0x88(%rsp)
  0x00007fb547da081c: mov    0x48(%rsp),%rsi
  0x00007fb547da0821: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da082b: mov    0x8(%rsi),%esi
  0x00007fb547da082e: movabs $0x800000000,%r12
  0x00007fb547da0838: add    %r12,%rsi
  0x00007fb547da083b: xor    %r12,%r12
  0x00007fb547da083e: cmp    0x440(%rdx),%rsi
  0x00007fb547da0845: jne    0x00007fb547da0854
  0x00007fb547da0847: addq   $0x1,0x448(%rdx)
  0x00007fb547da084f: jmpq   0x00007fb547da08ba
  0x00007fb547da0854: cmp    0x450(%rdx),%rsi
  0x00007fb547da085b: jne    0x00007fb547da086a
  0x00007fb547da085d: addq   $0x1,0x458(%rdx)
  0x00007fb547da0865: jmpq   0x00007fb547da08ba
  0x00007fb547da086a: cmpq   $0x0,0x440(%rdx)
  0x00007fb547da0875: jne    0x00007fb547da088e
  0x00007fb547da0877: mov    %rsi,0x440(%rdx)
  0x00007fb547da087e: movq   $0x1,0x448(%rdx)
  0x00007fb547da0889: jmpq   0x00007fb547da08ba
  0x00007fb547da088e: cmpq   $0x0,0x450(%rdx)
  0x00007fb547da0899: jne    0x00007fb547da08b2
  0x00007fb547da089b: mov    %rsi,0x450(%rdx)
  0x00007fb547da08a2: movq   $0x1,0x458(%rdx)
  0x00007fb547da08ad: jmpq   0x00007fb547da08ba
  0x00007fb547da08b2: addq   $0x1,0x430(%rdx)
  0x00007fb547da08ba: mov    0x40(%rsp),%edx
  0x00007fb547da08be: mov    0x58(%rsp),%r8
  0x00007fb547da08c3: movabs $0x0,%r9           ;   {oop(NULL)}
  0x00007fb547da08cd: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 638)

  0x00007fb547da08d2: data16 xchg %ax,%ax
  0x00007fb547da08d5: movabs $0xffffffffffffffff,%rax
  0x00007fb547da08df: callq  0x00007fb54784aa80  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 638)
                                                ;   {virtual_call}
  0x00007fb547da08e4: movsbl 0x30(%r15),%edx
  0x00007fb547da08e9: cmp    $0x0,%edx
  0x00007fb547da08ec: mov    0x88(%rsp),%rdi
  0x00007fb547da08f4: jne    0x00007fb547da0da8
  0x00007fb547da08fa: mov    %rax,%r10
  0x00007fb547da08fd: shr    $0x3,%r10
  0x00007fb547da0901: mov    %r10d,0x18(%rdi)
  0x00007fb547da0905: mov    %rdi,%rdx
  0x00007fb547da0908: xor    %rax,%rdx
  0x00007fb547da090b: shr    $0x15,%rdx
  0x00007fb547da090f: cmp    $0x0,%rdx
  0x00007fb547da0913: jne    0x00007fb547da0dc7  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 638)

  0x00007fb547da0919: mov    0x78(%rsp),%ebx
  0x00007fb547da091d: cmp    $0x7,%ebx
  0x00007fb547da0920: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da092a: movabs $0x478,%rcx
  0x00007fb547da0934: jge    0x00007fb547da0944
  0x00007fb547da093a: movabs $0x468,%rcx
  0x00007fb547da0944: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547da0948: lea    0x1(%rsi),%rsi
  0x00007fb547da094c: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547da0950: jge    0x00007fb547da0963  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 639)

  0x00007fb547da0956: mov    0x80(%rsp),%rax
  0x00007fb547da095e: jmpq   0x00007fb547da09c4  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 649)

  0x00007fb547da0963: mov    0x68(%rsp),%rbx
  0x00007fb547da0968: mov    0x40(%rsp),%ecx
  0x00007fb547da096c: mov    0x48(%rsp),%rsi
  0x00007fb547da0971: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da097b: addq   $0x1,0x488(%rdx)
  0x00007fb547da0983: mov    %rbx,%rdx
  0x00007fb547da0986: mov    0x48(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 640)

  0x00007fb547da098b: nopl   0x0(%rax)
  0x00007fb547da098f: callq  0x00007fb54784ad80  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 640)
                                                ;   {optimized virtual_call}
  0x00007fb547da0994: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da099e: incl   0x4c0(%rdx)
  0x00007fb547da09a4: mov    0x80(%rsp),%rax
  0x00007fb547da09ac: jmpq   0x00007fb547da09c4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172 (line 640)

  0x00007fb547da09b1: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da09bb: incl   0x318(%rdx)
  0x00007fb547da09c1: mov    %rdi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101 (line 632)

  0x00007fb547da09c4: cmp    $0x0,%rax
  0x00007fb547da09c8: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da09d2: movabs $0x5d0,%rsi
  0x00007fb547da09dc: jne    0x00007fb547da09ec
  0x00007fb547da09e2: movabs $0x5c0,%rsi
  0x00007fb547da09ec: mov    (%rdx,%rsi,1),%rdi
  0x00007fb547da09f0: lea    0x1(%rdi),%rdi
  0x00007fb547da09f4: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb547da09f8: jne    0x00007fb547da0a57  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224 (line 649)

  0x00007fb547da09fe: mov    0x48(%rsp),%rsi
  0x00007fb547da0a03: mov    0x18(%rsi),%edx    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261 (line 657)

  0x00007fb547da0a06: inc    %edx
  0x00007fb547da0a08: mov    %edx,0x18(%rsi)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266 (line 657)

  0x00007fb547da0a0b: mov    0x14(%rsi),%edx    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271 (line 658)

  0x00007fb547da0a0e: inc    %edx
  0x00007fb547da0a10: mov    %edx,0x14(%rsi)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277 (line 658)

  0x00007fb547da0a13: mov    0x1c(%rsi),%edi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281 (line 658)

  0x00007fb547da0a16: cmp    %edi,%edx
  0x00007fb547da0a18: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0a22: movabs $0x668,%rdi
  0x00007fb547da0a2c: jg     0x00007fb547da0a3c
  0x00007fb547da0a32: movabs $0x658,%rdi
  0x00007fb547da0a3c: mov    (%rdx,%rdi,1),%rbx
  0x00007fb547da0a40: lea    0x1(%rbx),%rbx
  0x00007fb547da0a44: mov    %rbx,(%rdx,%rdi,1)
  0x00007fb547da0a48: jg     0x00007fb547da0bdf  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284 (line 658)

  0x00007fb547da0a4e: mov    0x60(%rsp),%edi
  0x00007fb547da0a52: jmpq   0x00007fb547da0c0d  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292 (line 660)

  0x00007fb547da0a57: mov    0x44(%rsp),%r9d
  0x00007fb547da0a5c: mov    0x48(%rsp),%rsi
  0x00007fb547da0a61: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x00007fb547da0ddf
  0x00007fb547da0a64: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 650)

  0x00007fb547da0a68: cmp    $0x0,%r9d
  0x00007fb547da0a6c: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0a76: movabs $0x5e0,%rbx
  0x00007fb547da0a80: je     0x00007fb547da0a90
  0x00007fb547da0a86: movabs $0x5f0,%rbx
  0x00007fb547da0a90: mov    (%rdx,%rbx,1),%rcx
  0x00007fb547da0a94: lea    0x1(%rcx),%rcx
  0x00007fb547da0a98: mov    %rcx,(%rdx,%rbx,1)
  0x00007fb547da0a9c: je     0x00007fb547da0adc  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236 (line 651)

  0x00007fb547da0aa2: cmp    $0x0,%rdi
  0x00007fb547da0aa6: movabs $0x7fb52cf5c978,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0ab0: movabs $0x600,%rbx
  0x00007fb547da0aba: jne    0x00007fb547da0aca
  0x00007fb547da0ac0: movabs $0x610,%rbx
  0x00007fb547da0aca: mov    (%rdx,%rbx,1),%rcx
  0x00007fb547da0ace: lea    0x1(%rcx),%rcx
  0x00007fb547da0ad2: mov    %rcx,(%rdx,%rbx,1)
  0x00007fb547da0ad6: jne    0x00007fb547da0b0e  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241 (line 651)

  0x00007fb547da0adc: mov    0x58(%rsp),%r8
  0x00007fb547da0ae1: movsbl 0x30(%r15),%edx
  0x00007fb547da0ae6: cmp    $0x0,%edx
  0x00007fb547da0ae9: jne    0x00007fb547da0de4
  0x00007fb547da0aef: mov    %r8,%r10
  0x00007fb547da0af2: shr    $0x3,%r10
  0x00007fb547da0af6: mov    %r10d,0x14(%rax)
  0x00007fb547da0afa: mov    %rax,%rdx
  0x00007fb547da0afd: xor    %r8,%rdx
  0x00007fb547da0b00: shr    $0x15,%rdx
  0x00007fb547da0b04: cmp    $0x0,%rdx
  0x00007fb547da0b08: jne    0x00007fb547da0e03  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247 (line 652)

  0x00007fb547da0b0e: mov    %rdi,0x90(%rsp)
  0x00007fb547da0b16: mov    %rsi,%rdx
  0x00007fb547da0b19: movabs $0x7fb52cf5c978,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0b23: mov    0x8(%rdx),%edx
  0x00007fb547da0b26: movabs $0x800000000,%r12
  0x00007fb547da0b30: add    %r12,%rdx
  0x00007fb547da0b33: xor    %r12,%r12
  0x00007fb547da0b36: cmp    0x630(%rbx),%rdx
  0x00007fb547da0b3d: jne    0x00007fb547da0b4c
  0x00007fb547da0b3f: addq   $0x1,0x638(%rbx)
  0x00007fb547da0b47: jmpq   0x00007fb547da0bb2
  0x00007fb547da0b4c: cmp    0x640(%rbx),%rdx
  0x00007fb547da0b53: jne    0x00007fb547da0b62
  0x00007fb547da0b55: addq   $0x1,0x648(%rbx)
  0x00007fb547da0b5d: jmpq   0x00007fb547da0bb2
  0x00007fb547da0b62: cmpq   $0x0,0x630(%rbx)
  0x00007fb547da0b6d: jne    0x00007fb547da0b86
  0x00007fb547da0b6f: mov    %rdx,0x630(%rbx)
  0x00007fb547da0b76: movq   $0x1,0x638(%rbx)
  0x00007fb547da0b81: jmpq   0x00007fb547da0bb2
  0x00007fb547da0b86: cmpq   $0x0,0x640(%rbx)
  0x00007fb547da0b91: jne    0x00007fb547da0baa
  0x00007fb547da0b93: mov    %rdx,0x640(%rbx)
  0x00007fb547da0b9a: movq   $0x1,0x648(%rbx)
  0x00007fb547da0ba5: jmpq   0x00007fb547da0bb2
  0x00007fb547da0baa: addq   $0x1,0x620(%rbx)
  0x00007fb547da0bb2: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 653)

  0x00007fb547da0bb5: movabs $0xffffffffffffffff,%rax
  0x00007fb547da0bbf: callq  0x00007fb54784aa80  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 653)
                                                ;   {virtual_call}
  0x00007fb547da0bc4: mov    0x90(%rsp),%rax
  0x00007fb547da0bcc: add    $0xa0,%rsp
  0x00007fb547da0bd3: pop    %rbp
  0x00007fb547da0bd4: mov    0x108(%r15),%r10
  0x00007fb547da0bdb: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da0bde: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258 (line 654)

  0x00007fb547da0bdf: mov    %rsi,%rdi
  0x00007fb547da0be2: movabs $0x7fb52cf5c978,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0bec: addq   $0x1,0x678(%rbx)
  0x00007fb547da0bf4: mov    %rsi,%rdi
  0x00007fb547da0bf7: mov    %rdi,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 659)

  0x00007fb547da0bfa: nopl   0x0(%rax,%rax,1)
  0x00007fb547da0bff: callq  0x00007fb54784ad80  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 659)
                                                ;   {optimized virtual_call}
  0x00007fb547da0c04: mov    0x60(%rsp),%edi
  0x00007fb547da0c08: mov    0x48(%rsp),%rsi
  0x00007fb547da0c0d: mov    %rsi,%rdx
  0x00007fb547da0c10: movabs $0x7fb52cf5c978,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0c1a: mov    0x8(%rdx),%edx
  0x00007fb547da0c1d: movabs $0x800000000,%r12
  0x00007fb547da0c27: add    %r12,%rdx
  0x00007fb547da0c2a: xor    %r12,%r12
  0x00007fb547da0c2d: cmp    0x6c0(%rbx),%rdx
  0x00007fb547da0c34: jne    0x00007fb547da0c43
  0x00007fb547da0c36: addq   $0x1,0x6c8(%rbx)
  0x00007fb547da0c3e: jmpq   0x00007fb547da0ca9
  0x00007fb547da0c43: cmp    0x6d0(%rbx),%rdx
  0x00007fb547da0c4a: jne    0x00007fb547da0c59
  0x00007fb547da0c4c: addq   $0x1,0x6d8(%rbx)
  0x00007fb547da0c54: jmpq   0x00007fb547da0ca9
  0x00007fb547da0c59: cmpq   $0x0,0x6c0(%rbx)
  0x00007fb547da0c64: jne    0x00007fb547da0c7d
  0x00007fb547da0c66: mov    %rdx,0x6c0(%rbx)
  0x00007fb547da0c6d: movq   $0x1,0x6c8(%rbx)
  0x00007fb547da0c78: jmpq   0x00007fb547da0ca9
  0x00007fb547da0c7d: cmpq   $0x0,0x6d0(%rbx)
  0x00007fb547da0c88: jne    0x00007fb547da0ca1
  0x00007fb547da0c8a: mov    %rdx,0x6d0(%rbx)
  0x00007fb547da0c91: movq   $0x1,0x6d8(%rbx)
  0x00007fb547da0c9c: jmpq   0x00007fb547da0ca9
  0x00007fb547da0ca1: addq   $0x1,0x6b0(%rbx)
  0x00007fb547da0ca9: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 660)

  0x00007fb547da0cac: nop
  0x00007fb547da0cad: movabs $0xffffffffffffffff,%rax
  0x00007fb547da0cb7: callq  0x00007fb5478471a0  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 660)
                                                ;   {virtual_call}
  0x00007fb547da0cbc: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547da0cc6: add    $0xa0,%rsp
  0x00007fb547da0ccd: pop    %rbp
  0x00007fb547da0cce: mov    0x108(%r15),%r10
  0x00007fb547da0cd5: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da0cd8: retq   
  0x00007fb547da0cd9: movabs $0x7fb52cdd7be0,%r10  ;   {metadata({method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0ce3: mov    %r10,0x8(%rsp)
  0x00007fb547da0ce8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da0cf0: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 624)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da0cf5: jmpq   0x00007fb547d9fd45
  0x00007fb547da0cfa: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 624)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0cff: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d04: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 626)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d09: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 626)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d0e: mov    %rax,(%rsp)
  0x00007fb547da0d12: mov    %rbx,0x8(%rsp)
  0x00007fb547da0d17: callq  0x00007fb5478eeca0  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 626)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547da0d1c: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 627)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d21: mov    %rax,(%rsp)
  0x00007fb547da0d25: callq  0x00007fb5478f5120  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 627)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x00007fb547da0d2a: mov    (%rdx),%esi
  0x00007fb547da0d2c: shl    $0x3,%rsi
  0x00007fb547da0d30: cmp    $0x0,%rsi
  0x00007fb547da0d34: je     0x00007fb547da007f
  0x00007fb547da0d3a: mov    %rsi,(%rsp)
  0x00007fb547da0d3e: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da0d43: jmpq   0x00007fb547da007f
  0x00007fb547da0d48: cmp    $0x0,%rax
  0x00007fb547da0d4c: je     0x00007fb547da009d
  0x00007fb547da0d52: mov    %rdx,(%rsp)
  0x00007fb547da0d56: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da0d5b: jmpq   0x00007fb547da009d
  0x00007fb547da0d60: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 630)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d65: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 631)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d6a: mov    %rdi,(%rsp)
  0x00007fb547da0d6e: callq  0x00007fb5478f5420  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 634)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547da0d73: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop rsi=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 634)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d78: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 637)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d7d: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 643)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d82: callq  0x00007fb5478f3020  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 644)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0d87: movabs $0x7fb52cdd7be0,%r10  ;   {metadata({method} {0x00007fb52cdd7be0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da0d91: mov    %r10,0x8(%rsp)
  0x00007fb547da0d96: movq   $0xdb,(%rsp)
  0x00007fb547da0d9e: callq  0x00007fb5478f8100  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 636)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da0da3: jmpq   0x00007fb547da07c3
  0x00007fb547da0da8: mov    0x18(%rdi),%edx
  0x00007fb547da0dab: shl    $0x3,%rdx
  0x00007fb547da0daf: cmp    $0x0,%rdx
  0x00007fb547da0db3: je     0x00007fb547da08fa
  0x00007fb547da0db9: mov    %rdx,(%rsp)
  0x00007fb547da0dbd: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da0dc2: jmpq   0x00007fb547da08fa
  0x00007fb547da0dc7: cmp    $0x0,%rax
  0x00007fb547da0dcb: je     0x00007fb547da0919
  0x00007fb547da0dd1: mov    %rdi,(%rsp)
  0x00007fb547da0dd5: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da0dda: jmpq   0x00007fb547da0919
  0x00007fb547da0ddf: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 650)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da0de4: mov    0x14(%rax),%edx
  0x00007fb547da0de7: shl    $0x3,%rdx
  0x00007fb547da0deb: cmp    $0x0,%rdx
  0x00007fb547da0def: je     0x00007fb547da0aef
  0x00007fb547da0df5: mov    %rdx,(%rsp)
  0x00007fb547da0df9: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da0dfe: jmpq   0x00007fb547da0aef
  0x00007fb547da0e03: cmp    $0x0,%r8
  0x00007fb547da0e07: je     0x00007fb547da0b0e
  0x00007fb547da0e0d: mov    %rax,(%rsp)
  0x00007fb547da0e11: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da0e16: jmpq   0x00007fb547da0b0e
  0x00007fb547da0e1b: nop
  0x00007fb547da0e1c: nop
  0x00007fb547da0e1d: mov    0x440(%r15),%rax
  0x00007fb547da0e24: movabs $0x0,%r10
  0x00007fb547da0e2e: mov    %r10,0x440(%r15)
  0x00007fb547da0e35: movabs $0x0,%r10
  0x00007fb547da0e3f: mov    %r10,0x448(%r15)
  0x00007fb547da0e46: add    $0xa0,%rsp
  0x00007fb547da0e4d: pop    %rbp
  0x00007fb547da0e4e: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da0e53: hlt    
  0x00007fb547da0e54: hlt    
  0x00007fb547da0e55: hlt    
  0x00007fb547da0e56: hlt    
  0x00007fb547da0e57: hlt    
  0x00007fb547da0e58: hlt    
  0x00007fb547da0e59: hlt    
  0x00007fb547da0e5a: hlt    
  0x00007fb547da0e5b: hlt    
  0x00007fb547da0e5c: hlt    
  0x00007fb547da0e5d: hlt    
  0x00007fb547da0e5e: hlt    
  0x00007fb547da0e5f: hlt    
[Stub Code]
  0x00007fb547da0e60: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da0e65: movabs $0x7fb52cdd7ee0,%rbx  ;   {static_stub}
  0x00007fb547da0e6f: jmpq   0x00007fb54784295c  ;   {runtime_call I2C/C2I adapters}
  0x00007fb547da0e74: nop
  0x00007fb547da0e75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0e7f: jmpq   0x00007fb547da0e7f  ;   {runtime_call}
  0x00007fb547da0e84: nop
  0x00007fb547da0e85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0e8f: jmpq   0x00007fb547da0e8f  ;   {runtime_call}
  0x00007fb547da0e94: nop
  0x00007fb547da0e95: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0e9f: jmpq   0x00007fb547da0e9f  ;   {runtime_call}
  0x00007fb547da0ea4: nop
  0x00007fb547da0ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0eaf: jmpq   0x00007fb547da0eaf  ;   {runtime_call}
  0x00007fb547da0eb4: nop
  0x00007fb547da0eb5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0ebf: jmpq   0x00007fb547da0ebf  ;   {runtime_call}
  0x00007fb547da0ec4: nop
  0x00007fb547da0ec5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0ecf: jmpq   0x00007fb547da0ecf  ;   {runtime_call}
  0x00007fb547da0ed4: nop
  0x00007fb547da0ed5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0edf: jmpq   0x00007fb547da0edf  ;   {runtime_call}
  0x00007fb547da0ee4: nop
  0x00007fb547da0ee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0eef: jmpq   0x00007fb547da0eef  ;   {runtime_call}
  0x00007fb547da0ef4: nop
  0x00007fb547da0ef5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da0eff: jmpq   0x00007fb547da0eff  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da0f04: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da0f09: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da0f13: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da0f17: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da0f1c: hlt    
[Deopt Handler Code]
  0x00007fb547da0f1d: movabs $0x7fb547da0f1d,%r10  ;   {section_word}
  0x00007fb547da0f27: push   %r10
  0x00007fb547da0f29: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da0f2e: hlt    
  0x00007fb547da0f2f: hlt    

ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop }pc offsets: 292 
ImmutableOopMap{[72]=Oop [104]=Oop }pc offsets: 604 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [112]=Oop [80]=Oop }pc offsets: 1380 
ImmutableOopMap{[72]=Oop [88]=Oop }pc offsets: 2204 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }pc offsets: 2684 2794 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }pc offsets: 3076 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }pc offsets: 3252 
ImmutableOopMap{[144]=Oop }pc offsets: 3812 
ImmutableOopMap{[72]=Oop }pc offsets: 3876 
ImmutableOopMap{}pc offsets: 4060 
ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop }pc offsets: 4117 
ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop }pc offsets: 4127 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rdx=Oop }pc offsets: 4132 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4137 4142 4156 
ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }pc offsets: 4161 4170 
ImmutableOopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4229 
ImmutableOopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop }pc offsets: 4234 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop }pc offsets: 4243 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop rsi=Oop }pc offsets: 4248 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop }pc offsets: 4253 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop }pc offsets: 4258 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop }pc offsets: 4263 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }pc offsets: 4291 
ImmutableOopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop }pc offsets: 4356 </print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='java.lang.Object hashCode ()I' bytes='0' count='640' iicount='640' stamp='0.721' address='0x00007fb54f2c9910'>
Compiled method (nm)     721   53     n 0       java.lang.Object::hashCode (native)
 total in heap  [0x00007fb54f2c9910,0x00007fb54f2c9cd0] = 960
 relocation     [0x00007fb54f2c9a88,0x00007fb54f2c9ab8] = 48
 main code      [0x00007fb54f2c9ac0,0x00007fb54f2c9cd0] = 528
----------------------------------------------------------------------
java/lang/Object.hashCode()I  [0x00007fb54f2c9ac0, 0x00007fb54f2c9cd0]  528 bytes
[Entry Point]
  # {method} {0x00007fb52ccaf788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2c9ac0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c9ac4: movabs $0x800000000,%r12
  0x00007fb54f2c9ace: add    %r12,%r10
  0x00007fb54f2c9ad1: xor    %r12,%r12
  0x00007fb54f2c9ad4: cmp    %r10,%rax
  0x00007fb54f2c9ad7: je     0x00007fb54f2c9ae8
  0x00007fb54f2c9add: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c9ae2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2c9ae8: mov    (%rsi),%rax
  0x00007fb54f2c9aeb: test   $0x1,%rax
  0x00007fb54f2c9af1: je     0x00007fb54f2c9b15
  0x00007fb54f2c9af7: test   $0x4,%rax
  0x00007fb54f2c9afd: jne    0x00007fb54f2c9b15
  0x00007fb54f2c9b03: shr    $0x8,%rax
  0x00007fb54f2c9b07: and    $0x7fffffff,%rax
  0x00007fb54f2c9b0e: je     0x00007fb54f2c9b15
  0x00007fb54f2c9b14: retq   
  0x00007fb54f2c9b15: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c9b1c: push   %rbp
  0x00007fb54f2c9b1d: mov    %rsp,%rbp
  0x00007fb54f2c9b20: sub    $0x40,%rsp
  0x00007fb54f2c9b24: mov    %rsi,(%rsp)
  0x00007fb54f2c9b28: cmp    $0x0,%rsi
  0x00007fb54f2c9b2c: lea    (%rsp),%rsi
  0x00007fb54f2c9b30: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2c9b35: vzeroupper 
  0x00007fb54f2c9b38: movabs $0x7fb54f2c9b35,%r10  ;   {internal_word}
  0x00007fb54f2c9b42: mov    %r10,0x330(%r15)
  0x00007fb54f2c9b49: mov    %rsp,0x328(%r15)
  0x00007fb54f2c9b50: cmpb   $0x0,0x166bfc80(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c9b57: je     0x00007fb54f2c9b8f
  0x00007fb54f2c9b5d: push   %rsi
  0x00007fb54f2c9b5e: movabs $0x7fb52ccaf788,%rsi  ;   {metadata({method} {0x00007fb52ccaf788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb54f2c9b68: mov    %r15,%rdi
  0x00007fb54f2c9b6b: test   $0xf,%esp
  0x00007fb54f2c9b71: je     0x00007fb54f2c9b89
  0x00007fb54f2c9b77: sub    $0x8,%rsp
  0x00007fb54f2c9b7b: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c9b80: add    $0x8,%rsp
  0x00007fb54f2c9b84: jmpq   0x00007fb54f2c9b8e
  0x00007fb54f2c9b89: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c9b8e: pop    %rsi
  0x00007fb54f2c9b8f: lea    0x348(%r15),%rdi
  0x00007fb54f2c9b96: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2c9ba1: callq  0x00007fb564d88d90  ;   {runtime_call JVM_IHashCode}
  0x00007fb54f2c9ba6: vzeroupper 
  0x00007fb54f2c9ba9: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2c9bb4: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2c9bba: testb  $0x8,0x108(%r15)
  0x00007fb54f2c9bc2: jne    0x00007fb54f2c9bd9
  0x00007fb54f2c9bc8: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2c9bd3: je     0x00007fb54f2c9bfd
  0x00007fb54f2c9bd9: vzeroupper 
  0x00007fb54f2c9bdc: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9be0: mov    %r15,%rdi
  0x00007fb54f2c9be3: mov    %rsp,%r12
  0x00007fb54f2c9be6: sub    $0x0,%rsp
  0x00007fb54f2c9bea: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c9bee: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2c9bf3: mov    %r12,%rsp
  0x00007fb54f2c9bf6: xor    %r12,%r12
  0x00007fb54f2c9bf9: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9bfd: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2c9c08: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2c9c13: je     0x00007fb54f2c9ca9
  0x00007fb54f2c9c19: cmpb   $0x0,0x166bfbb7(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c9c20: je     0x00007fb54f2c9c5e
  0x00007fb54f2c9c26: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9c2a: movabs $0x7fb52ccaf788,%rsi  ;   {metadata({method} {0x00007fb52ccaf788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb54f2c9c34: mov    %r15,%rdi
  0x00007fb54f2c9c37: test   $0xf,%esp
  0x00007fb54f2c9c3d: je     0x00007fb54f2c9c55
  0x00007fb54f2c9c43: sub    $0x8,%rsp
  0x00007fb54f2c9c47: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9c4c: add    $0x8,%rsp
  0x00007fb54f2c9c50: jmpq   0x00007fb54f2c9c5a
  0x00007fb54f2c9c55: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9c5a: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9c5e: movabs $0x0,%r10
  0x00007fb54f2c9c68: mov    %r10,0x328(%r15)
  0x00007fb54f2c9c6f: movabs $0x0,%r10
  0x00007fb54f2c9c79: mov    %r10,0x330(%r15)
  0x00007fb54f2c9c80: vzeroupper 
  0x00007fb54f2c9c83: mov    0xe0(%r15),%rcx
  0x00007fb54f2c9c8a: movl   $0x0,0x100(%rcx)
  0x00007fb54f2c9c94: leaveq 
  0x00007fb54f2c9c95: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2c9c9d: jne    0x00007fb54f2c9ca4
  0x00007fb54f2c9ca3: retq   
  0x00007fb54f2c9ca4: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2c9ca9: vzeroupper 
  0x00007fb54f2c9cac: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9cb0: mov    %rsp,%r12
  0x00007fb54f2c9cb3: sub    $0x0,%rsp
  0x00007fb54f2c9cb7: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c9cbb: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2c9cc0: mov    %r12,%rsp
  0x00007fb54f2c9cc3: xor    %r12,%r12
  0x00007fb54f2c9cc6: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9cca: jmpq   0x00007fb54f2c9c19
  0x00007fb54f2c9ccf: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[0]=Oop off=117}
</print_native_nmethod>
<nmethod compile_id='53' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2c9ac0' size='960' address='0x00007fb54f2c9910' relocation_offset='376' consts_offset='960' insts_offset='432' method='java.lang.Object hashCode ()I' bytes='0' count='640' iicount='640' stamp='0.722'/>
----------------------------------------------------------------------
java/lang/Object.hashCode()I  [0x00007fb54f2c9ac0, 0x00007fb54f2c9cd0]  528 bytes
[Entry Point]
  # {method} {0x00007fb52ccaf788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2c9ac0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c9ac4: movabs $0x800000000,%r12
  0x00007fb54f2c9ace: add    %r12,%r10
  0x00007fb54f2c9ad1: xor    %r12,%r12
  0x00007fb54f2c9ad4: cmp    %r10,%rax
  0x00007fb54f2c9ad7: je     0x00007fb54f2c9ae8
  0x00007fb54f2c9add: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c9ae2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2c9ae8: mov    (%rsi),%rax
  0x00007fb54f2c9aeb: test   $0x1,%rax
  0x00007fb54f2c9af1: je     0x00007fb54f2c9b15
  0x00007fb54f2c9af7: test   $0x4,%rax
  0x00007fb54f2c9afd: jne    0x00007fb54f2c9b15
  0x00007fb54f2c9b03: shr    $0x8,%rax
  0x00007fb54f2c9b07: and    $0x7fffffff,%rax
  0x00007fb54f2c9b0e: je     0x00007fb54f2c9b15
  0x00007fb54f2c9b14: retq   
  0x00007fb54f2c9b15: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c9b1c: push   %rbp
  0x00007fb54f2c9b1d: mov    %rsp,%rbp
  0x00007fb54f2c9b20: sub    $0x40,%rsp
  0x00007fb54f2c9b24: mov    %rsi,(%rsp)
  0x00007fb54f2c9b28: cmp    $0x0,%rsi
  0x00007fb54f2c9b2c: lea    (%rsp),%rsi
  0x00007fb54f2c9b30: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2c9b35: vzeroupper 
  0x00007fb54f2c9b38: movabs $0x7fb54f2c9b35,%r10  ;   {internal_word}
  0x00007fb54f2c9b42: mov    %r10,0x330(%r15)
  0x00007fb54f2c9b49: mov    %rsp,0x328(%r15)
  0x00007fb54f2c9b50: cmpb   $0x0,0x166bfc80(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c9b57: je     0x00007fb54f2c9b8f
  0x00007fb54f2c9b5d: push   %rsi
  0x00007fb54f2c9b5e: movabs $0x7fb52ccaf788,%rsi  ;   {metadata({method} {0x00007fb52ccaf788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb54f2c9b68: mov    %r15,%rdi
  0x00007fb54f2c9b6b: test   $0xf,%esp
  0x00007fb54f2c9b71: je     0x00007fb54f2c9b89
  0x00007fb54f2c9b77: sub    $0x8,%rsp
  0x00007fb54f2c9b7b: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c9b80: add    $0x8,%rsp
  0x00007fb54f2c9b84: jmpq   0x00007fb54f2c9b8e
  0x00007fb54f2c9b89: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2c9b8e: pop    %rsi
  0x00007fb54f2c9b8f: lea    0x348(%r15),%rdi
  0x00007fb54f2c9b96: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2c9ba1: callq  0x00007fb564d88d90  ;   {runtime_call JVM_IHashCode}
  0x00007fb54f2c9ba6: vzeroupper 
  0x00007fb54f2c9ba9: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2c9bb4: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2c9bba: testb  $0x8,0x108(%r15)
  0x00007fb54f2c9bc2: jne    0x00007fb54f2c9bd9
  0x00007fb54f2c9bc8: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2c9bd3: je     0x00007fb54f2c9bfd
  0x00007fb54f2c9bd9: vzeroupper 
  0x00007fb54f2c9bdc: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9be0: mov    %r15,%rdi
  0x00007fb54f2c9be3: mov    %rsp,%r12
  0x00007fb54f2c9be6: sub    $0x0,%rsp
  0x00007fb54f2c9bea: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c9bee: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2c9bf3: mov    %r12,%rsp
  0x00007fb54f2c9bf6: xor    %r12,%r12
  0x00007fb54f2c9bf9: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9bfd: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2c9c08: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2c9c13: je     0x00007fb54f2c9ca9
  0x00007fb54f2c9c19: cmpb   $0x0,0x166bfbb7(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2c9c20: je     0x00007fb54f2c9c5e
  0x00007fb54f2c9c26: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9c2a: movabs $0x7fb52ccaf788,%rsi  ;   {metadata({method} {0x00007fb52ccaf788} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb54f2c9c34: mov    %r15,%rdi
  0x00007fb54f2c9c37: test   $0xf,%esp
  0x00007fb54f2c9c3d: je     0x00007fb54f2c9c55
  0x00007fb54f2c9c43: sub    $0x8,%rsp
  0x00007fb54f2c9c47: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9c4c: add    $0x8,%rsp
  0x00007fb54f2c9c50: jmpq   0x00007fb54f2c9c5a
  0x00007fb54f2c9c55: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2c9c5a: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9c5e: movabs $0x0,%r10
  0x00007fb54f2c9c68: mov    %r10,0x328(%r15)
  0x00007fb54f2c9c6f: movabs $0x0,%r10
  0x00007fb54f2c9c79: mov    %r10,0x330(%r15)
  0x00007fb54f2c9c80: vzeroupper 
  0x00007fb54f2c9c83: mov    0xe0(%r15),%rcx
  0x00007fb54f2c9c8a: movl   $0x0,0x100(%rcx)
  0x00007fb54f2c9c94: leaveq 
  0x00007fb54f2c9c95: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2c9c9d: jne    0x00007fb54f2c9ca4
  0x00007fb54f2c9ca3: retq   
  0x00007fb54f2c9ca4: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2c9ca9: vzeroupper 
  0x00007fb54f2c9cac: mov    %rax,-0x8(%rbp)
  0x00007fb54f2c9cb0: mov    %rsp,%r12
  0x00007fb54f2c9cb3: sub    $0x0,%rsp
  0x00007fb54f2c9cb7: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2c9cbb: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2c9cc0: mov    %r12,%rsp
  0x00007fb54f2c9cc3: xor    %r12,%r12
  0x00007fb54f2c9cc6: mov    -0x8(%rbp),%rax
  0x00007fb54f2c9cca: jmpq   0x00007fb54f2c9c19
  0x00007fb54f2c9ccf: hlt    
<writer thread='1329936'/>
<nmethod compile_id='51' compiler='c1' level='3' entry='0x00007fb547da1bc0' size='4312' address='0x00007fb547da1990' relocation_offset='376' insts_offset='560' stub_offset='2960' scopes_data_offset='3064' scopes_pcs_offset='3448' dependencies_offset='4248' nul_chk_table_offset='4256' metadata_offset='3056' method='java.util.HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='728' backedge_count='37' iicount='728' stamp='0.724'/>
<print_nmethod stamp='0.724'>
Compiled method (c1)     723   51       3       java.util.HashMap::getNode (148 bytes)
 total in heap  [0x00007fb547da1990,0x00007fb547da2a68] = 4312
 relocation     [0x00007fb547da1b08,0x00007fb547da1ba8] = 160
 main code      [0x00007fb547da1bc0,0x00007fb547da2520] = 2400
 stub code      [0x00007fb547da2520,0x00007fb547da2580] = 96
 metadata       [0x00007fb547da2580,0x00007fb547da2588] = 8
 scopes data    [0x00007fb547da2588,0x00007fb547da2708] = 384
 scopes pcs     [0x00007fb547da2708,0x00007fb547da2a28] = 800
 dependencies   [0x00007fb547da2a28,0x00007fb547da2a30] = 8
 nul chk table  [0x00007fb547da2a30,0x00007fb547da2a68] = 56
----------------------------------------------------------------------
java/util/HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;  [0x00007fb547da1bc0, 0x00007fb547da2580]  2496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007fb547da1bc0: mov    0x8(%rsi),%r10d
  0x00007fb547da1bc4: movabs $0x800000000,%r12
  0x00007fb547da1bce: add    %r12,%r10
  0x00007fb547da1bd1: xor    %r12,%r12
  0x00007fb547da1bd4: cmp    %rax,%r10
  0x00007fb547da1bd7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da1bdd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da1be0: mov    %eax,-0x14000(%rsp)
  0x00007fb547da1be7: push   %rbp
  0x00007fb547da1be8: sub    $0x50,%rsp
  0x00007fb547da1bec: mov    %edx,0x28(%rsp)
  0x00007fb547da1bf0: mov    %rcx,0x30(%rsp)
  0x00007fb547da1bf5: movabs $0x7fb52cf5dc00,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1bff: mov    0x100(%rdi),%ebx
  0x00007fb547da1c05: add    $0x8,%ebx
  0x00007fb547da1c08: mov    %ebx,0x100(%rdi)
  0x00007fb547da1c0e: and    $0x1ff8,%ebx
  0x00007fb547da1c14: cmp    $0x0,%ebx
  0x00007fb547da1c17: je     0x00007fb547da2467  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@0 (line 565)

  0x00007fb547da1c1d: mov    0x24(%rsi),%esi
  0x00007fb547da1c20: shl    $0x3,%rsi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@1 (line 565)

  0x00007fb547da1c24: cmp    $0x0,%rsi
  0x00007fb547da1c28: movabs $0x7fb52cf5dc00,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1c32: movabs $0x140,%rbx
  0x00007fb547da1c3c: je     0x00007fb547da1c4c
  0x00007fb547da1c42: movabs $0x150,%rbx
  0x00007fb547da1c4c: mov    (%rdi,%rbx,1),%rax
  0x00007fb547da1c50: lea    0x1(%rax),%rax
  0x00007fb547da1c54: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547da1c58: je     0x00007fb547da2281  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@6 (line 565)

  0x00007fb547da1c5e: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 565)
                                                ; implicit exception: dispatches to 0x00007fb547da2488
  0x00007fb547da1c61: cmp    $0x0,%edi
  0x00007fb547da1c64: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1c6e: movabs $0x160,%rax
  0x00007fb547da1c78: jle    0x00007fb547da1c88
  0x00007fb547da1c7e: movabs $0x170,%rax
  0x00007fb547da1c88: mov    (%rbx,%rax,1),%r8
  0x00007fb547da1c8c: lea    0x1(%r8),%r8
  0x00007fb547da1c90: mov    %r8,(%rbx,%rax,1)
  0x00007fb547da1c94: jle    0x00007fb547da2281  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@14 (line 565)

  0x00007fb547da1c9a: dec    %edi
  0x00007fb547da1c9c: and    %rdx,%rdi
  0x00007fb547da1c9f: cmp    0xc(%rsi),%edi
  0x00007fb547da1ca2: jae    0x00007fb547da248d
  0x00007fb547da1ca8: movslq %edi,%rdi
  0x00007fb547da1cab: mov    0x10(%rsi,%rdi,4),%edi
  0x00007fb547da1caf: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 565)

  0x00007fb547da1cb3: cmp    $0x0,%rdi
  0x00007fb547da1cb7: movabs $0x7fb52cf5dc00,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1cc1: movabs $0x180,%rbx
  0x00007fb547da1ccb: je     0x00007fb547da1cdb
  0x00007fb547da1cd1: movabs $0x190,%rbx
  0x00007fb547da1cdb: mov    (%rsi,%rbx,1),%rax
  0x00007fb547da1cdf: lea    0x1(%rax),%rax
  0x00007fb547da1ce3: mov    %rax,(%rsi,%rbx,1)
  0x00007fb547da1ce7: je     0x00007fb547da2281  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@28 (line 565)

  0x00007fb547da1ced: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 567)
                                                ; implicit exception: dispatches to 0x00007fb547da249b
  0x00007fb547da1cf0: cmp    %edx,%esi
  0x00007fb547da1cf2: movabs $0x7fb52cf5dc00,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1cfc: movabs $0x1a0,%rbx
  0x00007fb547da1d06: jne    0x00007fb547da1d16
  0x00007fb547da1d0c: movabs $0x1b0,%rbx
  0x00007fb547da1d16: mov    (%rsi,%rbx,1),%rax
  0x00007fb547da1d1a: lea    0x1(%rax),%rax
  0x00007fb547da1d1e: mov    %rax,(%rsi,%rbx,1)
  0x00007fb547da1d22: jne    0x00007fb547da1e9a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@37 (line 567)

  0x00007fb547da1d28: mov    0x10(%rdi),%esi
  0x00007fb547da1d2b: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@42 (line 567)

  0x00007fb547da1d2f: cmp    %rcx,%rsi
  0x00007fb547da1d32: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1d3c: movabs $0x1c0,%rax
  0x00007fb547da1d46: je     0x00007fb547da1d56
  0x00007fb547da1d4c: movabs $0x1d0,%rax
  0x00007fb547da1d56: mov    (%rbx,%rax,1),%r8
  0x00007fb547da1d5a: lea    0x1(%r8),%r8
  0x00007fb547da1d5e: mov    %r8,(%rbx,%rax,1)
  0x00007fb547da1d62: je     0x00007fb547da2454  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@49 (line 567)

  0x00007fb547da1d68: cmp    $0x0,%rcx
  0x00007fb547da1d6c: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1d76: movabs $0x1e0,%rax
  0x00007fb547da1d80: je     0x00007fb547da1d90
  0x00007fb547da1d86: movabs $0x1f0,%rax
  0x00007fb547da1d90: mov    (%rbx,%rax,1),%r8
  0x00007fb547da1d94: lea    0x1(%r8),%r8
  0x00007fb547da1d98: mov    %r8,(%rbx,%rax,1)
  0x00007fb547da1d9c: je     0x00007fb547da1e9a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@53 (line 567)

  0x00007fb547da1da2: mov    %rdi,0x20(%rsp)
  0x00007fb547da1da7: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007fb547da24a0
  0x00007fb547da1daa: mov    %rcx,%rbx
  0x00007fb547da1dad: movabs $0x7fb52cf5dc00,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1db7: mov    0x8(%rbx),%ebx
  0x00007fb547da1dba: movabs $0x800000000,%r12
  0x00007fb547da1dc4: add    %r12,%rbx
  0x00007fb547da1dc7: xor    %r12,%r12
  0x00007fb547da1dca: cmp    0x210(%rax),%rbx
  0x00007fb547da1dd1: jne    0x00007fb547da1de0
  0x00007fb547da1dd3: addq   $0x1,0x218(%rax)
  0x00007fb547da1ddb: jmpq   0x00007fb547da1e46
  0x00007fb547da1de0: cmp    0x220(%rax),%rbx
  0x00007fb547da1de7: jne    0x00007fb547da1df6
  0x00007fb547da1de9: addq   $0x1,0x228(%rax)
  0x00007fb547da1df1: jmpq   0x00007fb547da1e46
  0x00007fb547da1df6: cmpq   $0x0,0x210(%rax)
  0x00007fb547da1e01: jne    0x00007fb547da1e1a
  0x00007fb547da1e03: mov    %rbx,0x210(%rax)
  0x00007fb547da1e0a: movq   $0x1,0x218(%rax)
  0x00007fb547da1e15: jmpq   0x00007fb547da1e46
  0x00007fb547da1e1a: cmpq   $0x0,0x220(%rax)
  0x00007fb547da1e25: jne    0x00007fb547da1e3e
  0x00007fb547da1e27: mov    %rbx,0x220(%rax)
  0x00007fb547da1e2e: movq   $0x1,0x228(%rax)
  0x00007fb547da1e39: jmpq   0x00007fb547da1e46
  0x00007fb547da1e3e: addq   $0x1,0x200(%rax)
  0x00007fb547da1e46: mov    %rsi,%rdx
  0x00007fb547da1e49: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 568)

  0x00007fb547da1e4c: nop
  0x00007fb547da1e4d: movabs $0xffffffffffffffff,%rax
  0x00007fb547da1e57: callq  0x00007fb54784aa80  ; ImmutableOopMap{[32]=Oop [48]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 568)
                                                ;   {virtual_call}
  0x00007fb547da1e5c: cmp    $0x0,%eax
  0x00007fb547da1e5f: movabs $0x7fb52cf5dc00,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1e69: movabs $0x248,%rsi
  0x00007fb547da1e73: jne    0x00007fb547da1e83
  0x00007fb547da1e79: movabs $0x238,%rsi
  0x00007fb547da1e83: mov    (%rdx,%rsi,1),%rdi
  0x00007fb547da1e87: lea    0x1(%rdi),%rdi
  0x00007fb547da1e8b: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb547da1e8f: mov    0x20(%rsp),%rdi
  0x00007fb547da1e94: jne    0x00007fb547da2454  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@62 (line 568)

  0x00007fb547da1e9a: mov    0x18(%rdi),%edx
  0x00007fb547da1e9d: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@70 (line 570)

  0x00007fb547da1ea1: cmp    $0x0,%rdx
  0x00007fb547da1ea5: movabs $0x7fb52cf5dc00,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1eaf: movabs $0x258,%rbx
  0x00007fb547da1eb9: je     0x00007fb547da1ec9
  0x00007fb547da1ebf: movabs $0x268,%rbx
  0x00007fb547da1ec9: mov    (%rsi,%rbx,1),%rax
  0x00007fb547da1ecd: lea    0x1(%rax),%rax
  0x00007fb547da1ed1: mov    %rax,(%rsi,%rbx,1)
  0x00007fb547da1ed5: je     0x00007fb547da2281  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@76 (line 570)

  0x00007fb547da1edb: cmp    $0x0,%rdi
  0x00007fb547da1edf: jne    0x00007fb547da1ef7
  0x00007fb547da1ee1: movabs $0x7fb52cf5dc00,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1eeb: orb    $0x1,0x271(%rax)
  0x00007fb547da1ef2: jmpq   0x00007fb547da1fcf
  0x00007fb547da1ef7: movabs $0x800031890,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007fb547da1f01: mov    0x8(%rdi),%ebx
  0x00007fb547da1f04: movabs $0x800000000,%r12
  0x00007fb547da1f0e: add    %r12,%rbx
  0x00007fb547da1f11: xor    %r12,%r12
  0x00007fb547da1f14: cmp    %rbx,%rcx
  0x00007fb547da1f17: jne    0x00007fb547da1fb3
  0x00007fb547da1f1d: movabs $0x7fb52cf5dc00,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1f27: mov    0x8(%rdi),%ecx
  0x00007fb547da1f2a: movabs $0x800000000,%r12
  0x00007fb547da1f34: add    %r12,%rcx
  0x00007fb547da1f37: xor    %r12,%r12
  0x00007fb547da1f3a: cmp    0x288(%rax),%rcx
  0x00007fb547da1f41: jne    0x00007fb547da1f50
  0x00007fb547da1f43: addq   $0x1,0x290(%rax)
  0x00007fb547da1f4b: jmpq   0x00007fb547da1fd4
  0x00007fb547da1f50: cmp    0x298(%rax),%rcx
  0x00007fb547da1f57: jne    0x00007fb547da1f66
  0x00007fb547da1f59: addq   $0x1,0x2a0(%rax)
  0x00007fb547da1f61: jmpq   0x00007fb547da1fd4
  0x00007fb547da1f66: cmpq   $0x0,0x288(%rax)
  0x00007fb547da1f71: jne    0x00007fb547da1f8a
  0x00007fb547da1f73: mov    %rcx,0x288(%rax)
  0x00007fb547da1f7a: movq   $0x1,0x290(%rax)
  0x00007fb547da1f85: jmpq   0x00007fb547da1fd4
  0x00007fb547da1f8a: cmpq   $0x0,0x298(%rax)
  0x00007fb547da1f95: jne    0x00007fb547da1fae
  0x00007fb547da1f97: mov    %rcx,0x298(%rax)
  0x00007fb547da1f9e: movq   $0x1,0x2a0(%rax)
  0x00007fb547da1fa9: jmpq   0x00007fb547da1fd4
  0x00007fb547da1fae: jmpq   0x00007fb547da1fd4
  0x00007fb547da1fb3: movabs $0x7fb52cf5dc00,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1fbd: subq   $0x1,0x278(%rax)
  0x00007fb547da1fc5: jmpq   0x00007fb547da1fcf
  0x00007fb547da1fca: jmpq   0x00007fb547da1fd4
  0x00007fb547da1fcf: xor    %rsi,%rsi
  0x00007fb547da1fd2: jmp    0x00007fb547da1fde
  0x00007fb547da1fd4: movabs $0x1,%rsi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@81 (line 571)

  0x00007fb547da1fde: cmp    $0x0,%esi
  0x00007fb547da1fe1: movabs $0x7fb52cf5dc00,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da1feb: movabs $0x2c0,%rbx
  0x00007fb547da1ff5: jne    0x00007fb547da2005
  0x00007fb547da1ffb: movabs $0x2b0,%rbx
  0x00007fb547da2005: mov    (%rsi,%rbx,1),%rax
  0x00007fb547da2009: lea    0x1(%rax),%rax
  0x00007fb547da200d: mov    %rax,(%rsi,%rbx,1)
  0x00007fb547da2011: jne    0x00007fb547da229b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@84 (line 571)

  0x00007fb547da2017: nop
  0x00007fb547da2018: mov    0x30(%rsp),%rcx
  0x00007fb547da201d: mov    0x28(%rsp),%edi
  0x00007fb547da2021: mov    0xc(%rdx),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 574)
                                                ; implicit exception: dispatches to 0x00007fb547da24a5
  0x00007fb547da2024: cmp    %edi,%esi
  0x00007fb547da2026: movabs $0x7fb52cf5dc00,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da2030: movabs $0x340,%rbx
  0x00007fb547da203a: jne    0x00007fb547da204a
  0x00007fb547da2040: movabs $0x350,%rbx
  0x00007fb547da204a: mov    (%rsi,%rbx,1),%rax
  0x00007fb547da204e: lea    0x1(%rax),%rax
  0x00007fb547da2052: mov    %rax,(%rsi,%rbx,1)
  0x00007fb547da2056: jne    0x00007fb547da21d2  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@104 (line 574)

  0x00007fb547da205c: mov    0x10(%rdx),%esi
  0x00007fb547da205f: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@109 (line 574)

  0x00007fb547da2063: cmp    %rcx,%rsi
  0x00007fb547da2066: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da2070: movabs $0x360,%rax
  0x00007fb547da207a: je     0x00007fb547da208a
  0x00007fb547da2080: movabs $0x370,%rax
  0x00007fb547da208a: mov    (%rbx,%rax,1),%r8
  0x00007fb547da208e: lea    0x1(%r8),%r8
  0x00007fb547da2092: mov    %r8,(%rbx,%rax,1)
  0x00007fb547da2096: je     0x00007fb547da226e  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@116 (line 574)

  0x00007fb547da209c: cmp    $0x0,%rcx
  0x00007fb547da20a0: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da20aa: movabs $0x380,%rax
  0x00007fb547da20b4: je     0x00007fb547da20c4
  0x00007fb547da20ba: movabs $0x390,%rax
  0x00007fb547da20c4: mov    (%rbx,%rax,1),%r8
  0x00007fb547da20c8: lea    0x1(%r8),%r8
  0x00007fb547da20cc: mov    %r8,(%rbx,%rax,1)
  0x00007fb547da20d0: je     0x00007fb547da21d2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@120 (line 574)

  0x00007fb547da20d6: mov    %rdx,0x38(%rsp)
  0x00007fb547da20db: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007fb547da24aa
  0x00007fb547da20de: mov    %rcx,%rbx
  0x00007fb547da20e1: movabs $0x7fb52cf5dc00,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da20eb: mov    0x8(%rbx),%ebx
  0x00007fb547da20ee: movabs $0x800000000,%r12
  0x00007fb547da20f8: add    %r12,%rbx
  0x00007fb547da20fb: xor    %r12,%r12
  0x00007fb547da20fe: cmp    0x3b0(%rax),%rbx
  0x00007fb547da2105: jne    0x00007fb547da2114
  0x00007fb547da2107: addq   $0x1,0x3b8(%rax)
  0x00007fb547da210f: jmpq   0x00007fb547da217a
  0x00007fb547da2114: cmp    0x3c0(%rax),%rbx
  0x00007fb547da211b: jne    0x00007fb547da212a
  0x00007fb547da211d: addq   $0x1,0x3c8(%rax)
  0x00007fb547da2125: jmpq   0x00007fb547da217a
  0x00007fb547da212a: cmpq   $0x0,0x3b0(%rax)
  0x00007fb547da2135: jne    0x00007fb547da214e
  0x00007fb547da2137: mov    %rbx,0x3b0(%rax)
  0x00007fb547da213e: movq   $0x1,0x3b8(%rax)
  0x00007fb547da2149: jmpq   0x00007fb547da217a
  0x00007fb547da214e: cmpq   $0x0,0x3c0(%rax)
  0x00007fb547da2159: jne    0x00007fb547da2172
  0x00007fb547da215b: mov    %rbx,0x3c0(%rax)
  0x00007fb547da2162: movq   $0x1,0x3c8(%rax)
  0x00007fb547da216d: jmpq   0x00007fb547da217a
  0x00007fb547da2172: addq   $0x1,0x3a0(%rax)
  0x00007fb547da217a: mov    %rsi,%rdx
  0x00007fb547da217d: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 575)

  0x00007fb547da2180: nopl   0x0(%rax,%rax,1)
  0x00007fb547da2185: movabs $0xffffffffffffffff,%rax
  0x00007fb547da218f: callq  0x00007fb54784aa80  ; ImmutableOopMap{[56]=Oop [48]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 575)
                                                ;   {virtual_call}
  0x00007fb547da2194: cmp    $0x0,%eax
  0x00007fb547da2197: movabs $0x7fb52cf5dc00,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da21a1: movabs $0x3e8,%rdx
  0x00007fb547da21ab: jne    0x00007fb547da21bb
  0x00007fb547da21b1: movabs $0x3d8,%rdx
  0x00007fb547da21bb: mov    (%rax,%rdx,1),%rcx
  0x00007fb547da21bf: lea    0x1(%rcx),%rcx
  0x00007fb547da21c3: mov    %rcx,(%rax,%rdx,1)
  0x00007fb547da21c7: mov    0x38(%rsp),%rdx
  0x00007fb547da21cc: jne    0x00007fb547da226e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@129 (line 575)

  0x00007fb547da21d2: mov    0x18(%rdx),%eax
  0x00007fb547da21d5: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@137 (line 577)

  0x00007fb547da21d9: cmp    $0x0,%rax
  0x00007fb547da21dd: mov    $0x8,%edx
  0x00007fb547da21e2: jne    0x00007fb547da21ed
  0x00007fb547da21e8: mov    $0x0,%edx
  0x00007fb547da21ed: movabs $0x7fb52cf5dc00,%rcx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da21f7: mov    0x104(%rcx),%esi
  0x00007fb547da21fd: add    %edx,%esi
  0x00007fb547da21ff: mov    %esi,0x104(%rcx)
  0x00007fb547da2205: cmp    $0x0,%edx
  0x00007fb547da2208: jne    0x00007fb547da2213
  0x00007fb547da220e: mov    $0x8,%esi
  0x00007fb547da2213: and    $0xfff8,%esi
  0x00007fb547da2219: cmp    $0x0,%esi
  0x00007fb547da221c: je     0x00007fb547da24af  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 577)

  0x00007fb547da2222: mov    0x108(%r15),%r10   ; ImmutableOopMap{[48]=Oop rax=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 577)

  0x00007fb547da2229: test   %eax,(%r10)        ;   {poll}
  0x00007fb547da222c: cmp    $0x0,%rax
  0x00007fb547da2230: movabs $0x7fb52cf5dc00,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da223a: movabs $0x408,%rcx
  0x00007fb547da2244: je     0x00007fb547da2254
  0x00007fb547da224a: movabs $0x3f8,%rcx
  0x00007fb547da2254: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547da2258: lea    0x1(%rsi),%rsi
  0x00007fb547da225c: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547da2260: je     0x00007fb547da2281  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 577)

  0x00007fb547da2266: mov    %rax,%rdx
  0x00007fb547da2269: jmpq   0x00007fb547da2018  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@98 (line 574)

  0x00007fb547da226e: mov    %rdx,%rax
  0x00007fb547da2271: add    $0x50,%rsp
  0x00007fb547da2275: pop    %rbp
  0x00007fb547da2276: mov    0x108(%r15),%r10
  0x00007fb547da227d: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da2280: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@134 (line 576)

  0x00007fb547da2281: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547da228b: add    $0x50,%rsp
  0x00007fb547da228f: pop    %rbp
  0x00007fb547da2290: mov    0x108(%r15),%r10
  0x00007fb547da2297: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da229a: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@147 (line 580)

  0x00007fb547da229b: mov    0x30(%rsp),%rcx
  0x00007fb547da22a0: mov    0x28(%rsp),%edx
  0x00007fb547da22a4: cmp    $0x0,%rdi
  0x00007fb547da22a8: jne    0x00007fb547da22c0
  0x00007fb547da22aa: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da22b4: orb    $0x1,0x2c9(%rbx)
  0x00007fb547da22bb: jmpq   0x00007fb547da2398
  0x00007fb547da22c0: movabs $0x800031890,%rax  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00007fb547da22ca: mov    0x8(%rdi),%esi
  0x00007fb547da22cd: movabs $0x800000000,%r12
  0x00007fb547da22d7: add    %r12,%rsi
  0x00007fb547da22da: xor    %r12,%r12
  0x00007fb547da22dd: cmp    %rsi,%rax
  0x00007fb547da22e0: jne    0x00007fb547da237c
  0x00007fb547da22e6: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da22f0: mov    0x8(%rdi),%eax
  0x00007fb547da22f3: movabs $0x800000000,%r12
  0x00007fb547da22fd: add    %r12,%rax
  0x00007fb547da2300: xor    %r12,%r12
  0x00007fb547da2303: cmp    0x2e0(%rbx),%rax
  0x00007fb547da230a: jne    0x00007fb547da2319
  0x00007fb547da230c: addq   $0x1,0x2e8(%rbx)
  0x00007fb547da2314: jmpq   0x00007fb547da2398
  0x00007fb547da2319: cmp    0x2f0(%rbx),%rax
  0x00007fb547da2320: jne    0x00007fb547da232f
  0x00007fb547da2322: addq   $0x1,0x2f8(%rbx)
  0x00007fb547da232a: jmpq   0x00007fb547da2398
  0x00007fb547da232f: cmpq   $0x0,0x2e0(%rbx)
  0x00007fb547da233a: jne    0x00007fb547da2353
  0x00007fb547da233c: mov    %rax,0x2e0(%rbx)
  0x00007fb547da2343: movq   $0x1,0x2e8(%rbx)
  0x00007fb547da234e: jmpq   0x00007fb547da2398
  0x00007fb547da2353: cmpq   $0x0,0x2f0(%rbx)
  0x00007fb547da235e: jne    0x00007fb547da2377
  0x00007fb547da2360: mov    %rax,0x2f0(%rbx)
  0x00007fb547da2367: movq   $0x1,0x2f8(%rbx)
  0x00007fb547da2372: jmpq   0x00007fb547da2398
  0x00007fb547da2377: jmpq   0x00007fb547da2398
  0x00007fb547da237c: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da2386: subq   $0x1,0x2d0(%rbx)
  0x00007fb547da238e: jmpq   0x00007fb547da24d0
  0x00007fb547da2393: jmpq   0x00007fb547da2398
  0x00007fb547da2398: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 572)

  0x00007fb547da239b: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 572)
                                                ; implicit exception: dispatches to 0x00007fb547da24d9
  0x00007fb547da239e: mov    %rsi,%rdi
  0x00007fb547da23a1: movabs $0x7fb52cf5dc00,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da23ab: mov    0x8(%rdi),%edi
  0x00007fb547da23ae: movabs $0x800000000,%r12
  0x00007fb547da23b8: add    %r12,%rdi
  0x00007fb547da23bb: xor    %r12,%r12
  0x00007fb547da23be: cmp    0x318(%rbx),%rdi
  0x00007fb547da23c5: jne    0x00007fb547da23d4
  0x00007fb547da23c7: addq   $0x1,0x320(%rbx)
  0x00007fb547da23cf: jmpq   0x00007fb547da243a
  0x00007fb547da23d4: cmp    0x328(%rbx),%rdi
  0x00007fb547da23db: jne    0x00007fb547da23ea
  0x00007fb547da23dd: addq   $0x1,0x330(%rbx)
  0x00007fb547da23e5: jmpq   0x00007fb547da243a
  0x00007fb547da23ea: cmpq   $0x0,0x318(%rbx)
  0x00007fb547da23f5: jne    0x00007fb547da240e
  0x00007fb547da23f7: mov    %rdi,0x318(%rbx)
  0x00007fb547da23fe: movq   $0x1,0x320(%rbx)
  0x00007fb547da2409: jmpq   0x00007fb547da243a
  0x00007fb547da240e: cmpq   $0x0,0x328(%rbx)
  0x00007fb547da2419: jne    0x00007fb547da2432
  0x00007fb547da241b: mov    %rdi,0x328(%rbx)
  0x00007fb547da2422: movq   $0x1,0x330(%rbx)
  0x00007fb547da242d: jmpq   0x00007fb547da243a
  0x00007fb547da2432: addq   $0x1,0x308(%rbx)
  0x00007fb547da243a: nopl   0x0(%rax,%rax,1)
  0x00007fb547da243f: callq  0x00007fb54784ad80  ; ImmutableOopMap{}
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 572)
                                                ;   {optimized virtual_call}
  0x00007fb547da2444: add    $0x50,%rsp
  0x00007fb547da2448: pop    %rbp
  0x00007fb547da2449: mov    0x108(%r15),%r10
  0x00007fb547da2450: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da2453: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@97 (line 572)

  0x00007fb547da2454: mov    %rdi,%rax
  0x00007fb547da2457: add    $0x50,%rsp
  0x00007fb547da245b: pop    %rbp
  0x00007fb547da245c: mov    0x108(%r15),%r10
  0x00007fb547da2463: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da2466: retq   
  0x00007fb547da2467: movabs $0x7fb52cdd7788,%r10  ;   {metadata({method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da2471: mov    %r10,0x8(%rsp)
  0x00007fb547da2476: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da247e: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 565)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da2483: jmpq   0x00007fb547da1c1d
  0x00007fb547da2488: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 565)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da248d: mov    %rdi,(%rsp)
  0x00007fb547da2491: mov    %rsi,0x8(%rsp)
  0x00007fb547da2496: callq  0x00007fb5478eeca0  ; ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 565)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547da249b: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdi=Oop rcx=Oop [48]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 567)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da24a0: callq  0x00007fb5478f3020  ; ImmutableOopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 568)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da24a5: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop rcx=Oop [48]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 574)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da24aa: callq  0x00007fb5478f3020  ; ImmutableOopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 575)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da24af: movabs $0x7fb52cdd7788,%r10  ;   {metadata({method} {0x00007fb52cdd7788} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da24b9: mov    %r10,0x8(%rsp)
  0x00007fb547da24be: movq   $0x8f,(%rsp)
  0x00007fb547da24c6: callq  0x00007fb5478f8100  ; ImmutableOopMap{[48]=Oop rax=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 577)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da24cb: jmpq   0x00007fb547da2222
  0x00007fb547da24d0: mov    %rdi,(%rsp)
  0x00007fb547da24d4: callq  0x00007fb5478f5420  ; ImmutableOopMap{rcx=Oop [48]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 572)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547da24d9: callq  0x00007fb5478f3020  ; ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 572)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da24de: nop
  0x00007fb547da24df: nop
  0x00007fb547da24e0: mov    0x440(%r15),%rax
  0x00007fb547da24e7: movabs $0x0,%r10
  0x00007fb547da24f1: mov    %r10,0x440(%r15)
  0x00007fb547da24f8: movabs $0x0,%r10
  0x00007fb547da2502: mov    %r10,0x448(%r15)
  0x00007fb547da2509: add    $0x50,%rsp
  0x00007fb547da250d: pop    %rbp
  0x00007fb547da250e: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da2513: hlt    
  0x00007fb547da2514: hlt    
  0x00007fb547da2515: hlt    
  0x00007fb547da2516: hlt    
  0x00007fb547da2517: hlt    
  0x00007fb547da2518: hlt    
  0x00007fb547da2519: hlt    
  0x00007fb547da251a: hlt    
  0x00007fb547da251b: hlt    
  0x00007fb547da251c: hlt    
  0x00007fb547da251d: hlt    
  0x00007fb547da251e: hlt    
  0x00007fb547da251f: hlt    
[Stub Code]
  0x00007fb547da2520: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da2525: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da252f: jmpq   0x00007fb547da252f  ;   {runtime_call}
  0x00007fb547da2534: nop
  0x00007fb547da2535: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da253f: jmpq   0x00007fb547da253f  ;   {runtime_call}
  0x00007fb547da2544: nop
  0x00007fb547da2545: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da254f: jmpq   0x00007fb547da254f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da2554: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da2559: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da2563: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da2567: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da256c: hlt    
[Deopt Handler Code]
  0x00007fb547da256d: movabs $0x7fb547da256d,%r10  ;   {section_word}
  0x00007fb547da2577: push   %r10
  0x00007fb547da2579: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da257e: hlt    
  0x00007fb547da257f: hlt    

ImmutableOopMap{[32]=Oop [48]=Oop }pc offsets: 668 
ImmutableOopMap{[56]=Oop [48]=Oop }pc offsets: 1492 
ImmutableOopMap{[48]=Oop rax=Oop }pc offsets: 1641 
ImmutableOopMap{}pc offsets: 2180 
ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }pc offsets: 2243 2253 
ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }pc offsets: 2267 
ImmutableOopMap{rdi=Oop rcx=Oop [48]=Oop }pc offsets: 2272 
ImmutableOopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop }pc offsets: 2277 
ImmutableOopMap{rdx=Oop rcx=Oop [48]=Oop }pc offsets: 2282 
ImmutableOopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop }pc offsets: 2287 
ImmutableOopMap{[48]=Oop rax=Oop }pc offsets: 2315 
ImmutableOopMap{rcx=Oop [48]=Oop }pc offsets: 2329 
ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }pc offsets: 2334 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='54' method='java.util.HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='640' iicount='640' level='3' stamp='0.743' comment='tiered' hot_count='640'/>
<writer thread='1329936'/>
<nmethod compile_id='49' compiler='c1' level='3' entry='0x00007fb547da2c40' size='776' address='0x00007fb547da2a90' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='680' scopes_pcs_offset='704' dependencies_offset='768' metadata_offset='672' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='922' iicount='922' stamp='0.743'/>
<print_nmethod stamp='0.743'>
Compiled method (c1)     743   49       3       java.util.HashMap::afterNodeInsertion (1 bytes)
 total in heap  [0x00007fb547da2a90,0x00007fb547da2d98] = 776
 relocation     [0x00007fb547da2c08,0x00007fb547da2c30] = 40
 main code      [0x00007fb547da2c40,0x00007fb547da2d00] = 192
 stub code      [0x00007fb547da2d00,0x00007fb547da2d30] = 48
 metadata       [0x00007fb547da2d30,0x00007fb547da2d38] = 8
 scopes data    [0x00007fb547da2d38,0x00007fb547da2d50] = 24
 scopes pcs     [0x00007fb547da2d50,0x00007fb547da2d90] = 64
 dependencies   [0x00007fb547da2d90,0x00007fb547da2d98] = 8
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion(Z)V  [0x00007fb547da2c40, 0x00007fb547da2d30]  240 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdda668} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da2c40: mov    0x8(%rsi),%r10d
  0x00007fb547da2c44: movabs $0x800000000,%r12
  0x00007fb547da2c4e: add    %r12,%r10
  0x00007fb547da2c51: xor    %r12,%r12
  0x00007fb547da2c54: cmp    %rax,%r10
  0x00007fb547da2c57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da2c5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da2c60: mov    %eax,-0x14000(%rsp)
  0x00007fb547da2c67: push   %rbp
  0x00007fb547da2c68: sub    $0x30,%rsp
  0x00007fb547da2c6c: movabs $0x7fb52cf5d410,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdda668} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da2c76: mov    0x100(%rdi),%ebx
  0x00007fb547da2c7c: add    $0x8,%ebx
  0x00007fb547da2c7f: mov    %ebx,0x100(%rdi)
  0x00007fb547da2c85: and    $0x1ff8,%ebx
  0x00007fb547da2c8b: cmp    $0x0,%ebx
  0x00007fb547da2c8e: je     0x00007fb547da2ca4  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1848)

  0x00007fb547da2c94: add    $0x30,%rsp
  0x00007fb547da2c98: pop    %rbp
  0x00007fb547da2c99: mov    0x108(%r15),%r10
  0x00007fb547da2ca0: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da2ca3: retq   
  0x00007fb547da2ca4: movabs $0x7fb52cdda668,%r10  ;   {metadata({method} {0x00007fb52cdda668} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da2cae: mov    %r10,0x8(%rsp)
  0x00007fb547da2cb3: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da2cbb: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1848)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da2cc0: jmp    0x00007fb547da2c94
  0x00007fb547da2cc2: nop
  0x00007fb547da2cc3: nop
  0x00007fb547da2cc4: mov    0x440(%r15),%rax
  0x00007fb547da2ccb: movabs $0x0,%r10
  0x00007fb547da2cd5: mov    %r10,0x440(%r15)
  0x00007fb547da2cdc: movabs $0x0,%r10
  0x00007fb547da2ce6: mov    %r10,0x448(%r15)
  0x00007fb547da2ced: add    $0x30,%rsp
  0x00007fb547da2cf1: pop    %rbp
  0x00007fb547da2cf2: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da2cf7: hlt    
  0x00007fb547da2cf8: hlt    
  0x00007fb547da2cf9: hlt    
  0x00007fb547da2cfa: hlt    
  0x00007fb547da2cfb: hlt    
  0x00007fb547da2cfc: hlt    
  0x00007fb547da2cfd: hlt    
  0x00007fb547da2cfe: hlt    
  0x00007fb547da2cff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da2d00: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da2d05: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da2d0f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da2d13: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da2d18: hlt    
[Deopt Handler Code]
  0x00007fb547da2d19: movabs $0x7fb547da2d19,%r10  ;   {section_word}
  0x00007fb547da2d23: push   %r10
  0x00007fb547da2d25: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da2d2a: hlt    
  0x00007fb547da2d2b: hlt    
  0x00007fb547da2d2c: hlt    
  0x00007fb547da2d2d: hlt    
  0x00007fb547da2d2e: hlt    
  0x00007fb547da2d2f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 128 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='55' method='java.lang.module.ModuleDescriptor$Exports targets ()Ljava/util/Set;' bytes='5' count='128' iicount='128' level='1' stamp='0.745' comment='tiered' hot_count='128'/>
<task_queued compile_id='56' method='java.lang.module.ResolvedModule configuration ()Ljava/lang/module/Configuration;' bytes='5' count='128' iicount='128' level='1' stamp='0.745' comment='tiered' hot_count='128'/>
<task_queued compile_id='57' method='java.util.ImmutableCollections$Set12$1 hasNext ()Z' bytes='13' count='640' iicount='640' level='3' stamp='0.745' comment='tiered' hot_count='640'/>
<writer thread='1329936'/>
<nmethod compile_id='45' compiler='c1' level='3' entry='0x00007fb547da2fe0' size='1616' address='0x00007fb547da2e10' relocation_offset='376' insts_offset='464' stub_offset='1136' scopes_data_offset='1232' scopes_pcs_offset='1384' dependencies_offset='1592' nul_chk_table_offset='1600' metadata_offset='1216' method='java.util.HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1046' iicount='1046' stamp='0.745'/>
<print_nmethod stamp='0.745'>
Compiled method (c1)     745   45       3       java.util.HashMap::put (13 bytes)
 total in heap  [0x00007fb547da2e10,0x00007fb547da3460] = 1616
 relocation     [0x00007fb547da2f88,0x00007fb547da2fd8] = 80
 main code      [0x00007fb547da2fe0,0x00007fb547da3280] = 672
 stub code      [0x00007fb547da3280,0x00007fb547da32d0] = 80
 metadata       [0x00007fb547da32d0,0x00007fb547da32e0] = 16
 scopes data    [0x00007fb547da32e0,0x00007fb547da3378] = 152
 scopes pcs     [0x00007fb547da3378,0x00007fb547da3448] = 208
 dependencies   [0x00007fb547da3448,0x00007fb547da3450] = 8
 nul chk table  [0x00007fb547da3450,0x00007fb547da3460] = 16
----------------------------------------------------------------------
java/util/HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00007fb547da2fe0, 0x00007fb547da32d0]  752 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdd7920} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x00007fb547da2fe0: mov    0x8(%rsi),%r10d
  0x00007fb547da2fe4: movabs $0x800000000,%r12
  0x00007fb547da2fee: add    %r12,%r10
  0x00007fb547da2ff1: xor    %r12,%r12
  0x00007fb547da2ff4: cmp    %rax,%r10
  0x00007fb547da2ff7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da2ffd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da3000: mov    %eax,-0x14000(%rsp)
  0x00007fb547da3007: push   %rbp
  0x00007fb547da3008: sub    $0x80,%rsp
  0x00007fb547da300f: movabs $0x7fb52cf5c7a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd7920} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da3019: mov    0x100(%rdi),%ebx
  0x00007fb547da301f: add    $0x8,%ebx
  0x00007fb547da3022: mov    %ebx,0x100(%rdi)
  0x00007fb547da3028: and    $0x1ff8,%ebx
  0x00007fb547da302e: cmp    $0x0,%ebx
  0x00007fb547da3031: je     0x00007fb547da31ef  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@0 (line 608)

  0x00007fb547da3037: movabs $0x7fb52cf5c7a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd7920} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da3041: addq   $0x1,0x140(%rdi)
  0x00007fb547da3049: movabs $0x7fb52cf598c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da3053: mov    0x100(%rdi),%ebx
  0x00007fb547da3059: add    $0x8,%ebx
  0x00007fb547da305c: mov    %ebx,0x100(%rdi)
  0x00007fb547da3062: and    $0x7ffff8,%ebx
  0x00007fb547da3068: cmp    $0x0,%ebx
  0x00007fb547da306b: je     0x00007fb547da3210
  0x00007fb547da3071: cmp    $0x0,%rdx
  0x00007fb547da3075: movabs $0x7fb52cf598c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da307f: movabs $0x140,%rbx
  0x00007fb547da3089: jne    0x00007fb547da3099
  0x00007fb547da308f: movabs $0x150,%rbx
  0x00007fb547da3099: mov    (%rdi,%rbx,1),%rax
  0x00007fb547da309d: lea    0x1(%rax),%rax
  0x00007fb547da30a1: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547da30a5: jne    0x00007fb547da30d4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 340)
                                                ; - java.util.HashMap::put@2 (line 608)

  0x00007fb547da30ab: movabs $0x7fb52cf598c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da30b5: incl   0x160(%rdi)
  0x00007fb547da30bb: mov    $0x0,%edi
  0x00007fb547da30c0: mov    %rcx,0x68(%rsp)
  0x00007fb547da30c5: mov    %rdx,0x60(%rsp)
  0x00007fb547da30ca: mov    %rsi,0x58(%rsp)
  0x00007fb547da30cf: jmpq   0x00007fb547da31a0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 340)
                                                ; - java.util.HashMap::put@2 (line 608)

  0x00007fb547da30d4: mov    %rcx,0x68(%rsp)
  0x00007fb547da30d9: mov    %rsi,0x58(%rsp)
  0x00007fb547da30de: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fb547da3231
  0x00007fb547da30e1: mov    %rdx,%rdi
  0x00007fb547da30e4: movabs $0x7fb52cf598c0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da30ee: mov    0x8(%rdi),%edi
  0x00007fb547da30f1: movabs $0x800000000,%r12
  0x00007fb547da30fb: add    %r12,%rdi
  0x00007fb547da30fe: xor    %r12,%r12
  0x00007fb547da3101: cmp    0x188(%rbx),%rdi
  0x00007fb547da3108: jne    0x00007fb547da3117
  0x00007fb547da310a: addq   $0x1,0x190(%rbx)
  0x00007fb547da3112: jmpq   0x00007fb547da317d
  0x00007fb547da3117: cmp    0x198(%rbx),%rdi
  0x00007fb547da311e: jne    0x00007fb547da312d
  0x00007fb547da3120: addq   $0x1,0x1a0(%rbx)
  0x00007fb547da3128: jmpq   0x00007fb547da317d
  0x00007fb547da312d: cmpq   $0x0,0x188(%rbx)
  0x00007fb547da3138: jne    0x00007fb547da3151
  0x00007fb547da313a: mov    %rdi,0x188(%rbx)
  0x00007fb547da3141: movq   $0x1,0x190(%rbx)
  0x00007fb547da314c: jmpq   0x00007fb547da317d
  0x00007fb547da3151: cmpq   $0x0,0x198(%rbx)
  0x00007fb547da315c: jne    0x00007fb547da3175
  0x00007fb547da315e: mov    %rdi,0x198(%rbx)
  0x00007fb547da3165: movq   $0x1,0x1a0(%rbx)
  0x00007fb547da3170: jmpq   0x00007fb547da317d
  0x00007fb547da3175: addq   $0x1,0x178(%rbx)
  0x00007fb547da317d: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::put@2 (line 608)

  0x00007fb547da3180: mov    %rdx,0x60(%rsp)
  0x00007fb547da3185: movabs $0xffffffffffffffff,%rax
  0x00007fb547da318f: callq  0x00007fb54784aa80  ; ImmutableOopMap{[88]=Oop [104]=Oop [96]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::put@2 (line 608)
                                                ;   {virtual_call}
  0x00007fb547da3194: mov    %rax,%rdx
  0x00007fb547da3197: shr    $0x10,%edx
  0x00007fb547da319a: xor    %rax,%rdx
  0x00007fb547da319d: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 340)
                                                ; - java.util.HashMap::put@2 (line 608)

  0x00007fb547da31a0: mov    0x68(%rsp),%r8
  0x00007fb547da31a5: mov    0x60(%rsp),%rcx
  0x00007fb547da31aa: mov    0x58(%rsp),%rsi
  0x00007fb547da31af: mov    %rsi,%rdx
  0x00007fb547da31b2: movabs $0x7fb52cf5c7a0,%r9  ;   {metadata(method data for {method} {0x00007fb52cdd7920} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da31bc: addq   $0x1,0x150(%r9)
  0x00007fb547da31c4: mov    %rdi,%rdx
  0x00007fb547da31c7: mov    $0x0,%r9d
  0x00007fb547da31cd: mov    $0x1,%edi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 608)

  0x00007fb547da31d2: nopl   0x0(%rax,%rax,1)
  0x00007fb547da31d7: callq  0x00007fb54784ad80  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 608)
                                                ;   {optimized virtual_call}
  0x00007fb547da31dc: add    $0x80,%rsp
  0x00007fb547da31e3: pop    %rbp
  0x00007fb547da31e4: mov    0x108(%r15),%r10
  0x00007fb547da31eb: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da31ee: retq   
  0x00007fb547da31ef: movabs $0x7fb52cdd7920,%r10  ;   {metadata({method} {0x00007fb52cdd7920} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da31f9: mov    %r10,0x8(%rsp)
  0x00007fb547da31fe: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da3206: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 608)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da320b: jmpq   0x00007fb547da3037
  0x00007fb547da3210: movabs $0x7fb52cdd6b88,%r10  ;   {metadata({method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da321a: mov    %r10,0x8(%rsp)
  0x00007fb547da321f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da3227: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 340)
                                                ; - java.util.HashMap::put@2 (line 608)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da322c: jmpq   0x00007fb547da3071
  0x00007fb547da3231: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop [104]=Oop [88]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::put@2 (line 608)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da3236: nop
  0x00007fb547da3237: nop
  0x00007fb547da3238: mov    0x440(%r15),%rax
  0x00007fb547da323f: movabs $0x0,%r10
  0x00007fb547da3249: mov    %r10,0x440(%r15)
  0x00007fb547da3250: movabs $0x0,%r10
  0x00007fb547da325a: mov    %r10,0x448(%r15)
  0x00007fb547da3261: add    $0x80,%rsp
  0x00007fb547da3268: pop    %rbp
  0x00007fb547da3269: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da326e: hlt    
  0x00007fb547da326f: hlt    
  0x00007fb547da3270: hlt    
  0x00007fb547da3271: hlt    
  0x00007fb547da3272: hlt    
  0x00007fb547da3273: hlt    
  0x00007fb547da3274: hlt    
  0x00007fb547da3275: hlt    
  0x00007fb547da3276: hlt    
  0x00007fb547da3277: hlt    
  0x00007fb547da3278: hlt    
  0x00007fb547da3279: hlt    
  0x00007fb547da327a: hlt    
  0x00007fb547da327b: hlt    
  0x00007fb547da327c: hlt    
  0x00007fb547da327d: hlt    
  0x00007fb547da327e: hlt    
  0x00007fb547da327f: hlt    
[Stub Code]
  0x00007fb547da3280: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da3285: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da328f: jmpq   0x00007fb547da328f  ;   {runtime_call}
  0x00007fb547da3294: nop
  0x00007fb547da3295: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da329f: jmpq   0x00007fb547da329f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da32a4: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da32a9: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da32b3: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da32b7: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da32bc: hlt    
[Deopt Handler Code]
  0x00007fb547da32bd: movabs $0x7fb547da32bd,%r10  ;   {section_word}
  0x00007fb547da32c7: push   %r10
  0x00007fb547da32c9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da32ce: hlt    
  0x00007fb547da32cf: hlt    

ImmutableOopMap{[88]=Oop [104]=Oop [96]=Oop }pc offsets: 436 
ImmutableOopMap{}pc offsets: 508 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 555 588 
ImmutableOopMap{rdx=Oop [104]=Oop [88]=Oop }pc offsets: 598 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='58' method='java.util.KeyValueHolder getValue ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' level='1' stamp='0.753' comment='tiered' hot_count='256'/>
<writer thread='1329936'/>
<nmethod compile_id='54' compiler='c1' level='3' entry='0x00007fb547da3680' size='1800' address='0x00007fb547da3490' relocation_offset='376' insts_offset='496' stub_offset='1232' scopes_data_offset='1328' scopes_pcs_offset='1496' dependencies_offset='1768' nul_chk_table_offset='1776' metadata_offset='1312' method='java.util.HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='846' iicount='846' stamp='0.753'/>
<print_nmethod stamp='0.753'>
Compiled method (c1)     753   54       3       java.util.HashMap::get (23 bytes)
 total in heap  [0x00007fb547da3490,0x00007fb547da3b98] = 1800
 relocation     [0x00007fb547da3608,0x00007fb547da3668] = 96
 main code      [0x00007fb547da3680,0x00007fb547da3960] = 736
 stub code      [0x00007fb547da3960,0x00007fb547da39b0] = 80
 metadata       [0x00007fb547da39b0,0x00007fb547da39c0] = 16
 scopes data    [0x00007fb547da39c0,0x00007fb547da3a68] = 168
 scopes pcs     [0x00007fb547da3a68,0x00007fb547da3b78] = 272
 dependencies   [0x00007fb547da3b78,0x00007fb547da3b80] = 8
 nul chk table  [0x00007fb547da3b80,0x00007fb547da3b98] = 24
----------------------------------------------------------------------
java/util/HashMap.get(Ljava/lang/Object;)Ljava/lang/Object;  [0x00007fb547da3680, 0x00007fb547da39b0]  816 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdd75e0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007fb547da3680: mov    0x8(%rsi),%r10d
  0x00007fb547da3684: movabs $0x800000000,%r12
  0x00007fb547da368e: add    %r12,%r10
  0x00007fb547da3691: xor    %r12,%r12
  0x00007fb547da3694: cmp    %rax,%r10
  0x00007fb547da3697: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da369d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da36a0: mov    %eax,-0x14000(%rsp)
  0x00007fb547da36a7: push   %rbp
  0x00007fb547da36a8: sub    $0x60,%rsp
  0x00007fb547da36ac: movabs $0x7fb52cf5e5a8,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd75e0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da36b6: mov    0x100(%rdi),%ebx
  0x00007fb547da36bc: add    $0x8,%ebx
  0x00007fb547da36bf: mov    %ebx,0x100(%rdi)
  0x00007fb547da36c5: and    $0x1ff8,%ebx
  0x00007fb547da36cb: cmp    $0x0,%ebx
  0x00007fb547da36ce: je     0x00007fb547da38df  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@0 (line 553)

  0x00007fb547da36d4: movabs $0x7fb52cf5e5a8,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd75e0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da36de: addq   $0x1,0x140(%rdi)
  0x00007fb547da36e6: movabs $0x7fb52cf598c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da36f0: mov    0x100(%rdi),%ebx
  0x00007fb547da36f6: add    $0x8,%ebx
  0x00007fb547da36f9: mov    %ebx,0x100(%rdi)
  0x00007fb547da36ff: and    $0x7ffff8,%ebx
  0x00007fb547da3705: cmp    $0x0,%ebx
  0x00007fb547da3708: je     0x00007fb547da3900
  0x00007fb547da370e: cmp    $0x0,%rdx
  0x00007fb547da3712: movabs $0x7fb52cf598c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da371c: movabs $0x140,%rbx
  0x00007fb547da3726: jne    0x00007fb547da3736
  0x00007fb547da372c: movabs $0x150,%rbx
  0x00007fb547da3736: mov    (%rdi,%rbx,1),%rax
  0x00007fb547da373a: lea    0x1(%rax),%rax
  0x00007fb547da373e: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547da3742: jne    0x00007fb547da376c  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 340)
                                                ; - java.util.HashMap::get@2 (line 553)

  0x00007fb547da3748: movabs $0x7fb52cf598c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da3752: incl   0x160(%rdi)
  0x00007fb547da3758: mov    $0x0,%edi
  0x00007fb547da375d: mov    %rdx,0x48(%rsp)
  0x00007fb547da3762: mov    %rsi,0x40(%rsp)
  0x00007fb547da3767: jmpq   0x00007fb547da3838  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 340)
                                                ; - java.util.HashMap::get@2 (line 553)

  0x00007fb547da376c: mov    %rsi,0x40(%rsp)
  0x00007fb547da3771: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fb547da3921
  0x00007fb547da3774: mov    %rdx,%rdi
  0x00007fb547da3777: movabs $0x7fb52cf598c0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da3781: mov    0x8(%rdi),%edi
  0x00007fb547da3784: movabs $0x800000000,%r12
  0x00007fb547da378e: add    %r12,%rdi
  0x00007fb547da3791: xor    %r12,%r12
  0x00007fb547da3794: cmp    0x188(%rbx),%rdi
  0x00007fb547da379b: jne    0x00007fb547da37aa
  0x00007fb547da379d: addq   $0x1,0x190(%rbx)
  0x00007fb547da37a5: jmpq   0x00007fb547da3810
  0x00007fb547da37aa: cmp    0x198(%rbx),%rdi
  0x00007fb547da37b1: jne    0x00007fb547da37c0
  0x00007fb547da37b3: addq   $0x1,0x1a0(%rbx)
  0x00007fb547da37bb: jmpq   0x00007fb547da3810
  0x00007fb547da37c0: cmpq   $0x0,0x188(%rbx)
  0x00007fb547da37cb: jne    0x00007fb547da37e4
  0x00007fb547da37cd: mov    %rdi,0x188(%rbx)
  0x00007fb547da37d4: movq   $0x1,0x190(%rbx)
  0x00007fb547da37df: jmpq   0x00007fb547da3810
  0x00007fb547da37e4: cmpq   $0x0,0x198(%rbx)
  0x00007fb547da37ef: jne    0x00007fb547da3808
  0x00007fb547da37f1: mov    %rdi,0x198(%rbx)
  0x00007fb547da37f8: movq   $0x1,0x1a0(%rbx)
  0x00007fb547da3803: jmpq   0x00007fb547da3810
  0x00007fb547da3808: addq   $0x1,0x178(%rbx)
  0x00007fb547da3810: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::get@2 (line 553)

  0x00007fb547da3813: mov    %rdx,0x48(%rsp)
  0x00007fb547da3818: nopl   0x0(%rax,%rax,1)
  0x00007fb547da381d: movabs $0xffffffffffffffff,%rax
  0x00007fb547da3827: callq  0x00007fb54784aa80  ; ImmutableOopMap{[64]=Oop [72]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::get@2 (line 553)
                                                ;   {virtual_call}
  0x00007fb547da382c: mov    %rax,%rdx
  0x00007fb547da382f: shr    $0x10,%edx
  0x00007fb547da3832: xor    %rax,%rdx
  0x00007fb547da3835: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 340)
                                                ; - java.util.HashMap::get@2 (line 553)

  0x00007fb547da3838: mov    0x48(%rsp),%rcx
  0x00007fb547da383d: mov    0x40(%rsp),%rsi
  0x00007fb547da3842: mov    %rsi,%rdx
  0x00007fb547da3845: movabs $0x7fb52cf5e5a8,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdd75e0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da384f: addq   $0x1,0x150(%rbx)
  0x00007fb547da3857: mov    %rdi,%rdx          ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 553)

  0x00007fb547da385a: nopl   0x0(%rax,%rax,1)
  0x00007fb547da385f: callq  0x00007fb54784ad80  ; ImmutableOopMap{}
                                                ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 553)
                                                ;   {optimized virtual_call}
  0x00007fb547da3864: cmp    $0x0,%rax
  0x00007fb547da3868: movabs $0x7fb52cf5e5a8,%rsi  ;   {metadata(method data for {method} {0x00007fb52cdd75e0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da3872: movabs $0x188,%rdi
  0x00007fb547da387c: jne    0x00007fb547da388c
  0x00007fb547da3882: movabs $0x198,%rdi
  0x00007fb547da388c: mov    (%rsi,%rdi,1),%rbx
  0x00007fb547da3890: lea    0x1(%rbx),%rbx
  0x00007fb547da3894: mov    %rbx,(%rsi,%rdi,1)
  0x00007fb547da3898: jne    0x00007fb547da38c8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@11 (line 553)

  0x00007fb547da389e: movabs $0x7fb52cf5e5a8,%rax  ;   {metadata(method data for {method} {0x00007fb52cdd75e0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da38a8: incl   0x1a8(%rax)
  0x00007fb547da38ae: movabs $0x0,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@15 (line 553)
                                                ;   {oop(NULL)}
  0x00007fb547da38b8: add    $0x60,%rsp
  0x00007fb547da38bc: pop    %rbp
  0x00007fb547da38bd: mov    0x108(%r15),%r10
  0x00007fb547da38c4: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da38c7: retq   
  0x00007fb547da38c8: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x00007fb547da3926
  0x00007fb547da38cb: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 553)

  0x00007fb547da38cf: add    $0x60,%rsp
  0x00007fb547da38d3: pop    %rbp
  0x00007fb547da38d4: mov    0x108(%r15),%r10
  0x00007fb547da38db: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da38de: retq   
  0x00007fb547da38df: movabs $0x7fb52cdd75e0,%r10  ;   {metadata({method} {0x00007fb52cdd75e0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da38e9: mov    %r10,0x8(%rsp)
  0x00007fb547da38ee: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da38f6: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::get@-1 (line 553)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da38fb: jmpq   0x00007fb547da36d4
  0x00007fb547da3900: movabs $0x7fb52cdd6b88,%r10  ;   {metadata({method} {0x00007fb52cdd6b88} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da390a: mov    %r10,0x8(%rsp)
  0x00007fb547da390f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da3917: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 340)
                                                ; - java.util.HashMap::get@2 (line 553)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da391c: jmpq   0x00007fb547da370e
  0x00007fb547da3921: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop [64]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 340)
                                                ; - java.util.HashMap::get@2 (line 553)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da3926: callq  0x00007fb5478f3020  ; ImmutableOopMap{}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 553)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da392b: nop
  0x00007fb547da392c: nop
  0x00007fb547da392d: mov    0x440(%r15),%rax
  0x00007fb547da3934: movabs $0x0,%r10
  0x00007fb547da393e: mov    %r10,0x440(%r15)
  0x00007fb547da3945: movabs $0x0,%r10
  0x00007fb547da394f: mov    %r10,0x448(%r15)
  0x00007fb547da3956: add    $0x60,%rsp
  0x00007fb547da395a: pop    %rbp
  0x00007fb547da395b: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x00007fb547da3960: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da3965: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da396f: jmpq   0x00007fb547da396f  ;   {runtime_call}
  0x00007fb547da3974: nop
  0x00007fb547da3975: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da397f: jmpq   0x00007fb547da397f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da3984: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da3989: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da3993: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da3997: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da399c: hlt    
[Deopt Handler Code]
  0x00007fb547da399d: movabs $0x7fb547da399d,%r10  ;   {section_word}
  0x00007fb547da39a7: push   %r10
  0x00007fb547da39a9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da39ae: hlt    
  0x00007fb547da39af: hlt    

ImmutableOopMap{[64]=Oop [72]=Oop }pc offsets: 428 
ImmutableOopMap{}pc offsets: 484 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 635 668 
ImmutableOopMap{rdx=Oop [64]=Oop }pc offsets: 678 
ImmutableOopMap{}pc offsets: 683 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='59' method='java.lang.String hashCode ()I' bytes='49' count='5632' iicount='5632' stamp='0.760' comment='tiered' hot_count='5632'/>
<task_queued compile_id='60' method='java.lang.module.ModuleDescriptor isOpen ()Z' bytes='5' count='128' iicount='128' level='1' stamp='0.760' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='47' compiler='c1' level='3' entry='0x00007fb547da3dc0' size='1336' address='0x00007fb547da3c10' relocation_offset='376' insts_offset='432' stub_offset='1040' scopes_data_offset='1112' scopes_pcs_offset='1184' dependencies_offset='1328' metadata_offset='1088' method='java.util.HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1258' iicount='1258' stamp='0.760'/>
<print_nmethod stamp='0.760'>
Compiled method (c1)     760   47       3       java.util.HashMap$Node::&lt;init&gt; (26 bytes)
 total in heap  [0x00007fb547da3c10,0x00007fb547da4148] = 1336
 relocation     [0x00007fb547da3d88,0x00007fb547da3dc0] = 56
 main code      [0x00007fb547da3dc0,0x00007fb547da4020] = 608
 stub code      [0x00007fb547da4020,0x00007fb547da4050] = 48
 metadata       [0x00007fb547da4050,0x00007fb547da4068] = 24
 scopes data    [0x00007fb547da4068,0x00007fb547da40b0] = 72
 scopes pcs     [0x00007fb547da40b0,0x00007fb547da4140] = 144
 dependencies   [0x00007fb547da4140,0x00007fb547da4148] = 8
----------------------------------------------------------------------
java/util/HashMap$Node.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V  [0x00007fb547da3dc0, 0x00007fb547da4050]  656 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cef2bb0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da3dc0: mov    0x8(%rsi),%r10d
  0x00007fb547da3dc4: movabs $0x800000000,%r12
  0x00007fb547da3dce: add    %r12,%r10
  0x00007fb547da3dd1: xor    %r12,%r12
  0x00007fb547da3dd4: cmp    %rax,%r10
  0x00007fb547da3dd7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da3ddd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da3de0: mov    %eax,-0x14000(%rsp)
  0x00007fb547da3de7: push   %rbp
  0x00007fb547da3de8: sub    $0x30,%rsp
  0x00007fb547da3dec: movabs $0x7fb52cf5d0e0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cef2bb0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fb547da3df6: mov    0x100(%rdi),%ebx
  0x00007fb547da3dfc: add    $0x8,%ebx
  0x00007fb547da3dff: mov    %ebx,0x100(%rdi)
  0x00007fb547da3e05: and    $0x1ff8,%ebx
  0x00007fb547da3e0b: cmp    $0x0,%ebx
  0x00007fb547da3e0e: je     0x00007fb547da3eeb  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 286)

  0x00007fb547da3e14: mov    %rsi,%rdi
  0x00007fb547da3e17: movabs $0x7fb52cf5d0e0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cef2bb0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fb547da3e21: addq   $0x1,0x140(%rbx)
  0x00007fb547da3e29: movabs $0x7fb52cedd4a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547da3e33: mov    0x100(%rdi),%ebx
  0x00007fb547da3e39: add    $0x8,%ebx
  0x00007fb547da3e3c: mov    %ebx,0x100(%rdi)
  0x00007fb547da3e42: and    $0x7ffff8,%ebx
  0x00007fb547da3e48: cmp    $0x0,%ebx
  0x00007fb547da3e4b: je     0x00007fb547da3f0c
  0x00007fb547da3e51: mov    %edx,0xc(%rsi)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 287)

  0x00007fb547da3e54: movsbl 0x30(%r15),%edi
  0x00007fb547da3e59: cmp    $0x0,%edi
  0x00007fb547da3e5c: jne    0x00007fb547da3f2d
  0x00007fb547da3e62: mov    %rcx,%r10
  0x00007fb547da3e65: shr    $0x3,%r10
  0x00007fb547da3e69: mov    %r10d,0x10(%rsi)
  0x00007fb547da3e6d: mov    %rsi,%rdi
  0x00007fb547da3e70: xor    %rcx,%rdi
  0x00007fb547da3e73: shr    $0x15,%rdi
  0x00007fb547da3e77: cmp    $0x0,%rdi
  0x00007fb547da3e7b: jne    0x00007fb547da3f4c  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 288)

  0x00007fb547da3e81: movsbl 0x30(%r15),%edi
  0x00007fb547da3e86: cmp    $0x0,%edi
  0x00007fb547da3e89: jne    0x00007fb547da3f64
  0x00007fb547da3e8f: mov    %r8,%r10
  0x00007fb547da3e92: shr    $0x3,%r10
  0x00007fb547da3e96: mov    %r10d,0x14(%rsi)
  0x00007fb547da3e9a: mov    %rsi,%rdi
  0x00007fb547da3e9d: xor    %r8,%rdi
  0x00007fb547da3ea0: shr    $0x15,%rdi
  0x00007fb547da3ea4: cmp    $0x0,%rdi
  0x00007fb547da3ea8: jne    0x00007fb547da3f83  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 289)

  0x00007fb547da3eae: movsbl 0x30(%r15),%edi
  0x00007fb547da3eb3: cmp    $0x0,%edi
  0x00007fb547da3eb6: jne    0x00007fb547da3f9b
  0x00007fb547da3ebc: mov    %r9,%r10
  0x00007fb547da3ebf: shr    $0x3,%r10
  0x00007fb547da3ec3: mov    %r10d,0x18(%rsi)
  0x00007fb547da3ec7: mov    %rsi,%rdi
  0x00007fb547da3eca: xor    %r9,%rdi
  0x00007fb547da3ecd: shr    $0x15,%rdi
  0x00007fb547da3ed1: cmp    $0x0,%rdi
  0x00007fb547da3ed5: jne    0x00007fb547da3fba  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 290)

  0x00007fb547da3edb: add    $0x30,%rsp
  0x00007fb547da3edf: pop    %rbp
  0x00007fb547da3ee0: mov    0x108(%r15),%r10
  0x00007fb547da3ee7: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da3eea: retq   
  0x00007fb547da3eeb: movabs $0x7fb52cef2bb0,%r10  ;   {metadata({method} {0x00007fb52cef2bb0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fb547da3ef5: mov    %r10,0x8(%rsp)
  0x00007fb547da3efa: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da3f02: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 286)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da3f07: jmpq   0x00007fb547da3e14
  0x00007fb547da3f0c: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547da3f16: mov    %r10,0x8(%rsp)
  0x00007fb547da3f1b: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da3f23: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 286)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da3f28: jmpq   0x00007fb547da3e51
  0x00007fb547da3f2d: mov    0x10(%rsi),%edi
  0x00007fb547da3f30: shl    $0x3,%rdi
  0x00007fb547da3f34: cmp    $0x0,%rdi
  0x00007fb547da3f38: je     0x00007fb547da3e62
  0x00007fb547da3f3e: mov    %rdi,(%rsp)
  0x00007fb547da3f42: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da3f47: jmpq   0x00007fb547da3e62
  0x00007fb547da3f4c: cmp    $0x0,%rcx
  0x00007fb547da3f50: je     0x00007fb547da3e81
  0x00007fb547da3f56: mov    %rsi,(%rsp)
  0x00007fb547da3f5a: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da3f5f: jmpq   0x00007fb547da3e81
  0x00007fb547da3f64: mov    0x14(%rsi),%edi
  0x00007fb547da3f67: shl    $0x3,%rdi
  0x00007fb547da3f6b: cmp    $0x0,%rdi
  0x00007fb547da3f6f: je     0x00007fb547da3e8f
  0x00007fb547da3f75: mov    %rdi,(%rsp)
  0x00007fb547da3f79: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da3f7e: jmpq   0x00007fb547da3e8f
  0x00007fb547da3f83: cmp    $0x0,%r8
  0x00007fb547da3f87: je     0x00007fb547da3eae
  0x00007fb547da3f8d: mov    %rsi,(%rsp)
  0x00007fb547da3f91: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da3f96: jmpq   0x00007fb547da3eae
  0x00007fb547da3f9b: mov    0x18(%rsi),%edi
  0x00007fb547da3f9e: shl    $0x3,%rdi
  0x00007fb547da3fa2: cmp    $0x0,%rdi
  0x00007fb547da3fa6: je     0x00007fb547da3ebc
  0x00007fb547da3fac: mov    %rdi,(%rsp)
  0x00007fb547da3fb0: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da3fb5: jmpq   0x00007fb547da3ebc
  0x00007fb547da3fba: cmp    $0x0,%r9
  0x00007fb547da3fbe: je     0x00007fb547da3edb
  0x00007fb547da3fc4: mov    %rsi,(%rsp)
  0x00007fb547da3fc8: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da3fcd: jmpq   0x00007fb547da3edb
  0x00007fb547da3fd2: nop
  0x00007fb547da3fd3: nop
  0x00007fb547da3fd4: mov    0x440(%r15),%rax
  0x00007fb547da3fdb: movabs $0x0,%r10
  0x00007fb547da3fe5: mov    %r10,0x440(%r15)
  0x00007fb547da3fec: movabs $0x0,%r10
  0x00007fb547da3ff6: mov    %r10,0x448(%r15)
  0x00007fb547da3ffd: add    $0x30,%rsp
  0x00007fb547da4001: pop    %rbp
  0x00007fb547da4002: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da4007: hlt    
  0x00007fb547da4008: hlt    
  0x00007fb547da4009: hlt    
  0x00007fb547da400a: hlt    
  0x00007fb547da400b: hlt    
  0x00007fb547da400c: hlt    
  0x00007fb547da400d: hlt    
  0x00007fb547da400e: hlt    
  0x00007fb547da400f: hlt    
  0x00007fb547da4010: hlt    
  0x00007fb547da4011: hlt    
  0x00007fb547da4012: hlt    
  0x00007fb547da4013: hlt    
  0x00007fb547da4014: hlt    
  0x00007fb547da4015: hlt    
  0x00007fb547da4016: hlt    
  0x00007fb547da4017: hlt    
  0x00007fb547da4018: hlt    
  0x00007fb547da4019: hlt    
  0x00007fb547da401a: hlt    
  0x00007fb547da401b: hlt    
  0x00007fb547da401c: hlt    
  0x00007fb547da401d: hlt    
  0x00007fb547da401e: hlt    
  0x00007fb547da401f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da4020: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da4025: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da402f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da4033: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da4038: hlt    
[Deopt Handler Code]
  0x00007fb547da4039: movabs $0x7fb547da4039,%r10  ;   {section_word}
  0x00007fb547da4043: push   %r10
  0x00007fb547da4045: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da404a: hlt    
  0x00007fb547da404b: hlt    
  0x00007fb547da404c: hlt    
  0x00007fb547da404d: hlt    
  0x00007fb547da404e: hlt    
  0x00007fb547da404f: hlt    

ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop }pc offsets: 327 360 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='61' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='6473' iicount='6473' stamp='0.766' comment='tiered' hot_count='6473'/>
<writer thread='1329935'/>
<nmethod compile_id='59' compiler='c2' level='4' entry='0x00007fb54f2c9ea0' size='1592' address='0x00007fb54f2c9d10' relocation_offset='376' insts_offset='400' stub_offset='816' scopes_data_offset='864' scopes_pcs_offset='1104' dependencies_offset='1568' nul_chk_table_offset='1576' metadata_offset='840' method='java.lang.String hashCode ()I' bytes='49' count='6021' iicount='6021' stamp='0.766'/>
<make_not_entrant thread='1329935' compile_id='6' compiler='c1' level='3' stamp='0.766'/>
<writer thread='1329923'/>
<task_queued compile_id='62' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='1536' iicount='1536' stamp='0.766' comment='tiered' hot_count='1536'/>
<writer thread='1329935'/>
<print_nmethod stamp='0.766'>
Compiled method (c2)     766   59       4       java.lang.String::hashCode (49 bytes)
 total in heap  [0x00007fb54f2c9d10,0x00007fb54f2ca348] = 1592
 relocation     [0x00007fb54f2c9e88,0x00007fb54f2c9ea0] = 24
 main code      [0x00007fb54f2c9ea0,0x00007fb54f2ca040] = 416
 stub code      [0x00007fb54f2ca040,0x00007fb54f2ca058] = 24
 metadata       [0x00007fb54f2ca058,0x00007fb54f2ca070] = 24
 scopes data    [0x00007fb54f2ca070,0x00007fb54f2ca160] = 240
 scopes pcs     [0x00007fb54f2ca160,0x00007fb54f2ca330] = 464
 dependencies   [0x00007fb54f2ca330,0x00007fb54f2ca338] = 8
 nul chk table  [0x00007fb54f2ca338,0x00007fb54f2ca348] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x00007fb54f2c9ea0, 0x00007fb54f2ca058]  440 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x00007fb54f2c9ea0: mov    0x8(%rsi),%r10d
  0x00007fb54f2c9ea4: movabs $0x800000000,%r12
  0x00007fb54f2c9eae: add    %r12,%r10
  0x00007fb54f2c9eb1: xor    %r12,%r12
  0x00007fb54f2c9eb4: cmp    %r10,%rax
  0x00007fb54f2c9eb7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2c9ebd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2c9ec0: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2c9ec7: push   %rbp
  0x00007fb54f2c9ec8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)

  0x00007fb54f2c9ecc: vmovq  %rsi,%xmm0
  0x00007fb54f2c9ed1: mov    0x10(%rsi),%eax    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x00007fb54f2c9ed4: test   %eax,%eax
  0x00007fb54f2c9ed6: je     0x00007fb54f2c9ee8  ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)

  0x00007fb54f2c9ed8: add    $0x20,%rsp
  0x00007fb54f2c9edc: pop    %rbp
  0x00007fb54f2c9edd: mov    0x108(%r15),%r10
  0x00007fb54f2c9ee4: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2c9ee7: retq   
  0x00007fb54f2c9ee8: mov    0xc(%rsi),%ecx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x00007fb54f2c9eeb: mov    0xc(%r12,%rcx,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x00007fb54f2ca034
  0x00007fb54f2c9ef0: test   %r10d,%r10d
  0x00007fb54f2c9ef3: jbe    0x00007fb54f2ca010  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x00007fb54f2c9ef9: movsbl 0x14(%rsi),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb54f2c9efd: test   %ebp,%ebp
  0x00007fb54f2c9eff: jne    0x00007fb54f2ca024  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb54f2c9f05: mov    %r10d,%r8d
  0x00007fb54f2c9f08: dec    %r8d
  0x00007fb54f2c9f0b: cmp    %r10d,%r8d
  0x00007fb54f2c9f0e: jae    0x00007fb54f2c9ff8
  0x00007fb54f2c9f14: movzbl 0x10(%r12,%rcx,8),%r11d  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9f1a: mov    %r10d,%ebx
  0x00007fb54f2c9f1d: add    $0xfffffffd,%ebx
  0x00007fb54f2c9f20: lea    (%r12,%rcx,8),%rdx  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x00007fb54f2c9f24: mov    $0x80000000,%ecx
  0x00007fb54f2c9f29: cmp    %ebx,%r8d
  0x00007fb54f2c9f2c: cmovl  %ecx,%ebx
  0x00007fb54f2c9f2f: mov    $0x1,%edi
  0x00007fb54f2c9f34: cmp    $0x1,%ebx
  0x00007fb54f2c9f37: jle    0x00007fb54f2c9fc2
  0x00007fb54f2c9f3d: mov    %r11d,%r9d
  0x00007fb54f2c9f40: shl    $0x5,%r9d
  0x00007fb54f2c9f44: sub    %r11d,%r9d
  0x00007fb54f2c9f47: mov    $0xfa0,%esi
  0x00007fb54f2c9f4c: mov    %ebx,%r8d
  0x00007fb54f2c9f4f: sub    %edi,%r8d
  0x00007fb54f2c9f52: cmp    %esi,%r8d
  0x00007fb54f2c9f55: cmovg  %esi,%r8d
  0x00007fb54f2c9f59: add    %edi,%r8d
  0x00007fb54f2c9f5c: nopl   0x0(%rax)          ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9f60: movslq %edi,%rax          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9f63: movzbl 0x10(%rdx,%rax,1),%r11d
  0x00007fb54f2c9f69: movzbl 0x13(%rdx,%rax,1),%ebp
  0x00007fb54f2c9f6e: movzbl 0x11(%rdx,%rax,1),%ecx
  0x00007fb54f2c9f73: movzbl 0x12(%rdx,%rax,1),%eax
  0x00007fb54f2c9f78: add    %r11d,%r9d
  0x00007fb54f2c9f7b: mov    %r9d,%r13d
  0x00007fb54f2c9f7e: shl    $0x5,%r13d
  0x00007fb54f2c9f82: sub    %r9d,%r13d
  0x00007fb54f2c9f85: add    %ecx,%r13d
  0x00007fb54f2c9f88: mov    %r13d,%r9d
  0x00007fb54f2c9f8b: shl    $0x5,%r9d
  0x00007fb54f2c9f8f: sub    %r13d,%r9d
  0x00007fb54f2c9f92: add    %eax,%r9d
  0x00007fb54f2c9f95: mov    %r9d,%r11d
  0x00007fb54f2c9f98: shl    $0x5,%r11d
  0x00007fb54f2c9f9c: sub    %r9d,%r11d
  0x00007fb54f2c9f9f: add    %ebp,%r11d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9fa2: mov    %r11d,%r9d
  0x00007fb54f2c9fa5: shl    $0x5,%r9d
  0x00007fb54f2c9fa9: sub    %r11d,%r9d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9fac: add    $0x4,%edi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9faf: cmp    %r8d,%edi
  0x00007fb54f2c9fb2: jl     0x00007fb54f2c9f60  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9fb4: mov    0x108(%r15),%r14   ; ImmutableOopMap{rdx=Oop xmm0=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9fbb: test   %eax,(%r14)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {poll}
  0x00007fb54f2c9fbe: cmp    %ebx,%edi
  0x00007fb54f2c9fc0: jl     0x00007fb54f2c9f4c
  0x00007fb54f2c9fc2: cmp    %r10d,%edi
  0x00007fb54f2c9fc5: jge    0x00007fb54f2c9ff3  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9fc7: movzbl 0x10(%rdx,%rdi,1),%r8d
  0x00007fb54f2c9fcd: mov    %r11d,%eax
  0x00007fb54f2c9fd0: shl    $0x5,%eax
  0x00007fb54f2c9fd3: sub    %r11d,%eax
  0x00007fb54f2c9fd6: add    %r8d,%eax          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9fd9: inc    %edi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9fdb: cmp    %r10d,%edi
  0x00007fb54f2c9fde: jge    0x00007fb54f2c9fe5  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb54f2c9fe0: mov    %eax,%r11d
  0x00007fb54f2c9fe3: jmp    0x00007fb54f2c9fc7
  0x00007fb54f2c9fe5: vmovq  %xmm0,%r10
  0x00007fb54f2c9fea: mov    %eax,0x10(%r10)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44 (line 1505)

  0x00007fb54f2c9fee: jmpq   0x00007fb54f2c9ed8
  0x00007fb54f2c9ff3: mov    %r11d,%eax
  0x00007fb54f2c9ff6: jmp    0x00007fb54f2c9fe5
  0x00007fb54f2c9ff8: mov    $0xffffff7e,%esi
  0x00007fb54f2c9ffd: vmovq  %xmm0,%rbp
  0x00007fb54f2ca002: mov    %r10d,0x4(%rsp)
  0x00007fb54f2ca007: mov    %ecx,0x8(%rsp)
  0x00007fb54f2ca00b: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop [8]=NarrowOop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2ca010: mov    $0xffffff4d,%esi
  0x00007fb54f2ca015: vmovq  %xmm0,%rbp
  0x00007fb54f2ca01a: mov    %r10d,(%rsp)
  0x00007fb54f2ca01e: nop
  0x00007fb54f2ca01f: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2ca024: mov    $0xffffff4d,%esi
  0x00007fb54f2ca029: vmovsd %xmm0,0x8(%rsp)
  0x00007fb54f2ca02f: callq  0x00007fb547849e00  ; ImmutableOopMap{[8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2ca034: mov    $0xfffffff6,%esi
  0x00007fb54f2ca039: xchg   %ax,%ax
  0x00007fb54f2ca03b: callq  0x00007fb547849e00  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call UncommonTrapBlob}
[Exception Handler]
[Stub Code]
  0x00007fb54f2ca040: jmpq   0x00007fb547861300  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb54f2ca045: callq  0x00007fb54f2ca04a
  0x00007fb54f2ca04a: subq   $0x5,(%rsp)
  0x00007fb54f2ca04f: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2ca054: hlt    
  0x00007fb54f2ca055: hlt    
  0x00007fb54f2ca056: hlt    
  0x00007fb54f2ca057: hlt    

ImmutableOopMap{rdx=Oop xmm0=Oop }pc offsets: 283 
ImmutableOopMap{rbp=Oop [8]=NarrowOop }pc offsets: 368 
ImmutableOopMap{rbp=Oop }pc offsets: 388 
ImmutableOopMap{[8]=Oop }pc offsets: 404 
ImmutableOopMap{}pc offsets: 416 </print_nmethod>
<writer thread='1329936'/>
<nmethod compile_id='48' compiler='c1' level='3' entry='0x00007fb547da4360' size='1656' address='0x00007fb547da4190' relocation_offset='376' insts_offset='464' stub_offset='1264' scopes_data_offset='1336' scopes_pcs_offset='1472' dependencies_offset='1648' metadata_offset='1312' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1696' iicount='1696' stamp='0.771'/>
<print_nmethod stamp='0.771'>
Compiled method (c1)     771   48       3       java.util.HashMap::newNode (13 bytes)
 total in heap  [0x00007fb547da4190,0x00007fb547da4808] = 1656
 relocation     [0x00007fb547da4308,0x00007fb547da4350] = 72
 main code      [0x00007fb547da4360,0x00007fb547da4680] = 800
 stub code      [0x00007fb547da4680,0x00007fb547da46b0] = 48
 metadata       [0x00007fb547da46b0,0x00007fb547da46c8] = 24
 scopes data    [0x00007fb547da46c8,0x00007fb547da4750] = 136
 scopes pcs     [0x00007fb547da4750,0x00007fb547da4800] = 176
 dependencies   [0x00007fb547da4800,0x00007fb547da4808] = 8
----------------------------------------------------------------------
java/util/HashMap.newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;  [0x00007fb547da4360, 0x00007fb547da46b0]  848 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdda198} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007fb547da4360: mov    0x8(%rsi),%r10d
  0x00007fb547da4364: movabs $0x800000000,%r12
  0x00007fb547da436e: add    %r12,%r10
  0x00007fb547da4371: xor    %r12,%r12
  0x00007fb547da4374: cmp    %rax,%r10
  0x00007fb547da4377: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da437d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da4380: mov    %eax,-0x14000(%rsp)
  0x00007fb547da4387: push   %rbp
  0x00007fb547da4388: sub    $0x60,%rsp
  0x00007fb547da438c: mov    %rdx,%rbx
  0x00007fb547da438f: mov    %rcx,%r11
  0x00007fb547da4392: movabs $0x7fb52cf5d280,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdda198} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da439c: mov    0x100(%rdx),%edi
  0x00007fb547da43a2: add    $0x8,%edi
  0x00007fb547da43a5: mov    %edi,0x100(%rdx)
  0x00007fb547da43ab: and    $0x1ff8,%edi
  0x00007fb547da43b1: cmp    $0x0,%edi
  0x00007fb547da43b4: je     0x00007fb547da4528
  0x00007fb547da43ba: movabs $0x800031208,%rdx  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x00007fb547da43c4: mov    0x118(%r15),%rax
  0x00007fb547da43cb: lea    0x20(%rax),%rdi
  0x00007fb547da43cf: cmp    0x128(%r15),%rdi
  0x00007fb547da43d6: ja     0x00007fb547da4549
  0x00007fb547da43dc: mov    %rdi,0x118(%r15)
  0x00007fb547da43e3: mov    0xb8(%rdx),%rcx
  0x00007fb547da43ea: mov    %rcx,(%rax)
  0x00007fb547da43ed: mov    %rdx,%rcx
  0x00007fb547da43f0: movabs $0x800000000,%r12
  0x00007fb547da43fa: sub    %r12,%rcx
  0x00007fb547da43fd: xor    %r12,%r12
  0x00007fb547da4400: mov    %ecx,0x8(%rax)
  0x00007fb547da4403: xor    %rcx,%rcx
  0x00007fb547da4406: mov    %ecx,0xc(%rax)
  0x00007fb547da4409: xor    %rcx,%rcx
  0x00007fb547da440c: mov    %rcx,0x10(%rax)
  0x00007fb547da4410: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1815)

  0x00007fb547da4414: mov    %rax,%rsi
  0x00007fb547da4417: movabs $0x7fb52cf5d280,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdda198} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da4421: addq   $0x1,0x140(%rdi)
  0x00007fb547da4429: movabs $0x7fb52cf5d0e0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cef2bb0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fb547da4433: mov    0x100(%rsi),%edi
  0x00007fb547da4439: add    $0x8,%edi
  0x00007fb547da443c: mov    %edi,0x100(%rsi)
  0x00007fb547da4442: and    $0x7ffff8,%edi
  0x00007fb547da4448: cmp    $0x0,%edi
  0x00007fb547da444b: je     0x00007fb547da4556
  0x00007fb547da4451: mov    %rax,%rsi
  0x00007fb547da4454: movabs $0x7fb52cf5d0e0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cef2bb0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fb547da445e: addq   $0x1,0x140(%rdi)
  0x00007fb547da4466: movabs $0x7fb52cedd4a0,%rsi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547da4470: mov    0x100(%rsi),%edi
  0x00007fb547da4476: add    $0x8,%edi
  0x00007fb547da4479: mov    %edi,0x100(%rsi)
  0x00007fb547da447f: and    $0x7ffff8,%edi
  0x00007fb547da4485: cmp    $0x0,%edi
  0x00007fb547da4488: je     0x00007fb547da4577
  0x00007fb547da448e: mov    %ebx,0xc(%rax)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1815)

  0x00007fb547da4491: movsbl 0x30(%r15),%esi
  0x00007fb547da4496: cmp    $0x0,%esi
  0x00007fb547da4499: jne    0x00007fb547da4598
  0x00007fb547da449f: mov    %r11,%r10
  0x00007fb547da44a2: shr    $0x3,%r10
  0x00007fb547da44a6: mov    %r10d,0x10(%rax)
  0x00007fb547da44aa: mov    %rax,%rsi
  0x00007fb547da44ad: xor    %r11,%rsi
  0x00007fb547da44b0: shr    $0x15,%rsi
  0x00007fb547da44b4: cmp    $0x0,%rsi
  0x00007fb547da44b8: jne    0x00007fb547da45b7  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1815)

  0x00007fb547da44be: movsbl 0x30(%r15),%esi
  0x00007fb547da44c3: cmp    $0x0,%esi
  0x00007fb547da44c6: jne    0x00007fb547da45cf
  0x00007fb547da44cc: mov    %r8,%r10
  0x00007fb547da44cf: shr    $0x3,%r10
  0x00007fb547da44d3: mov    %r10d,0x14(%rax)
  0x00007fb547da44d7: mov    %rax,%rsi
  0x00007fb547da44da: xor    %r8,%rsi
  0x00007fb547da44dd: shr    $0x15,%rsi
  0x00007fb547da44e1: cmp    $0x0,%rsi
  0x00007fb547da44e5: jne    0x00007fb547da45ee  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1815)

  0x00007fb547da44eb: movsbl 0x30(%r15),%esi
  0x00007fb547da44f0: cmp    $0x0,%esi
  0x00007fb547da44f3: jne    0x00007fb547da4606
  0x00007fb547da44f9: mov    %r9,%r10
  0x00007fb547da44fc: shr    $0x3,%r10
  0x00007fb547da4500: mov    %r10d,0x18(%rax)
  0x00007fb547da4504: mov    %rax,%rsi
  0x00007fb547da4507: xor    %r9,%rsi
  0x00007fb547da450a: shr    $0x15,%rsi
  0x00007fb547da450e: cmp    $0x0,%rsi
  0x00007fb547da4512: jne    0x00007fb547da4625  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 290)
                                                ; - java.util.HashMap::newNode@9 (line 1815)

  0x00007fb547da4518: add    $0x60,%rsp
  0x00007fb547da451c: pop    %rbp
  0x00007fb547da451d: mov    0x108(%r15),%r10
  0x00007fb547da4524: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da4527: retq   
  0x00007fb547da4528: movabs $0x7fb52cdda198,%r10  ;   {metadata({method} {0x00007fb52cdda198} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00007fb547da4532: mov    %r10,0x8(%rsp)
  0x00007fb547da4537: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da453f: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop r11=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1815)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da4544: jmpq   0x00007fb547da43ba
  0x00007fb547da4549: mov    %rdx,%rdx
  0x00007fb547da454c: callq  0x00007fb5478f3900  ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1815)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547da4551: jmpq   0x00007fb547da4414
  0x00007fb547da4556: movabs $0x7fb52cef2bb0,%r10  ;   {metadata({method} {0x00007fb52cef2bb0} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00007fb547da4560: mov    %r10,0x8(%rsp)
  0x00007fb547da4565: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da456d: callq  0x00007fb5478f8100  ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1815)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da4572: jmpq   0x00007fb547da4451
  0x00007fb547da4577: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547da4581: mov    %r10,0x8(%rsp)
  0x00007fb547da4586: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da458e: callq  0x00007fb5478f8100  ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1815)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da4593: jmpq   0x00007fb547da448e
  0x00007fb547da4598: mov    0x10(%rax),%esi
  0x00007fb547da459b: shl    $0x3,%rsi
  0x00007fb547da459f: cmp    $0x0,%rsi
  0x00007fb547da45a3: je     0x00007fb547da449f
  0x00007fb547da45a9: mov    %rsi,(%rsp)
  0x00007fb547da45ad: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da45b2: jmpq   0x00007fb547da449f
  0x00007fb547da45b7: cmp    $0x0,%r11
  0x00007fb547da45bb: je     0x00007fb547da44be
  0x00007fb547da45c1: mov    %rax,(%rsp)
  0x00007fb547da45c5: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da45ca: jmpq   0x00007fb547da44be
  0x00007fb547da45cf: mov    0x14(%rax),%esi
  0x00007fb547da45d2: shl    $0x3,%rsi
  0x00007fb547da45d6: cmp    $0x0,%rsi
  0x00007fb547da45da: je     0x00007fb547da44cc
  0x00007fb547da45e0: mov    %rsi,(%rsp)
  0x00007fb547da45e4: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da45e9: jmpq   0x00007fb547da44cc
  0x00007fb547da45ee: cmp    $0x0,%r8
  0x00007fb547da45f2: je     0x00007fb547da44eb
  0x00007fb547da45f8: mov    %rax,(%rsp)
  0x00007fb547da45fc: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da4601: jmpq   0x00007fb547da44eb
  0x00007fb547da4606: mov    0x18(%rax),%esi
  0x00007fb547da4609: shl    $0x3,%rsi
  0x00007fb547da460d: cmp    $0x0,%rsi
  0x00007fb547da4611: je     0x00007fb547da44f9
  0x00007fb547da4617: mov    %rsi,(%rsp)
  0x00007fb547da461b: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547da4620: jmpq   0x00007fb547da44f9
  0x00007fb547da4625: cmp    $0x0,%r9
  0x00007fb547da4629: je     0x00007fb547da4518
  0x00007fb547da462f: mov    %rax,(%rsp)
  0x00007fb547da4633: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547da4638: jmpq   0x00007fb547da4518
  0x00007fb547da463d: nop
  0x00007fb547da463e: nop
  0x00007fb547da463f: mov    0x440(%r15),%rax
  0x00007fb547da4646: movabs $0x0,%r10
  0x00007fb547da4650: mov    %r10,0x440(%r15)
  0x00007fb547da4657: movabs $0x0,%r10
  0x00007fb547da4661: mov    %r10,0x448(%r15)
  0x00007fb547da4668: add    $0x60,%rsp
  0x00007fb547da466c: pop    %rbp
  0x00007fb547da466d: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da4672: hlt    
  0x00007fb547da4673: hlt    
  0x00007fb547da4674: hlt    
  0x00007fb547da4675: hlt    
  0x00007fb547da4676: hlt    
  0x00007fb547da4677: hlt    
  0x00007fb547da4678: hlt    
  0x00007fb547da4679: hlt    
  0x00007fb547da467a: hlt    
  0x00007fb547da467b: hlt    
  0x00007fb547da467c: hlt    
  0x00007fb547da467d: hlt    
  0x00007fb547da467e: hlt    
  0x00007fb547da467f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da4680: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da4685: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da468f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da4693: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da4698: hlt    
[Deopt Handler Code]
  0x00007fb547da4699: movabs $0x7fb547da4699,%r10  ;   {section_word}
  0x00007fb547da46a3: push   %r10
  0x00007fb547da46a5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da46aa: hlt    
  0x00007fb547da46ab: hlt    
  0x00007fb547da46ac: hlt    
  0x00007fb547da46ad: hlt    
  0x00007fb547da46ae: hlt    
  0x00007fb547da46af: hlt    

ImmutableOopMap{rsi=Oop r11=Oop r8=Oop r9=Oop }pc offsets: 484 
ImmutableOopMap{r11=Oop r8=Oop r9=Oop }pc offsets: 497 
ImmutableOopMap{r11=Oop r8=Oop r9=Oop rax=Oop }pc offsets: 530 563 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='63' method='java.lang.Module getDescriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='128' iicount='128' level='1' stamp='0.778' comment='tiered' hot_count='128'/>
<writer thread='1329935'/>
<nmethod compile_id='61' compiler='c2' level='4' entry='0x00007fb54f2ca520' size='640' address='0x00007fb54f2ca390' relocation_offset='376' insts_offset='400' stub_offset='496' scopes_data_offset='528' scopes_pcs_offset='552' dependencies_offset='632' metadata_offset='520' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='7082' iicount='7082' stamp='0.778'/>
<make_not_entrant thread='1329935' compile_id='24' compiler='c1' level='3' stamp='0.778'/>
<print_nmethod stamp='0.778'>
Compiled method (c2)     777   61       4       java.util.ImmutableCollections$SetN$SetNIterator::hasNext (13 bytes)
 total in heap  [0x00007fb54f2ca390,0x00007fb54f2ca610] = 640
 relocation     [0x00007fb54f2ca508,0x00007fb54f2ca518] = 16
 main code      [0x00007fb54f2ca520,0x00007fb54f2ca580] = 96
 stub code      [0x00007fb54f2ca580,0x00007fb54f2ca598] = 24
 metadata       [0x00007fb54f2ca598,0x00007fb54f2ca5a0] = 8
 scopes data    [0x00007fb54f2ca5a0,0x00007fb54f2ca5b8] = 24
 scopes pcs     [0x00007fb54f2ca5b8,0x00007fb54f2ca608] = 80
 dependencies   [0x00007fb54f2ca608,0x00007fb54f2ca610] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.hasNext()Z  [0x00007fb54f2ca520, 0x00007fb54f2ca598]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cf43260} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$SetN$SetNIterator&apos;
  #           [sp+0x20]  (sp of caller)
  0x00007fb54f2ca520: mov    0x8(%rsi),%r10d
  0x00007fb54f2ca524: movabs $0x800000000,%r12
  0x00007fb54f2ca52e: add    %r12,%r10
  0x00007fb54f2ca531: xor    %r12,%r12
  0x00007fb54f2ca534: cmp    %r10,%rax
  0x00007fb54f2ca537: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2ca53d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2ca540: sub    $0x18,%rsp
  0x00007fb54f2ca547: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 637)

  0x00007fb54f2ca54c: mov    0xc(%rsi),%r11d
  0x00007fb54f2ca550: test   %r11d,%r11d
  0x00007fb54f2ca553: jle    0x00007fb54f2ca56a  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 637)

  0x00007fb54f2ca555: mov    $0x1,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@12 (line 637)

  0x00007fb54f2ca55a: add    $0x10,%rsp
  0x00007fb54f2ca55e: pop    %rbp
  0x00007fb54f2ca55f: mov    0x108(%r15),%r10
  0x00007fb54f2ca566: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2ca569: retq   
  0x00007fb54f2ca56a: xor    %eax,%eax
  0x00007fb54f2ca56c: jmp    0x00007fb54f2ca55a
  0x00007fb54f2ca56e: hlt    
  0x00007fb54f2ca56f: hlt    
  0x00007fb54f2ca570: hlt    
  0x00007fb54f2ca571: hlt    
  0x00007fb54f2ca572: hlt    
  0x00007fb54f2ca573: hlt    
  0x00007fb54f2ca574: hlt    
  0x00007fb54f2ca575: hlt    
  0x00007fb54f2ca576: hlt    
  0x00007fb54f2ca577: hlt    
  0x00007fb54f2ca578: hlt    
  0x00007fb54f2ca579: hlt    
  0x00007fb54f2ca57a: hlt    
  0x00007fb54f2ca57b: hlt    
  0x00007fb54f2ca57c: hlt    
  0x00007fb54f2ca57d: hlt    
  0x00007fb54f2ca57e: hlt    
  0x00007fb54f2ca57f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2ca580: jmpq   0x00007fb547861300  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb54f2ca585: callq  0x00007fb54f2ca58a
  0x00007fb54f2ca58a: subq   $0x5,(%rsp)
  0x00007fb54f2ca58f: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2ca594: hlt    
  0x00007fb54f2ca595: hlt    
  0x00007fb54f2ca596: hlt    
  0x00007fb54f2ca597: hlt    
</print_nmethod>
<writer thread='1329936'/>
<nmethod compile_id='34' compiler='c1' level='1' entry='0x00007fb54f2ca840' size='704' address='0x00007fb54f2ca690' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.module.ResolvedModule reference ()Ljava/lang/module/ModuleReference;' bytes='5' count='635' iicount='635' stamp='0.779'/>
<print_nmethod stamp='0.779'>
Compiled method (c1)     779   34       1       java.lang.module.ResolvedModule::reference (5 bytes)
 total in heap  [0x00007fb54f2ca690,0x00007fb54f2ca950] = 704
 relocation     [0x00007fb54f2ca808,0x00007fb54f2ca828] = 32
 main code      [0x00007fb54f2ca840,0x00007fb54f2ca8c0] = 128
 stub code      [0x00007fb54f2ca8c0,0x00007fb54f2ca8f0] = 48
 metadata       [0x00007fb54f2ca8f0,0x00007fb54f2ca8f8] = 8
 scopes data    [0x00007fb54f2ca8f8,0x00007fb54f2ca908] = 16
 scopes pcs     [0x00007fb54f2ca908,0x00007fb54f2ca948] = 64
 dependencies   [0x00007fb54f2ca948,0x00007fb54f2ca950] = 8
----------------------------------------------------------------------
java/lang/module/ResolvedModule.reference()Ljava/lang/module/ModuleReference;  [0x00007fb54f2ca840, 0x00007fb54f2ca8f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cf485e0} &apos;reference&apos; &apos;()Ljava/lang/module/ModuleReference;&apos; in &apos;java/lang/module/ResolvedModule&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2ca840: mov    0x8(%rsi),%r10d
  0x00007fb54f2ca844: movabs $0x800000000,%r12
  0x00007fb54f2ca84e: add    %r12,%r10
  0x00007fb54f2ca851: xor    %r12,%r12
  0x00007fb54f2ca854: cmp    %rax,%r10
  0x00007fb54f2ca857: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2ca85d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2ca860: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2ca867: push   %rbp
  0x00007fb54f2ca868: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ResolvedModule::reference@0 (line 68)

  0x00007fb54f2ca86c: mov    0x10(%rsi),%eax
  0x00007fb54f2ca86f: shl    $0x3,%rax          ;*getfield mref {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ResolvedModule::reference@1 (line 68)

  0x00007fb54f2ca873: add    $0x30,%rsp
  0x00007fb54f2ca877: pop    %rbp
  0x00007fb54f2ca878: mov    0x108(%r15),%r10
  0x00007fb54f2ca87f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2ca882: retq   
  0x00007fb54f2ca883: nop
  0x00007fb54f2ca884: nop
  0x00007fb54f2ca885: mov    0x440(%r15),%rax
  0x00007fb54f2ca88c: movabs $0x0,%r10
  0x00007fb54f2ca896: mov    %r10,0x440(%r15)
  0x00007fb54f2ca89d: movabs $0x0,%r10
  0x00007fb54f2ca8a7: mov    %r10,0x448(%r15)
  0x00007fb54f2ca8ae: add    $0x30,%rsp
  0x00007fb54f2ca8b2: pop    %rbp
  0x00007fb54f2ca8b3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2ca8b8: hlt    
  0x00007fb54f2ca8b9: hlt    
  0x00007fb54f2ca8ba: hlt    
  0x00007fb54f2ca8bb: hlt    
  0x00007fb54f2ca8bc: hlt    
  0x00007fb54f2ca8bd: hlt    
  0x00007fb54f2ca8be: hlt    
  0x00007fb54f2ca8bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2ca8c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2ca8c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2ca8cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2ca8d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2ca8d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2ca8d9: movabs $0x7fb54f2ca8d9,%r10  ;   {section_word}
  0x00007fb54f2ca8e3: push   %r10
  0x00007fb54f2ca8e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2ca8ea: hlt    
  0x00007fb54f2ca8eb: hlt    
  0x00007fb54f2ca8ec: hlt    
  0x00007fb54f2ca8ed: hlt    
  0x00007fb54f2ca8ee: hlt    
  0x00007fb54f2ca8ef: hlt    
</print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='64' method='jdk.internal.module.ModuleBootstrap$2 hasNext ()Z' bytes='30' count='640' iicount='640' level='3' stamp='0.781' comment='tiered' hot_count='640'/>
<writer thread='1329935'/>
<nmethod compile_id='62' compiler='c2' level='4' entry='0x00007fb54f2cab20' size='560' address='0x00007fb54f2ca990' relocation_offset='376' insts_offset='400' stub_offset='464' scopes_data_offset='496' scopes_pcs_offset='504' dependencies_offset='552' metadata_offset='488' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='1797' iicount='1797' stamp='0.781'/>
<make_not_entrant thread='1329935' compile_id='49' compiler='c1' level='3' stamp='0.781'/>
<print_nmethod stamp='0.781'>
Compiled method (c2)     781   62       4       java.util.HashMap::afterNodeInsertion (1 bytes)
 total in heap  [0x00007fb54f2ca990,0x00007fb54f2cabc0] = 560
 relocation     [0x00007fb54f2cab08,0x00007fb54f2cab18] = 16
 main code      [0x00007fb54f2cab20,0x00007fb54f2cab60] = 64
 stub code      [0x00007fb54f2cab60,0x00007fb54f2cab78] = 24
 metadata       [0x00007fb54f2cab78,0x00007fb54f2cab80] = 8
 scopes data    [0x00007fb54f2cab80,0x00007fb54f2cab88] = 8
 scopes pcs     [0x00007fb54f2cab88,0x00007fb54f2cabb8] = 48
 dependencies   [0x00007fb54f2cabb8,0x00007fb54f2cabc0] = 8
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion(Z)V  [0x00007fb54f2cab20, 0x00007fb54f2cab78]  88 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cdda668} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x20]  (sp of caller)
  0x00007fb54f2cab20: mov    0x8(%rsi),%r10d
  0x00007fb54f2cab24: movabs $0x800000000,%r12
  0x00007fb54f2cab2e: add    %r12,%r10
  0x00007fb54f2cab31: xor    %r12,%r12
  0x00007fb54f2cab34: cmp    %r10,%rax
  0x00007fb54f2cab37: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cab3d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cab40: sub    $0x18,%rsp
  0x00007fb54f2cab47: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1848)

  0x00007fb54f2cab4c: add    $0x10,%rsp
  0x00007fb54f2cab50: pop    %rbp
  0x00007fb54f2cab51: mov    0x108(%r15),%r10
  0x00007fb54f2cab58: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cab5b: retq   
  0x00007fb54f2cab5c: hlt    
  0x00007fb54f2cab5d: hlt    
  0x00007fb54f2cab5e: hlt    
  0x00007fb54f2cab5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cab60: jmpq   0x00007fb547861300  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb54f2cab65: callq  0x00007fb54f2cab6a
  0x00007fb54f2cab6a: subq   $0x5,(%rsp)
  0x00007fb54f2cab6f: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cab74: hlt    
  0x00007fb54f2cab75: hlt    
  0x00007fb54f2cab76: hlt    
  0x00007fb54f2cab77: hlt    
</print_nmethod>
<writer thread='1329936'/>
<nmethod compile_id='57' compiler='c1' level='3' entry='0x00007fb547da4a40' size='960' address='0x00007fb547da4890' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' metadata_offset='768' method='java.util.ImmutableCollections$Set12$1 hasNext ()Z' bytes='13' count='869' iicount='869' stamp='0.781'/>
<print_nmethod stamp='0.781'>
Compiled method (c1)     781   57       3       java.util.ImmutableCollections$Set12$1::hasNext (13 bytes)
 total in heap  [0x00007fb547da4890,0x00007fb547da4c50] = 960
 relocation     [0x00007fb547da4a08,0x00007fb547da4a30] = 40
 main code      [0x00007fb547da4a40,0x00007fb547da4b60] = 288
 stub code      [0x00007fb547da4b60,0x00007fb547da4b90] = 48
 metadata       [0x00007fb547da4b90,0x00007fb547da4b98] = 8
 scopes data    [0x00007fb547da4b98,0x00007fb547da4bc8] = 48
 scopes pcs     [0x00007fb547da4bc8,0x00007fb547da4c48] = 128
 dependencies   [0x00007fb547da4c48,0x00007fb547da4c50] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$Set12$1.hasNext()Z  [0x00007fb547da4a40, 0x00007fb547da4b90]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cf4b990} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da4a40: mov    0x8(%rsi),%r10d
  0x00007fb547da4a44: movabs $0x800000000,%r12
  0x00007fb547da4a4e: add    %r12,%r10
  0x00007fb547da4a51: xor    %r12,%r12
  0x00007fb547da4a54: cmp    %rax,%r10
  0x00007fb547da4a57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da4a5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da4a60: mov    %eax,-0x14000(%rsp)
  0x00007fb547da4a67: push   %rbp
  0x00007fb547da4a68: sub    $0x30,%rsp
  0x00007fb547da4a6c: movabs $0x7fb52cf5e850,%rax  ;   {metadata(method data for {method} {0x00007fb52cf4b990} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x00007fb547da4a76: mov    0x100(%rax),%edi
  0x00007fb547da4a7c: add    $0x8,%edi
  0x00007fb547da4a7f: mov    %edi,0x100(%rax)
  0x00007fb547da4a85: and    $0x1ff8,%edi
  0x00007fb547da4a8b: cmp    $0x0,%edi
  0x00007fb547da4a8e: je     0x00007fb547da4b02  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@0 (line 539)

  0x00007fb547da4a94: mov    0xc(%rsi),%eax     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@1 (line 539)

  0x00007fb547da4a97: cmp    $0x0,%eax
  0x00007fb547da4a9a: movabs $0x7fb52cf5e850,%rax  ;   {metadata(method data for {method} {0x00007fb52cf4b990} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x00007fb547da4aa4: movabs $0x140,%rsi
  0x00007fb547da4aae: jle    0x00007fb547da4abe
  0x00007fb547da4ab4: movabs $0x150,%rsi
  0x00007fb547da4abe: mov    (%rax,%rsi,1),%rdi
  0x00007fb547da4ac2: lea    0x1(%rdi),%rdi
  0x00007fb547da4ac6: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547da4aca: jle    0x00007fb547da4aea  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@4 (line 539)

  0x00007fb547da4ad0: movabs $0x7fb52cf5e850,%rax  ;   {metadata(method data for {method} {0x00007fb52cf4b990} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x00007fb547da4ada: incl   0x160(%rax)
  0x00007fb547da4ae0: mov    $0x1,%eax
  0x00007fb547da4ae5: jmpq   0x00007fb547da4aef  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@8 (line 539)

  0x00007fb547da4aea: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@12 (line 539)

  0x00007fb547da4aef: and    $0x1,%eax
  0x00007fb547da4af2: add    $0x30,%rsp
  0x00007fb547da4af6: pop    %rbp
  0x00007fb547da4af7: mov    0x108(%r15),%r10
  0x00007fb547da4afe: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da4b01: retq   
  0x00007fb547da4b02: movabs $0x7fb52cf4b990,%r10  ;   {metadata({method} {0x00007fb52cf4b990} &apos;hasNext&apos; &apos;()Z&apos; in &apos;java/util/ImmutableCollections$Set12$1&apos;)}
  0x00007fb547da4b0c: mov    %r10,0x8(%rsp)
  0x00007fb547da4b11: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da4b19: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@-1 (line 539)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da4b1e: jmpq   0x00007fb547da4a94
  0x00007fb547da4b23: nop
  0x00007fb547da4b24: nop
  0x00007fb547da4b25: mov    0x440(%r15),%rax
  0x00007fb547da4b2c: movabs $0x0,%r10
  0x00007fb547da4b36: mov    %r10,0x440(%r15)
  0x00007fb547da4b3d: movabs $0x0,%r10
  0x00007fb547da4b47: mov    %r10,0x448(%r15)
  0x00007fb547da4b4e: add    $0x30,%rsp
  0x00007fb547da4b52: pop    %rbp
  0x00007fb547da4b53: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da4b58: hlt    
  0x00007fb547da4b59: hlt    
  0x00007fb547da4b5a: hlt    
  0x00007fb547da4b5b: hlt    
  0x00007fb547da4b5c: hlt    
  0x00007fb547da4b5d: hlt    
  0x00007fb547da4b5e: hlt    
  0x00007fb547da4b5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da4b60: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da4b65: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da4b6f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da4b73: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da4b78: hlt    
[Deopt Handler Code]
  0x00007fb547da4b79: movabs $0x7fb547da4b79,%r10  ;   {section_word}
  0x00007fb547da4b83: push   %r10
  0x00007fb547da4b85: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da4b8a: hlt    
  0x00007fb547da4b8b: hlt    
  0x00007fb547da4b8c: hlt    
  0x00007fb547da4b8d: hlt    
  0x00007fb547da4b8e: hlt    
  0x00007fb547da4b8f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 222 </print_nmethod>
<nmethod compile_id='43' compiler='c1' level='1' entry='0x00007fb54f2cae40' size='704' address='0x00007fb54f2cac90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.util.ImmutableCollections$SetN size ()I' bytes='5' count='668' iicount='668' stamp='0.785'/>
<print_nmethod stamp='0.785'>
Compiled method (c1)     784   43       1       java.util.ImmutableCollections$SetN::size (5 bytes)
 total in heap  [0x00007fb54f2cac90,0x00007fb54f2caf50] = 704
 relocation     [0x00007fb54f2cae08,0x00007fb54f2cae28] = 32
 main code      [0x00007fb54f2cae40,0x00007fb54f2caec0] = 128
 stub code      [0x00007fb54f2caec0,0x00007fb54f2caef0] = 48
 metadata       [0x00007fb54f2caef0,0x00007fb54f2caef8] = 8
 scopes data    [0x00007fb54f2caef8,0x00007fb54f2caf08] = 16
 scopes pcs     [0x00007fb54f2caf08,0x00007fb54f2caf48] = 64
 dependencies   [0x00007fb54f2caf48,0x00007fb54f2caf50] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.size()I  [0x00007fb54f2cae40, 0x00007fb54f2caef0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cebb698} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ImmutableCollections$SetN&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cae40: mov    0x8(%rsi),%r10d
  0x00007fb54f2cae44: movabs $0x800000000,%r12
  0x00007fb54f2cae4e: add    %r12,%r10
  0x00007fb54f2cae51: xor    %r12,%r12
  0x00007fb54f2cae54: cmp    %rax,%r10
  0x00007fb54f2cae57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cae5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cae60: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cae67: push   %rbp
  0x00007fb54f2cae68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::size@0 (line 613)

  0x00007fb54f2cae6c: mov    0xc(%rsi),%eax     ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::size@1 (line 613)

  0x00007fb54f2cae6f: add    $0x30,%rsp
  0x00007fb54f2cae73: pop    %rbp
  0x00007fb54f2cae74: mov    0x108(%r15),%r10
  0x00007fb54f2cae7b: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cae7e: retq   
  0x00007fb54f2cae7f: nop
  0x00007fb54f2cae80: nop
  0x00007fb54f2cae81: mov    0x440(%r15),%rax
  0x00007fb54f2cae88: movabs $0x0,%r10
  0x00007fb54f2cae92: mov    %r10,0x440(%r15)
  0x00007fb54f2cae99: movabs $0x0,%r10
  0x00007fb54f2caea3: mov    %r10,0x448(%r15)
  0x00007fb54f2caeaa: add    $0x30,%rsp
  0x00007fb54f2caeae: pop    %rbp
  0x00007fb54f2caeaf: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2caeb4: hlt    
  0x00007fb54f2caeb5: hlt    
  0x00007fb54f2caeb6: hlt    
  0x00007fb54f2caeb7: hlt    
  0x00007fb54f2caeb8: hlt    
  0x00007fb54f2caeb9: hlt    
  0x00007fb54f2caeba: hlt    
  0x00007fb54f2caebb: hlt    
  0x00007fb54f2caebc: hlt    
  0x00007fb54f2caebd: hlt    
  0x00007fb54f2caebe: hlt    
  0x00007fb54f2caebf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2caec0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2caec5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2caecf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2caed3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2caed8: hlt    
[Deopt Handler Code]
  0x00007fb54f2caed9: movabs $0x7fb54f2caed9,%r10  ;   {section_word}
  0x00007fb54f2caee3: push   %r10
  0x00007fb54f2caee5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2caeea: hlt    
  0x00007fb54f2caeeb: hlt    
  0x00007fb54f2caeec: hlt    
  0x00007fb54f2caeed: hlt    
  0x00007fb54f2caeee: hlt    
  0x00007fb54f2caeef: hlt    
</print_nmethod>
<nmethod compile_id='64' compiler='c1' level='3' entry='0x00007fb547da4e60' size='1672' address='0x00007fb547da4c90' relocation_offset='376' insts_offset='464' stub_offset='1200' scopes_data_offset='1288' scopes_pcs_offset='1384' dependencies_offset='1640' nul_chk_table_offset='1648' metadata_offset='1280' method='jdk.internal.module.ModuleBootstrap$2 hasNext ()Z' bytes='30' count='642' iicount='642' stamp='0.788'/>
<print_nmethod stamp='0.788'>
Compiled method (c1)     787   64       3       jdk.internal.module.ModuleBootstrap$2::hasNext (30 bytes)
 total in heap  [0x00007fb547da4c90,0x00007fb547da5318] = 1672
 relocation     [0x00007fb547da4e08,0x00007fb547da4e58] = 80
 main code      [0x00007fb547da4e60,0x00007fb547da5140] = 736
 stub code      [0x00007fb547da5140,0x00007fb547da5190] = 80
 metadata       [0x00007fb547da5190,0x00007fb547da5198] = 8
 scopes data    [0x00007fb547da5198,0x00007fb547da51f8] = 96
 scopes pcs     [0x00007fb547da51f8,0x00007fb547da52f8] = 256
 dependencies   [0x00007fb547da52f8,0x00007fb547da5300] = 8
 nul chk table  [0x00007fb547da5300,0x00007fb547da5318] = 24
----------------------------------------------------------------------
jdk/internal/module/ModuleBootstrap$2.hasNext()Z  [0x00007fb547da4e60, 0x00007fb547da5190]  816 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cf6b460} &apos;hasNext&apos; &apos;()Z&apos; in &apos;jdk/internal/module/ModuleBootstrap$2&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da4e60: mov    0x8(%rsi),%r10d
  0x00007fb547da4e64: movabs $0x800000000,%r12
  0x00007fb547da4e6e: add    %r12,%r10
  0x00007fb547da4e71: xor    %r12,%r12
  0x00007fb547da4e74: cmp    %rax,%r10
  0x00007fb547da4e77: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da4e7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da4e80: mov    %eax,-0x14000(%rsp)
  0x00007fb547da4e87: push   %rbp
  0x00007fb547da4e88: sub    $0x30,%rsp
  0x00007fb547da4e8c: movabs $0x7fb52cf6d390,%rdi  ;   {metadata(method data for {method} {0x00007fb52cf6b460} &apos;hasNext&apos; &apos;()Z&apos; in &apos;jdk/internal/module/ModuleBootstrap$2&apos;)}
  0x00007fb547da4e96: mov    0x100(%rdi),%ebx
  0x00007fb547da4e9c: add    $0x8,%ebx
  0x00007fb547da4e9f: mov    %ebx,0x100(%rdi)
  0x00007fb547da4ea5: and    $0x1ff8,%ebx
  0x00007fb547da4eab: cmp    $0x0,%ebx
  0x00007fb547da4eae: je     0x00007fb547da50d7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@0 (line 981)

  0x00007fb547da4eb4: mov    0xc(%rsi),%edi
  0x00007fb547da4eb7: shl    $0x3,%rdi          ;*getfield val$iterator1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@1 (line 981)

  0x00007fb547da4ebb: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007fb547da50f8
  0x00007fb547da4ebe: mov    %rdi,%rbx
  0x00007fb547da4ec1: movabs $0x7fb52cf6d390,%rax  ;   {metadata(method data for {method} {0x00007fb52cf6b460} &apos;hasNext&apos; &apos;()Z&apos; in &apos;jdk/internal/module/ModuleBootstrap$2&apos;)}
  0x00007fb547da4ecb: mov    0x8(%rbx),%ebx
  0x00007fb547da4ece: movabs $0x800000000,%r12
  0x00007fb547da4ed8: add    %r12,%rbx
  0x00007fb547da4edb: xor    %r12,%r12
  0x00007fb547da4ede: cmp    0x150(%rax),%rbx
  0x00007fb547da4ee5: jne    0x00007fb547da4ef4
  0x00007fb547da4ee7: addq   $0x1,0x158(%rax)
  0x00007fb547da4eef: jmpq   0x00007fb547da4f5a
  0x00007fb547da4ef4: cmp    0x160(%rax),%rbx
  0x00007fb547da4efb: jne    0x00007fb547da4f0a
  0x00007fb547da4efd: addq   $0x1,0x168(%rax)
  0x00007fb547da4f05: jmpq   0x00007fb547da4f5a
  0x00007fb547da4f0a: cmpq   $0x0,0x150(%rax)
  0x00007fb547da4f15: jne    0x00007fb547da4f2e
  0x00007fb547da4f17: mov    %rbx,0x150(%rax)
  0x00007fb547da4f1e: movq   $0x1,0x158(%rax)
  0x00007fb547da4f29: jmpq   0x00007fb547da4f5a
  0x00007fb547da4f2e: cmpq   $0x0,0x160(%rax)
  0x00007fb547da4f39: jne    0x00007fb547da4f52
  0x00007fb547da4f3b: mov    %rbx,0x160(%rax)
  0x00007fb547da4f42: movq   $0x1,0x168(%rax)
  0x00007fb547da4f4d: jmpq   0x00007fb547da4f5a
  0x00007fb547da4f52: addq   $0x1,0x140(%rax)
  0x00007fb547da4f5a: mov    %rsi,0x20(%rsp)
  0x00007fb547da4f5f: mov    %rdi,%rsi          ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@4 (line 981)

  0x00007fb547da4f62: data16 xchg %ax,%ax
  0x00007fb547da4f65: movabs $0xffffffffffffffff,%rax
  0x00007fb547da4f6f: callq  0x00007fb54784aa80  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@4 (line 981)
                                                ;   {virtual_call}
  0x00007fb547da4f74: cmp    $0x0,%eax
  0x00007fb547da4f77: movabs $0x7fb52cf6d390,%rsi  ;   {metadata(method data for {method} {0x00007fb52cf6b460} &apos;hasNext&apos; &apos;()Z&apos; in &apos;jdk/internal/module/ModuleBootstrap$2&apos;)}
  0x00007fb547da4f81: movabs $0x178,%rdi
  0x00007fb547da4f8b: jne    0x00007fb547da4f9b
  0x00007fb547da4f91: movabs $0x188,%rdi
  0x00007fb547da4f9b: mov    (%rsi,%rdi,1),%rbx
  0x00007fb547da4f9f: lea    0x1(%rbx),%rbx
  0x00007fb547da4fa3: mov    %rbx,(%rsi,%rdi,1)
  0x00007fb547da4fa7: jne    0x00007fb547da50a5  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@9 (line 981)

  0x00007fb547da4fad: mov    0x20(%rsp),%rsi
  0x00007fb547da4fb2: mov    0x10(%rsi),%esi
  0x00007fb547da4fb5: shl    $0x3,%rsi          ;*getfield val$iterator2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@13 (line 981)

  0x00007fb547da4fb9: cmp    (%rsi),%rax        ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@16 (line 981)
                                                ; implicit exception: dispatches to 0x00007fb547da50fd
  0x00007fb547da4fbc: mov    %rsi,%rdi
  0x00007fb547da4fbf: movabs $0x7fb52cf6d390,%rbx  ;   {metadata(method data for {method} {0x00007fb52cf6b460} &apos;hasNext&apos; &apos;()Z&apos; in &apos;jdk/internal/module/ModuleBootstrap$2&apos;)}
  0x00007fb547da4fc9: mov    0x8(%rdi),%edi
  0x00007fb547da4fcc: movabs $0x800000000,%r12
  0x00007fb547da4fd6: add    %r12,%rdi
  0x00007fb547da4fd9: xor    %r12,%r12
  0x00007fb547da4fdc: cmp    0x1a8(%rbx),%rdi
  0x00007fb547da4fe3: jne    0x00007fb547da4ff2
  0x00007fb547da4fe5: addq   $0x1,0x1b0(%rbx)
  0x00007fb547da4fed: jmpq   0x00007fb547da5058
  0x00007fb547da4ff2: cmp    0x1b8(%rbx),%rdi
  0x00007fb547da4ff9: jne    0x00007fb547da5008
  0x00007fb547da4ffb: addq   $0x1,0x1c0(%rbx)
  0x00007fb547da5003: jmpq   0x00007fb547da5058
  0x00007fb547da5008: cmpq   $0x0,0x1a8(%rbx)
  0x00007fb547da5013: jne    0x00007fb547da502c
  0x00007fb547da5015: mov    %rdi,0x1a8(%rbx)
  0x00007fb547da501c: movq   $0x1,0x1b0(%rbx)
  0x00007fb547da5027: jmpq   0x00007fb547da5058
  0x00007fb547da502c: cmpq   $0x0,0x1b8(%rbx)
  0x00007fb547da5037: jne    0x00007fb547da5050
  0x00007fb547da5039: mov    %rdi,0x1b8(%rbx)
  0x00007fb547da5040: movq   $0x1,0x1c0(%rbx)
  0x00007fb547da504b: jmpq   0x00007fb547da5058
  0x00007fb547da5050: addq   $0x1,0x198(%rbx)
  0x00007fb547da5058: nopl   0x0(%rax,%rax,1)
  0x00007fb547da505d: movabs $0xffffffffffffffff,%rax
  0x00007fb547da5067: callq  0x00007fb54784aa80  ; ImmutableOopMap{}
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@16 (line 981)
                                                ;   {virtual_call}
  0x00007fb547da506c: cmp    $0x0,%eax
  0x00007fb547da506f: movabs $0x7fb52cf6d390,%rax  ;   {metadata(method data for {method} {0x00007fb52cf6b460} &apos;hasNext&apos; &apos;()Z&apos; in &apos;jdk/internal/module/ModuleBootstrap$2&apos;)}
  0x00007fb547da5079: movabs $0x1d0,%rsi
  0x00007fb547da5083: je     0x00007fb547da5093
  0x00007fb547da5089: movabs $0x1e0,%rsi
  0x00007fb547da5093: mov    (%rax,%rsi,1),%rdi
  0x00007fb547da5097: lea    0x1(%rdi),%rdi
  0x00007fb547da509b: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547da509f: je     0x00007fb547da50bf  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@21 (line 981)

  0x00007fb547da50a5: movabs $0x7fb52cf6d390,%rax  ;   {metadata(method data for {method} {0x00007fb52cf6b460} &apos;hasNext&apos; &apos;()Z&apos; in &apos;jdk/internal/module/ModuleBootstrap$2&apos;)}
  0x00007fb547da50af: incl   0x1f0(%rax)
  0x00007fb547da50b5: mov    $0x1,%eax
  0x00007fb547da50ba: jmpq   0x00007fb547da50c4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@25 (line 981)

  0x00007fb547da50bf: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@29 (line 981)

  0x00007fb547da50c4: and    $0x1,%eax
  0x00007fb547da50c7: add    $0x30,%rsp
  0x00007fb547da50cb: pop    %rbp
  0x00007fb547da50cc: mov    0x108(%r15),%r10
  0x00007fb547da50d3: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da50d6: retq   
  0x00007fb547da50d7: movabs $0x7fb52cf6b460,%r10  ;   {metadata({method} {0x00007fb52cf6b460} &apos;hasNext&apos; &apos;()Z&apos; in &apos;jdk/internal/module/ModuleBootstrap$2&apos;)}
  0x00007fb547da50e1: mov    %r10,0x8(%rsp)
  0x00007fb547da50e6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da50ee: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@-1 (line 981)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da50f3: jmpq   0x00007fb547da4eb4
  0x00007fb547da50f8: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@4 (line 981)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da50fd: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@16 (line 981)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da5102: nop
  0x00007fb547da5103: nop
  0x00007fb547da5104: mov    0x440(%r15),%rax
  0x00007fb547da510b: movabs $0x0,%r10
  0x00007fb547da5115: mov    %r10,0x440(%r15)
  0x00007fb547da511c: movabs $0x0,%r10
  0x00007fb547da5126: mov    %r10,0x448(%r15)
  0x00007fb547da512d: add    $0x30,%rsp
  0x00007fb547da5131: pop    %rbp
  0x00007fb547da5132: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da5137: hlt    
  0x00007fb547da5138: hlt    
  0x00007fb547da5139: hlt    
  0x00007fb547da513a: hlt    
  0x00007fb547da513b: hlt    
  0x00007fb547da513c: hlt    
  0x00007fb547da513d: hlt    
  0x00007fb547da513e: hlt    
  0x00007fb547da513f: hlt    
[Stub Code]
  0x00007fb547da5140: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da5145: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da514f: jmpq   0x00007fb547da514f  ;   {runtime_call}
  0x00007fb547da5154: nop
  0x00007fb547da5155: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da515f: jmpq   0x00007fb547da515f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da5164: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da5169: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da5173: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da5177: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da517c: hlt    
[Deopt Handler Code]
  0x00007fb547da517d: movabs $0x7fb547da517d,%r10  ;   {section_word}
  0x00007fb547da5187: push   %r10
  0x00007fb547da5189: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da518e: hlt    
  0x00007fb547da518f: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 276 
ImmutableOopMap{}pc offsets: 524 
ImmutableOopMap{rsi=Oop }pc offsets: 659 
ImmutableOopMap{rsi=Oop rdi=Oop }pc offsets: 669 
ImmutableOopMap{rsi=Oop }pc offsets: 674 </print_nmethod>
<writer thread='1329923'/>
Decoding VtableStub vtbl[28]@12
  0x00007fb5478fc390: mov    0x8(%rsi),%eax
  0x00007fb5478fc393: movabs $0x800000000,%r12
  0x00007fb5478fc39d: add    %r12,%rax
  0x00007fb5478fc3a0: xor    %r12,%r12
  0x00007fb5478fc3a3: mov    0x2b0(%rax),%rbx
  0x00007fb5478fc3aa: jmpq   *0x38(%rbx)
  0x00007fb5478fc3ad: .byte 0x0
<writer thread='1329936'/>
<nmethod compile_id='60' compiler='c1' level='1' entry='0x00007fb54f2cb140' size='704' address='0x00007fb54f2caf90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.module.ModuleDescriptor isOpen ()Z' bytes='5' count='183' iicount='183' stamp='0.793'/>
<writer thread='1329923'/>
Decoding VtableStub vtbl[34]@12
<writer thread='1329936'/>
<print_nmethod stamp='0.793'>
Compiled method (c1)     793   60       1       java.lang.module.ModuleDescriptor::isOpen (5 bytes)
 total in heap  [0x00007fb54f2caf90,0x00007fb54f2cb250] = 704
 relocation     [0x00007fb54f2cb108,0x00007fb54f2cb128] = 32
 main code      [0x00007fb54f2cb140,0x00007fb54f2cb1c0] = 128
 stub code      [0x00007fb54f2cb1c0,0x00007fb54f2cb1f0] = 48
 metadata       [0x00007fb54f2cb1f0,0x00007fb54f2cb1f8] = 8
 scopes data    [0x00007fb54f2cb1f8,0x00007fb54f2cb208] = 16
 scopes pcs     [0x00007fb54f2cb208,0x00007fb54f2cb248] = 64
 dependencies   [0x00007fb54f2cb248,0x00007fb54f2cb250] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.isOpen()Z  [0x00007fb54f2cb140, 0x00007fb54f2cb1f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ceb16e0} &apos;isOpen&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cb140: mov    0x8(%rsi),%r10d
  0x00007fb54f2cb144: movabs $0x800000000,%r12
  0x00007fb54f2cb14e: add    %r12,%r10
  0x00007fb54f2cb151: xor    %r12,%r12
  0x00007fb54f2cb154: cmp    %rax,%r10
  0x00007fb54f2cb157: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cb15d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cb160: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cb167: push   %rbp
  0x00007fb54f2cb168: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isOpen@0 (line 1326)

  0x00007fb54f2cb16c: movsbl 0x10(%rsi),%eax    ;*getfield open {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isOpen@1 (line 1326)

  0x00007fb54f2cb170: and    $0x1,%eax
  0x00007fb54f2cb173: add    $0x30,%rsp
  0x00007fb54f2cb177: pop    %rbp
  0x00007fb54f2cb178: mov    0x108(%r15),%r10
  0x00007fb54f2cb17f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cb182: retq   
  0x00007fb54f2cb183: nop
  0x00007fb54f2cb184: nop
  0x00007fb54f2cb185: mov    0x440(%r15),%rax
  0x00007fb54f2cb18c: movabs $0x0,%r10
  0x00007fb54f2cb196: mov    %r10,0x440(%r15)
  0x00007fb54f2cb19d: movabs $0x0,%r10
  0x00007fb54f2cb1a7: mov    %r10,0x448(%r15)
  0x00007fb54f2cb1ae: add    $0x30,%rsp
  0x00007fb54f2cb1b2: pop    %rbp
  0x00007fb54f2cb1b3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cb1b8: hlt    
  0x00007fb54f2cb1b9: hlt    
  0x00007fb54f2cb1ba: hlt    
  0x00007fb54f2cb1bb: hlt    
  0x00007fb54f2cb1bc: hlt    
  0x00007fb54f2cb1bd: hlt    
  0x00007fb54f2cb1be: hlt    
  0x00007fb54f2cb1bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cb1c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cb1c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cb1cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cb1d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cb1d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cb1d9: movabs $0x7fb54f2cb1d9,%r10  ;   {section_word}
  0x00007fb54f2cb1e3: push   %r10
  0x00007fb54f2cb1e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cb1ea: hlt    
  0x00007fb54f2cb1eb: hlt    
  0x00007fb54f2cb1ec: hlt    
  0x00007fb54f2cb1ed: hlt    
  0x00007fb54f2cb1ee: hlt    
  0x00007fb54f2cb1ef: hlt    
</print_nmethod>
<writer thread='1329923'/>
  0x00007fb5478fc3c0: mov    0x8(%rsi),%eax
  0x00007fb5478fc3c3: movabs $0x800000000,%r12
  0x00007fb5478fc3cd: add    %r12,%rax
  0x00007fb5478fc3d0: xor    %r12,%r12
  0x00007fb5478fc3d3: mov    0x2e0(%rax),%rbx
  0x00007fb5478fc3da: jmpq   *0x38(%rbx)
  0x00007fb5478fc3dd: .byte 0x0
<writer thread='1329936'/>
<nmethod compile_id='44' compiler='c1' level='3' entry='0x00007fb547da5560' size='1400' address='0x00007fb547da5390' relocation_offset='376' insts_offset='464' stub_offset='1040' scopes_data_offset='1112' scopes_pcs_offset='1184' dependencies_offset='1376' nul_chk_table_offset='1384' metadata_offset='1104' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='790' iicount='790' stamp='0.795'/>
<print_nmethod stamp='0.795'>
Compiled method (c1)     795   44       3       java.util.Objects::equals (23 bytes)
 total in heap  [0x00007fb547da5390,0x00007fb547da5908] = 1400
 relocation     [0x00007fb547da5508,0x00007fb547da5548] = 64
 main code      [0x00007fb547da5560,0x00007fb547da57a0] = 576
 stub code      [0x00007fb547da57a0,0x00007fb547da57e0] = 64
 metadata       [0x00007fb547da57e0,0x00007fb547da57e8] = 8
 scopes data    [0x00007fb547da57e8,0x00007fb547da5830] = 72
 scopes pcs     [0x00007fb547da5830,0x00007fb547da58f0] = 192
 dependencies   [0x00007fb547da58f0,0x00007fb547da58f8] = 8
 nul chk table  [0x00007fb547da58f8,0x00007fb547da5908] = 16
----------------------------------------------------------------------
java/util/Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z  [0x00007fb547da5560, 0x00007fb547da57e0]  640 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cdce250} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da5560: mov    %eax,-0x14000(%rsp)
  0x00007fb547da5567: push   %rbp
  0x00007fb547da5568: sub    $0x30,%rsp
  0x00007fb547da556c: movabs $0x7fb52cf4c080,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdce250} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da5576: mov    0x100(%rdi),%ebx
  0x00007fb547da557c: add    $0x8,%ebx
  0x00007fb547da557f: mov    %ebx,0x100(%rdi)
  0x00007fb547da5585: and    $0x1ff8,%ebx
  0x00007fb547da558b: cmp    $0x0,%ebx
  0x00007fb547da558e: je     0x00007fb547da5727  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@0 (line 77)

  0x00007fb547da5594: cmp    %rdx,%rsi
  0x00007fb547da5597: movabs $0x7fb52cf4c080,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdce250} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da55a1: movabs $0x140,%rbx
  0x00007fb547da55ab: je     0x00007fb547da55bb
  0x00007fb547da55b1: movabs $0x150,%rbx
  0x00007fb547da55bb: mov    (%rdi,%rbx,1),%rax
  0x00007fb547da55bf: lea    0x1(%rax),%rax
  0x00007fb547da55c3: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547da55c7: je     0x00007fb547da56ff  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@2 (line 77)

  0x00007fb547da55cd: cmp    $0x0,%rsi
  0x00007fb547da55d1: movabs $0x7fb52cf4c080,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdce250} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da55db: movabs $0x160,%rbx
  0x00007fb547da55e5: je     0x00007fb547da55f5
  0x00007fb547da55eb: movabs $0x170,%rbx
  0x00007fb547da55f5: mov    (%rdi,%rbx,1),%rax
  0x00007fb547da55f9: lea    0x1(%rax),%rax
  0x00007fb547da55fd: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547da5601: je     0x00007fb547da56f5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@6 (line 77)

  0x00007fb547da5607: cmp    (%rsi),%rax        ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11 (line 77)
                                                ; implicit exception: dispatches to 0x00007fb547da5748
  0x00007fb547da560a: mov    %rsi,%rdi
  0x00007fb547da560d: movabs $0x7fb52cf4c080,%rbx  ;   {metadata(method data for {method} {0x00007fb52cdce250} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da5617: mov    0x8(%rdi),%edi
  0x00007fb547da561a: movabs $0x800000000,%r12
  0x00007fb547da5624: add    %r12,%rdi
  0x00007fb547da5627: xor    %r12,%r12
  0x00007fb547da562a: cmp    0x190(%rbx),%rdi
  0x00007fb547da5631: jne    0x00007fb547da5640
  0x00007fb547da5633: addq   $0x1,0x198(%rbx)
  0x00007fb547da563b: jmpq   0x00007fb547da56a6
  0x00007fb547da5640: cmp    0x1a0(%rbx),%rdi
  0x00007fb547da5647: jne    0x00007fb547da5656
  0x00007fb547da5649: addq   $0x1,0x1a8(%rbx)
  0x00007fb547da5651: jmpq   0x00007fb547da56a6
  0x00007fb547da5656: cmpq   $0x0,0x190(%rbx)
  0x00007fb547da5661: jne    0x00007fb547da567a
  0x00007fb547da5663: mov    %rdi,0x190(%rbx)
  0x00007fb547da566a: movq   $0x1,0x198(%rbx)
  0x00007fb547da5675: jmpq   0x00007fb547da56a6
  0x00007fb547da567a: cmpq   $0x0,0x1a0(%rbx)
  0x00007fb547da5685: jne    0x00007fb547da569e
  0x00007fb547da5687: mov    %rdi,0x1a0(%rbx)
  0x00007fb547da568e: movq   $0x1,0x1a8(%rbx)
  0x00007fb547da5699: jmpq   0x00007fb547da56a6
  0x00007fb547da569e: addq   $0x1,0x180(%rbx)
  0x00007fb547da56a6: nopl   0x0(%rax)
  0x00007fb547da56ad: movabs $0xffffffffffffffff,%rax
  0x00007fb547da56b7: callq  0x00007fb54784aa80  ; ImmutableOopMap{}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11 (line 77)
                                                ;   {virtual_call}
  0x00007fb547da56bc: cmp    $0x0,%eax
  0x00007fb547da56bf: movabs $0x7fb52cf4c080,%rax  ;   {metadata(method data for {method} {0x00007fb52cdce250} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da56c9: movabs $0x1c8,%rsi
  0x00007fb547da56d3: jne    0x00007fb547da56e3
  0x00007fb547da56d9: movabs $0x1b8,%rsi
  0x00007fb547da56e3: mov    (%rax,%rsi,1),%rdi
  0x00007fb547da56e7: lea    0x1(%rdi),%rdi
  0x00007fb547da56eb: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547da56ef: jne    0x00007fb547da56ff  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@14 (line 77)

  0x00007fb547da56f5: mov    $0x0,%eax
  0x00007fb547da56fa: jmpq   0x00007fb547da5714  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@22 (line 77)

  0x00007fb547da56ff: movabs $0x7fb52cf4c080,%rax  ;   {metadata(method data for {method} {0x00007fb52cdce250} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da5709: incl   0x1d8(%rax)
  0x00007fb547da570f: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@18 (line 77)

  0x00007fb547da5714: and    $0x1,%eax
  0x00007fb547da5717: add    $0x30,%rsp
  0x00007fb547da571b: pop    %rbp
  0x00007fb547da571c: mov    0x108(%r15),%r10
  0x00007fb547da5723: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da5726: retq   
  0x00007fb547da5727: movabs $0x7fb52cdce250,%r10  ;   {metadata({method} {0x00007fb52cdce250} &apos;equals&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Z&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da5731: mov    %r10,0x8(%rsp)
  0x00007fb547da5736: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da573e: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::equals@-1 (line 77)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da5743: jmpq   0x00007fb547da5594
  0x00007fb547da5748: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11 (line 77)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da574d: nop
  0x00007fb547da574e: nop
  0x00007fb547da574f: mov    0x440(%r15),%rax
  0x00007fb547da5756: movabs $0x0,%r10
  0x00007fb547da5760: mov    %r10,0x440(%r15)
  0x00007fb547da5767: movabs $0x0,%r10
  0x00007fb547da5771: mov    %r10,0x448(%r15)
  0x00007fb547da5778: add    $0x30,%rsp
  0x00007fb547da577c: pop    %rbp
  0x00007fb547da577d: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da5782: hlt    
  0x00007fb547da5783: hlt    
  0x00007fb547da5784: hlt    
  0x00007fb547da5785: hlt    
  0x00007fb547da5786: hlt    
  0x00007fb547da5787: hlt    
  0x00007fb547da5788: hlt    
  0x00007fb547da5789: hlt    
  0x00007fb547da578a: hlt    
  0x00007fb547da578b: hlt    
  0x00007fb547da578c: hlt    
  0x00007fb547da578d: hlt    
  0x00007fb547da578e: hlt    
  0x00007fb547da578f: hlt    
  0x00007fb547da5790: hlt    
  0x00007fb547da5791: hlt    
  0x00007fb547da5792: hlt    
  0x00007fb547da5793: hlt    
  0x00007fb547da5794: hlt    
  0x00007fb547da5795: hlt    
  0x00007fb547da5796: hlt    
  0x00007fb547da5797: hlt    
  0x00007fb547da5798: hlt    
  0x00007fb547da5799: hlt    
  0x00007fb547da579a: hlt    
  0x00007fb547da579b: hlt    
  0x00007fb547da579c: hlt    
  0x00007fb547da579d: hlt    
  0x00007fb547da579e: hlt    
  0x00007fb547da579f: hlt    
[Stub Code]
  0x00007fb547da57a0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da57a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da57af: jmpq   0x00007fb547da57af  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da57b4: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da57b9: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da57c3: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da57c7: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da57cc: hlt    
[Deopt Handler Code]
  0x00007fb547da57cd: movabs $0x7fb547da57cd,%r10  ;   {section_word}
  0x00007fb547da57d7: push   %r10
  0x00007fb547da57d9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da57de: hlt    
  0x00007fb547da57df: hlt    

ImmutableOopMap{}pc offsets: 348 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 483 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 493 </print_nmethod>
<writer thread='1329923'/>

argument handler #39 for: receiver java.lang.ClassLoader$NativeLibrary.load0(Ljava/lang/String;ZZ)Z (fingerprint = 1319720, 40 bytes generated)
  0x00007fb54784c0d3: lea    (%r14),%rsi
  0x00007fb54784c0d6: lea    -0x8(%r14),%rax
  0x00007fb54784c0da: xor    %edx,%edx
  0x00007fb54784c0dc: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c0e4: cmovne %rax,%rdx
  0x00007fb54784c0e8: mov    -0x10(%r14),%ecx
  0x00007fb54784c0ec: mov    -0x18(%r14),%r8d
  0x00007fb54784c0f0: movabs $0x7fb54780caa0,%rax
  0x00007fb54784c0fa: retq   
<writer thread='1329936'/>
<nmethod compile_id='63' compiler='c1' level='1' entry='0x00007fb54f2cb440' size='704' address='0x00007fb54f2cb290' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.Module getDescriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='144' iicount='144' stamp='0.801'/>
<print_nmethod stamp='0.801'>
Compiled method (c1)     800   63       1       java.lang.Module::getDescriptor (5 bytes)
 total in heap  [0x00007fb54f2cb290,0x00007fb54f2cb550] = 704
 relocation     [0x00007fb54f2cb408,0x00007fb54f2cb428] = 32
 main code      [0x00007fb54f2cb440,0x00007fb54f2cb4c0] = 128
 stub code      [0x00007fb54f2cb4c0,0x00007fb54f2cb4f0] = 48
 metadata       [0x00007fb54f2cb4f0,0x00007fb54f2cb4f8] = 8
 scopes data    [0x00007fb54f2cb4f8,0x00007fb54f2cb508] = 16
 scopes pcs     [0x00007fb54f2cb508,0x00007fb54f2cb548] = 64
 dependencies   [0x00007fb54f2cb548,0x00007fb54f2cb550] = 8
----------------------------------------------------------------------
java/lang/Module.getDescriptor()Ljava/lang/module/ModuleDescriptor;  [0x00007fb54f2cb440, 0x00007fb54f2cb4f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cd00178} &apos;getDescriptor&apos; &apos;()Ljava/lang/module/ModuleDescriptor;&apos; in &apos;java/lang/Module&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cb440: mov    0x8(%rsi),%r10d
  0x00007fb54f2cb444: movabs $0x800000000,%r12
  0x00007fb54f2cb44e: add    %r12,%r10
  0x00007fb54f2cb451: xor    %r12,%r12
  0x00007fb54f2cb454: cmp    %rax,%r10
  0x00007fb54f2cb457: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cb45d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cb460: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cb467: push   %rbp
  0x00007fb54f2cb468: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Module::getDescriptor@0 (line 215)

  0x00007fb54f2cb46c: mov    0x20(%rsi),%eax
  0x00007fb54f2cb46f: shl    $0x3,%rax          ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Module::getDescriptor@1 (line 215)

  0x00007fb54f2cb473: add    $0x30,%rsp
  0x00007fb54f2cb477: pop    %rbp
  0x00007fb54f2cb478: mov    0x108(%r15),%r10
  0x00007fb54f2cb47f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cb482: retq   
  0x00007fb54f2cb483: nop
  0x00007fb54f2cb484: nop
  0x00007fb54f2cb485: mov    0x440(%r15),%rax
  0x00007fb54f2cb48c: movabs $0x0,%r10
  0x00007fb54f2cb496: mov    %r10,0x440(%r15)
  0x00007fb54f2cb49d: movabs $0x0,%r10
  0x00007fb54f2cb4a7: mov    %r10,0x448(%r15)
  0x00007fb54f2cb4ae: add    $0x30,%rsp
  0x00007fb54f2cb4b2: pop    %rbp
  0x00007fb54f2cb4b3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cb4b8: hlt    
  0x00007fb54f2cb4b9: hlt    
  0x00007fb54f2cb4ba: hlt    
  0x00007fb54f2cb4bb: hlt    
  0x00007fb54f2cb4bc: hlt    
  0x00007fb54f2cb4bd: hlt    
  0x00007fb54f2cb4be: hlt    
  0x00007fb54f2cb4bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cb4c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cb4c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cb4cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cb4d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cb4d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cb4d9: movabs $0x7fb54f2cb4d9,%r10  ;   {section_word}
  0x00007fb54f2cb4e3: push   %r10
  0x00007fb54f2cb4e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cb4ea: hlt    
  0x00007fb54f2cb4eb: hlt    
  0x00007fb54f2cb4ec: hlt    
  0x00007fb54f2cb4ed: hlt    
  0x00007fb54f2cb4ee: hlt    
  0x00007fb54f2cb4ef: hlt    
</print_nmethod>
<writer thread='1329923'/>

argument handler #40 for: receiver java.lang.ClassLoader$NativeLibrary.findEntry(Ljava/lang/String;)J (fingerprint = 5430, 32 bytes generated)
  0x00007fb54784c0fb: lea    (%r14),%rsi
  0x00007fb54784c0fe: lea    -0x8(%r14),%rax
  0x00007fb54784c102: xor    %edx,%edx
  0x00007fb54784c104: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c10c: cmovne %rax,%rdx
  0x00007fb54784c110: movabs $0x7fb54780cab7,%rax
  0x00007fb54784c11a: retq   

argument handler #41 for: static sun.nio.fs.UnixNativeDispatcher.init()I (fingerprint = 341, 11 bytes generated)
  0x00007fb54784c11b: movabs $0x7fb54780cab6,%rax
  0x00007fb54784c125: retq   
<writer thread='1329936'/>
<nmethod compile_id='50' compiler='c1' level='1' entry='0x00007fb54f2cb740' size='704' address='0x00007fb54f2cb590' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.module.ModuleDescriptor$Exports source ()Ljava/lang/String;' bytes='5' count='363' iicount='363' stamp='0.802'/>
<print_nmethod stamp='0.802'>
Compiled method (c1)     802   50       1       java.lang.module.ModuleDescriptor$Exports::source (5 bytes)
 total in heap  [0x00007fb54f2cb590,0x00007fb54f2cb850] = 704
 relocation     [0x00007fb54f2cb708,0x00007fb54f2cb728] = 32
 main code      [0x00007fb54f2cb740,0x00007fb54f2cb7c0] = 128
 stub code      [0x00007fb54f2cb7c0,0x00007fb54f2cb7f0] = 48
 metadata       [0x00007fb54f2cb7f0,0x00007fb54f2cb7f8] = 8
 scopes data    [0x00007fb54f2cb7f8,0x00007fb54f2cb808] = 16
 scopes pcs     [0x00007fb54f2cb808,0x00007fb54f2cb848] = 64
 dependencies   [0x00007fb54f2cb848,0x00007fb54f2cb850] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor$Exports.source()Ljava/lang/String;  [0x00007fb54f2cb740, 0x00007fb54f2cb7f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cedca60} &apos;source&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cb740: mov    0x8(%rsi),%r10d
  0x00007fb54f2cb744: movabs $0x800000000,%r12
  0x00007fb54f2cb74e: add    %r12,%r10
  0x00007fb54f2cb751: xor    %r12,%r12
  0x00007fb54f2cb754: cmp    %rax,%r10
  0x00007fb54f2cb757: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cb75d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cb760: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cb767: push   %rbp
  0x00007fb54f2cb768: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::source@0 (line 444)

  0x00007fb54f2cb76c: mov    0x10(%rsi),%eax
  0x00007fb54f2cb76f: shl    $0x3,%rax          ;*getfield source {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::source@1 (line 444)

  0x00007fb54f2cb773: add    $0x30,%rsp
  0x00007fb54f2cb777: pop    %rbp
  0x00007fb54f2cb778: mov    0x108(%r15),%r10
  0x00007fb54f2cb77f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cb782: retq   
  0x00007fb54f2cb783: nop
  0x00007fb54f2cb784: nop
  0x00007fb54f2cb785: mov    0x440(%r15),%rax
  0x00007fb54f2cb78c: movabs $0x0,%r10
  0x00007fb54f2cb796: mov    %r10,0x440(%r15)
  0x00007fb54f2cb79d: movabs $0x0,%r10
  0x00007fb54f2cb7a7: mov    %r10,0x448(%r15)
  0x00007fb54f2cb7ae: add    $0x30,%rsp
  0x00007fb54f2cb7b2: pop    %rbp
  0x00007fb54f2cb7b3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cb7b8: hlt    
  0x00007fb54f2cb7b9: hlt    
  0x00007fb54f2cb7ba: hlt    
  0x00007fb54f2cb7bb: hlt    
  0x00007fb54f2cb7bc: hlt    
  0x00007fb54f2cb7bd: hlt    
  0x00007fb54f2cb7be: hlt    
  0x00007fb54f2cb7bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cb7c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cb7c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cb7cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cb7d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cb7d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cb7d9: movabs $0x7fb54f2cb7d9,%r10  ;   {section_word}
  0x00007fb54f2cb7e3: push   %r10
  0x00007fb54f2cb7e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cb7ea: hlt    
  0x00007fb54f2cb7eb: hlt    
  0x00007fb54f2cb7ec: hlt    
  0x00007fb54f2cb7ed: hlt    
  0x00007fb54f2cb7ee: hlt    
  0x00007fb54f2cb7ef: hlt    
</print_nmethod>
<writer thread='1329923'/>

argument handler #42 for: static sun.nio.fs.UnixNativeDispatcher.getcwd()[B (fingerprint = 347, 11 bytes generated)
  0x00007fb54784c126: movabs $0x7fb54780cabb,%rax
  0x00007fb54784c130: retq   
<writer thread='1329936'/>
<nmethod compile_id='58' compiler='c1' level='1' entry='0x00007fb54f2cba40' size='704' address='0x00007fb54f2cb890' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.util.KeyValueHolder getValue ()Ljava/lang/Object;' bytes='5' count='316' iicount='316' stamp='0.804'/>
<print_nmethod stamp='0.804'>
Compiled method (c1)     804   58       1       java.util.KeyValueHolder::getValue (5 bytes)
 total in heap  [0x00007fb54f2cb890,0x00007fb54f2cbb50] = 704
 relocation     [0x00007fb54f2cba08,0x00007fb54f2cba28] = 32
 main code      [0x00007fb54f2cba40,0x00007fb54f2cbac0] = 128
 stub code      [0x00007fb54f2cbac0,0x00007fb54f2cbaf0] = 48
 metadata       [0x00007fb54f2cbaf0,0x00007fb54f2cbaf8] = 8
 scopes data    [0x00007fb54f2cbaf8,0x00007fb54f2cbb08] = 16
 scopes pcs     [0x00007fb54f2cbb08,0x00007fb54f2cbb48] = 64
 dependencies   [0x00007fb54f2cbb48,0x00007fb54f2cbb50] = 8
----------------------------------------------------------------------
java/util/KeyValueHolder.getValue()Ljava/lang/Object;  [0x00007fb54f2cba40, 0x00007fb54f2cbaf0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cefc558} &apos;getValue&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/KeyValueHolder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cba40: mov    0x8(%rsi),%r10d
  0x00007fb54f2cba44: movabs $0x800000000,%r12
  0x00007fb54f2cba4e: add    %r12,%r10
  0x00007fb54f2cba51: xor    %r12,%r12
  0x00007fb54f2cba54: cmp    %rax,%r10
  0x00007fb54f2cba57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cba5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cba60: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cba67: push   %rbp
  0x00007fb54f2cba68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.KeyValueHolder::getValue@0 (line 80)

  0x00007fb54f2cba6c: mov    0x10(%rsi),%eax
  0x00007fb54f2cba6f: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.KeyValueHolder::getValue@1 (line 80)

  0x00007fb54f2cba73: add    $0x30,%rsp
  0x00007fb54f2cba77: pop    %rbp
  0x00007fb54f2cba78: mov    0x108(%r15),%r10
  0x00007fb54f2cba7f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cba82: retq   
  0x00007fb54f2cba83: nop
  0x00007fb54f2cba84: nop
  0x00007fb54f2cba85: mov    0x440(%r15),%rax
  0x00007fb54f2cba8c: movabs $0x0,%r10
  0x00007fb54f2cba96: mov    %r10,0x440(%r15)
  0x00007fb54f2cba9d: movabs $0x0,%r10
  0x00007fb54f2cbaa7: mov    %r10,0x448(%r15)
  0x00007fb54f2cbaae: add    $0x30,%rsp
  0x00007fb54f2cbab2: pop    %rbp
  0x00007fb54f2cbab3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cbab8: hlt    
  0x00007fb54f2cbab9: hlt    
  0x00007fb54f2cbaba: hlt    
  0x00007fb54f2cbabb: hlt    
  0x00007fb54f2cbabc: hlt    
  0x00007fb54f2cbabd: hlt    
  0x00007fb54f2cbabe: hlt    
  0x00007fb54f2cbabf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cbac0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cbac5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cbacf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cbad3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cbad8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cbad9: movabs $0x7fb54f2cbad9,%r10  ;   {section_word}
  0x00007fb54f2cbae3: push   %r10
  0x00007fb54f2cbae5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cbaea: hlt    
  0x00007fb54f2cbaeb: hlt    
  0x00007fb54f2cbaec: hlt    
  0x00007fb54f2cbaed: hlt    
  0x00007fb54f2cbaee: hlt    
  0x00007fb54f2cbaef: hlt    
</print_nmethod>
<nmethod compile_id='52' compiler='c1' level='1' entry='0x00007fb54f2cbd40' size='704' address='0x00007fb54f2cbb90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.module.ModuleDescriptor isAutomatic ()Z' bytes='5' count='183' iicount='183' stamp='0.805'/>
<print_nmethod stamp='0.805'>
Compiled method (c1)     805   52       1       java.lang.module.ModuleDescriptor::isAutomatic (5 bytes)
 total in heap  [0x00007fb54f2cbb90,0x00007fb54f2cbe50] = 704
 relocation     [0x00007fb54f2cbd08,0x00007fb54f2cbd28] = 32
 main code      [0x00007fb54f2cbd40,0x00007fb54f2cbdc0] = 128
 stub code      [0x00007fb54f2cbdc0,0x00007fb54f2cbdf0] = 48
 metadata       [0x00007fb54f2cbdf0,0x00007fb54f2cbdf8] = 8
 scopes data    [0x00007fb54f2cbdf8,0x00007fb54f2cbe08] = 16
 scopes pcs     [0x00007fb54f2cbe08,0x00007fb54f2cbe48] = 64
 dependencies   [0x00007fb54f2cbe48,0x00007fb54f2cbe50] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.isAutomatic()Z  [0x00007fb54f2cbd40, 0x00007fb54f2cbdf0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ceb1788} &apos;isAutomatic&apos; &apos;()Z&apos; in &apos;java/lang/module/ModuleDescriptor&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cbd40: mov    0x8(%rsi),%r10d
  0x00007fb54f2cbd44: movabs $0x800000000,%r12
  0x00007fb54f2cbd4e: add    %r12,%r10
  0x00007fb54f2cbd51: xor    %r12,%r12
  0x00007fb54f2cbd54: cmp    %rax,%r10
  0x00007fb54f2cbd57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cbd5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cbd60: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cbd67: push   %rbp
  0x00007fb54f2cbd68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isAutomatic@0 (line 1338)

  0x00007fb54f2cbd6c: movsbl 0x11(%rsi),%eax    ;*getfield automatic {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isAutomatic@1 (line 1338)

  0x00007fb54f2cbd70: and    $0x1,%eax
  0x00007fb54f2cbd73: add    $0x30,%rsp
  0x00007fb54f2cbd77: pop    %rbp
  0x00007fb54f2cbd78: mov    0x108(%r15),%r10
  0x00007fb54f2cbd7f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cbd82: retq   
  0x00007fb54f2cbd83: nop
  0x00007fb54f2cbd84: nop
  0x00007fb54f2cbd85: mov    0x440(%r15),%rax
  0x00007fb54f2cbd8c: movabs $0x0,%r10
  0x00007fb54f2cbd96: mov    %r10,0x440(%r15)
  0x00007fb54f2cbd9d: movabs $0x0,%r10
  0x00007fb54f2cbda7: mov    %r10,0x448(%r15)
  0x00007fb54f2cbdae: add    $0x30,%rsp
  0x00007fb54f2cbdb2: pop    %rbp
  0x00007fb54f2cbdb3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cbdb8: hlt    
  0x00007fb54f2cbdb9: hlt    
  0x00007fb54f2cbdba: hlt    
  0x00007fb54f2cbdbb: hlt    
  0x00007fb54f2cbdbc: hlt    
  0x00007fb54f2cbdbd: hlt    
  0x00007fb54f2cbdbe: hlt    
  0x00007fb54f2cbdbf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cbdc0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cbdc5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cbdcf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cbdd3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cbdd8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cbdd9: movabs $0x7fb54f2cbdd9,%r10  ;   {section_word}
  0x00007fb54f2cbde3: push   %r10
  0x00007fb54f2cbde5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cbdea: hlt    
  0x00007fb54f2cbdeb: hlt    
  0x00007fb54f2cbdec: hlt    
  0x00007fb54f2cbded: hlt    
  0x00007fb54f2cbdee: hlt    
  0x00007fb54f2cbdef: hlt    
</print_nmethod>
<writer thread='1329923'/>

argument handler #43 for: receiver jdk.internal.misc.Unsafe.allocateMemory0(J)J (fingerprint = 5334, 18 bytes generated)
  0x00007fb54784c131: lea    (%r14),%rsi
  0x00007fb54784c134: mov    -0x10(%r14),%rdx
  0x00007fb54784c138: movabs $0x7fb54780cab7,%rax
  0x00007fb54784c142: retq   

argument handler #44 for: receiver jdk.internal.misc.Unsafe.copyMemory0(Ljava/lang/Object;JLjava/lang/Object;JJ)V (fingerprint = 348990780, 68 bytes generated)
  0x00007fb54784c143: lea    (%r14),%rsi
  0x00007fb54784c146: lea    -0x8(%r14),%rax
  0x00007fb54784c14a: xor    %edx,%edx
  0x00007fb54784c14c: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c154: cmovne %rax,%rdx
  0x00007fb54784c158: mov    -0x18(%r14),%rcx
  0x00007fb54784c15c: lea    -0x20(%r14),%rax
  0x00007fb54784c160: xor    %r8d,%r8d
  0x00007fb54784c163: cmpq   $0x0,-0x20(%r14)
  0x00007fb54784c16b: cmovne %rax,%r8
  0x00007fb54784c16f: mov    -0x30(%r14),%r9
  0x00007fb54784c173: mov    -0x40(%r14),%rax
  0x00007fb54784c177: mov    %rax,0x8(%rsp)
  0x00007fb54784c17c: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c186: retq   

argument handler #45 for: receiver jdk.internal.misc.Unsafe.putByte(Ljava/lang/Object;JB)V (fingerprint = 1330492, 40 bytes generated)
  0x00007fb54784c187: lea    (%r14),%rsi
  0x00007fb54784c18a: lea    -0x8(%r14),%rax
  0x00007fb54784c18e: xor    %edx,%edx
  0x00007fb54784c190: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c198: cmovne %rax,%rdx
  0x00007fb54784c19c: mov    -0x18(%r14),%rcx
  0x00007fb54784c1a0: mov    -0x20(%r14),%r8d
  0x00007fb54784c1a4: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c1ae: retq   

argument handler #46 for: static sun.nio.fs.UnixNativeDispatcher.stat0(JLsun/nio/fs/UnixFileAttributes;)V (fingerprint = 86749, 33 bytes generated)
  0x00007fb54784c1af: mov    -0x8(%r14),%rdx
  0x00007fb54784c1b3: lea    -0x10(%r14),%rax
  0x00007fb54784c1b7: xor    %ecx,%ecx
  0x00007fb54784c1b9: cmpq   $0x0,-0x10(%r14)
  0x00007fb54784c1c1: cmovne %rax,%rcx
  0x00007fb54784c1c5: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c1cf: retq   
<writer thread='1329936'/>
<nmethod compile_id='56' compiler='c1' level='1' entry='0x00007fb54f2cc040' size='704' address='0x00007fb54f2cbe90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.module.ResolvedModule configuration ()Ljava/lang/module/Configuration;' bytes='5' count='147' iicount='147' stamp='0.809'/>
<print_nmethod stamp='0.809'>
Compiled method (c1)     808   56       1       java.lang.module.ResolvedModule::configuration (5 bytes)
 total in heap  [0x00007fb54f2cbe90,0x00007fb54f2cc150] = 704
 relocation     [0x00007fb54f2cc008,0x00007fb54f2cc028] = 32
 main code      [0x00007fb54f2cc040,0x00007fb54f2cc0c0] = 128
 stub code      [0x00007fb54f2cc0c0,0x00007fb54f2cc0f0] = 48
 metadata       [0x00007fb54f2cc0f0,0x00007fb54f2cc0f8] = 8
 scopes data    [0x00007fb54f2cc0f8,0x00007fb54f2cc108] = 16
 scopes pcs     [0x00007fb54f2cc108,0x00007fb54f2cc148] = 64
 dependencies   [0x00007fb54f2cc148,0x00007fb54f2cc150] = 8
----------------------------------------------------------------------
java/lang/module/ResolvedModule.configuration()Ljava/lang/module/Configuration;  [0x00007fb54f2cc040, 0x00007fb54f2cc0f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cf48538} &apos;configuration&apos; &apos;()Ljava/lang/module/Configuration;&apos; in &apos;java/lang/module/ResolvedModule&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cc040: mov    0x8(%rsi),%r10d
  0x00007fb54f2cc044: movabs $0x800000000,%r12
  0x00007fb54f2cc04e: add    %r12,%r10
  0x00007fb54f2cc051: xor    %r12,%r12
  0x00007fb54f2cc054: cmp    %rax,%r10
  0x00007fb54f2cc057: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cc05d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cc060: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cc067: push   %rbp
  0x00007fb54f2cc068: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ResolvedModule::configuration@0 (line 59)

  0x00007fb54f2cc06c: mov    0xc(%rsi),%eax
  0x00007fb54f2cc06f: shl    $0x3,%rax          ;*getfield cf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ResolvedModule::configuration@1 (line 59)

  0x00007fb54f2cc073: add    $0x30,%rsp
  0x00007fb54f2cc077: pop    %rbp
  0x00007fb54f2cc078: mov    0x108(%r15),%r10
  0x00007fb54f2cc07f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cc082: retq   
  0x00007fb54f2cc083: nop
  0x00007fb54f2cc084: nop
  0x00007fb54f2cc085: mov    0x440(%r15),%rax
  0x00007fb54f2cc08c: movabs $0x0,%r10
  0x00007fb54f2cc096: mov    %r10,0x440(%r15)
  0x00007fb54f2cc09d: movabs $0x0,%r10
  0x00007fb54f2cc0a7: mov    %r10,0x448(%r15)
  0x00007fb54f2cc0ae: add    $0x30,%rsp
  0x00007fb54f2cc0b2: pop    %rbp
  0x00007fb54f2cc0b3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cc0b8: hlt    
  0x00007fb54f2cc0b9: hlt    
  0x00007fb54f2cc0ba: hlt    
  0x00007fb54f2cc0bb: hlt    
  0x00007fb54f2cc0bc: hlt    
  0x00007fb54f2cc0bd: hlt    
  0x00007fb54f2cc0be: hlt    
  0x00007fb54f2cc0bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cc0c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cc0c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cc0cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cc0d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cc0d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cc0d9: movabs $0x7fb54f2cc0d9,%r10  ;   {section_word}
  0x00007fb54f2cc0e3: push   %r10
  0x00007fb54f2cc0e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cc0ea: hlt    
  0x00007fb54f2cc0eb: hlt    
  0x00007fb54f2cc0ec: hlt    
  0x00007fb54f2cc0ed: hlt    
  0x00007fb54f2cc0ee: hlt    
  0x00007fb54f2cc0ef: hlt    
</print_nmethod>
<writer thread='1329923'/>

argument handler #47 for: static java.lang.invoke.MethodHandleNatives.resolve(Ljava/lang/invoke/MemberName;Ljava/lang/Class;Z)Ljava/lang/invoke/MemberName; (fingerprint = 1323833, 49 bytes generated)
  0x00007fb54784c1d0: lea    (%r14),%rax
  0x00007fb54784c1d3: xor    %edx,%edx
  0x00007fb54784c1d5: cmpq   $0x0,(%r14)
  0x00007fb54784c1dc: cmovne %rax,%rdx
  0x00007fb54784c1e0: lea    -0x8(%r14),%rax
  0x00007fb54784c1e4: xor    %ecx,%ecx
  0x00007fb54784c1e6: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c1ee: cmovne %rax,%rcx
  0x00007fb54784c1f2: mov    -0x10(%r14),%r8d
  0x00007fb54784c1f6: movabs $0x7fb54780cabb,%rax
  0x00007fb54784c200: retq   
<writer thread='1329936'/>
<nmethod compile_id='55' compiler='c1' level='1' entry='0x00007fb54f2cc340' size='704' address='0x00007fb54f2cc190' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.module.ModuleDescriptor$Exports targets ()Ljava/util/Set;' bytes='5' count='135' iicount='135' stamp='0.811'/>
<print_nmethod stamp='0.811'>
Compiled method (c1)     811   55       1       java.lang.module.ModuleDescriptor$Exports::targets (5 bytes)
 total in heap  [0x00007fb54f2cc190,0x00007fb54f2cc450] = 704
 relocation     [0x00007fb54f2cc308,0x00007fb54f2cc328] = 32
 main code      [0x00007fb54f2cc340,0x00007fb54f2cc3c0] = 128
 stub code      [0x00007fb54f2cc3c0,0x00007fb54f2cc3f0] = 48
 metadata       [0x00007fb54f2cc3f0,0x00007fb54f2cc3f8] = 8
 scopes data    [0x00007fb54f2cc3f8,0x00007fb54f2cc408] = 16
 scopes pcs     [0x00007fb54f2cc408,0x00007fb54f2cc448] = 64
 dependencies   [0x00007fb54f2cc448,0x00007fb54f2cc450] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor$Exports.targets()Ljava/util/Set;  [0x00007fb54f2cc340, 0x00007fb54f2cc3f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cedcb10} &apos;targets&apos; &apos;()Ljava/util/Set;&apos; in &apos;java/lang/module/ModuleDescriptor$Exports&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cc340: mov    0x8(%rsi),%r10d
  0x00007fb54f2cc344: movabs $0x800000000,%r12
  0x00007fb54f2cc34e: add    %r12,%r10
  0x00007fb54f2cc351: xor    %r12,%r12
  0x00007fb54f2cc354: cmp    %rax,%r10
  0x00007fb54f2cc357: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cc35d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cc360: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cc367: push   %rbp
  0x00007fb54f2cc368: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::targets@0 (line 456)

  0x00007fb54f2cc36c: mov    0x14(%rsi),%eax
  0x00007fb54f2cc36f: shl    $0x3,%rax          ;*getfield targets {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor$Exports::targets@1 (line 456)

  0x00007fb54f2cc373: add    $0x30,%rsp
  0x00007fb54f2cc377: pop    %rbp
  0x00007fb54f2cc378: mov    0x108(%r15),%r10
  0x00007fb54f2cc37f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cc382: retq   
  0x00007fb54f2cc383: nop
  0x00007fb54f2cc384: nop
  0x00007fb54f2cc385: mov    0x440(%r15),%rax
  0x00007fb54f2cc38c: movabs $0x0,%r10
  0x00007fb54f2cc396: mov    %r10,0x440(%r15)
  0x00007fb54f2cc39d: movabs $0x0,%r10
  0x00007fb54f2cc3a7: mov    %r10,0x448(%r15)
  0x00007fb54f2cc3ae: add    $0x30,%rsp
  0x00007fb54f2cc3b2: pop    %rbp
  0x00007fb54f2cc3b3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cc3b8: hlt    
  0x00007fb54f2cc3b9: hlt    
  0x00007fb54f2cc3ba: hlt    
  0x00007fb54f2cc3bb: hlt    
  0x00007fb54f2cc3bc: hlt    
  0x00007fb54f2cc3bd: hlt    
  0x00007fb54f2cc3be: hlt    
  0x00007fb54f2cc3bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cc3c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cc3c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cc3cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cc3d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cc3d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cc3d9: movabs $0x7fb54f2cc3d9,%r10  ;   {section_word}
  0x00007fb54f2cc3e3: push   %r10
  0x00007fb54f2cc3e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cc3ea: hlt    
  0x00007fb54f2cc3eb: hlt    
  0x00007fb54f2cc3ec: hlt    
  0x00007fb54f2cc3ed: hlt    
  0x00007fb54f2cc3ee: hlt    
  0x00007fb54f2cc3ef: hlt    
</print_nmethod>
<writer thread='1329923'/>

argument handler #48 for: static java.lang.invoke.MethodHandleNatives.objectFieldOffset(Ljava/lang/invoke/MemberName;)J (fingerprint = 5431, 27 bytes generated)
  0x00007fb54784c201: lea    (%r14),%rax
  0x00007fb54784c204: xor    %edx,%edx
  0x00007fb54784c206: cmpq   $0x0,(%r14)
  0x00007fb54784c20d: cmovne %rax,%rdx
  0x00007fb54784c211: movabs $0x7fb54780cab7,%rax
  0x00007fb54784c21b: retq   

argument handler #49 for: receiver java.io.RandomAccessFile.open0(Ljava/lang/String;I)V (fingerprint = 84796, 36 bytes generated)
  0x00007fb54784c21c: lea    (%r14),%rsi
  0x00007fb54784c21f: lea    -0x8(%r14),%rax
  0x00007fb54784c223: xor    %edx,%edx
  0x00007fb54784c225: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c22d: cmovne %rax,%rdx
  0x00007fb54784c231: mov    -0x10(%r14),%ecx
  0x00007fb54784c235: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c23f: retq   

argument handler #50 for: receiver java.io.RandomAccessFile.readBytes([BII)I (fingerprint = 1354548, 40 bytes generated)
  0x00007fb54784c240: lea    (%r14),%rsi
  0x00007fb54784c243: lea    -0x8(%r14),%rax
  0x00007fb54784c247: xor    %edx,%edx
  0x00007fb54784c249: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c251: cmovne %rax,%rdx
  0x00007fb54784c255: mov    -0x10(%r14),%ecx
  0x00007fb54784c259: mov    -0x18(%r14),%r8d
  0x00007fb54784c25d: movabs $0x7fb54780cab6,%rax
  0x00007fb54784c267: retq   

argument handler #51 for: receiver jdk.internal.perf.Perf.createLong(Ljava/lang/String;IIJ)Ljava/nio/ByteBuffer; (fingerprint = 21801784, 44 bytes generated)
  0x00007fb54784c268: lea    (%r14),%rsi
  0x00007fb54784c26b: lea    -0x8(%r14),%rax
  0x00007fb54784c26f: xor    %edx,%edx
  0x00007fb54784c271: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c279: cmovne %rax,%rdx
  0x00007fb54784c27d: mov    -0x10(%r14),%ecx
  0x00007fb54784c281: mov    -0x18(%r14),%r8d
  0x00007fb54784c285: mov    -0x28(%r14),%r9
  0x00007fb54784c289: movabs $0x7fb54780cabb,%rax
  0x00007fb54784c293: retq   

argument handler #52 for: static java.util.concurrent.atomic.AtomicLong.VMSupportsCS8()Z (fingerprint = 329, 11 bytes generated)
  0x00007fb54784c294: movabs $0x7fb54780caa0,%rax
  0x00007fb54784c29e: retq   

argument handler #53 for: receiver jdk.internal.misc.Unsafe.getLong(Ljava/lang/Object;J)J (fingerprint = 85302, 36 bytes generated)
  0x00007fb54784c29f: lea    (%r14),%rsi
  0x00007fb54784c2a2: lea    -0x8(%r14),%rax
  0x00007fb54784c2a6: xor    %edx,%edx
  0x00007fb54784c2a8: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c2b0: cmovne %rax,%rdx
  0x00007fb54784c2b4: mov    -0x18(%r14),%rcx
  0x00007fb54784c2b8: movabs $0x7fb54780cab7,%rax
  0x00007fb54784c2c2: retq   

argument handler #54 for: receiver jdk.internal.misc.Unsafe.putLong(Ljava/lang/Object;JJ)V (fingerprint = 1363260, 40 bytes generated)
  0x00007fb54784c2c3: lea    (%r14),%rsi
  0x00007fb54784c2c6: lea    -0x8(%r14),%rax
  0x00007fb54784c2ca: xor    %edx,%edx
  0x00007fb54784c2cc: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c2d4: cmovne %rax,%rdx
  0x00007fb54784c2d8: mov    -0x18(%r14),%rcx
  0x00007fb54784c2dc: mov    -0x28(%r14),%r8
  0x00007fb54784c2e0: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c2ea: retq   

argument handler #55 for: static java.util.zip.Inflater.init(Z)J (fingerprint = 5175, 14 bytes generated)
  0x00007fb54784c2eb: mov    (%r14),%edx
  0x00007fb54784c2ee: movabs $0x7fb54780cab7,%rax
  0x00007fb54784c2f8: retq   

argument handler #56 for: receiver java.util.zip.Inflater.inflateBytesBytes(J[BII[BII)J (fingerprint = 88771048150, 84 bytes generated)
  0x00007fb54784c2f9: lea    (%r14),%rsi
  0x00007fb54784c2fc: mov    -0x10(%r14),%rdx
  0x00007fb54784c300: lea    -0x18(%r14),%rax
  0x00007fb54784c304: xor    %ecx,%ecx
  0x00007fb54784c306: cmpq   $0x0,-0x18(%r14)
  0x00007fb54784c30e: cmovne %rax,%rcx
  0x00007fb54784c312: mov    -0x20(%r14),%r8d
  0x00007fb54784c316: mov    -0x28(%r14),%r9d
  0x00007fb54784c31a: lea    -0x30(%r14),%rax
  0x00007fb54784c31e: xor    %r10d,%r10d
  0x00007fb54784c321: cmpq   $0x0,-0x30(%r14)
  0x00007fb54784c329: cmovne %rax,%r10
  0x00007fb54784c32d: mov    %r10,0x8(%rsp)
  0x00007fb54784c332: mov    -0x38(%r14),%eax
  0x00007fb54784c336: mov    %eax,0x10(%rsp)
  0x00007fb54784c33a: mov    -0x40(%r14),%eax
  0x00007fb54784c33e: mov    %eax,0x18(%rsp)
  0x00007fb54784c342: movabs $0x7fb54780cab7,%rax
  0x00007fb54784c34c: retq   

argument handler #57 for: static java.util.zip.Inflater.reset(J)V (fingerprint = 5341, 15 bytes generated)
  0x00007fb54784c34d: mov    -0x8(%r14),%rdx
  0x00007fb54784c351: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c35b: retq   
<task_queued compile_id='65' method='java.util.AbstractMap &lt;init&gt; ()V' bytes='5' count='384' iicount='384' level='3' stamp='0.818' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='65' compiler='c1' level='3' entry='0x00007fb547da5b40' size='912' address='0x00007fb547da5990' relocation_offset='376' insts_offset='432' stub_offset='720' scopes_data_offset='792' scopes_pcs_offset='824' dependencies_offset='904' metadata_offset='768' method='java.util.AbstractMap &lt;init&gt; ()V' bytes='5' count='387' iicount='387' stamp='0.818'/>
<print_nmethod stamp='0.818'>
Compiled method (c1)     818   65       3       java.util.AbstractMap::&lt;init&gt; (5 bytes)
 total in heap  [0x00007fb547da5990,0x00007fb547da5d20] = 912
 relocation     [0x00007fb547da5b08,0x00007fb547da5b38] = 48
 main code      [0x00007fb547da5b40,0x00007fb547da5c60] = 288
 stub code      [0x00007fb547da5c60,0x00007fb547da5c90] = 48
 metadata       [0x00007fb547da5c90,0x00007fb547da5ca8] = 24
 scopes data    [0x00007fb547da5ca8,0x00007fb547da5cc8] = 32
 scopes pcs     [0x00007fb547da5cc8,0x00007fb547da5d18] = 80
 dependencies   [0x00007fb547da5d18,0x00007fb547da5d20] = 8
----------------------------------------------------------------------
java/util/AbstractMap.&lt;init&gt;()V  [0x00007fb547da5b40, 0x00007fb547da5c90]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cddb220} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da5b40: mov    0x8(%rsi),%r10d
  0x00007fb547da5b44: movabs $0x800000000,%r12
  0x00007fb547da5b4e: add    %r12,%r10
  0x00007fb547da5b51: xor    %r12,%r12
  0x00007fb547da5b54: cmp    %rax,%r10
  0x00007fb547da5b57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da5b5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da5b60: mov    %eax,-0x14000(%rsp)
  0x00007fb547da5b67: push   %rbp
  0x00007fb547da5b68: sub    $0x30,%rsp
  0x00007fb547da5b6c: movabs $0x7fb52d07f448,%rdi  ;   {metadata(method data for {method} {0x00007fb52cddb220} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007fb547da5b76: mov    0x100(%rdi),%ebx
  0x00007fb547da5b7c: add    $0x8,%ebx
  0x00007fb547da5b7f: mov    %ebx,0x100(%rdi)
  0x00007fb547da5b85: and    $0x1ff8,%ebx
  0x00007fb547da5b8b: cmp    $0x0,%ebx
  0x00007fb547da5b8e: je     0x00007fb547da5be1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractMap::&lt;init&gt;@0 (line 73)

  0x00007fb547da5b94: mov    %rsi,%rdi
  0x00007fb547da5b97: movabs $0x7fb52d07f448,%rbx  ;   {metadata(method data for {method} {0x00007fb52cddb220} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007fb547da5ba1: addq   $0x1,0x140(%rbx)
  0x00007fb547da5ba9: movabs $0x7fb52cedd4a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547da5bb3: mov    0x100(%rdi),%ebx
  0x00007fb547da5bb9: add    $0x8,%ebx
  0x00007fb547da5bbc: mov    %ebx,0x100(%rdi)
  0x00007fb547da5bc2: and    $0x7ffff8,%ebx
  0x00007fb547da5bc8: cmp    $0x0,%ebx
  0x00007fb547da5bcb: je     0x00007fb547da5bff
  0x00007fb547da5bd1: add    $0x30,%rsp
  0x00007fb547da5bd5: pop    %rbp
  0x00007fb547da5bd6: mov    0x108(%r15),%r10
  0x00007fb547da5bdd: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da5be0: retq   
  0x00007fb547da5be1: movabs $0x7fb52cddb220,%r10  ;   {metadata({method} {0x00007fb52cddb220} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/util/AbstractMap&apos;)}
  0x00007fb547da5beb: mov    %r10,0x8(%rsp)
  0x00007fb547da5bf0: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da5bf8: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.AbstractMap::&lt;init&gt;@-1 (line 73)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da5bfd: jmp    0x00007fb547da5b94
  0x00007fb547da5bff: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547da5c09: mov    %r10,0x8(%rsp)
  0x00007fb547da5c0e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da5c16: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.util.AbstractMap::&lt;init&gt;@1 (line 73)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da5c1b: jmp    0x00007fb547da5bd1
  0x00007fb547da5c1d: nop
  0x00007fb547da5c1e: nop
  0x00007fb547da5c1f: mov    0x440(%r15),%rax
  0x00007fb547da5c26: movabs $0x0,%r10
  0x00007fb547da5c30: mov    %r10,0x440(%r15)
  0x00007fb547da5c37: movabs $0x0,%r10
  0x00007fb547da5c41: mov    %r10,0x448(%r15)
  0x00007fb547da5c48: add    $0x30,%rsp
  0x00007fb547da5c4c: pop    %rbp
  0x00007fb547da5c4d: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da5c52: hlt    
  0x00007fb547da5c53: hlt    
  0x00007fb547da5c54: hlt    
  0x00007fb547da5c55: hlt    
  0x00007fb547da5c56: hlt    
  0x00007fb547da5c57: hlt    
  0x00007fb547da5c58: hlt    
  0x00007fb547da5c59: hlt    
  0x00007fb547da5c5a: hlt    
  0x00007fb547da5c5b: hlt    
  0x00007fb547da5c5c: hlt    
  0x00007fb547da5c5d: hlt    
  0x00007fb547da5c5e: hlt    
  0x00007fb547da5c5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da5c60: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da5c65: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da5c6f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da5c73: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da5c78: hlt    
[Deopt Handler Code]
  0x00007fb547da5c79: movabs $0x7fb547da5c79,%r10  ;   {section_word}
  0x00007fb547da5c83: push   %r10
  0x00007fb547da5c85: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da5c8a: hlt    
  0x00007fb547da5c8b: hlt    
  0x00007fb547da5c8c: hlt    
  0x00007fb547da5c8d: hlt    
  0x00007fb547da5c8e: hlt    
  0x00007fb547da5c8f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 189 219 </print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='java.lang.System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='512' iicount='512' stamp='0.819' address='0x00007fb54f2cc490'>
Compiled method (nm)     819   66     n 0       java.lang.System::arraycopy (native)
 total in heap  [0x00007fb54f2cc490,0x00007fb54f2cc850] = 960
 relocation     [0x00007fb54f2cc608,0x00007fb54f2cc638] = 48
 main code      [0x00007fb54f2cc640,0x00007fb54f2cc850] = 528
----------------------------------------------------------------------
java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V  [0x00007fb54f2cc640, 0x00007fb54f2cc850]  528 bytes
[Entry Point]
  # {method} {0x00007fb52ccd22d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007fb54f2cc640: mov    0x8(%rsi),%r10d
  0x00007fb54f2cc644: movabs $0x800000000,%r12
  0x00007fb54f2cc64e: add    %r12,%r10
  0x00007fb54f2cc651: xor    %r12,%r12
  0x00007fb54f2cc654: cmp    %r10,%rax
  0x00007fb54f2cc657: je     0x00007fb54f2cc668
  0x00007fb54f2cc65d: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cc662: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2cc668: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cc66f: push   %rbp
  0x00007fb54f2cc670: mov    %rsp,%rbp
  0x00007fb54f2cc673: sub    $0x50,%rsp
  0x00007fb54f2cc677: mov    %r9,(%rsp)
  0x00007fb54f2cc67b: mov    %r8,%r9
  0x00007fb54f2cc67e: mov    %rcx,0x18(%rsp)
  0x00007fb54f2cc683: cmp    $0x0,%rcx
  0x00007fb54f2cc687: lea    0x18(%rsp),%r8
  0x00007fb54f2cc68c: cmove  0x18(%rsp),%r8
  0x00007fb54f2cc692: mov    %rdx,%rcx
  0x00007fb54f2cc695: mov    %rsi,0x8(%rsp)
  0x00007fb54f2cc69a: cmp    $0x0,%rsi
  0x00007fb54f2cc69e: lea    0x8(%rsp),%rdx
  0x00007fb54f2cc6a3: cmove  0x8(%rsp),%rdx
  0x00007fb54f2cc6a9: movabs $0x62d800d60,%r14  ;   {oop(a &apos;java/lang/Class&apos;{0x000000062d800d60} = &apos;java/lang/System&apos;)}
  0x00007fb54f2cc6b3: mov    %r14,0x38(%rsp)
  0x00007fb54f2cc6b8: lea    0x38(%rsp),%r14
  0x00007fb54f2cc6bd: mov    %r14,%rsi          ; ImmutableOopMap{[24]=Oop [8]=Oop [56]=Oop }
  0x00007fb54f2cc6c0: vzeroupper 
  0x00007fb54f2cc6c3: movabs $0x7fb54f2cc6c0,%r10  ;   {internal_word}
  0x00007fb54f2cc6cd: mov    %r10,0x330(%r15)
  0x00007fb54f2cc6d4: mov    %rsp,0x328(%r15)
  0x00007fb54f2cc6db: cmpb   $0x0,0x166bd0f5(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2cc6e2: je     0x00007fb54f2cc726
  0x00007fb54f2cc6e8: push   %rsi
  0x00007fb54f2cc6e9: push   %rdx
  0x00007fb54f2cc6ea: push   %rcx
  0x00007fb54f2cc6eb: push   %r8
  0x00007fb54f2cc6ed: push   %r9
  0x00007fb54f2cc6ef: movabs $0x7fb52ccd22d8,%rsi  ;   {metadata({method} {0x00007fb52ccd22d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fb54f2cc6f9: mov    %r15,%rdi
  0x00007fb54f2cc6fc: test   $0xf,%esp
  0x00007fb54f2cc702: je     0x00007fb54f2cc71a
  0x00007fb54f2cc708: sub    $0x8,%rsp
  0x00007fb54f2cc70c: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2cc711: add    $0x8,%rsp
  0x00007fb54f2cc715: jmpq   0x00007fb54f2cc71f
  0x00007fb54f2cc71a: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2cc71f: pop    %r9
  0x00007fb54f2cc721: pop    %r8
  0x00007fb54f2cc723: pop    %rcx
  0x00007fb54f2cc724: pop    %rdx
  0x00007fb54f2cc725: pop    %rsi
  0x00007fb54f2cc726: lea    0x348(%r15),%rdi
  0x00007fb54f2cc72d: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2cc738: callq  0x00007fb564d88120  ;   {runtime_call JVM_ArrayCopy}
  0x00007fb54f2cc73d: vzeroupper 
  0x00007fb54f2cc740: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2cc74b: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2cc751: testb  $0x8,0x108(%r15)
  0x00007fb54f2cc759: jne    0x00007fb54f2cc770
  0x00007fb54f2cc75f: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2cc76a: je     0x00007fb54f2cc78c
  0x00007fb54f2cc770: vzeroupper 
  0x00007fb54f2cc773: mov    %r15,%rdi
  0x00007fb54f2cc776: mov    %rsp,%r12
  0x00007fb54f2cc779: sub    $0x0,%rsp
  0x00007fb54f2cc77d: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cc781: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2cc786: mov    %r12,%rsp
  0x00007fb54f2cc789: xor    %r12,%r12
  0x00007fb54f2cc78c: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2cc797: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2cc7a2: je     0x00007fb54f2cc830
  0x00007fb54f2cc7a8: cmpb   $0x0,0x166bd028(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2cc7af: je     0x00007fb54f2cc7e5
  0x00007fb54f2cc7b5: movabs $0x7fb52ccd22d8,%rsi  ;   {metadata({method} {0x00007fb52ccd22d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fb54f2cc7bf: mov    %r15,%rdi
  0x00007fb54f2cc7c2: test   $0xf,%esp
  0x00007fb54f2cc7c8: je     0x00007fb54f2cc7e0
  0x00007fb54f2cc7ce: sub    $0x8,%rsp
  0x00007fb54f2cc7d2: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2cc7d7: add    $0x8,%rsp
  0x00007fb54f2cc7db: jmpq   0x00007fb54f2cc7e5
  0x00007fb54f2cc7e0: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2cc7e5: movabs $0x0,%r10
  0x00007fb54f2cc7ef: mov    %r10,0x328(%r15)
  0x00007fb54f2cc7f6: movabs $0x0,%r10
  0x00007fb54f2cc800: mov    %r10,0x330(%r15)
  0x00007fb54f2cc807: vzeroupper 
  0x00007fb54f2cc80a: mov    0xe0(%r15),%rcx
  0x00007fb54f2cc811: movl   $0x0,0x100(%rcx)
  0x00007fb54f2cc81b: leaveq 
  0x00007fb54f2cc81c: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2cc824: jne    0x00007fb54f2cc82b
  0x00007fb54f2cc82a: retq   
  0x00007fb54f2cc82b: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2cc830: vzeroupper 
  0x00007fb54f2cc833: mov    %rsp,%r12
  0x00007fb54f2cc836: sub    $0x0,%rsp
  0x00007fb54f2cc83a: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cc83e: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2cc843: mov    %r12,%rsp
  0x00007fb54f2cc846: xor    %r12,%r12
  0x00007fb54f2cc849: jmpq   0x00007fb54f2cc7a8
  0x00007fb54f2cc84e: hlt    
  0x00007fb54f2cc84f: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[24]=Oop [8]=Oop [56]=Oop off=128}
</print_native_nmethod>
<nmethod compile_id='66' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cc640' size='960' address='0x00007fb54f2cc490' relocation_offset='376' consts_offset='960' insts_offset='432' method='java.lang.System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='512' iicount='512' stamp='0.821'/>
----------------------------------------------------------------------
java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V  [0x00007fb54f2cc640, 0x00007fb54f2cc850]  528 bytes
[Entry Point]
  # {method} {0x00007fb52ccd22d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007fb54f2cc640: mov    0x8(%rsi),%r10d
  0x00007fb54f2cc644: movabs $0x800000000,%r12
  0x00007fb54f2cc64e: add    %r12,%r10
  0x00007fb54f2cc651: xor    %r12,%r12
  0x00007fb54f2cc654: cmp    %r10,%rax
  0x00007fb54f2cc657: je     0x00007fb54f2cc668
  0x00007fb54f2cc65d: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cc662: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2cc668: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cc66f: push   %rbp
  0x00007fb54f2cc670: mov    %rsp,%rbp
  0x00007fb54f2cc673: sub    $0x50,%rsp
  0x00007fb54f2cc677: mov    %r9,(%rsp)
  0x00007fb54f2cc67b: mov    %r8,%r9
  0x00007fb54f2cc67e: mov    %rcx,0x18(%rsp)
  0x00007fb54f2cc683: cmp    $0x0,%rcx
  0x00007fb54f2cc687: lea    0x18(%rsp),%r8
  0x00007fb54f2cc68c: cmove  0x18(%rsp),%r8
  0x00007fb54f2cc692: mov    %rdx,%rcx
  0x00007fb54f2cc695: mov    %rsi,0x8(%rsp)
  0x00007fb54f2cc69a: cmp    $0x0,%rsi
  0x00007fb54f2cc69e: lea    0x8(%rsp),%rdx
  0x00007fb54f2cc6a3: cmove  0x8(%rsp),%rdx
  0x00007fb54f2cc6a9: movabs $0x62d800d60,%r14  ;   {oop(a &apos;java/lang/Class&apos;{0x000000062d800d60} = &apos;java/lang/System&apos;)}
  0x00007fb54f2cc6b3: mov    %r14,0x38(%rsp)
  0x00007fb54f2cc6b8: lea    0x38(%rsp),%r14
  0x00007fb54f2cc6bd: mov    %r14,%rsi          ; ImmutableOopMap{[24]=Oop [8]=Oop [56]=Oop }
  0x00007fb54f2cc6c0: vzeroupper 
  0x00007fb54f2cc6c3: movabs $0x7fb54f2cc6c0,%r10  ;   {internal_word}
  0x00007fb54f2cc6cd: mov    %r10,0x330(%r15)
  0x00007fb54f2cc6d4: mov    %rsp,0x328(%r15)
  0x00007fb54f2cc6db: cmpb   $0x0,0x166bd0f5(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2cc6e2: je     0x00007fb54f2cc726
  0x00007fb54f2cc6e8: push   %rsi
  0x00007fb54f2cc6e9: push   %rdx
  0x00007fb54f2cc6ea: push   %rcx
  0x00007fb54f2cc6eb: push   %r8
  0x00007fb54f2cc6ed: push   %r9
  0x00007fb54f2cc6ef: movabs $0x7fb52ccd22d8,%rsi  ;   {metadata({method} {0x00007fb52ccd22d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fb54f2cc6f9: mov    %r15,%rdi
  0x00007fb54f2cc6fc: test   $0xf,%esp
  0x00007fb54f2cc702: je     0x00007fb54f2cc71a
  0x00007fb54f2cc708: sub    $0x8,%rsp
  0x00007fb54f2cc70c: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2cc711: add    $0x8,%rsp
  0x00007fb54f2cc715: jmpq   0x00007fb54f2cc71f
  0x00007fb54f2cc71a: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2cc71f: pop    %r9
  0x00007fb54f2cc721: pop    %r8
  0x00007fb54f2cc723: pop    %rcx
  0x00007fb54f2cc724: pop    %rdx
  0x00007fb54f2cc725: pop    %rsi
  0x00007fb54f2cc726: lea    0x348(%r15),%rdi
  0x00007fb54f2cc72d: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2cc738: callq  0x00007fb564d88120  ;   {runtime_call JVM_ArrayCopy}
  0x00007fb54f2cc73d: vzeroupper 
  0x00007fb54f2cc740: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2cc74b: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2cc751: testb  $0x8,0x108(%r15)
  0x00007fb54f2cc759: jne    0x00007fb54f2cc770
  0x00007fb54f2cc75f: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2cc76a: je     0x00007fb54f2cc78c
  0x00007fb54f2cc770: vzeroupper 
  0x00007fb54f2cc773: mov    %r15,%rdi
  0x00007fb54f2cc776: mov    %rsp,%r12
  0x00007fb54f2cc779: sub    $0x0,%rsp
  0x00007fb54f2cc77d: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cc781: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2cc786: mov    %r12,%rsp
  0x00007fb54f2cc789: xor    %r12,%r12
  0x00007fb54f2cc78c: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2cc797: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2cc7a2: je     0x00007fb54f2cc830
  0x00007fb54f2cc7a8: cmpb   $0x0,0x166bd028(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2cc7af: je     0x00007fb54f2cc7e5
  0x00007fb54f2cc7b5: movabs $0x7fb52ccd22d8,%rsi  ;   {metadata({method} {0x00007fb52ccd22d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007fb54f2cc7bf: mov    %r15,%rdi
  0x00007fb54f2cc7c2: test   $0xf,%esp
  0x00007fb54f2cc7c8: je     0x00007fb54f2cc7e0
  0x00007fb54f2cc7ce: sub    $0x8,%rsp
  0x00007fb54f2cc7d2: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2cc7d7: add    $0x8,%rsp
  0x00007fb54f2cc7db: jmpq   0x00007fb54f2cc7e5
  0x00007fb54f2cc7e0: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2cc7e5: movabs $0x0,%r10
  0x00007fb54f2cc7ef: mov    %r10,0x328(%r15)
  0x00007fb54f2cc7f6: movabs $0x0,%r10
  0x00007fb54f2cc800: mov    %r10,0x330(%r15)
  0x00007fb54f2cc807: vzeroupper 
  0x00007fb54f2cc80a: mov    0xe0(%r15),%rcx
  0x00007fb54f2cc811: movl   $0x0,0x100(%rcx)
  0x00007fb54f2cc81b: leaveq 
  0x00007fb54f2cc81c: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2cc824: jne    0x00007fb54f2cc82b
  0x00007fb54f2cc82a: retq   
  0x00007fb54f2cc82b: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2cc830: vzeroupper 
  0x00007fb54f2cc833: mov    %rsp,%r12
  0x00007fb54f2cc836: sub    $0x0,%rsp
  0x00007fb54f2cc83a: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cc83e: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2cc843: mov    %r12,%rsp
  0x00007fb54f2cc846: xor    %r12,%r12
  0x00007fb54f2cc849: jmpq   0x00007fb54f2cc7a8
  0x00007fb54f2cc84e: hlt    
  0x00007fb54f2cc84f: hlt    
<print_native_nmethod method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.823' address='0x00007fb54f2cc890'>
Compiled method (nm)     823   67     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLIIL)I (native)
 total in heap  [0x00007fb54f2cc890,0x00007fb54f2cca40] = 432
 relocation     [0x00007fb54f2cca08,0x00007fb54f2cca10] = 8
 main code      [0x00007fb54f2cca20,0x00007fb54f2cca40] = 32
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I  [0x00007fb54f2cca20, 0x00007fb54f2cca40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d086bf0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cca20: mov    0x24(%r9),%ebx
  0x00007fb54f2cca24: shl    $0x3,%rbx
  0x00007fb54f2cca28: mov    0x10(%rbx),%rbx
  0x00007fb54f2cca2c: test   %rbx,%rbx
  0x00007fb54f2cca2f: je     0x00007fb54f2cca38
  0x00007fb54f2cca35: jmpq   *0x38(%rbx)
  0x00007fb54f2cca38: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cca3d: hlt    
  0x00007fb54f2cca3e: hlt    
  0x00007fb54f2cca3f: hlt    
</print_native_nmethod>
<nmethod compile_id='67' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cca20' size='432' address='0x00007fb54f2cc890' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.824'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I  [0x00007fb54f2cca20, 0x00007fb54f2cca40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d086bf0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cca20: mov    0x24(%r9),%ebx
  0x00007fb54f2cca24: shl    $0x3,%rbx
  0x00007fb54f2cca28: mov    0x10(%rbx),%rbx
  0x00007fb54f2cca2c: test   %rbx,%rbx
  0x00007fb54f2cca2f: je     0x00007fb54f2cca38
  0x00007fb54f2cca35: jmpq   *0x38(%rbx)
  0x00007fb54f2cca38: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cca3d: hlt    
  0x00007fb54f2cca3e: hlt    
  0x00007fb54f2cca3f: hlt    
<uncommon_trap thread='1329923' reason='unstable_if' action='reinterpret' debug_id='0' compile_id='59' compiler='c2' level='4' stamp='0.825'>
<jvms bci='14' method='java.lang.String hashCode ()I' bytes='49' count='6021' iicount='6021'/>
</uncommon_trap>
<make_not_entrant thread='1329923' compile_id='59' compiler='c2' level='4' stamp='0.825'/>
<task_queued compile_id='68' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='896' iicount='896' level='3' stamp='0.825' comment='tiered' hot_count='896'/>
<writer thread='1329936'/>
<nmethod compile_id='68' compiler='c1' level='3' entry='0x00007fb547da5f40' size='880' address='0x00007fb547da5d90' relocation_offset='376' insts_offset='432' stub_offset='656' scopes_data_offset='736' scopes_pcs_offset='776' dependencies_offset='872' metadata_offset='720' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='904' iicount='904' stamp='0.826'/>
<print_nmethod stamp='0.826'>
Compiled method (c1)     825   68       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
 total in heap  [0x00007fb547da5d90,0x00007fb547da6100] = 880
 relocation     [0x00007fb547da5f08,0x00007fb547da5f40] = 56
 main code      [0x00007fb547da5f40,0x00007fb547da6020] = 224
 stub code      [0x00007fb547da6020,0x00007fb547da6060] = 64
 metadata       [0x00007fb547da6060,0x00007fb547da6070] = 16
 scopes data    [0x00007fb547da6070,0x00007fb547da6098] = 40
 scopes pcs     [0x00007fb547da6098,0x00007fb547da60f8] = 96
 dependencies   [0x00007fb547da60f8,0x00007fb547da6100] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00007fb547da5f40, 0x00007fb547da6060]  288 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cde5590} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da5f40: mov    0x8(%rsi),%r10d
  0x00007fb547da5f44: movabs $0x800000000,%r12
  0x00007fb547da5f4e: add    %r12,%r10
  0x00007fb547da5f51: xor    %r12,%r12
  0x00007fb547da5f54: cmp    %rax,%r10
  0x00007fb547da5f57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da5f5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da5f60: mov    %eax,-0x14000(%rsp)
  0x00007fb547da5f67: push   %rbp
  0x00007fb547da5f68: sub    $0x30,%rsp
  0x00007fb547da5f6c: movabs $0x7fb52cf51130,%r8  ;   {metadata(method data for {method} {0x00007fb52cde5590} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547da5f76: mov    0x100(%r8),%edi
  0x00007fb547da5f7d: add    $0x8,%edi
  0x00007fb547da5f80: mov    %edi,0x100(%r8)
  0x00007fb547da5f87: and    $0x1ff8,%edi
  0x00007fb547da5f8d: cmp    $0x0,%edi
  0x00007fb547da5f90: je     0x00007fb547da5fcc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@0 (line 1541)

  0x00007fb547da5f96: mov    %rsi,%r8
  0x00007fb547da5f99: movabs $0x7fb52cf51130,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde5590} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547da5fa3: addq   $0x1,0x140(%rdi)
  0x00007fb547da5fab: mov    $0x1,%r8d          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)

  0x00007fb547da5fb1: nopw   0x0(%rax,%rax,1)
  0x00007fb547da5fb7: callq  0x00007fb54784ad80  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)
                                                ;   {optimized virtual_call}
  0x00007fb547da5fbc: add    $0x30,%rsp
  0x00007fb547da5fc0: pop    %rbp
  0x00007fb547da5fc1: mov    0x108(%r15),%r10
  0x00007fb547da5fc8: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da5fcb: retq   
  0x00007fb547da5fcc: movabs $0x7fb52cde5590,%r10  ;   {metadata({method} {0x00007fb52cde5590} &apos;putIfAbsent&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547da5fd6: mov    %r10,0x8(%rsp)
  0x00007fb547da5fdb: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da5fe3: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@-1 (line 1541)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da5fe8: jmp    0x00007fb547da5f96
  0x00007fb547da5fea: nop
  0x00007fb547da5feb: nop
  0x00007fb547da5fec: mov    0x440(%r15),%rax
  0x00007fb547da5ff3: movabs $0x0,%r10
  0x00007fb547da5ffd: mov    %r10,0x440(%r15)
  0x00007fb547da6004: movabs $0x0,%r10
  0x00007fb547da600e: mov    %r10,0x448(%r15)
  0x00007fb547da6015: add    $0x30,%rsp
  0x00007fb547da6019: pop    %rbp
  0x00007fb547da601a: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da601f: hlt    
[Stub Code]
  0x00007fb547da6020: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da6025: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da602f: jmpq   0x00007fb547da602f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da6034: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da6039: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da6043: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da6047: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da604c: hlt    
[Deopt Handler Code]
  0x00007fb547da604d: movabs $0x7fb547da604d,%r10  ;   {section_word}
  0x00007fb547da6057: push   %r10
  0x00007fb547da6059: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da605e: hlt    
  0x00007fb547da605f: hlt    

ImmutableOopMap{}pc offsets: 124 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 168 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='69' method='java.lang.CharacterDataLatin1 getProperties (I)I' bytes='11' count='256' iicount='256' level='3' stamp='0.829' comment='tiered' hot_count='256'/>
<task_queued compile_id='70' method='java.lang.Math min (II)I' bytes='11' count='384' iicount='384' level='3' stamp='0.829' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='70' compiler='c1' level='3' entry='0x00007fb547da62c0' size='904' address='0x00007fb547da6110' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' metadata_offset='736' method='java.lang.Math min (II)I' bytes='11' count='385' iicount='385' stamp='0.829'/>
<print_nmethod stamp='0.829'>
Compiled method (c1)     828   70       3       java.lang.Math::min (11 bytes)
 total in heap  [0x00007fb547da6110,0x00007fb547da6498] = 904
 relocation     [0x00007fb547da6288,0x00007fb547da62b0] = 40
 main code      [0x00007fb547da62c0,0x00007fb547da63c0] = 256
 stub code      [0x00007fb547da63c0,0x00007fb547da63f0] = 48
 metadata       [0x00007fb547da63f0,0x00007fb547da63f8] = 8
 scopes data    [0x00007fb547da63f8,0x00007fb547da6420] = 40
 scopes pcs     [0x00007fb547da6420,0x00007fb547da6490] = 112
 dependencies   [0x00007fb547da6490,0x00007fb547da6498] = 8
----------------------------------------------------------------------
java/lang/Math.min(II)I  [0x00007fb547da62c0, 0x00007fb547da63f0]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da62c0: mov    %eax,-0x14000(%rsp)
  0x00007fb547da62c7: push   %rbp
  0x00007fb547da62c8: sub    $0x30,%rsp
  0x00007fb547da62cc: movabs $0x7fb52d0a3ad8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547da62d6: mov    0x100(%rax),%edi
  0x00007fb547da62dc: add    $0x8,%edi
  0x00007fb547da62df: mov    %edi,0x100(%rax)
  0x00007fb547da62e5: and    $0x1ff8,%edi
  0x00007fb547da62eb: cmp    $0x0,%edi
  0x00007fb547da62ee: je     0x00007fb547da6357  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@0 (line 1521)

  0x00007fb547da62f4: cmp    %edx,%esi
  0x00007fb547da62f6: movabs $0x7fb52d0a3ad8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547da6300: movabs $0x140,%rdi
  0x00007fb547da630a: jg     0x00007fb547da631a
  0x00007fb547da6310: movabs $0x150,%rdi
  0x00007fb547da631a: mov    (%rax,%rdi,1),%rbx
  0x00007fb547da631e: lea    0x1(%rbx),%rbx
  0x00007fb547da6322: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547da6326: jg     0x00007fb547da6341  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1521)

  0x00007fb547da632c: movabs $0x7fb52d0a3ad8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547da6336: incl   0x160(%rax)
  0x00007fb547da633c: jmpq   0x00007fb547da6344  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1521)

  0x00007fb547da6341: mov    %rdx,%rsi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1521)

  0x00007fb547da6344: mov    %rsi,%rax
  0x00007fb547da6347: add    $0x30,%rsp
  0x00007fb547da634b: pop    %rbp
  0x00007fb547da634c: mov    0x108(%r15),%r10
  0x00007fb547da6353: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da6356: retq   
  0x00007fb547da6357: movabs $0x7fb52ce2eea8,%r10  ;   {metadata({method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547da6361: mov    %r10,0x8(%rsp)
  0x00007fb547da6366: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da636e: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1521)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da6373: jmpq   0x00007fb547da62f4
  0x00007fb547da6378: nop
  0x00007fb547da6379: nop
  0x00007fb547da637a: mov    0x440(%r15),%rax
  0x00007fb547da6381: movabs $0x0,%r10
  0x00007fb547da638b: mov    %r10,0x440(%r15)
  0x00007fb547da6392: movabs $0x0,%r10
  0x00007fb547da639c: mov    %r10,0x448(%r15)
  0x00007fb547da63a3: add    $0x30,%rsp
  0x00007fb547da63a7: pop    %rbp
  0x00007fb547da63a8: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da63ad: hlt    
  0x00007fb547da63ae: hlt    
  0x00007fb547da63af: hlt    
  0x00007fb547da63b0: hlt    
  0x00007fb547da63b1: hlt    
  0x00007fb547da63b2: hlt    
  0x00007fb547da63b3: hlt    
  0x00007fb547da63b4: hlt    
  0x00007fb547da63b5: hlt    
  0x00007fb547da63b6: hlt    
  0x00007fb547da63b7: hlt    
  0x00007fb547da63b8: hlt    
  0x00007fb547da63b9: hlt    
  0x00007fb547da63ba: hlt    
  0x00007fb547da63bb: hlt    
  0x00007fb547da63bc: hlt    
  0x00007fb547da63bd: hlt    
  0x00007fb547da63be: hlt    
  0x00007fb547da63bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da63c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da63c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da63cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da63d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da63d8: hlt    
[Deopt Handler Code]
  0x00007fb547da63d9: movabs $0x7fb547da63d9,%r10  ;   {section_word}
  0x00007fb547da63e3: push   %r10
  0x00007fb547da63e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da63ea: hlt    
  0x00007fb547da63eb: hlt    
  0x00007fb547da63ec: hlt    
  0x00007fb547da63ed: hlt    
  0x00007fb547da63ee: hlt    
  0x00007fb547da63ef: hlt    

ImmutableOopMap{}pc offsets: 179 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='71' method='java.lang.StringLatin1 indexOf ([BII)I' bytes='61' count='232' backedge_count='3072' iicount='232' level='3' stamp='0.833' comment='tiered' hot_count='232'/>
<task_queued compile_id='72' method='java.util.zip.ZipUtils SH ([BI)I' bytes='21' count='384' iicount='384' level='3' stamp='0.833' comment='tiered' hot_count='384'/>
<writer thread='1329936'/>
<nmethod compile_id='71' compiler='c1' level='3' entry='0x00007fb547da66e0' size='2056' address='0x00007fb547da6510' relocation_offset='376' insts_offset='464' stub_offset='1360' scopes_data_offset='1424' scopes_pcs_offset='1616' dependencies_offset='2032' nul_chk_table_offset='2040' metadata_offset='1408' method='java.lang.StringLatin1 indexOf ([BII)I' bytes='61' count='232' backedge_count='3092' iicount='232' stamp='0.833'/>
<print_nmethod stamp='0.833'>
Compiled method (c1)     833   71       3       java.lang.StringLatin1::indexOf (61 bytes)
 total in heap  [0x00007fb547da6510,0x00007fb547da6d18] = 2056
 relocation     [0x00007fb547da6688,0x00007fb547da66d8] = 80
 main code      [0x00007fb547da66e0,0x00007fb547da6a60] = 896
 stub code      [0x00007fb547da6a60,0x00007fb547da6a90] = 48
 metadata       [0x00007fb547da6a90,0x00007fb547da6aa0] = 16
 scopes data    [0x00007fb547da6aa0,0x00007fb547da6b60] = 192
 scopes pcs     [0x00007fb547da6b60,0x00007fb547da6d00] = 416
 dependencies   [0x00007fb547da6d00,0x00007fb547da6d08] = 8
 nul chk table  [0x00007fb547da6d08,0x00007fb547da6d18] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.indexOf([BII)I  [0x00007fb547da66e0, 0x00007fb547da6a90]  944 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fb547da66e0: mov    %eax,-0x14000(%rsp)
  0x00007fb547da66e7: push   %rbp
  0x00007fb547da66e8: sub    $0x40,%rsp
  0x00007fb547da66ec: movabs $0x7fb52d0a65c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da66f6: mov    0x100(%rax),%edi
  0x00007fb547da66fc: add    $0x8,%edi
  0x00007fb547da66ff: mov    %edi,0x100(%rax)
  0x00007fb547da6705: and    $0x1ff8,%edi
  0x00007fb547da670b: cmp    $0x0,%edi
  0x00007fb547da670e: je     0x00007fb547da699c  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@0 (line 202)

  0x00007fb547da6714: movabs $0x7fb52d0a65c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da671e: addq   $0x1,0x140(%rax)
  0x00007fb547da6726: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da6730: mov    0x100(%rax),%edi
  0x00007fb547da6736: add    $0x8,%edi
  0x00007fb547da6739: mov    %edi,0x100(%rax)
  0x00007fb547da673f: and    $0x7ffff8,%edi
  0x00007fb547da6745: cmp    $0x0,%edi
  0x00007fb547da6748: je     0x00007fb547da69bd
  0x00007fb547da674e: mov    %rdx,%rax
  0x00007fb547da6751: shr    $0x8,%eax
  0x00007fb547da6754: cmp    $0x0,%eax
  0x00007fb547da6757: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da6761: movabs $0x140,%rdi
  0x00007fb547da676b: jne    0x00007fb547da677b
  0x00007fb547da6771: movabs $0x150,%rdi
  0x00007fb547da677b: mov    (%rax,%rdi,1),%rbx
  0x00007fb547da677f: lea    0x1(%rbx),%rbx
  0x00007fb547da6783: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547da6787: jne    0x00007fb547da67a7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x00007fb547da678d: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da6797: incl   0x160(%rax)
  0x00007fb547da679d: mov    $0x1,%eax
  0x00007fb547da67a2: jmpq   0x00007fb547da67ac  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x00007fb547da67a7: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x00007fb547da67ac: and    $0x1,%eax
  0x00007fb547da67af: cmp    $0x0,%eax
  0x00007fb547da67b2: movabs $0x7fb52d0a65c0,%rax  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da67bc: movabs $0x160,%rdi
  0x00007fb547da67c6: je     0x00007fb547da67d6
  0x00007fb547da67cc: movabs $0x150,%rdi
  0x00007fb547da67d6: mov    (%rax,%rdi,1),%rbx
  0x00007fb547da67da: lea    0x1(%rbx),%rbx
  0x00007fb547da67de: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547da67e2: je     0x00007fb547da6987  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@4 (line 202)

  0x00007fb547da67e8: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10 (line 205)
                                                ; implicit exception: dispatches to 0x00007fb547da69de
  0x00007fb547da67eb: cmp    $0x0,%ecx
  0x00007fb547da67ee: movabs $0x7fb52d0a65c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da67f8: movabs $0x170,%rbx
  0x00007fb547da6802: jge    0x00007fb547da6812
  0x00007fb547da6808: movabs $0x180,%rbx
  0x00007fb547da6812: mov    (%rdi,%rbx,1),%r8
  0x00007fb547da6816: lea    0x1(%r8),%r8
  0x00007fb547da681a: mov    %r8,(%rdi,%rbx,1)
  0x00007fb547da681e: jge    0x00007fb547da683e  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@13 (line 206)

  0x00007fb547da6824: movabs $0x7fb52d0a65c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da682e: incl   0x190(%rdi)
  0x00007fb547da6834: mov    $0x0,%ecx
  0x00007fb547da6839: jmpq   0x00007fb547da6876  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@18 (line 207)

  0x00007fb547da683e: cmp    %eax,%ecx
  0x00007fb547da6840: movabs $0x7fb52d0a65c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da684a: movabs $0x1b8,%rbx
  0x00007fb547da6854: jge    0x00007fb547da6864
  0x00007fb547da685a: movabs $0x1a8,%rbx
  0x00007fb547da6864: mov    (%rdi,%rbx,1),%r8
  0x00007fb547da6868: lea    0x1(%r8),%r8
  0x00007fb547da686c: mov    %r8,(%rdi,%rbx,1)
  0x00007fb547da6870: jge    0x00007fb547da6972  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@23 (line 208)

  0x00007fb547da6876: movsbl %dl,%edx
  0x00007fb547da6879: jmpq   0x00007fb547da690d  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@35 (line 213)

  0x00007fb547da687e: xchg   %ax,%ax
  0x00007fb547da6880: cmp    0xc(%rsi),%ecx
  0x00007fb547da6883: jae    0x00007fb547da69e3
  0x00007fb547da6889: movslq %ecx,%rdi
  0x00007fb547da688c: movsbl 0x10(%rsi,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007fb547da6891: cmp    %edx,%edi
  0x00007fb547da6893: movabs $0x7fb52d0a65c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da689d: movabs $0x1f8,%rbx
  0x00007fb547da68a7: je     0x00007fb547da68b7
  0x00007fb547da68ad: movabs $0x1e8,%rbx
  0x00007fb547da68b7: mov    (%rdi,%rbx,1),%r8
  0x00007fb547da68bb: lea    0x1(%r8),%r8
  0x00007fb547da68bf: mov    %r8,(%rdi,%rbx,1)
  0x00007fb547da68c3: je     0x00007fb547da694a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007fb547da68c9: inc    %ecx
  0x00007fb547da68cb: movabs $0x7fb52d0a65c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da68d5: mov    0x104(%rdi),%ebx
  0x00007fb547da68db: add    $0x8,%ebx
  0x00007fb547da68de: mov    %ebx,0x104(%rdi)
  0x00007fb547da68e4: and    $0xfff8,%ebx
  0x00007fb547da68ea: cmp    $0x0,%ebx
  0x00007fb547da68ed: je     0x00007fb547da69f1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x00007fb547da68f3: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x00007fb547da68fa: test   %eax,(%r10)        ;   {poll}
  0x00007fb547da68fd: movabs $0x7fb52d0a65c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da6907: incl   0x208(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x00007fb547da690d: cmp    %eax,%ecx
  0x00007fb547da690f: movabs $0x7fb52d0a65c0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da6919: movabs $0x1c8,%rbx
  0x00007fb547da6923: jge    0x00007fb547da6933
  0x00007fb547da6929: movabs $0x1d8,%rbx
  0x00007fb547da6933: mov    (%rdi,%rbx,1),%r8
  0x00007fb547da6937: lea    0x1(%r8),%r8
  0x00007fb547da693b: mov    %r8,(%rdi,%rbx,1)
  0x00007fb547da693f: jge    0x00007fb547da695d
  0x00007fb547da6945: jmpq   0x00007fb547da6880  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38 (line 213)

  0x00007fb547da694a: mov    %rcx,%rax
  0x00007fb547da694d: add    $0x40,%rsp
  0x00007fb547da6951: pop    %rbp
  0x00007fb547da6952: mov    0x108(%r15),%r10
  0x00007fb547da6959: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da695c: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@52 (line 215)

  0x00007fb547da695d: mov    $0xffffffff,%eax
  0x00007fb547da6962: add    $0x40,%rsp
  0x00007fb547da6966: pop    %rbp
  0x00007fb547da6967: mov    0x108(%r15),%r10
  0x00007fb547da696e: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da6971: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@60 (line 218)

  0x00007fb547da6972: mov    $0xffffffff,%eax
  0x00007fb547da6977: add    $0x40,%rsp
  0x00007fb547da697b: pop    %rbp
  0x00007fb547da697c: mov    0x108(%r15),%r10
  0x00007fb547da6983: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da6986: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@27 (line 210)

  0x00007fb547da6987: mov    $0xffffffff,%eax
  0x00007fb547da698c: add    $0x40,%rsp
  0x00007fb547da6990: pop    %rbp
  0x00007fb547da6991: mov    0x108(%r15),%r10
  0x00007fb547da6998: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da699b: retq   
  0x00007fb547da699c: movabs $0x7fb52ce090e8,%r10  ;   {metadata({method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da69a6: mov    %r10,0x8(%rsp)
  0x00007fb547da69ab: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da69b3: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::indexOf@-1 (line 202)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da69b8: jmpq   0x00007fb547da6714
  0x00007fb547da69bd: movabs $0x7fb52ce07f58,%r10  ;   {metadata({method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da69c7: mov    %r10,0x8(%rsp)
  0x00007fb547da69cc: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da69d4: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da69d9: jmpq   0x00007fb547da674e
  0x00007fb547da69de: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10 (line 205)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da69e3: mov    %rcx,(%rsp)
  0x00007fb547da69e7: mov    %rsi,0x8(%rsp)
  0x00007fb547da69ec: callq  0x00007fb5478eeca0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547da69f1: movabs $0x7fb52ce090e8,%r10  ;   {metadata({method} {0x00007fb52ce090e8} &apos;indexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da69fb: mov    %r10,0x8(%rsp)
  0x00007fb547da6a00: movq   $0x38,(%rsp)
  0x00007fb547da6a08: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da6a0d: jmpq   0x00007fb547da68f3
  0x00007fb547da6a12: nop
  0x00007fb547da6a13: nop
  0x00007fb547da6a14: mov    0x440(%r15),%rax
  0x00007fb547da6a1b: movabs $0x0,%r10
  0x00007fb547da6a25: mov    %r10,0x440(%r15)
  0x00007fb547da6a2c: movabs $0x0,%r10
  0x00007fb547da6a36: mov    %r10,0x448(%r15)
  0x00007fb547da6a3d: add    $0x40,%rsp
  0x00007fb547da6a41: pop    %rbp
  0x00007fb547da6a42: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da6a47: hlt    
  0x00007fb547da6a48: hlt    
  0x00007fb547da6a49: hlt    
  0x00007fb547da6a4a: hlt    
  0x00007fb547da6a4b: hlt    
  0x00007fb547da6a4c: hlt    
  0x00007fb547da6a4d: hlt    
  0x00007fb547da6a4e: hlt    
  0x00007fb547da6a4f: hlt    
  0x00007fb547da6a50: hlt    
  0x00007fb547da6a51: hlt    
  0x00007fb547da6a52: hlt    
  0x00007fb547da6a53: hlt    
  0x00007fb547da6a54: hlt    
  0x00007fb547da6a55: hlt    
  0x00007fb547da6a56: hlt    
  0x00007fb547da6a57: hlt    
  0x00007fb547da6a58: hlt    
  0x00007fb547da6a59: hlt    
  0x00007fb547da6a5a: hlt    
  0x00007fb547da6a5b: hlt    
  0x00007fb547da6a5c: hlt    
  0x00007fb547da6a5d: hlt    
  0x00007fb547da6a5e: hlt    
  0x00007fb547da6a5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da6a60: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da6a65: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da6a6f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da6a73: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da6a78: hlt    
[Deopt Handler Code]
  0x00007fb547da6a79: movabs $0x7fb547da6a79,%r10  ;   {section_word}
  0x00007fb547da6a83: push   %r10
  0x00007fb547da6a85: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da6a8a: hlt    
  0x00007fb547da6a8b: hlt    
  0x00007fb547da6a8c: hlt    
  0x00007fb547da6a8d: hlt    
  0x00007fb547da6a8e: hlt    
  0x00007fb547da6a8f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 538 728 761 771 785 813 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='73' method='java.lang.CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='384' iicount='384' level='3' stamp='0.838' comment='tiered' hot_count='384'/>
<task_queued compile_id='74' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='510' iicount='510' level='3' stamp='0.838' comment='tiered' hot_count='510'/>
<task_queued compile_id='75' method='java.lang.String hashCode ()I' bytes='49' count='6144' iicount='6144' decompiles='1' unstable_if_traps='1' level='3' stamp='0.838' comment='tiered' hot_count='6144'/>
<writer thread='1329936'/>
<nmethod compile_id='69' compiler='c1' level='3' entry='0x00007fb547da6f40' size='952' address='0x00007fb547da6d90' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' metadata_offset='736' method='java.lang.CharacterDataLatin1 getProperties (I)I' bytes='11' count='533' iicount='533' stamp='0.838'/>
<print_nmethod stamp='0.838'>
Compiled method (c1)     838   69       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)
 total in heap  [0x00007fb547da6d90,0x00007fb547da7148] = 952
 relocation     [0x00007fb547da6f08,0x00007fb547da6f38] = 48
 main code      [0x00007fb547da6f40,0x00007fb547da7040] = 256
 stub code      [0x00007fb547da7040,0x00007fb547da7070] = 48
 metadata       [0x00007fb547da7070,0x00007fb547da7078] = 8
 scopes data    [0x00007fb547da7078,0x00007fb547da70a8] = 48
 scopes pcs     [0x00007fb547da70a8,0x00007fb547da7128] = 128
 dependencies   [0x00007fb547da7128,0x00007fb547da7130] = 8
 nul chk table  [0x00007fb547da7130,0x00007fb547da7148] = 24
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.getProperties(I)I  [0x00007fb547da6f40, 0x00007fb547da7070]  304 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cea3bb8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da6f40: mov    0x8(%rsi),%r10d
  0x00007fb547da6f44: movabs $0x800000000,%r12
  0x00007fb547da6f4e: add    %r12,%r10
  0x00007fb547da6f51: xor    %r12,%r12
  0x00007fb547da6f54: cmp    %rax,%r10
  0x00007fb547da6f57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da6f5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da6f60: mov    %eax,-0x14000(%rsp)
  0x00007fb547da6f67: push   %rbp
  0x00007fb547da6f68: sub    $0x30,%rsp
  0x00007fb547da6f6c: movabs $0x7fb52d0c4d88,%rax  ;   {metadata(method data for {method} {0x00007fb52cea3bb8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fb547da6f76: mov    0x100(%rax),%edi
  0x00007fb547da6f7c: add    $0x8,%edi
  0x00007fb547da6f7f: mov    %edi,0x100(%rax)
  0x00007fb547da6f85: and    $0x1ff8,%edi
  0x00007fb547da6f8b: cmp    $0x0,%edi
  0x00007fb547da6f8e: je     0x00007fb547da6fc4  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 73)

  0x00007fb547da6f94: and    $0xffff,%edx
  0x00007fb547da6f9a: movabs $0x62d821e08,%rax  ;   {oop([I{0x000000062d821e08})}
  0x00007fb547da6fa4: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00007fb547da6fe2
  0x00007fb547da6fa7: jae    0x00007fb547da6fec
  0x00007fb547da6fad: movslq %edx,%rdx
  0x00007fb547da6fb0: mov    0x10(%rax,%rdx,4),%eax  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)

  0x00007fb547da6fb4: add    $0x30,%rsp
  0x00007fb547da6fb8: pop    %rbp
  0x00007fb547da6fb9: mov    0x108(%r15),%r10
  0x00007fb547da6fc0: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da6fc3: retq   
  0x00007fb547da6fc4: movabs $0x7fb52cea3bb8,%r10  ;   {metadata({method} {0x00007fb52cea3bb8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007fb547da6fce: mov    %r10,0x8(%rsp)
  0x00007fb547da6fd3: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da6fdb: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 73)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da6fe0: jmp    0x00007fb547da6f94
  0x00007fb547da6fe2: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da6fe7: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da6fec: mov    %rdx,(%rsp)
  0x00007fb547da6ff0: mov    %rax,0x8(%rsp)
  0x00007fb547da6ff5: callq  0x00007fb5478eeca0  ; ImmutableOopMap{rax=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547da6ffa: nop
  0x00007fb547da6ffb: nop
  0x00007fb547da6ffc: mov    0x440(%r15),%rax
  0x00007fb547da7003: movabs $0x0,%r10
  0x00007fb547da700d: mov    %r10,0x440(%r15)
  0x00007fb547da7014: movabs $0x0,%r10
  0x00007fb547da701e: mov    %r10,0x448(%r15)
  0x00007fb547da7025: add    $0x30,%rsp
  0x00007fb547da7029: pop    %rbp
  0x00007fb547da702a: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da702f: hlt    
  0x00007fb547da7030: hlt    
  0x00007fb547da7031: hlt    
  0x00007fb547da7032: hlt    
  0x00007fb547da7033: hlt    
  0x00007fb547da7034: hlt    
  0x00007fb547da7035: hlt    
  0x00007fb547da7036: hlt    
  0x00007fb547da7037: hlt    
  0x00007fb547da7038: hlt    
  0x00007fb547da7039: hlt    
  0x00007fb547da703a: hlt    
  0x00007fb547da703b: hlt    
  0x00007fb547da703c: hlt    
  0x00007fb547da703d: hlt    
  0x00007fb547da703e: hlt    
  0x00007fb547da703f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da7040: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da7045: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da704f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da7053: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da7058: hlt    
[Deopt Handler Code]
  0x00007fb547da7059: movabs $0x7fb547da7059,%r10  ;   {section_word}
  0x00007fb547da7063: push   %r10
  0x00007fb547da7065: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da706a: hlt    
  0x00007fb547da706b: hlt    
  0x00007fb547da706c: hlt    
  0x00007fb547da706d: hlt    
  0x00007fb547da706e: hlt    
  0x00007fb547da706f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 160 
ImmutableOopMap{rax=Oop }pc offsets: 167 172 186 </print_nmethod>
<writer thread='1329923'/>

argument handler #58 for: receiver java.lang.Thread.isInterrupted(Z)Z (fingerprint = 5160, 18 bytes generated)
  0x00007fb54784c35c: lea    (%r14),%rsi
  0x00007fb54784c35f: mov    -0x8(%r14),%edx
  0x00007fb54784c363: movabs $0x7fb54780caa0,%rax
  0x00007fb54784c36d: retq   
<writer thread='1329936'/>
<nmethod compile_id='75' compiler='c1' level='3' entry='0x00007fb547da7360' size='1808' address='0x00007fb547da7190' relocation_offset='376' insts_offset='464' stub_offset='1136' scopes_data_offset='1232' scopes_pcs_offset='1400' dependencies_offset='1784' nul_chk_table_offset='1792' metadata_offset='1216' method='java.lang.String hashCode ()I' bytes='49' count='6145' iicount='6145' decompiles='1' unstable_if_traps='1' stamp='0.841'/>
<print_nmethod stamp='0.841'>
Compiled method (c1)     841   75       3       java.lang.String::hashCode (49 bytes)
 total in heap  [0x00007fb547da7190,0x00007fb547da78a0] = 1808
 relocation     [0x00007fb547da7308,0x00007fb547da7360] = 88
 main code      [0x00007fb547da7360,0x00007fb547da7600] = 672
 stub code      [0x00007fb547da7600,0x00007fb547da7650] = 80
 metadata       [0x00007fb547da7650,0x00007fb547da7660] = 16
 scopes data    [0x00007fb547da7660,0x00007fb547da7708] = 168
 scopes pcs     [0x00007fb547da7708,0x00007fb547da7888] = 384
 dependencies   [0x00007fb547da7888,0x00007fb547da7890] = 8
 nul chk table  [0x00007fb547da7890,0x00007fb547da78a0] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x00007fb547da7360, 0x00007fb547da7650]  752 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb547da7360: mov    0x8(%rsi),%r10d
  0x00007fb547da7364: movabs $0x800000000,%r12
  0x00007fb547da736e: add    %r12,%r10
  0x00007fb547da7371: xor    %r12,%r12
  0x00007fb547da7374: cmp    %rax,%r10
  0x00007fb547da7377: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547da737d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547da7380: mov    %eax,-0x14000(%rsp)
  0x00007fb547da7387: push   %rbp
  0x00007fb547da7388: sub    $0x40,%rsp
  0x00007fb547da738c: movabs $0x7fb52cedeb40,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da7396: mov    0x100(%rdi),%ebx
  0x00007fb547da739c: add    $0x8,%ebx
  0x00007fb547da739f: mov    %ebx,0x100(%rdi)
  0x00007fb547da73a5: and    $0x1ff8,%ebx
  0x00007fb547da73ab: cmp    $0x0,%ebx
  0x00007fb547da73ae: je     0x00007fb547da757a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0 (line 1502)

  0x00007fb547da73b4: mov    0x10(%rsi),%edi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x00007fb547da73b7: cmp    $0x0,%edi
  0x00007fb547da73ba: movabs $0x7fb52cedeb40,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da73c4: movabs $0x140,%rax
  0x00007fb547da73ce: jne    0x00007fb547da73de
  0x00007fb547da73d4: movabs $0x150,%rax
  0x00007fb547da73de: mov    (%rbx,%rax,1),%rdx
  0x00007fb547da73e2: lea    0x1(%rdx),%rdx
  0x00007fb547da73e6: mov    %rdx,(%rbx,%rax,1)
  0x00007fb547da73ea: jne    0x00007fb547da7567  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6 (line 1503)

  0x00007fb547da73f0: mov    0xc(%rsi),%ebx
  0x00007fb547da73f3: shl    $0x3,%rbx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x00007fb547da73f7: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x00007fb547da759b
  0x00007fb547da73fa: cmp    $0x0,%eax
  0x00007fb547da73fd: movabs $0x7fb52cedeb40,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da7407: movabs $0x160,%rdx
  0x00007fb547da7411: jle    0x00007fb547da7421
  0x00007fb547da7417: movabs $0x170,%rdx
  0x00007fb547da7421: mov    (%rax,%rdx,1),%rcx
  0x00007fb547da7425: lea    0x1(%rcx),%rcx
  0x00007fb547da7429: mov    %rcx,(%rax,%rdx,1)
  0x00007fb547da742d: jle    0x00007fb547da7567  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x00007fb547da7433: mov    %rsi,%rdi
  0x00007fb547da7436: movabs $0x7fb52cedeb40,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da7440: addq   $0x1,0x180(%rax)
  0x00007fb547da7448: movabs $0x7fb52cedd9b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da7452: mov    0x100(%rdi),%eax
  0x00007fb547da7458: add    $0x8,%eax
  0x00007fb547da745b: mov    %eax,0x100(%rdi)
  0x00007fb547da7461: and    $0x7ffff8,%eax
  0x00007fb547da7467: cmp    $0x0,%eax
  0x00007fb547da746a: je     0x00007fb547da75a0
  0x00007fb547da7470: movabs $0x7fb52cedd9b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da747a: incl   0x150(%rdi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547da7480: movsbl 0x14(%rsi),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547da7484: cmp    $0x0,%edi
  0x00007fb547da7487: movabs $0x7fb52cedd9b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da7491: movabs $0x160,%rax
  0x00007fb547da749b: jne    0x00007fb547da74ab
  0x00007fb547da74a1: movabs $0x170,%rax
  0x00007fb547da74ab: mov    (%rdi,%rax,1),%rdx
  0x00007fb547da74af: lea    0x1(%rdx),%rdx
  0x00007fb547da74b3: mov    %rdx,(%rdi,%rax,1)
  0x00007fb547da74b7: jne    0x00007fb547da74d7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547da74bd: movabs $0x7fb52cedd9b8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da74c7: incl   0x180(%rdi)
  0x00007fb547da74cd: mov    $0x1,%edi
  0x00007fb547da74d2: jmpq   0x00007fb547da74dc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547da74d7: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007fb547da74dc: and    $0x1,%edi
  0x00007fb547da74df: cmp    $0x0,%edi
  0x00007fb547da74e2: movabs $0x7fb52cedeb40,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da74ec: movabs $0x1b8,%rax
  0x00007fb547da74f6: je     0x00007fb547da7506
  0x00007fb547da74fc: movabs $0x1c8,%rax
  0x00007fb547da7506: mov    (%rdi,%rax,1),%rdx
  0x00007fb547da750a: lea    0x1(%rdx),%rdx
  0x00007fb547da750e: mov    %rdx,(%rdi,%rax,1)
  0x00007fb547da7512: mov    %rsi,0x30(%rsp)
  0x00007fb547da7517: je     0x00007fb547da7551  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22 (line 1504)

  0x00007fb547da751d: movabs $0x7fb52cedeb40,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da7527: addq   $0x1,0x1d8(%rdi)
  0x00007fb547da752f: mov    %rbx,%rsi          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007fb547da7532: nopl   0x0(%rax,%rax,1)
  0x00007fb547da7537: callq  0x00007fb54f2c81a0  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {static_call}
  0x00007fb547da753c: movabs $0x7fb52cedeb40,%rsi  ;   {metadata(method data for {method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da7546: incl   0x1e8(%rsi)
  0x00007fb547da754c: jmpq   0x00007fb547da755c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32 (line 1504)

  0x00007fb547da7551: mov    %rbx,%rsi          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x00007fb547da7554: data16 xchg %ax,%ax
  0x00007fb547da7557: callq  0x00007fb54784a780  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1505)
                                                ;   {static_call}
  0x00007fb547da755c: mov    0x30(%rsp),%rsi
  0x00007fb547da7561: mov    %eax,0x10(%rsi)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44 (line 1505)

  0x00007fb547da7564: mov    %rax,%rdi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47 (line 1507)

  0x00007fb547da7567: mov    %rdi,%rax
  0x00007fb547da756a: add    $0x40,%rsp
  0x00007fb547da756e: pop    %rbp
  0x00007fb547da756f: mov    0x108(%r15),%r10
  0x00007fb547da7576: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da7579: retq   
  0x00007fb547da757a: movabs $0x7fb52ccb5bd0,%r10  ;   {metadata({method} {0x00007fb52ccb5bd0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da7584: mov    %r10,0x8(%rsp)
  0x00007fb547da7589: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da7591: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da7596: jmpq   0x00007fb547da73b4
  0x00007fb547da759b: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da75a0: movabs $0x7fb52ccb9300,%r10  ;   {metadata({method} {0x00007fb52ccb9300} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547da75aa: mov    %r10,0x8(%rsp)
  0x00007fb547da75af: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da75b7: callq  0x00007fb5478f8100  ; ImmutableOopMap{rbx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da75bc: jmpq   0x00007fb547da7470
  0x00007fb547da75c1: nop
  0x00007fb547da75c2: nop
  0x00007fb547da75c3: mov    0x440(%r15),%rax
  0x00007fb547da75ca: movabs $0x0,%r10
  0x00007fb547da75d4: mov    %r10,0x440(%r15)
  0x00007fb547da75db: movabs $0x0,%r10
  0x00007fb547da75e5: mov    %r10,0x448(%r15)
  0x00007fb547da75ec: add    $0x40,%rsp
  0x00007fb547da75f0: pop    %rbp
  0x00007fb547da75f1: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da75f6: hlt    
  0x00007fb547da75f7: hlt    
  0x00007fb547da75f8: hlt    
  0x00007fb547da75f9: hlt    
  0x00007fb547da75fa: hlt    
  0x00007fb547da75fb: hlt    
  0x00007fb547da75fc: hlt    
  0x00007fb547da75fd: hlt    
  0x00007fb547da75fe: hlt    
  0x00007fb547da75ff: hlt    
[Stub Code]
  0x00007fb547da7600: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da7605: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da760f: jmpq   0x00007fb547da760f  ;   {runtime_call}
  0x00007fb547da7614: nop
  0x00007fb547da7615: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da761f: jmpq   0x00007fb547da761f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da7624: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da7629: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da7633: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da7637: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da763c: hlt    
[Deopt Handler Code]
  0x00007fb547da763d: movabs $0x7fb547da763d,%r10  ;   {section_word}
  0x00007fb547da7647: push   %r10
  0x00007fb547da7649: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da764e: hlt    
  0x00007fb547da764f: hlt    

ImmutableOopMap{[48]=Oop }pc offsets: 476 508 
ImmutableOopMap{rsi=Oop }pc offsets: 566 
ImmutableOopMap{rsi=Oop rbx=Oop }pc offsets: 576 
ImmutableOopMap{rbx=Oop rsi=Oop }pc offsets: 604 </print_nmethod>
<writer thread='1329923'/>

argument handler #59 for: static java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; (fingerprint = 91044393785, 124 bytes generated)
  0x00007fb54784c36e: lea    (%r14),%rax
  0x00007fb54784c371: xor    %edx,%edx
  0x00007fb54784c373: cmpq   $0x0,(%r14)
  0x00007fb54784c37a: cmovne %rax,%rdx
  0x00007fb54784c37e: lea    -0x8(%r14),%rax
  0x00007fb54784c382: xor    %ecx,%ecx
  0x00007fb54784c384: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c38c: cmovne %rax,%rcx
  0x00007fb54784c390: lea    -0x10(%r14),%rax
  0x00007fb54784c394: xor    %r8d,%r8d
  0x00007fb54784c397: cmpq   $0x0,-0x10(%r14)
  0x00007fb54784c39f: cmovne %rax,%r8
  0x00007fb54784c3a3: mov    -0x18(%r14),%r9d
  0x00007fb54784c3a7: mov    -0x20(%r14),%eax
  0x00007fb54784c3ab: mov    %eax,0x8(%rsp)
  0x00007fb54784c3af: lea    -0x28(%r14),%rax
  0x00007fb54784c3b3: xor    %r10d,%r10d
  0x00007fb54784c3b6: cmpq   $0x0,-0x28(%r14)
  0x00007fb54784c3be: cmovne %rax,%r10
  0x00007fb54784c3c2: mov    %r10,0x10(%rsp)
  0x00007fb54784c3c7: lea    -0x30(%r14),%rax
  0x00007fb54784c3cb: xor    %r10d,%r10d
  0x00007fb54784c3ce: cmpq   $0x0,-0x30(%r14)
  0x00007fb54784c3d6: cmovne %rax,%r10
  0x00007fb54784c3da: mov    %r10,0x18(%rsp)
  0x00007fb54784c3df: movabs $0x7fb54780cabb,%rax
  0x00007fb54784c3e9: retq   
<writer thread='1329936'/>
<nmethod compile_id='74' compiler='c1' level='3' entry='0x00007fb547da7ac0' size='904' address='0x00007fb547da7910' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' metadata_offset='736' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='579' iicount='579' stamp='0.848'/>
<print_nmethod stamp='0.848'>
Compiled method (c1)     848   74       3       java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x00007fb547da7910,0x00007fb547da7c98] = 904
 relocation     [0x00007fb547da7a88,0x00007fb547da7ab0] = 40
 main code      [0x00007fb547da7ac0,0x00007fb547da7bc0] = 256
 stub code      [0x00007fb547da7bc0,0x00007fb547da7bf0] = 48
 metadata       [0x00007fb547da7bf0,0x00007fb547da7bf8] = 8
 scopes data    [0x00007fb547da7bf8,0x00007fb547da7c20] = 40
 scopes pcs     [0x00007fb547da7c20,0x00007fb547da7c90] = 112
 dependencies   [0x00007fb547da7c90,0x00007fb547da7c98] = 8
----------------------------------------------------------------------
java/lang/StringLatin1.canEncode(I)Z  [0x00007fb547da7ac0, 0x00007fb547da7bf0]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da7ac0: mov    %eax,-0x14000(%rsp)
  0x00007fb547da7ac7: push   %rbp
  0x00007fb547da7ac8: sub    $0x30,%rsp
  0x00007fb547da7acc: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da7ad6: mov    0x100(%rax),%edi
  0x00007fb547da7adc: add    $0x8,%edi
  0x00007fb547da7adf: mov    %edi,0x100(%rax)
  0x00007fb547da7ae5: and    $0x1ff8,%edi
  0x00007fb547da7aeb: cmp    $0x0,%edi
  0x00007fb547da7aee: je     0x00007fb547da7b62  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@0 (line 53)

  0x00007fb547da7af4: shr    $0x8,%esi
  0x00007fb547da7af7: cmp    $0x0,%esi
  0x00007fb547da7afa: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da7b04: movabs $0x140,%rsi
  0x00007fb547da7b0e: jne    0x00007fb547da7b1e
  0x00007fb547da7b14: movabs $0x150,%rsi
  0x00007fb547da7b1e: mov    (%rax,%rsi,1),%rdi
  0x00007fb547da7b22: lea    0x1(%rdi),%rdi
  0x00007fb547da7b26: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547da7b2a: jne    0x00007fb547da7b4a  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)

  0x00007fb547da7b30: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da7b3a: incl   0x160(%rax)
  0x00007fb547da7b40: mov    $0x1,%eax
  0x00007fb547da7b45: jmpq   0x00007fb547da7b4f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)

  0x00007fb547da7b4a: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)

  0x00007fb547da7b4f: and    $0x1,%eax
  0x00007fb547da7b52: add    $0x30,%rsp
  0x00007fb547da7b56: pop    %rbp
  0x00007fb547da7b57: mov    0x108(%r15),%r10
  0x00007fb547da7b5e: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da7b61: retq   
  0x00007fb547da7b62: movabs $0x7fb52ce07f58,%r10  ;   {metadata({method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547da7b6c: mov    %r10,0x8(%rsp)
  0x00007fb547da7b71: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da7b79: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da7b7e: jmpq   0x00007fb547da7af4
  0x00007fb547da7b83: nop
  0x00007fb547da7b84: nop
  0x00007fb547da7b85: mov    0x440(%r15),%rax
  0x00007fb547da7b8c: movabs $0x0,%r10
  0x00007fb547da7b96: mov    %r10,0x440(%r15)
  0x00007fb547da7b9d: movabs $0x0,%r10
  0x00007fb547da7ba7: mov    %r10,0x448(%r15)
  0x00007fb547da7bae: add    $0x30,%rsp
  0x00007fb547da7bb2: pop    %rbp
  0x00007fb547da7bb3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da7bb8: hlt    
  0x00007fb547da7bb9: hlt    
  0x00007fb547da7bba: hlt    
  0x00007fb547da7bbb: hlt    
  0x00007fb547da7bbc: hlt    
  0x00007fb547da7bbd: hlt    
  0x00007fb547da7bbe: hlt    
  0x00007fb547da7bbf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547da7bc0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547da7bc5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da7bcf: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da7bd3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da7bd8: hlt    
[Deopt Handler Code]
  0x00007fb547da7bd9: movabs $0x7fb547da7bd9,%r10  ;   {section_word}
  0x00007fb547da7be3: push   %r10
  0x00007fb547da7be5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da7bea: hlt    
  0x00007fb547da7beb: hlt    
  0x00007fb547da7bec: hlt    
  0x00007fb547da7bed: hlt    
  0x00007fb547da7bee: hlt    
  0x00007fb547da7bef: hlt    

ImmutableOopMap{}pc offsets: 190 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='76' method='io.type.pollution.benchmarks.Main applicationStack (Lio/type/pollution/benchmarks/Context;I)Z' bytes='19' count='384' iicount='384' level='3' stamp='0.851' comment='tiered' hot_count='384'/>
<task_queued compile_id='77' method='io.type.pollution.benchmarks.NonDuplicatedContext isDuplicated ()Z' bytes='2' count='128' iicount='128' level='1' stamp='0.851' comment='tiered' hot_count='128'/>
<task_queued compile_id='78' method='io.type.pollution.benchmarks.Main applicationStackBase (Lio/type/pollution/benchmarks/Context;)Z' bytes='7' count='384' iicount='384' level='3' stamp='0.851' comment='tiered' hot_count='384'/>
<task_queued compile_id='79' method='io.type.pollution.benchmarks.ContextUtil isDuplicatedContext (Lio/type/pollution/benchmarks/Context;)Z' bytes='18' count='410' iicount='410' level='3' stamp='0.851' comment='tiered' hot_count='410'/>
<writer thread='1329936'/>
<nmethod compile_id='76' compiler='c1' level='3' entry='0x00007fb547da7f80' size='4600' address='0x00007fb547da7d10' relocation_offset='376' insts_offset='624' stub_offset='3376' scopes_data_offset='3528' scopes_pcs_offset='3856' dependencies_offset='4560' nul_chk_table_offset='4576' oops_offset='3472' metadata_offset='3480' method='io.type.pollution.benchmarks.Main applicationStack (Lio/type/pollution/benchmarks/Context;I)Z' bytes='19' count='5696' iicount='5699' stamp='0.851'/>
<print_nmethod stamp='0.851'>
Compiled method (c1)     851   76       3       io.type.pollution.benchmarks.Main::applicationStack (19 bytes)
 total in heap  [0x00007fb547da7d10,0x00007fb547da8f08] = 4600
 relocation     [0x00007fb547da7e88,0x00007fb547da7f68] = 224
 main code      [0x00007fb547da7f80,0x00007fb547da8a40] = 2752
 stub code      [0x00007fb547da8a40,0x00007fb547da8aa0] = 96
 oops           [0x00007fb547da8aa0,0x00007fb547da8aa8] = 8
 metadata       [0x00007fb547da8aa8,0x00007fb547da8ad8] = 48
 scopes data    [0x00007fb547da8ad8,0x00007fb547da8c20] = 328
 scopes pcs     [0x00007fb547da8c20,0x00007fb547da8ee0] = 704
 dependencies   [0x00007fb547da8ee0,0x00007fb547da8ef0] = 16
 nul chk table  [0x00007fb547da8ef0,0x00007fb547da8f08] = 24
----------------------------------------------------------------------
io/type/pollution/benchmarks/Main.applicationStack(Lio/type/pollution/benchmarks/Context;I)Z  [0x00007fb547da7f80, 0x00007fb547da8aa0]  2848 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;
  # parm0:    rsi:rsi   = &apos;io/type/pollution/benchmarks/Context&apos;
  # parm1:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x00007fb547da7f80: mov    %eax,-0x14000(%rsp)
  0x00007fb547da7f87: push   %rbp
  0x00007fb547da7f88: sub    $0x70,%rsp
  0x00007fb547da7f8c: movabs $0x7fb52d0be870,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da7f96: mov    0x100(%rdi),%ebx
  0x00007fb547da7f9c: add    $0x8,%ebx
  0x00007fb547da7f9f: mov    %ebx,0x100(%rdi)
  0x00007fb547da7fa5: and    $0x1ff8,%ebx
  0x00007fb547da7fab: cmp    $0x0,%ebx
  0x00007fb547da7fae: je     0x00007fb547da8866  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@0 (line 37)

  0x00007fb547da7fb4: cmp    $0x1,%edx
  0x00007fb547da7fb7: movabs $0x7fb52d0be870,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da7fc1: movabs $0x140,%rbx
  0x00007fb547da7fcb: jne    0x00007fb547da7fdb
  0x00007fb547da7fd1: movabs $0x150,%rbx
  0x00007fb547da7fdb: mov    (%rdi,%rbx,1),%rax
  0x00007fb547da7fdf: lea    0x1(%rax),%rax
  0x00007fb547da7fe3: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547da7fe7: jne    0x00007fb547da80a0  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@2 (line 37)

  0x00007fb547da7fed: movabs $0x7fb52d0be870,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da7ff7: addq   $0x1,0x160(%rdx)
  0x00007fb547da7fff: movabs $0x7fb52d0bea38,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8009: mov    0x100(%rdx),%edi
  0x00007fb547da800f: add    $0x8,%edi
  0x00007fb547da8012: mov    %edi,0x100(%rdx)
  0x00007fb547da8018: and    $0x7ffff8,%edi
  0x00007fb547da801e: cmp    $0x0,%edi
  0x00007fb547da8021: je     0x00007fb547da8887
  0x00007fb547da8027: movabs $0x7fb52d0bea38,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8031: addq   $0x1,0x140(%rdx)
  0x00007fb547da8039: movabs $0x7fb52ceefac0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da8043: mov    0x100(%rdx),%edi
  0x00007fb547da8049: add    $0x8,%edi
  0x00007fb547da804c: mov    %edi,0x100(%rdx)
  0x00007fb547da8052: and    $0x7ffff8,%edi
  0x00007fb547da8058: cmp    $0x0,%edi
  0x00007fb547da805b: je     0x00007fb547da88a8
  0x00007fb547da8061: cmp    $0x0,%rsi
  0x00007fb547da8065: movabs $0x7fb52ceefac0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da806f: movabs $0x140,%rdi
  0x00007fb547da8079: jne    0x00007fb547da8089
  0x00007fb547da807f: movabs $0x150,%rdi
  0x00007fb547da8089: mov    (%rdx,%rdi,1),%rbx
  0x00007fb547da808d: lea    0x1(%rbx),%rbx
  0x00007fb547da8091: mov    %rbx,(%rdx,%rdi,1)
  0x00007fb547da8095: jne    0x00007fb547da8498
  0x00007fb547da809b: jmpq   0x00007fb547da87d6  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb547da80a0: dec    %edx
  0x00007fb547da80a2: movabs $0x7fb52d0be870,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da80ac: addq   $0x1,0x170(%rdi)
  0x00007fb547da80b4: movabs $0x7fb52d0be870,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da80be: mov    0x100(%rdi),%ebx
  0x00007fb547da80c4: add    $0x8,%ebx
  0x00007fb547da80c7: mov    %ebx,0x100(%rdi)
  0x00007fb547da80cd: and    $0x7ffff8,%ebx
  0x00007fb547da80d3: cmp    $0x0,%ebx
  0x00007fb547da80d6: je     0x00007fb547da88c9
  0x00007fb547da80dc: cmp    $0x1,%edx
  0x00007fb547da80df: movabs $0x7fb52d0be870,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da80e9: movabs $0x140,%rbx
  0x00007fb547da80f3: jne    0x00007fb547da8103
  0x00007fb547da80f9: movabs $0x150,%rbx
  0x00007fb547da8103: mov    (%rdi,%rbx,1),%rax
  0x00007fb547da8107: lea    0x1(%rax),%rax
  0x00007fb547da810b: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547da810f: jne    0x00007fb547da8463  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@2 (line 37)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb547da8115: movabs $0x7fb52d0be870,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da811f: addq   $0x1,0x160(%rdx)
  0x00007fb547da8127: movabs $0x7fb52d0bea38,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8131: mov    0x100(%rdx),%edi
  0x00007fb547da8137: add    $0x8,%edi
  0x00007fb547da813a: mov    %edi,0x100(%rdx)
  0x00007fb547da8140: and    $0x7ffff8,%edi
  0x00007fb547da8146: cmp    $0x0,%edi
  0x00007fb547da8149: je     0x00007fb547da88ea
  0x00007fb547da814f: movabs $0x7fb52d0bea38,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8159: addq   $0x1,0x140(%rdx)
  0x00007fb547da8161: movabs $0x7fb52ceefac0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da816b: mov    0x100(%rdx),%edi
  0x00007fb547da8171: add    $0x8,%edi
  0x00007fb547da8174: mov    %edi,0x100(%rdx)
  0x00007fb547da817a: and    $0x7ffff8,%edi
  0x00007fb547da8180: cmp    $0x0,%edi
  0x00007fb547da8183: je     0x00007fb547da890b
  0x00007fb547da8189: cmp    $0x0,%rsi
  0x00007fb547da818d: movabs $0x7fb52ceefac0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da8197: movabs $0x150,%rdi
  0x00007fb547da81a1: je     0x00007fb547da81b1
  0x00007fb547da81a7: movabs $0x140,%rdi
  0x00007fb547da81b1: mov    (%rdx,%rdi,1),%rbx
  0x00007fb547da81b5: lea    0x1(%rbx),%rbx
  0x00007fb547da81b9: mov    %rbx,(%rdx,%rdi,1)
  0x00007fb547da81bd: je     0x00007fb547da8746  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb547da81c3: cmp    $0x0,%rsi
  0x00007fb547da81c7: jne    0x00007fb547da81df
  0x00007fb547da81c9: movabs $0x7fb52d0bea38,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da81d3: orb    $0x1,0x149(%rdi)
  0x00007fb547da81da: jmpq   0x00007fb547da82d3
  0x00007fb547da81df: movabs $0x800062248,%rbx  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0x00007fb547da81e9: mov    0x8(%rsi),%edi
  0x00007fb547da81ec: movabs $0x800000000,%r12
  0x00007fb547da81f6: add    %r12,%rdi
  0x00007fb547da81f9: xor    %r12,%r12
  0x00007fb547da81fc: cmp    0x20(%rdi),%rbx
  0x00007fb547da8200: je     0x00007fb547da8221
  0x00007fb547da8206: cmp    %rbx,%rdi
  0x00007fb547da8209: je     0x00007fb547da8221
  0x00007fb547da820f: push   %rdi
  0x00007fb547da8210: push   %rbx
  0x00007fb547da8211: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547da8216: pop    %rdi
  0x00007fb547da8217: pop    %rdi
  0x00007fb547da8218: cmp    $0x0,%edi
  0x00007fb547da821b: je     0x00007fb547da82b7
  0x00007fb547da8221: movabs $0x7fb52d0bea38,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da822b: mov    0x8(%rsi),%ebx
  0x00007fb547da822e: movabs $0x800000000,%r12
  0x00007fb547da8238: add    %r12,%rbx
  0x00007fb547da823b: xor    %r12,%r12
  0x00007fb547da823e: cmp    0x160(%rdi),%rbx
  0x00007fb547da8245: jne    0x00007fb547da8254
  0x00007fb547da8247: addq   $0x1,0x168(%rdi)
  0x00007fb547da824f: jmpq   0x00007fb547da82d3
  0x00007fb547da8254: cmp    0x170(%rdi),%rbx
  0x00007fb547da825b: jne    0x00007fb547da826a
  0x00007fb547da825d: addq   $0x1,0x178(%rdi)
  0x00007fb547da8265: jmpq   0x00007fb547da82d3
  0x00007fb547da826a: cmpq   $0x0,0x160(%rdi)
  0x00007fb547da8275: jne    0x00007fb547da828e
  0x00007fb547da8277: mov    %rbx,0x160(%rdi)
  0x00007fb547da827e: movq   $0x1,0x168(%rdi)
  0x00007fb547da8289: jmpq   0x00007fb547da82d3
  0x00007fb547da828e: cmpq   $0x0,0x170(%rdi)
  0x00007fb547da8299: jne    0x00007fb547da82b2
  0x00007fb547da829b: mov    %rbx,0x170(%rdi)
  0x00007fb547da82a2: movq   $0x1,0x178(%rdi)
  0x00007fb547da82ad: jmpq   0x00007fb547da82d3
  0x00007fb547da82b2: jmpq   0x00007fb547da82d3
  0x00007fb547da82b7: movabs $0x7fb52d0bea38,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da82c1: subq   $0x1,0x150(%rdi)
  0x00007fb547da82c9: jmpq   0x00007fb547da892c
  0x00007fb547da82ce: jmpq   0x00007fb547da82d3  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb547da82d3: cmp    $0x0,%rsi
  0x00007fb547da82d7: jne    0x00007fb547da82ef
  0x00007fb547da82d9: movabs $0x7fb52d0bea38,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da82e3: orb    $0x1,0x181(%rdi)
  0x00007fb547da82ea: jmpq   0x00007fb547da83e3
  0x00007fb547da82ef: movabs $0x800062448,%rbx  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0x00007fb547da82f9: mov    0x8(%rsi),%edi
  0x00007fb547da82fc: movabs $0x800000000,%r12
  0x00007fb547da8306: add    %r12,%rdi
  0x00007fb547da8309: xor    %r12,%r12
  0x00007fb547da830c: cmp    0x20(%rdi),%rbx
  0x00007fb547da8310: je     0x00007fb547da8331
  0x00007fb547da8316: cmp    %rbx,%rdi
  0x00007fb547da8319: je     0x00007fb547da8331
  0x00007fb547da831f: push   %rdi
  0x00007fb547da8320: push   %rbx
  0x00007fb547da8321: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547da8326: pop    %rdi
  0x00007fb547da8327: pop    %rdi
  0x00007fb547da8328: cmp    $0x0,%edi
  0x00007fb547da832b: je     0x00007fb547da83c7
  0x00007fb547da8331: movabs $0x7fb52d0bea38,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da833b: mov    0x8(%rsi),%ebx
  0x00007fb547da833e: movabs $0x800000000,%r12
  0x00007fb547da8348: add    %r12,%rbx
  0x00007fb547da834b: xor    %r12,%r12
  0x00007fb547da834e: cmp    0x198(%rdi),%rbx
  0x00007fb547da8355: jne    0x00007fb547da8364
  0x00007fb547da8357: addq   $0x1,0x1a0(%rdi)
  0x00007fb547da835f: jmpq   0x00007fb547da83e3
  0x00007fb547da8364: cmp    0x1a8(%rdi),%rbx
  0x00007fb547da836b: jne    0x00007fb547da837a
  0x00007fb547da836d: addq   $0x1,0x1b0(%rdi)
  0x00007fb547da8375: jmpq   0x00007fb547da83e3
  0x00007fb547da837a: cmpq   $0x0,0x198(%rdi)
  0x00007fb547da8385: jne    0x00007fb547da839e
  0x00007fb547da8387: mov    %rbx,0x198(%rdi)
  0x00007fb547da838e: movq   $0x1,0x1a0(%rdi)
  0x00007fb547da8399: jmpq   0x00007fb547da83e3
  0x00007fb547da839e: cmpq   $0x0,0x1a8(%rdi)
  0x00007fb547da83a9: jne    0x00007fb547da83c2
  0x00007fb547da83ab: mov    %rbx,0x1a8(%rdi)
  0x00007fb547da83b2: movq   $0x1,0x1b0(%rdi)
  0x00007fb547da83bd: jmpq   0x00007fb547da83e3
  0x00007fb547da83c2: jmpq   0x00007fb547da83e3
  0x00007fb547da83c7: movabs $0x7fb52d0bea38,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da83d1: subq   $0x1,0x188(%rdi)
  0x00007fb547da83d9: jmpq   0x00007fb547da8935
  0x00007fb547da83de: jmpq   0x00007fb547da83e3  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb547da83e3: cmp    $0x0,%rsi
  0x00007fb547da83e7: je     0x00007fb547da8419
  0x00007fb547da83ed: movabs $0x800067840,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb547da83f7: mov    0x8(%rsi),%ebx
  0x00007fb547da83fa: movabs $0x800000000,%r12
  0x00007fb547da8404: add    %r12,%rbx
  0x00007fb547da8407: xor    %r12,%r12
  0x00007fb547da840a: cmp    0x38(%rbx),%rax
  0x00007fb547da840e: jne    0x00007fb547da893e
  0x00007fb547da8414: jmpq   0x00007fb547da8419
  0x00007fb547da8419: mov    %rsi,%rdx
  0x00007fb547da841c: cmp    (%rsi),%rax        ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; implicit exception: dispatches to 0x00007fb547da8943
  0x00007fb547da841f: movabs $0x7fb52d0bea38,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8429: addq   $0x1,0x1d8(%rdx)
  0x00007fb547da8431: movabs $0x7fb52d0bec70,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0be1f8} &apos;isDuplicated&apos; &apos;()Z&apos; in &apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb547da843b: mov    0x100(%rsi),%edx
  0x00007fb547da8441: add    $0x8,%edx
  0x00007fb547da8444: mov    %edx,0x100(%rsi)
  0x00007fb547da844a: and    $0x7ffff8,%edx
  0x00007fb547da8450: cmp    $0x0,%edx
  0x00007fb547da8453: je     0x00007fb547da8948
  0x00007fb547da8459: mov    $0x0,%esi
  0x00007fb547da845e: jmpq   0x00007fb547da8482  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@18 (line 41)

  0x00007fb547da8463: movabs $0x7fb52d0be870,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da846d: addq   $0x1,0x170(%rdi)
  0x00007fb547da8475: dec    %edx
  0x00007fb547da8477: callq  0x00007fb547da7f80  ; ImmutableOopMap{}
                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {static_call}
  0x00007fb547da847c: and    $0x1,%eax
  0x00007fb547da847f: mov    %rax,%rsi
  0x00007fb547da8482: and    $0x1,%esi
  0x00007fb547da8485: mov    %rsi,%rax
  0x00007fb547da8488: add    $0x70,%rsp
  0x00007fb547da848c: pop    %rbp
  0x00007fb547da848d: mov    0x108(%r15),%r10
  0x00007fb547da8494: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da8497: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@18 (line 41)

  0x00007fb547da8498: cmp    $0x0,%rsi
  0x00007fb547da849c: jne    0x00007fb547da84b4
  0x00007fb547da849e: movabs $0x7fb52d0bea38,%rax  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da84a8: orb    $0x1,0x149(%rax)
  0x00007fb547da84af: jmpq   0x00007fb547da85a8
  0x00007fb547da84b4: movabs $0x800062248,%rdi  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0x00007fb547da84be: mov    0x8(%rsi),%eax
  0x00007fb547da84c1: movabs $0x800000000,%r12
  0x00007fb547da84cb: add    %r12,%rax
  0x00007fb547da84ce: xor    %r12,%r12
  0x00007fb547da84d1: cmp    0x20(%rax),%rdi
  0x00007fb547da84d5: je     0x00007fb547da84f6
  0x00007fb547da84db: cmp    %rdi,%rax
  0x00007fb547da84de: je     0x00007fb547da84f6
  0x00007fb547da84e4: push   %rax
  0x00007fb547da84e5: push   %rdi
  0x00007fb547da84e6: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547da84eb: pop    %rax
  0x00007fb547da84ec: pop    %rax
  0x00007fb547da84ed: cmp    $0x0,%eax
  0x00007fb547da84f0: je     0x00007fb547da858c
  0x00007fb547da84f6: movabs $0x7fb52d0bea38,%rax  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8500: mov    0x8(%rsi),%edi
  0x00007fb547da8503: movabs $0x800000000,%r12
  0x00007fb547da850d: add    %r12,%rdi
  0x00007fb547da8510: xor    %r12,%r12
  0x00007fb547da8513: cmp    0x160(%rax),%rdi
  0x00007fb547da851a: jne    0x00007fb547da8529
  0x00007fb547da851c: addq   $0x1,0x168(%rax)
  0x00007fb547da8524: jmpq   0x00007fb547da85a8
  0x00007fb547da8529: cmp    0x170(%rax),%rdi
  0x00007fb547da8530: jne    0x00007fb547da853f
  0x00007fb547da8532: addq   $0x1,0x178(%rax)
  0x00007fb547da853a: jmpq   0x00007fb547da85a8
  0x00007fb547da853f: cmpq   $0x0,0x160(%rax)
  0x00007fb547da854a: jne    0x00007fb547da8563
  0x00007fb547da854c: mov    %rdi,0x160(%rax)
  0x00007fb547da8553: movq   $0x1,0x168(%rax)
  0x00007fb547da855e: jmpq   0x00007fb547da85a8
  0x00007fb547da8563: cmpq   $0x0,0x170(%rax)
  0x00007fb547da856e: jne    0x00007fb547da8587
  0x00007fb547da8570: mov    %rdi,0x170(%rax)
  0x00007fb547da8577: movq   $0x1,0x178(%rax)
  0x00007fb547da8582: jmpq   0x00007fb547da85a8
  0x00007fb547da8587: jmpq   0x00007fb547da85a8
  0x00007fb547da858c: movabs $0x7fb52d0bea38,%rax  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8596: subq   $0x1,0x150(%rax)
  0x00007fb547da859e: jmpq   0x00007fb547da8969
  0x00007fb547da85a3: jmpq   0x00007fb547da85a8
  0x00007fb547da85a8: mov    %rsi,%rax          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb547da85ab: cmp    $0x0,%rax
  0x00007fb547da85af: jne    0x00007fb547da85c7
  0x00007fb547da85b1: movabs $0x7fb52d0bea38,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da85bb: orb    $0x1,0x181(%rsi)
  0x00007fb547da85c2: jmpq   0x00007fb547da86bb
  0x00007fb547da85c7: movabs $0x800062448,%rdi  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0x00007fb547da85d1: mov    0x8(%rax),%esi
  0x00007fb547da85d4: movabs $0x800000000,%r12
  0x00007fb547da85de: add    %r12,%rsi
  0x00007fb547da85e1: xor    %r12,%r12
  0x00007fb547da85e4: cmp    0x20(%rsi),%rdi
  0x00007fb547da85e8: je     0x00007fb547da8609
  0x00007fb547da85ee: cmp    %rdi,%rsi
  0x00007fb547da85f1: je     0x00007fb547da8609
  0x00007fb547da85f7: push   %rsi
  0x00007fb547da85f8: push   %rdi
  0x00007fb547da85f9: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547da85fe: pop    %rsi
  0x00007fb547da85ff: pop    %rsi
  0x00007fb547da8600: cmp    $0x0,%esi
  0x00007fb547da8603: je     0x00007fb547da869f
  0x00007fb547da8609: movabs $0x7fb52d0bea38,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8613: mov    0x8(%rax),%edi
  0x00007fb547da8616: movabs $0x800000000,%r12
  0x00007fb547da8620: add    %r12,%rdi
  0x00007fb547da8623: xor    %r12,%r12
  0x00007fb547da8626: cmp    0x198(%rsi),%rdi
  0x00007fb547da862d: jne    0x00007fb547da863c
  0x00007fb547da862f: addq   $0x1,0x1a0(%rsi)
  0x00007fb547da8637: jmpq   0x00007fb547da86bb
  0x00007fb547da863c: cmp    0x1a8(%rsi),%rdi
  0x00007fb547da8643: jne    0x00007fb547da8652
  0x00007fb547da8645: addq   $0x1,0x1b0(%rsi)
  0x00007fb547da864d: jmpq   0x00007fb547da86bb
  0x00007fb547da8652: cmpq   $0x0,0x198(%rsi)
  0x00007fb547da865d: jne    0x00007fb547da8676
  0x00007fb547da865f: mov    %rdi,0x198(%rsi)
  0x00007fb547da8666: movq   $0x1,0x1a0(%rsi)
  0x00007fb547da8671: jmpq   0x00007fb547da86bb
  0x00007fb547da8676: cmpq   $0x0,0x1a8(%rsi)
  0x00007fb547da8681: jne    0x00007fb547da869a
  0x00007fb547da8683: mov    %rdi,0x1a8(%rsi)
  0x00007fb547da868a: movq   $0x1,0x1b0(%rsi)
  0x00007fb547da8695: jmpq   0x00007fb547da86bb
  0x00007fb547da869a: jmpq   0x00007fb547da86bb
  0x00007fb547da869f: movabs $0x7fb52d0bea38,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da86a9: subq   $0x1,0x188(%rsi)
  0x00007fb547da86b1: jmpq   0x00007fb547da8972
  0x00007fb547da86b6: jmpq   0x00007fb547da86bb  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb547da86bb: cmp    $0x0,%rax
  0x00007fb547da86bf: je     0x00007fb547da86f1
  0x00007fb547da86c5: movabs $0x800067840,%rcx  ;   {metadata(&apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb547da86cf: mov    0x8(%rax),%edi
  0x00007fb547da86d2: movabs $0x800000000,%r12
  0x00007fb547da86dc: add    %r12,%rdi
  0x00007fb547da86df: xor    %r12,%r12
  0x00007fb547da86e2: cmp    0x38(%rdi),%rcx
  0x00007fb547da86e6: jne    0x00007fb547da897b
  0x00007fb547da86ec: jmpq   0x00007fb547da86f1
  0x00007fb547da86f1: mov    %rax,%rdx
  0x00007fb547da86f4: cmp    (%rax),%rax        ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; implicit exception: dispatches to 0x00007fb547da8980
  0x00007fb547da86f7: movabs $0x7fb52d0bea38,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8701: addq   $0x1,0x1d8(%rdx)
  0x00007fb547da8709: movabs $0x7fb52d0bec70,%rax  ;   {metadata(method data for {method} {0x00007fb52d0be1f8} &apos;isDuplicated&apos; &apos;()Z&apos; in &apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb547da8713: mov    0x100(%rax),%edx
  0x00007fb547da8719: add    $0x8,%edx
  0x00007fb547da871c: mov    %edx,0x100(%rax)
  0x00007fb547da8722: and    $0x7ffff8,%edx
  0x00007fb547da8728: cmp    $0x0,%edx
  0x00007fb547da872b: je     0x00007fb547da8985
  0x00007fb547da8731: mov    $0x0,%eax
  0x00007fb547da8736: add    $0x70,%rsp
  0x00007fb547da873a: pop    %rbp
  0x00007fb547da873b: mov    0x108(%r15),%r10
  0x00007fb547da8742: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da8745: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@9 (line 38)

  0x00007fb547da8746: xchg   %ax,%ax
  0x00007fb547da8748: jmpq   0x00007fb547da89b5  ;   {no_reloc}
  0x00007fb547da874d: add    %al,(%rax)
  0x00007fb547da874f: add    %al,(%rax)
  0x00007fb547da8751: add    %cl,-0x75(%rcx)
  0x00007fb547da8754: xchg   %ebx,(%rax)
  0x00007fb547da8756: add    %eax,(%rax)
  0x00007fb547da8758: add    %cl,-0x73(%rax)
  0x00007fb547da875b: js     0x00007fb547da8785
  0x00007fb547da875d: cmp    0x128(%r15),%rdi
  0x00007fb547da8764: ja     0x00007fb547da89bf
  0x00007fb547da876a: mov    %rdi,0x118(%r15)
  0x00007fb547da8771: mov    0xb8(%rdx),%rcx
  0x00007fb547da8778: mov    %rcx,(%rax)
  0x00007fb547da877b: mov    %rdx,%rcx
  0x00007fb547da877e: movabs $0x800000000,%r12
  0x00007fb547da8788: sub    %r12,%rcx
  0x00007fb547da878b: xor    %r12,%r12
  0x00007fb547da878e: mov    %ecx,0x8(%rax)
  0x00007fb547da8791: xor    %rcx,%rcx
  0x00007fb547da8794: mov    %ecx,0xc(%rax)
  0x00007fb547da8797: xor    %rcx,%rcx
  0x00007fb547da879a: mov    %rcx,0x10(%rax)
  0x00007fb547da879e: mov    %rcx,0x18(%rax)
  0x00007fb547da87a2: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb547da87a6: mov    %rax,%rsi
  0x00007fb547da87a9: movabs $0x7fb52ceefac0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da87b3: addq   $0x1,0x160(%rdi)
  0x00007fb547da87bb: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb547da87be: mov    %rax,0x58(%rsp)
  0x00007fb547da87c3: nopl   0x0(%rax)
  0x00007fb547da87c7: callq  0x00007fb54784ad80  ; ImmutableOopMap{[88]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {optimized virtual_call}
  0x00007fb547da87cc: mov    0x58(%rsp),%rax
  0x00007fb547da87d1: jmpq   0x00007fb547da8a1d  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@11 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb547da87d6: xchg   %ax,%ax
  0x00007fb547da87d8: jmpq   0x00007fb547da89db  ;   {no_reloc}
  0x00007fb547da87dd: add    %al,(%rax)
  0x00007fb547da87df: add    %al,(%rax)
  0x00007fb547da87e1: add    %cl,-0x75(%rcx)
  0x00007fb547da87e4: xchg   %ebx,(%rax)
  0x00007fb547da87e6: add    %eax,(%rax)
  0x00007fb547da87e8: add    %cl,-0x73(%rax)
  0x00007fb547da87eb: js     0x00007fb547da8815
  0x00007fb547da87ed: cmp    0x128(%r15),%rdi
  0x00007fb547da87f4: ja     0x00007fb547da89e5
  0x00007fb547da87fa: mov    %rdi,0x118(%r15)
  0x00007fb547da8801: mov    0xb8(%rdx),%rcx
  0x00007fb547da8808: mov    %rcx,(%rax)
  0x00007fb547da880b: mov    %rdx,%rcx
  0x00007fb547da880e: movabs $0x800000000,%r12
  0x00007fb547da8818: sub    %r12,%rcx
  0x00007fb547da881b: xor    %r12,%r12
  0x00007fb547da881e: mov    %ecx,0x8(%rax)
  0x00007fb547da8821: xor    %rcx,%rcx
  0x00007fb547da8824: mov    %ecx,0xc(%rax)
  0x00007fb547da8827: xor    %rcx,%rcx
  0x00007fb547da882a: mov    %rcx,0x10(%rax)
  0x00007fb547da882e: mov    %rcx,0x18(%rax)
  0x00007fb547da8832: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb547da8836: mov    %rax,%rsi
  0x00007fb547da8839: movabs $0x7fb52ceefac0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da8843: addq   $0x1,0x160(%rdi)
  0x00007fb547da884b: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb547da884e: mov    %rax,0x60(%rsp)
  0x00007fb547da8853: nopl   0x0(%rax)
  0x00007fb547da8857: callq  0x00007fb54784ad80  ; ImmutableOopMap{[96]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {optimized virtual_call}
  0x00007fb547da885c: mov    0x60(%rsp),%rax
  0x00007fb547da8861: jmpq   0x00007fb547da8a1d
  0x00007fb547da8866: movabs $0x7fb52d0bf8b8,%r10  ;   {metadata({method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da8870: mov    %r10,0x8(%rsp)
  0x00007fb547da8875: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da887d: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@-1 (line 37)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da8882: jmpq   0x00007fb547da7fb4
  0x00007fb547da8887: movabs $0x7fb52d0be6f0,%r10  ;   {metadata({method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da8891: mov    %r10,0x8(%rsp)
  0x00007fb547da8896: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da889e: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@-1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da88a3: jmpq   0x00007fb547da8027
  0x00007fb547da88a8: movabs $0x7fb52cdce768,%r10  ;   {metadata({method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da88b2: mov    %r10,0x8(%rsp)
  0x00007fb547da88b7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da88bf: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da88c4: jmpq   0x00007fb547da8061
  0x00007fb547da88c9: movabs $0x7fb52d0bf8b8,%r10  ;   {metadata({method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da88d3: mov    %r10,0x8(%rsp)
  0x00007fb547da88d8: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da88e0: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@-1 (line 37)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da88e5: jmpq   0x00007fb547da80dc
  0x00007fb547da88ea: movabs $0x7fb52d0be6f0,%r10  ;   {metadata({method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da88f4: mov    %r10,0x8(%rsp)
  0x00007fb547da88f9: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da8901: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@-1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da8906: jmpq   0x00007fb547da814f
  0x00007fb547da890b: movabs $0x7fb52cdce768,%r10  ;   {metadata({method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547da8915: mov    %r10,0x8(%rsp)
  0x00007fb547da891a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da8922: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da8927: jmpq   0x00007fb547da8189
  0x00007fb547da892c: mov    %rsi,(%rsp)
  0x00007fb547da8930: callq  0x00007fb5478f5420  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547da8935: mov    %rsi,(%rsp)
  0x00007fb547da8939: callq  0x00007fb5478f5420  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547da893e: callq  0x00007fb5478f5720  ; ImmutableOopMap{rsi=Oop }
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x00007fb547da8943: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da8948: movabs $0x7fb52d0be1f8,%r10  ;   {metadata({method} {0x00007fb52d0be1f8} &apos;isDuplicated&apos; &apos;()Z&apos; in &apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb547da8952: mov    %r10,0x8(%rsp)
  0x00007fb547da8957: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da895f: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.NonDuplicatedContext::isDuplicated@-1 (line 6)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da8964: jmpq   0x00007fb547da8459
  0x00007fb547da8969: mov    %rsi,(%rsp)
  0x00007fb547da896d: callq  0x00007fb5478f5420  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547da8972: mov    %rax,(%rsp)
  0x00007fb547da8976: callq  0x00007fb5478f5420  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547da897b: callq  0x00007fb5478f5720  ; ImmutableOopMap{rax=Oop }
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x00007fb547da8980: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da8985: movabs $0x7fb52d0be1f8,%r10  ;   {metadata({method} {0x00007fb52d0be1f8} &apos;isDuplicated&apos; &apos;()Z&apos; in &apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb547da898f: mov    %r10,0x8(%rsp)
  0x00007fb547da8994: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da899c: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.NonDuplicatedContext::isDuplicated@-1 (line 6)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da89a1: jmpq   0x00007fb547da8731
  0x00007fb547da89a6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547da89b0: mov    $0xa050f00,%eax
  0x00007fb547da89b5: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547da89ba: jmpq   0x00007fb547da8748
  0x00007fb547da89bf: mov    %rdx,%rdx
  0x00007fb547da89c2: callq  0x00007fb5478f3900  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547da89c7: jmpq   0x00007fb547da87a6
  0x00007fb547da89cc: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547da89d6: mov    $0xa050f00,%eax
  0x00007fb547da89db: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547da89e0: jmpq   0x00007fb547da87d8
  0x00007fb547da89e5: mov    %rdx,%rdx
  0x00007fb547da89e8: callq  0x00007fb5478f3900  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547da89ed: jmpq   0x00007fb547da8836
  0x00007fb547da89f2: nop
  0x00007fb547da89f3: nop
  0x00007fb547da89f4: mov    0x440(%r15),%rax
  0x00007fb547da89fb: movabs $0x0,%r10
  0x00007fb547da8a05: mov    %r10,0x440(%r15)
  0x00007fb547da8a0c: movabs $0x0,%r10
  0x00007fb547da8a16: mov    %r10,0x448(%r15)
  0x00007fb547da8a1d: add    $0x70,%rsp
  0x00007fb547da8a21: pop    %rbp
  0x00007fb547da8a22: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da8a27: hlt    
  0x00007fb547da8a28: hlt    
  0x00007fb547da8a29: hlt    
  0x00007fb547da8a2a: hlt    
  0x00007fb547da8a2b: hlt    
  0x00007fb547da8a2c: hlt    
  0x00007fb547da8a2d: hlt    
  0x00007fb547da8a2e: hlt    
  0x00007fb547da8a2f: hlt    
  0x00007fb547da8a30: hlt    
  0x00007fb547da8a31: hlt    
  0x00007fb547da8a32: hlt    
  0x00007fb547da8a33: hlt    
  0x00007fb547da8a34: hlt    
  0x00007fb547da8a35: hlt    
  0x00007fb547da8a36: hlt    
  0x00007fb547da8a37: hlt    
  0x00007fb547da8a38: hlt    
  0x00007fb547da8a39: hlt    
  0x00007fb547da8a3a: hlt    
  0x00007fb547da8a3b: hlt    
  0x00007fb547da8a3c: hlt    
  0x00007fb547da8a3d: hlt    
  0x00007fb547da8a3e: hlt    
  0x00007fb547da8a3f: hlt    
[Stub Code]
  0x00007fb547da8a40: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da8a45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da8a4f: jmpq   0x00007fb547da8a4f  ;   {runtime_call}
  0x00007fb547da8a54: nop
  0x00007fb547da8a55: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da8a5f: jmpq   0x00007fb547da8a5f  ;   {runtime_call}
  0x00007fb547da8a64: nop
  0x00007fb547da8a65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da8a6f: jmpq   0x00007fb547da8a6f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da8a74: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da8a79: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da8a83: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da8a87: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da8a8c: hlt    
[Deopt Handler Code]
  0x00007fb547da8a8d: movabs $0x7fb547da8a8d,%r10  ;   {section_word}
  0x00007fb547da8a97: push   %r10
  0x00007fb547da8a99: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da8a9e: hlt    
  0x00007fb547da8a9f: hlt    

ImmutableOopMap{}pc offsets: 1276 
ImmutableOopMap{[88]=Oop }pc offsets: 2124 
ImmutableOopMap{[96]=Oop }pc offsets: 2268 
ImmutableOopMap{rsi=Oop }pc offsets: 2306 2339 2372 2405 2438 2471 
ImmutableOopMap{}pc offsets: 2485 2494 
ImmutableOopMap{rsi=Oop }pc offsets: 2499 2504 
ImmutableOopMap{}pc offsets: 2532 2546 2555 
ImmutableOopMap{rax=Oop }pc offsets: 2560 2565 
ImmutableOopMap{}pc offsets: 2593 2618 2631 2656 2669 </print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.878' address='0x00007fb54f2ccb90'>
Compiled method (nm)     877   80     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLL)L (native)
 total in heap  [0x00007fb54f2ccb90,0x00007fb54f2ccd48] = 440
 relocation     [0x00007fb54f2ccd08,0x00007fb54f2ccd10] = 8
 main code      [0x00007fb54f2ccd20,0x00007fb54f2ccd48] = 40
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2ccd20, 0x00007fb54f2ccd48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d123af0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x00007fb54f2ccd20: mov    0x8(%rsp),%rbx
  0x00007fb54f2ccd25: mov    0x24(%rbx),%ebx
  0x00007fb54f2ccd28: shl    $0x3,%rbx
  0x00007fb54f2ccd2c: mov    0x10(%rbx),%rbx
  0x00007fb54f2ccd30: test   %rbx,%rbx
  0x00007fb54f2ccd33: je     0x00007fb54f2ccd3c
  0x00007fb54f2ccd39: jmpq   *0x38(%rbx)
  0x00007fb54f2ccd3c: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2ccd41: hlt    
  0x00007fb54f2ccd42: hlt    
  0x00007fb54f2ccd43: hlt    
  0x00007fb54f2ccd44: hlt    
  0x00007fb54f2ccd45: hlt    
  0x00007fb54f2ccd46: hlt    
  0x00007fb54f2ccd47: hlt    
</print_native_nmethod>
<nmethod compile_id='80' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2ccd20' size='440' address='0x00007fb54f2ccb90' relocation_offset='376' consts_offset='440' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.878'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2ccd20, 0x00007fb54f2ccd48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d123af0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x00007fb54f2ccd20: mov    0x8(%rsp),%rbx
  0x00007fb54f2ccd25: mov    0x24(%rbx),%ebx
  0x00007fb54f2ccd28: shl    $0x3,%rbx
  0x00007fb54f2ccd2c: mov    0x10(%rbx),%rbx
  0x00007fb54f2ccd30: test   %rbx,%rbx
  0x00007fb54f2ccd33: je     0x00007fb54f2ccd3c
  0x00007fb54f2ccd39: jmpq   *0x38(%rbx)
  0x00007fb54f2ccd3c: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2ccd41: hlt    
  0x00007fb54f2ccd42: hlt    
  0x00007fb54f2ccd43: hlt    
  0x00007fb54f2ccd44: hlt    
  0x00007fb54f2ccd45: hlt    
  0x00007fb54f2ccd46: hlt    
  0x00007fb54f2ccd47: hlt    
<writer thread='1329936'/>
<nmethod compile_id='77' compiler='c1' level='1' entry='0x00007fb54f2cd040' size='688' address='0x00007fb54f2cce90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='624' scopes_pcs_offset='632' dependencies_offset='680' oops_offset='608' metadata_offset='616' method='io.type.pollution.benchmarks.NonDuplicatedContext isDuplicated ()Z' bytes='2' count='11000' iicount='11000' stamp='0.881'/>
<print_nmethod stamp='0.881'>
Compiled method (c1)     880   77       1       io.type.pollution.benchmarks.NonDuplicatedContext::isDuplicated (2 bytes)
 total in heap  [0x00007fb54f2cce90,0x00007fb54f2cd140] = 688
 relocation     [0x00007fb54f2cd008,0x00007fb54f2cd028] = 32
 main code      [0x00007fb54f2cd040,0x00007fb54f2cd0c0] = 128
 stub code      [0x00007fb54f2cd0c0,0x00007fb54f2cd0f0] = 48
 oops           [0x00007fb54f2cd0f0,0x00007fb54f2cd0f8] = 8
 metadata       [0x00007fb54f2cd0f8,0x00007fb54f2cd100] = 8
 scopes data    [0x00007fb54f2cd100,0x00007fb54f2cd108] = 8
 scopes pcs     [0x00007fb54f2cd108,0x00007fb54f2cd138] = 48
 dependencies   [0x00007fb54f2cd138,0x00007fb54f2cd140] = 8
----------------------------------------------------------------------
io/type/pollution/benchmarks/NonDuplicatedContext.isDuplicated()Z  [0x00007fb54f2cd040, 0x00007fb54f2cd0f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52d0be1f8} &apos;isDuplicated&apos; &apos;()Z&apos; in &apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cd040: mov    0x8(%rsi),%r10d
  0x00007fb54f2cd044: movabs $0x800000000,%r12
  0x00007fb54f2cd04e: add    %r12,%r10
  0x00007fb54f2cd051: xor    %r12,%r12
  0x00007fb54f2cd054: cmp    %rax,%r10
  0x00007fb54f2cd057: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cd05d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cd060: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cd067: push   %rbp
  0x00007fb54f2cd068: sub    $0x30,%rsp         ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.NonDuplicatedContext::isDuplicated@0 (line 6)

  0x00007fb54f2cd06c: mov    $0x0,%eax
  0x00007fb54f2cd071: add    $0x30,%rsp
  0x00007fb54f2cd075: pop    %rbp
  0x00007fb54f2cd076: mov    0x108(%r15),%r10
  0x00007fb54f2cd07d: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cd080: retq   
  0x00007fb54f2cd081: nop
  0x00007fb54f2cd082: nop
  0x00007fb54f2cd083: mov    0x440(%r15),%rax
  0x00007fb54f2cd08a: movabs $0x0,%r10
  0x00007fb54f2cd094: mov    %r10,0x440(%r15)
  0x00007fb54f2cd09b: movabs $0x0,%r10
  0x00007fb54f2cd0a5: mov    %r10,0x448(%r15)
  0x00007fb54f2cd0ac: add    $0x30,%rsp
  0x00007fb54f2cd0b0: pop    %rbp
  0x00007fb54f2cd0b1: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cd0b6: hlt    
  0x00007fb54f2cd0b7: hlt    
  0x00007fb54f2cd0b8: hlt    
  0x00007fb54f2cd0b9: hlt    
  0x00007fb54f2cd0ba: hlt    
  0x00007fb54f2cd0bb: hlt    
  0x00007fb54f2cd0bc: hlt    
  0x00007fb54f2cd0bd: hlt    
  0x00007fb54f2cd0be: hlt    
  0x00007fb54f2cd0bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cd0c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cd0c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cd0cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cd0d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cd0d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cd0d9: movabs $0x7fb54f2cd0d9,%r10  ;   {section_word}
  0x00007fb54f2cd0e3: push   %r10
  0x00007fb54f2cd0e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cd0ea: hlt    
  0x00007fb54f2cd0eb: hlt    
  0x00007fb54f2cd0ec: hlt    
  0x00007fb54f2cd0ed: hlt    
  0x00007fb54f2cd0ee: hlt    
  0x00007fb54f2cd0ef: hlt    
</print_nmethod>
<nmethod compile_id='78' compiler='c1' level='2' entry='0x00007fb547da9140' size='880' address='0x00007fb547da8f90' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='712' scopes_pcs_offset='776' dependencies_offset='872' oops_offset='688' metadata_offset='696' method='io.type.pollution.benchmarks.Main applicationStackBase (Lio/type/pollution/benchmarks/Context;)Z' bytes='7' count='11000' iicount='11000' stamp='0.881'/>
<print_nmethod stamp='0.881'>
Compiled method (c1)     881   78       2       io.type.pollution.benchmarks.Main::applicationStackBase (7 bytes)
 total in heap  [0x00007fb547da8f90,0x00007fb547da9300] = 880
 relocation     [0x00007fb547da9108,0x00007fb547da9138] = 48
 main code      [0x00007fb547da9140,0x00007fb547da9200] = 192
 stub code      [0x00007fb547da9200,0x00007fb547da9240] = 64
 oops           [0x00007fb547da9240,0x00007fb547da9248] = 8
 metadata       [0x00007fb547da9248,0x00007fb547da9258] = 16
 scopes data    [0x00007fb547da9258,0x00007fb547da9298] = 64
 scopes pcs     [0x00007fb547da9298,0x00007fb547da92f8] = 96
 dependencies   [0x00007fb547da92f8,0x00007fb547da9300] = 8
----------------------------------------------------------------------
io/type/pollution/benchmarks/Main.applicationStackBase(Lio/type/pollution/benchmarks/Context;)Z  [0x00007fb547da9140, 0x00007fb547da9240]  256 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0bf7d0} &apos;applicationStackBase&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;
  # parm0:    rsi:rsi   = &apos;io/type/pollution/benchmarks/Context&apos;
  #           [sp+0x60]  (sp of caller)
  0x00007fb547da9140: mov    %eax,-0x14000(%rsp)
  0x00007fb547da9147: push   %rbp
  0x00007fb547da9148: sub    $0x50,%rsp
  0x00007fb547da914c: movabs $0x7fb52d0be350,%rdx
  0x00007fb547da9156: mov    0x18(%rdx),%edi
  0x00007fb547da9159: add    $0x8,%edi
  0x00007fb547da915c: mov    %edi,0x18(%rdx)
  0x00007fb547da915f: and    $0x3ff8,%edi
  0x00007fb547da9165: cmp    $0x0,%edi
  0x00007fb547da9168: je     0x00007fb547da9195  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@0 (line 32)

  0x00007fb547da916e: mov    $0x6,%edx          ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)

  0x00007fb547da9173: nopl   0x0(%rax)
  0x00007fb547da9177: callq  0x00007fb54784a780  ; ImmutableOopMap{}
                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ;   {static_call}
  0x00007fb547da917c: and    $0x1,%eax
  0x00007fb547da917f: and    $0x1,%eax
  0x00007fb547da9182: and    $0x1,%eax
  0x00007fb547da9185: add    $0x50,%rsp
  0x00007fb547da9189: pop    %rbp
  0x00007fb547da918a: mov    0x108(%r15),%r10
  0x00007fb547da9191: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da9194: retq   
  0x00007fb547da9195: movabs $0x7fb52d0bf7d0,%r10  ;   {metadata({method} {0x00007fb52d0bf7d0} &apos;applicationStackBase&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547da919f: mov    %r10,0x8(%rsp)
  0x00007fb547da91a4: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da91ac: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@-1 (line 32)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da91b1: jmp    0x00007fb547da916e
  0x00007fb547da91b3: nop
  0x00007fb547da91b4: nop
  0x00007fb547da91b5: mov    0x440(%r15),%rax
  0x00007fb547da91bc: movabs $0x0,%r10
  0x00007fb547da91c6: mov    %r10,0x440(%r15)
  0x00007fb547da91cd: movabs $0x0,%r10
  0x00007fb547da91d7: mov    %r10,0x448(%r15)
  0x00007fb547da91de: add    $0x50,%rsp
  0x00007fb547da91e2: pop    %rbp
  0x00007fb547da91e3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da91e8: hlt    
  0x00007fb547da91e9: hlt    
  0x00007fb547da91ea: hlt    
  0x00007fb547da91eb: hlt    
  0x00007fb547da91ec: hlt    
  0x00007fb547da91ed: hlt    
  0x00007fb547da91ee: hlt    
  0x00007fb547da91ef: hlt    
  0x00007fb547da91f0: hlt    
  0x00007fb547da91f1: hlt    
  0x00007fb547da91f2: hlt    
  0x00007fb547da91f3: hlt    
  0x00007fb547da91f4: hlt    
  0x00007fb547da91f5: hlt    
  0x00007fb547da91f6: hlt    
  0x00007fb547da91f7: hlt    
  0x00007fb547da91f8: hlt    
  0x00007fb547da91f9: hlt    
  0x00007fb547da91fa: hlt    
  0x00007fb547da91fb: hlt    
  0x00007fb547da91fc: hlt    
  0x00007fb547da91fd: hlt    
  0x00007fb547da91fe: hlt    
  0x00007fb547da91ff: hlt    
[Stub Code]
  0x00007fb547da9200: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da9205: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da920f: jmpq   0x00007fb547da920f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da9214: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da9219: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da9223: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da9227: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da922c: hlt    
[Deopt Handler Code]
  0x00007fb547da922d: movabs $0x7fb547da922d,%r10  ;   {section_word}
  0x00007fb547da9237: push   %r10
  0x00007fb547da9239: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da923e: hlt    
  0x00007fb547da923f: hlt    

ImmutableOopMap{}pc offsets: 60 
ImmutableOopMap{rsi=Oop }pc offsets: 113 </print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='81' method='java.lang.Enum ordinal ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.888' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='79' compiler='c1' level='2' entry='0x00007fb547da94e0' size='1584' address='0x00007fb547da9310' relocation_offset='376' insts_offset='464' stub_offset='1040' scopes_data_offset='1152' scopes_pcs_offset='1272' dependencies_offset='1560' nul_chk_table_offset='1568' oops_offset='1104' metadata_offset='1112' method='io.type.pollution.benchmarks.ContextUtil isDuplicatedContext (Lio/type/pollution/benchmarks/Context;)Z' bytes='18' count='11000' iicount='11000' stamp='0.888'/>
<print_nmethod stamp='0.888'>
Compiled method (c1)     888   79       2       io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext (18 bytes)
 total in heap  [0x00007fb547da9310,0x00007fb547da9940] = 1584
 relocation     [0x00007fb547da9488,0x00007fb547da94d0] = 72
 main code      [0x00007fb547da94e0,0x00007fb547da9720] = 576
 stub code      [0x00007fb547da9720,0x00007fb547da9760] = 64
 oops           [0x00007fb547da9760,0x00007fb547da9768] = 8
 metadata       [0x00007fb547da9768,0x00007fb547da9790] = 40
 scopes data    [0x00007fb547da9790,0x00007fb547da9808] = 120
 scopes pcs     [0x00007fb547da9808,0x00007fb547da9928] = 288
 dependencies   [0x00007fb547da9928,0x00007fb547da9930] = 8
 nul chk table  [0x00007fb547da9930,0x00007fb547da9940] = 16
----------------------------------------------------------------------
io/type/pollution/benchmarks/ContextUtil.isDuplicatedContext(Lio/type/pollution/benchmarks/Context;)Z  [0x00007fb547da94e0, 0x00007fb547da9760]  640 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;
  # parm0:    rsi:rsi   = &apos;io/type/pollution/benchmarks/Context&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb547da94e0: mov    %eax,-0x14000(%rsp)
  0x00007fb547da94e7: push   %rbp
  0x00007fb547da94e8: sub    $0x40,%rsp
  0x00007fb547da94ec: movabs $0x7fb52d0be7d0,%rax
  0x00007fb547da94f6: mov    0x18(%rax),%edx
  0x00007fb547da94f9: add    $0x8,%edx
  0x00007fb547da94fc: mov    %edx,0x18(%rax)
  0x00007fb547da94ff: and    $0x3ff8,%edx
  0x00007fb547da9505: cmp    $0x0,%edx
  0x00007fb547da9508: je     0x00007fb547da9686  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@0 (line 8)

  0x00007fb547da950e: cmp    $0x0,%rsi
  0x00007fb547da9512: je     0x00007fb547da960e  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)

  0x00007fb547da9518: cmp    $0x0,%rsi
  0x00007fb547da951c: je     0x00007fb547da9569
  0x00007fb547da9522: movabs $0x800062248,%rdi  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0x00007fb547da952c: mov    0x8(%rsi),%eax
  0x00007fb547da952f: movabs $0x800000000,%r12
  0x00007fb547da9539: add    %r12,%rax
  0x00007fb547da953c: xor    %r12,%r12
  0x00007fb547da953f: cmp    0x20(%rax),%rdi
  0x00007fb547da9543: je     0x00007fb547da9569
  0x00007fb547da9549: cmp    %rdi,%rax
  0x00007fb547da954c: je     0x00007fb547da9569
  0x00007fb547da9552: push   %rax
  0x00007fb547da9553: push   %rdi
  0x00007fb547da9554: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547da9559: pop    %rax
  0x00007fb547da955a: pop    %rax
  0x00007fb547da955b: cmp    $0x0,%eax
  0x00007fb547da955e: je     0x00007fb547da96a7
  0x00007fb547da9564: jmpq   0x00007fb547da9569
  0x00007fb547da9569: mov    %rsi,%rax          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)

  0x00007fb547da956c: cmp    $0x0,%rax
  0x00007fb547da9570: je     0x00007fb547da95bd
  0x00007fb547da9576: movabs $0x800062448,%rdi  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0x00007fb547da9580: mov    0x8(%rax),%esi
  0x00007fb547da9583: movabs $0x800000000,%r12
  0x00007fb547da958d: add    %r12,%rsi
  0x00007fb547da9590: xor    %r12,%r12
  0x00007fb547da9593: cmp    0x20(%rsi),%rdi
  0x00007fb547da9597: je     0x00007fb547da95bd
  0x00007fb547da959d: cmp    %rdi,%rsi
  0x00007fb547da95a0: je     0x00007fb547da95bd
  0x00007fb547da95a6: push   %rsi
  0x00007fb547da95a7: push   %rdi
  0x00007fb547da95a8: callq  0x00007fb5478f5a00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007fb547da95ad: pop    %rsi
  0x00007fb547da95ae: pop    %rsi
  0x00007fb547da95af: cmp    $0x0,%esi
  0x00007fb547da95b2: je     0x00007fb547da96b0
  0x00007fb547da95b8: jmpq   0x00007fb547da95bd  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)

  0x00007fb547da95bd: cmp    $0x0,%rax
  0x00007fb547da95c1: je     0x00007fb547da95f3
  0x00007fb547da95c7: movabs $0x800067840,%rcx  ;   {metadata(&apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb547da95d1: mov    0x8(%rax),%edi
  0x00007fb547da95d4: movabs $0x800000000,%r12
  0x00007fb547da95de: add    %r12,%rdi
  0x00007fb547da95e1: xor    %r12,%r12
  0x00007fb547da95e4: cmp    0x38(%rdi),%rcx
  0x00007fb547da95e8: jne    0x00007fb547da96b9
  0x00007fb547da95ee: jmpq   0x00007fb547da95f3
  0x00007fb547da95f3: mov    %rax,%rdx
  0x00007fb547da95f6: cmp    (%rax),%rax        ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; implicit exception: dispatches to 0x00007fb547da96be
  0x00007fb547da95f9: mov    $0x0,%eax
  0x00007fb547da95fe: add    $0x40,%rsp
  0x00007fb547da9602: pop    %rbp
  0x00007fb547da9603: mov    0x108(%r15),%r10
  0x00007fb547da960a: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da960d: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@17 (line 9)

  0x00007fb547da960e: xchg   %ax,%ax
  0x00007fb547da9610: jmpq   0x00007fb547da96d2  ;   {no_reloc}
  0x00007fb547da9615: add    %al,(%rax)
  0x00007fb547da9617: add    %al,(%rax)
  0x00007fb547da9619: add    %cl,-0x75(%rcx)
  0x00007fb547da961c: xchg   %ebx,(%rax)
  0x00007fb547da961e: add    %eax,(%rax)
  0x00007fb547da9620: add    %cl,-0x73(%rax)
  0x00007fb547da9623: js     0x00007fb547da964d
  0x00007fb547da9625: cmp    0x128(%r15),%rdi
  0x00007fb547da962c: ja     0x00007fb547da96dc
  0x00007fb547da9632: mov    %rdi,0x118(%r15)
  0x00007fb547da9639: mov    0xb8(%rdx),%rcx
  0x00007fb547da9640: mov    %rcx,(%rax)
  0x00007fb547da9643: mov    %rdx,%rcx
  0x00007fb547da9646: movabs $0x800000000,%r12
  0x00007fb547da9650: sub    %r12,%rcx
  0x00007fb547da9653: xor    %r12,%r12
  0x00007fb547da9656: mov    %ecx,0x8(%rax)
  0x00007fb547da9659: xor    %rcx,%rcx
  0x00007fb547da965c: mov    %ecx,0xc(%rax)
  0x00007fb547da965f: xor    %rcx,%rcx
  0x00007fb547da9662: mov    %rcx,0x10(%rax)
  0x00007fb547da9666: mov    %rcx,0x18(%rax)
  0x00007fb547da966a: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)

  0x00007fb547da966e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)

  0x00007fb547da9671: mov    %rax,0x28(%rsp)
  0x00007fb547da9676: nop
  0x00007fb547da9677: callq  0x00007fb54784ad80  ; ImmutableOopMap{[40]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ;   {optimized virtual_call}
  0x00007fb547da967c: mov    0x28(%rsp),%rax
  0x00007fb547da9681: jmpq   0x00007fb547da9711
  0x00007fb547da9686: movabs $0x7fb52d0be6f0,%r10  ;   {metadata({method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;)}
  0x00007fb547da9690: mov    %r10,0x8(%rsp)
  0x00007fb547da9695: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da969d: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@-1 (line 8)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da96a2: jmpq   0x00007fb547da950e
  0x00007fb547da96a7: mov    %rsi,(%rsp)
  0x00007fb547da96ab: callq  0x00007fb5478f5420  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547da96b0: mov    %rax,(%rsp)
  0x00007fb547da96b4: callq  0x00007fb5478f5420  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547da96b9: callq  0x00007fb5478f5720  ; ImmutableOopMap{rax=Oop }
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x00007fb547da96be: callq  0x00007fb5478f3020  ; ImmutableOopMap{}
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da96c3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547da96cd: mov    $0xa050f00,%eax
  0x00007fb547da96d2: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547da96d7: jmpq   0x00007fb547da9610
  0x00007fb547da96dc: mov    %rdx,%rdx
  0x00007fb547da96df: callq  0x00007fb5478f3900  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547da96e4: jmp    0x00007fb547da966e
  0x00007fb547da96e6: nop
  0x00007fb547da96e7: nop
  0x00007fb547da96e8: mov    0x440(%r15),%rax
  0x00007fb547da96ef: movabs $0x0,%r10
  0x00007fb547da96f9: mov    %r10,0x440(%r15)
  0x00007fb547da9700: movabs $0x0,%r10
  0x00007fb547da970a: mov    %r10,0x448(%r15)
  0x00007fb547da9711: add    $0x40,%rsp
  0x00007fb547da9715: pop    %rbp
  0x00007fb547da9716: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547da971b: hlt    
  0x00007fb547da971c: hlt    
  0x00007fb547da971d: hlt    
  0x00007fb547da971e: hlt    
  0x00007fb547da971f: hlt    
[Stub Code]
  0x00007fb547da9720: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547da9725: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547da972f: jmpq   0x00007fb547da972f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547da9734: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547da9739: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547da9743: and    $0xfffffffffffffff0,%rsp
  0x00007fb547da9747: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547da974c: hlt    
[Deopt Handler Code]
  0x00007fb547da974d: movabs $0x7fb547da974d,%r10  ;   {section_word}
  0x00007fb547da9757: push   %r10
  0x00007fb547da9759: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547da975e: hlt    
  0x00007fb547da975f: hlt    

ImmutableOopMap{[40]=Oop }pc offsets: 412 
ImmutableOopMap{rsi=Oop }pc offsets: 450 
ImmutableOopMap{}pc offsets: 464 473 
ImmutableOopMap{rax=Oop }pc offsets: 478 
ImmutableOopMap{}pc offsets: 483 503 516 </print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.894' address='0x00007fb54f2cd190'>
Compiled method (nm)     894   82     n 0       java.lang.invoke.MethodHandle::linkToStatic(L)V (native)
 total in heap  [0x00007fb54f2cd190,0x00007fb54f2cd340] = 432
 relocation     [0x00007fb54f2cd308,0x00007fb54f2cd310] = 8
 main code      [0x00007fb54f2cd320,0x00007fb54f2cd340] = 32
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/invoke/MemberName;)V  [0x00007fb54f2cd320, 0x00007fb54f2cd340]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d13ee28} &apos;linkToStatic&apos; &apos;(Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cd320: mov    0x24(%rsi),%ebx
  0x00007fb54f2cd323: shl    $0x3,%rbx
  0x00007fb54f2cd327: mov    0x10(%rbx),%rbx
  0x00007fb54f2cd32b: test   %rbx,%rbx
  0x00007fb54f2cd32e: je     0x00007fb54f2cd337
  0x00007fb54f2cd334: jmpq   *0x38(%rbx)
  0x00007fb54f2cd337: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cd33c: hlt    
  0x00007fb54f2cd33d: hlt    
  0x00007fb54f2cd33e: hlt    
  0x00007fb54f2cd33f: hlt    
</print_native_nmethod>
<nmethod compile_id='82' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cd320' size='432' address='0x00007fb54f2cd190' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.896'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/invoke/MemberName;)V  [0x00007fb54f2cd320, 0x00007fb54f2cd340]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d13ee28} &apos;linkToStatic&apos; &apos;(Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cd320: mov    0x24(%rsi),%ebx
  0x00007fb54f2cd323: shl    $0x3,%rbx
  0x00007fb54f2cd327: mov    0x10(%rbx),%rbx
  0x00007fb54f2cd32b: test   %rbx,%rbx
  0x00007fb54f2cd32e: je     0x00007fb54f2cd337
  0x00007fb54f2cd334: jmpq   *0x38(%rbx)
  0x00007fb54f2cd337: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cd33c: hlt    
  0x00007fb54f2cd33d: hlt    
  0x00007fb54f2cd33e: hlt    
  0x00007fb54f2cd33f: hlt    
<writer thread='1329936'/>
<nmethod compile_id='81' compiler='c1' level='1' entry='0x00007fb54f2cd640' size='704' address='0x00007fb54f2cd490' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.Enum ordinal ()I' bytes='5' count='168' iicount='168' stamp='0.896'/>
<print_nmethod stamp='0.896'>
Compiled method (c1)     895   81       1       java.lang.Enum::ordinal (5 bytes)
 total in heap  [0x00007fb54f2cd490,0x00007fb54f2cd750] = 704
 relocation     [0x00007fb54f2cd608,0x00007fb54f2cd628] = 32
 main code      [0x00007fb54f2cd640,0x00007fb54f2cd6c0] = 128
 stub code      [0x00007fb54f2cd6c0,0x00007fb54f2cd6f0] = 48
 metadata       [0x00007fb54f2cd6f0,0x00007fb54f2cd6f8] = 8
 scopes data    [0x00007fb54f2cd6f8,0x00007fb54f2cd708] = 16
 scopes pcs     [0x00007fb54f2cd708,0x00007fb54f2cd748] = 64
 dependencies   [0x00007fb54f2cd748,0x00007fb54f2cd750] = 8
----------------------------------------------------------------------
java/lang/Enum.ordinal()I  [0x00007fb54f2cd640, 0x00007fb54f2cd6f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ceeb550} &apos;ordinal&apos; &apos;()I&apos; in &apos;java/lang/Enum&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cd640: mov    0x8(%rsi),%r10d
  0x00007fb54f2cd644: movabs $0x800000000,%r12
  0x00007fb54f2cd64e: add    %r12,%r10
  0x00007fb54f2cd651: xor    %r12,%r12
  0x00007fb54f2cd654: cmp    %rax,%r10
  0x00007fb54f2cd657: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cd65d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cd660: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cd667: push   %rbp
  0x00007fb54f2cd668: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Enum::ordinal@0 (line 105)

  0x00007fb54f2cd66c: mov    0xc(%rsi),%eax     ;*getfield ordinal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Enum::ordinal@1 (line 105)

  0x00007fb54f2cd66f: add    $0x30,%rsp
  0x00007fb54f2cd673: pop    %rbp
  0x00007fb54f2cd674: mov    0x108(%r15),%r10
  0x00007fb54f2cd67b: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cd67e: retq   
  0x00007fb54f2cd67f: nop
  0x00007fb54f2cd680: nop
  0x00007fb54f2cd681: mov    0x440(%r15),%rax
  0x00007fb54f2cd688: movabs $0x0,%r10
  0x00007fb54f2cd692: mov    %r10,0x440(%r15)
  0x00007fb54f2cd699: movabs $0x0,%r10
  0x00007fb54f2cd6a3: mov    %r10,0x448(%r15)
  0x00007fb54f2cd6aa: add    $0x30,%rsp
  0x00007fb54f2cd6ae: pop    %rbp
  0x00007fb54f2cd6af: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cd6b4: hlt    
  0x00007fb54f2cd6b5: hlt    
  0x00007fb54f2cd6b6: hlt    
  0x00007fb54f2cd6b7: hlt    
  0x00007fb54f2cd6b8: hlt    
  0x00007fb54f2cd6b9: hlt    
  0x00007fb54f2cd6ba: hlt    
  0x00007fb54f2cd6bb: hlt    
  0x00007fb54f2cd6bc: hlt    
  0x00007fb54f2cd6bd: hlt    
  0x00007fb54f2cd6be: hlt    
  0x00007fb54f2cd6bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cd6c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cd6c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cd6cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cd6d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cd6d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cd6d9: movabs $0x7fb54f2cd6d9,%r10  ;   {section_word}
  0x00007fb54f2cd6e3: push   %r10
  0x00007fb54f2cd6e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cd6ea: hlt    
  0x00007fb54f2cd6eb: hlt    
  0x00007fb54f2cd6ec: hlt    
  0x00007fb54f2cd6ed: hlt    
  0x00007fb54f2cd6ee: hlt    
  0x00007fb54f2cd6ef: hlt    
</print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='83' method='java.lang.Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='128' iicount='128' level='1' stamp='0.898' comment='tiered' hot_count='128'/>
<print_native_nmethod method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.898' address='0x00007fb54f2cd790'>
Compiled method (nm)     898   84     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLL)L (native)
 total in heap  [0x00007fb54f2cd790,0x00007fb54f2cd950] = 448
 relocation     [0x00007fb54f2cd908,0x00007fb54f2cd910] = 8
 main code      [0x00007fb54f2cd920,0x00007fb54f2cd950] = 48
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00007fb54f2cd920, 0x00007fb54f2cd950]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d148038} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  0x00007fb54f2cd920: mov    0x14(%rsi),%ebx
  0x00007fb54f2cd923: shl    $0x3,%rbx
  0x00007fb54f2cd927: mov    0x28(%rbx),%ebx
  0x00007fb54f2cd92a: shl    $0x3,%rbx
  0x00007fb54f2cd92e: mov    0x24(%rbx),%ebx
  0x00007fb54f2cd931: shl    $0x3,%rbx
  0x00007fb54f2cd935: mov    0x10(%rbx),%rbx
  0x00007fb54f2cd939: test   %rbx,%rbx
  0x00007fb54f2cd93c: je     0x00007fb54f2cd945
  0x00007fb54f2cd942: jmpq   *0x38(%rbx)
  0x00007fb54f2cd945: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cd94a: hlt    
  0x00007fb54f2cd94b: hlt    
  0x00007fb54f2cd94c: hlt    
  0x00007fb54f2cd94d: hlt    
  0x00007fb54f2cd94e: hlt    
  0x00007fb54f2cd94f: hlt    
</print_native_nmethod>
<nmethod compile_id='84' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cd920' size='448' address='0x00007fb54f2cd790' relocation_offset='376' consts_offset='448' insts_offset='400' method='java.lang.invoke.MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.898'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00007fb54f2cd920, 0x00007fb54f2cd950]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d148038} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  0x00007fb54f2cd920: mov    0x14(%rsi),%ebx
  0x00007fb54f2cd923: shl    $0x3,%rbx
  0x00007fb54f2cd927: mov    0x28(%rbx),%ebx
  0x00007fb54f2cd92a: shl    $0x3,%rbx
  0x00007fb54f2cd92e: mov    0x24(%rbx),%ebx
  0x00007fb54f2cd931: shl    $0x3,%rbx
  0x00007fb54f2cd935: mov    0x10(%rbx),%rbx
  0x00007fb54f2cd939: test   %rbx,%rbx
  0x00007fb54f2cd93c: je     0x00007fb54f2cd945
  0x00007fb54f2cd942: jmpq   *0x38(%rbx)
  0x00007fb54f2cd945: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cd94a: hlt    
  0x00007fb54f2cd94b: hlt    
  0x00007fb54f2cd94c: hlt    
  0x00007fb54f2cd94d: hlt    
  0x00007fb54f2cd94e: hlt    
  0x00007fb54f2cd94f: hlt    
<writer thread='1329936'/>
<nmethod compile_id='73' compiler='c1' level='3' entry='0x00007fb547da9ba0' size='3160' address='0x00007fb547da9990' relocation_offset='376' insts_offset='528' stub_offset='2320' scopes_data_offset='2376' scopes_pcs_offset='2520' dependencies_offset='3096' nul_chk_table_offset='3104' metadata_offset='2368' method='java.lang.CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='624' iicount='624' stamp='0.900'/>
<print_nmethod stamp='0.900'>
Compiled method (c1)     899   73       3       java.lang.CharacterData::of (120 bytes)
 total in heap  [0x00007fb547da9990,0x00007fb547daa5e8] = 3160
 relocation     [0x00007fb547da9b08,0x00007fb547da9b90] = 136
 main code      [0x00007fb547da9ba0,0x00007fb547daa2a0] = 1792
 stub code      [0x00007fb547daa2a0,0x00007fb547daa2d0] = 48
 metadata       [0x00007fb547daa2d0,0x00007fb547daa2d8] = 8
 scopes data    [0x00007fb547daa2d8,0x00007fb547daa368] = 144
 scopes pcs     [0x00007fb547daa368,0x00007fb547daa5a8] = 576
 dependencies   [0x00007fb547daa5a8,0x00007fb547daa5b0] = 8
 nul chk table  [0x00007fb547daa5b0,0x00007fb547daa5e8] = 56
----------------------------------------------------------------------
java/lang/CharacterData.of(I)Ljava/lang/CharacterData;  [0x00007fb547da9ba0, 0x00007fb547daa2d0]  1840 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cea3318} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007fb547da9ba0: mov    %eax,-0x14000(%rsp)
  0x00007fb547da9ba7: push   %rbp
  0x00007fb547da9ba8: sub    $0x30,%rsp
  0x00007fb547da9bac: movabs $0x7fb52d0c4ac8,%rax  ;   {metadata(method data for {method} {0x00007fb52cea3318} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007fb547da9bb6: mov    0x100(%rax),%edi
  0x00007fb547da9bbc: add    $0x8,%edi
  0x00007fb547da9bbf: mov    %edi,0x100(%rax)
  0x00007fb547da9bc5: and    $0x1ff8,%edi
  0x00007fb547da9bcb: cmp    $0x0,%edi
  0x00007fb547da9bce: je     0x00007fb547da9f04  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@0 (line 80)

  0x00007fb547da9bd4: mov    %rsi,%rax
  0x00007fb547da9bd7: shr    $0x8,%eax
  0x00007fb547da9bda: cmp    $0x0,%eax
  0x00007fb547da9bdd: movabs $0x7fb52d0c4ac8,%rax  ;   {metadata(method data for {method} {0x00007fb52cea3318} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007fb547da9be7: movabs $0x150,%rdi
  0x00007fb547da9bf1: je     0x00007fb547da9c01
  0x00007fb547da9bf7: movabs $0x140,%rdi
  0x00007fb547da9c01: mov    (%rax,%rdi,1),%rbx
  0x00007fb547da9c05: lea    0x1(%rbx),%rbx
  0x00007fb547da9c09: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547da9c0d: je     0x00007fb547da9eea  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@4 (line 80)

  0x00007fb547da9c13: shr    $0x10,%esi
  0x00007fb547da9c16: movabs $0x7fb52d0c4ac8,%rax  ;   {metadata(method data for {method} {0x00007fb52cea3318} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007fb547da9c20: movabs $0x168,%rdi
  0x00007fb547da9c2a: cmp    $0x0,%esi
  0x00007fb547da9c2d: mov    %rdi,%rbx
  0x00007fb547da9c30: movabs $0x178,%rdi
  0x00007fb547da9c3a: cmovne %rbx,%rdi
  0x00007fb547da9c3e: cmp    $0x1,%esi
  0x00007fb547da9c41: mov    %rdi,%rbx
  0x00007fb547da9c44: movabs $0x188,%rdi
  0x00007fb547da9c4e: cmovne %rbx,%rdi
  0x00007fb547da9c52: cmp    $0x2,%esi
  0x00007fb547da9c55: mov    %rdi,%rbx
  0x00007fb547da9c58: movabs $0x198,%rdi
  0x00007fb547da9c62: cmovne %rbx,%rdi
  0x00007fb547da9c66: cmp    $0x3,%esi
  0x00007fb547da9c69: mov    %rdi,%rbx
  0x00007fb547da9c6c: movabs $0x1a8,%rdi
  0x00007fb547da9c76: cmovne %rbx,%rdi
  0x00007fb547da9c7a: cmp    $0x4,%esi
  0x00007fb547da9c7d: mov    %rdi,%rbx
  0x00007fb547da9c80: movabs $0x1b8,%rdi
  0x00007fb547da9c8a: cmovne %rbx,%rdi
  0x00007fb547da9c8e: cmp    $0x5,%esi
  0x00007fb547da9c91: mov    %rdi,%rbx
  0x00007fb547da9c94: movabs $0x1c8,%rdi
  0x00007fb547da9c9e: cmovne %rbx,%rdi
  0x00007fb547da9ca2: cmp    $0x6,%esi
  0x00007fb547da9ca5: mov    %rdi,%rbx
  0x00007fb547da9ca8: movabs $0x1d8,%rdi
  0x00007fb547da9cb2: cmovne %rbx,%rdi
  0x00007fb547da9cb6: cmp    $0x7,%esi
  0x00007fb547da9cb9: mov    %rdi,%rbx
  0x00007fb547da9cbc: movabs $0x1e8,%rdi
  0x00007fb547da9cc6: cmovne %rbx,%rdi
  0x00007fb547da9cca: cmp    $0x8,%esi
  0x00007fb547da9ccd: mov    %rdi,%rbx
  0x00007fb547da9cd0: movabs $0x1f8,%rdi
  0x00007fb547da9cda: cmovne %rbx,%rdi
  0x00007fb547da9cde: cmp    $0x9,%esi
  0x00007fb547da9ce1: mov    %rdi,%rbx
  0x00007fb547da9ce4: movabs $0x208,%rdi
  0x00007fb547da9cee: cmovne %rbx,%rdi
  0x00007fb547da9cf2: cmp    $0xa,%esi
  0x00007fb547da9cf5: mov    %rdi,%rbx
  0x00007fb547da9cf8: movabs $0x218,%rdi
  0x00007fb547da9d02: cmovne %rbx,%rdi
  0x00007fb547da9d06: cmp    $0xb,%esi
  0x00007fb547da9d09: mov    %rdi,%rbx
  0x00007fb547da9d0c: movabs $0x228,%rdi
  0x00007fb547da9d16: cmovne %rbx,%rdi
  0x00007fb547da9d1a: cmp    $0xc,%esi
  0x00007fb547da9d1d: mov    %rdi,%rbx
  0x00007fb547da9d20: movabs $0x238,%rdi
  0x00007fb547da9d2a: cmovne %rbx,%rdi
  0x00007fb547da9d2e: cmp    $0xd,%esi
  0x00007fb547da9d31: mov    %rdi,%rbx
  0x00007fb547da9d34: movabs $0x248,%rdi
  0x00007fb547da9d3e: cmovne %rbx,%rdi
  0x00007fb547da9d42: cmp    $0xe,%esi
  0x00007fb547da9d45: mov    %rdi,%rbx
  0x00007fb547da9d48: movabs $0x258,%rdi
  0x00007fb547da9d52: cmovne %rbx,%rdi
  0x00007fb547da9d56: cmp    $0xf,%esi
  0x00007fb547da9d59: mov    %rdi,%rbx
  0x00007fb547da9d5c: movabs $0x268,%rdi
  0x00007fb547da9d66: cmovne %rbx,%rdi
  0x00007fb547da9d6a: cmp    $0x10,%esi
  0x00007fb547da9d6d: mov    %rdi,%rbx
  0x00007fb547da9d70: movabs $0x278,%rdi
  0x00007fb547da9d7a: cmovne %rbx,%rdi
  0x00007fb547da9d7e: mov    (%rax,%rdi,1),%rbx
  0x00007fb547da9d82: movabs $0x1,%r10
  0x00007fb547da9d8c: add    %r10,%rbx
  0x00007fb547da9d8f: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547da9d93: cmp    $0x0,%esi
  0x00007fb547da9d96: je     0x00007fb547da9eba
  0x00007fb547da9d9c: cmp    $0x1,%esi
  0x00007fb547da9d9f: je     0x00007fb547da9e8a
  0x00007fb547da9da5: cmp    $0x2,%esi
  0x00007fb547da9da8: je     0x00007fb547da9e5a
  0x00007fb547da9dae: cmp    $0xe,%esi
  0x00007fb547da9db1: je     0x00007fb547da9e2a
  0x00007fb547da9db7: cmp    $0xf,%esi
  0x00007fb547da9dba: je     0x00007fb547da9dc9
  0x00007fb547da9dc0: cmp    $0x10,%esi
  0x00007fb547da9dc3: jne    0x00007fb547da9dfa  ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@15 (line 83)

  0x00007fb547da9dc9: nopl   0x0(%rax)
  0x00007fb547da9dd0: jmpq   0x00007fb547da9f89  ;   {no_reloc}
  0x00007fb547da9dd5: add    %al,(%rax)
  0x00007fb547da9dd7: add    %al,(%rax)
  0x00007fb547da9dd9: add    %ah,0xf(%rsi)
  0x00007fb547da9ddc: (bad)  
  0x00007fb547da9ddd: add    %r8b,(%rax)
  0x00007fb547da9de0: jmpq   0x00007fb547da9fa3  ; implicit exception: dispatches to 0x00007fb547da9f93
  0x00007fb547da9de5: nop
  0x00007fb547da9de6: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 94)

  0x00007fb547da9dea: add    $0x30,%rsp
  0x00007fb547da9dee: pop    %rbp
  0x00007fb547da9def: mov    0x108(%r15),%r10
  0x00007fb547da9df6: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da9df9: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@115 (line 94)

  0x00007fb547da9dfa: nopw   0x0(%rax,%rax,1)
  0x00007fb547da9e00: jmpq   0x00007fb547daa011  ;   {no_reloc}
  0x00007fb547da9e05: add    %al,(%rax)
  0x00007fb547da9e07: add    %al,(%rax)
  0x00007fb547da9e09: add    %ah,0xf(%rsi)
  0x00007fb547da9e0c: (bad)  
  0x00007fb547da9e0d: add    %r8b,(%rax)
  0x00007fb547da9e10: jmpq   0x00007fb547daa02b  ; implicit exception: dispatches to 0x00007fb547daa01b
  0x00007fb547da9e15: nop
  0x00007fb547da9e16: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 96)

  0x00007fb547da9e1a: add    $0x30,%rsp
  0x00007fb547da9e1e: pop    %rbp
  0x00007fb547da9e1f: mov    0x108(%r15),%r10
  0x00007fb547da9e26: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da9e29: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@119 (line 96)

  0x00007fb547da9e2a: nopw   0x0(%rax,%rax,1)
  0x00007fb547da9e30: jmpq   0x00007fb547daa099  ;   {no_reloc}
  0x00007fb547da9e35: add    %al,(%rax)
  0x00007fb547da9e37: add    %al,(%rax)
  0x00007fb547da9e39: add    %ah,0xf(%rsi)
  0x00007fb547da9e3c: (bad)  
  0x00007fb547da9e3d: add    %r8b,(%rax)
  0x00007fb547da9e40: jmpq   0x00007fb547daa0b3  ; implicit exception: dispatches to 0x00007fb547daa0a3
  0x00007fb547da9e45: nop
  0x00007fb547da9e46: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 91)

  0x00007fb547da9e4a: add    $0x30,%rsp
  0x00007fb547da9e4e: pop    %rbp
  0x00007fb547da9e4f: mov    0x108(%r15),%r10
  0x00007fb547da9e56: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da9e59: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@111 (line 91)

  0x00007fb547da9e5a: nopw   0x0(%rax,%rax,1)
  0x00007fb547da9e60: jmpq   0x00007fb547daa121  ;   {no_reloc}
  0x00007fb547da9e65: add    %al,(%rax)
  0x00007fb547da9e67: add    %al,(%rax)
  0x00007fb547da9e69: add    %ah,0xf(%rsi)
  0x00007fb547da9e6c: (bad)  
  0x00007fb547da9e6d: add    %r8b,(%rax)
  0x00007fb547da9e70: jmpq   0x00007fb547daa13b  ; implicit exception: dispatches to 0x00007fb547daa12b
  0x00007fb547da9e75: nop
  0x00007fb547da9e76: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 89)

  0x00007fb547da9e7a: add    $0x30,%rsp
  0x00007fb547da9e7e: pop    %rbp
  0x00007fb547da9e7f: mov    0x108(%r15),%r10
  0x00007fb547da9e86: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da9e89: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@107 (line 89)

  0x00007fb547da9e8a: nopw   0x0(%rax,%rax,1)
  0x00007fb547da9e90: jmpq   0x00007fb547daa1a9  ;   {no_reloc}
  0x00007fb547da9e95: add    %al,(%rax)
  0x00007fb547da9e97: add    %al,(%rax)
  0x00007fb547da9e99: add    %ah,0xf(%rsi)
  0x00007fb547da9e9c: (bad)  
  0x00007fb547da9e9d: add    %r8b,(%rax)
  0x00007fb547da9ea0: jmpq   0x00007fb547daa1c3  ; implicit exception: dispatches to 0x00007fb547daa1b3
  0x00007fb547da9ea5: nop
  0x00007fb547da9ea6: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 87)

  0x00007fb547da9eaa: add    $0x30,%rsp
  0x00007fb547da9eae: pop    %rbp
  0x00007fb547da9eaf: mov    0x108(%r15),%r10
  0x00007fb547da9eb6: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da9eb9: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@103 (line 87)

  0x00007fb547da9eba: nopw   0x0(%rax,%rax,1)
  0x00007fb547da9ec0: jmpq   0x00007fb547daa231  ;   {no_reloc}
  0x00007fb547da9ec5: add    %al,(%rax)
  0x00007fb547da9ec7: add    %al,(%rax)
  0x00007fb547da9ec9: add    %ah,0xf(%rsi)
  0x00007fb547da9ecc: (bad)  
  0x00007fb547da9ecd: add    %r8b,(%rax)
  0x00007fb547da9ed0: jmpq   0x00007fb547daa24b  ; implicit exception: dispatches to 0x00007fb547daa23b
  0x00007fb547da9ed5: nop
  0x00007fb547da9ed6: shl    $0x3,%rax          ;*getstatic instance {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 85)

  0x00007fb547da9eda: add    $0x30,%rsp
  0x00007fb547da9ede: pop    %rbp
  0x00007fb547da9edf: mov    0x108(%r15),%r10
  0x00007fb547da9ee6: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da9ee9: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@99 (line 85)

  0x00007fb547da9eea: movabs $0x62d821df8,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;{0x000000062d821df8})}
  0x00007fb547da9ef4: add    $0x30,%rsp
  0x00007fb547da9ef8: pop    %rbp
  0x00007fb547da9ef9: mov    0x108(%r15),%r10
  0x00007fb547da9f00: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547da9f03: retq   
  0x00007fb547da9f04: movabs $0x7fb52cea3318,%r10  ;   {metadata({method} {0x00007fb52cea3318} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007fb547da9f0e: mov    %r10,0x8(%rsp)
  0x00007fb547da9f13: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547da9f1b: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 80)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547da9f20: jmpq   0x00007fb547da9bd4
  0x00007fb547da9f25: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547da9f2f: push   %rax
  0x00007fb547da9f30: push   %rbx
  0x00007fb547da9f31: mov    0x50(%rax),%rbx
  0x00007fb547da9f35: push   %rdi
  0x00007fb547da9f36: push   %rsi
  0x00007fb547da9f37: push   %rdx
  0x00007fb547da9f38: push   %rcx
  0x00007fb547da9f39: push   %r8
  0x00007fb547da9f3b: push   %r9
  0x00007fb547da9f3d: push   %r10
  0x00007fb547da9f3f: push   %r11
  0x00007fb547da9f41: test   $0xf,%esp
  0x00007fb547da9f47: je     0x00007fb547da9f5f
  0x00007fb547da9f4d: sub    $0x8,%rsp
  0x00007fb547da9f51: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547da9f56: add    $0x8,%rsp
  0x00007fb547da9f5a: jmpq   0x00007fb547da9f64
  0x00007fb547da9f5f: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547da9f64: pop    %r11
  0x00007fb547da9f66: pop    %r10
  0x00007fb547da9f68: pop    %r9
  0x00007fb547da9f6a: pop    %r8
  0x00007fb547da9f6c: pop    %rcx
  0x00007fb547da9f6d: pop    %rdx
  0x00007fb547da9f6e: pop    %rsi
  0x00007fb547da9f6f: pop    %rdi
  0x00007fb547da9f70: cmp    0x140(%rbx),%rax
  0x00007fb547da9f77: pop    %rbx
  0x00007fb547da9f78: pop    %rax
  0x00007fb547da9f79: jne    0x00007fb547da9f89
  0x00007fb547da9f7f: jmpq   0x00007fb547da9dda
  0x00007fb547da9f84: mov    $0xa5a6400,%eax
  0x00007fb547da9f89: callq  0x00007fb5478f7500  ; ImmutableOopMap{}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 94)
                                                ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x00007fb547da9f8e: jmpq   0x00007fb547da9dd0
  0x00007fb547da9f93: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547da9f98: mov    0x0(%rax),%eax
  0x00007fb547da9f9e: mov    $0x6050b00,%eax
  0x00007fb547da9fa3: callq  0x00007fb5478f6c00  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@112 (line 94)
                                                ;   {runtime_call access_field_patching Runtime1 stub}
  0x00007fb547da9fa8: jmpq   0x00007fb547da9de0
  0x00007fb547da9fad: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547da9fb7: push   %rax
  0x00007fb547da9fb8: push   %rbx
  0x00007fb547da9fb9: mov    0x50(%rax),%rbx
  0x00007fb547da9fbd: push   %rdi
  0x00007fb547da9fbe: push   %rsi
  0x00007fb547da9fbf: push   %rdx
  0x00007fb547da9fc0: push   %rcx
  0x00007fb547da9fc1: push   %r8
  0x00007fb547da9fc3: push   %r9
  0x00007fb547da9fc5: push   %r10
  0x00007fb547da9fc7: push   %r11
  0x00007fb547da9fc9: test   $0xf,%esp
  0x00007fb547da9fcf: je     0x00007fb547da9fe7
  0x00007fb547da9fd5: sub    $0x8,%rsp
  0x00007fb547da9fd9: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547da9fde: add    $0x8,%rsp
  0x00007fb547da9fe2: jmpq   0x00007fb547da9fec
  0x00007fb547da9fe7: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547da9fec: pop    %r11
  0x00007fb547da9fee: pop    %r10
  0x00007fb547da9ff0: pop    %r9
  0x00007fb547da9ff2: pop    %r8
  0x00007fb547da9ff4: pop    %rcx
  0x00007fb547da9ff5: pop    %rdx
  0x00007fb547da9ff6: pop    %rsi
  0x00007fb547da9ff7: pop    %rdi
  0x00007fb547da9ff8: cmp    0x140(%rbx),%rax
  0x00007fb547da9fff: pop    %rbx
  0x00007fb547daa000: pop    %rax
  0x00007fb547daa001: jne    0x00007fb547daa011
  0x00007fb547daa007: jmpq   0x00007fb547da9e0a
  0x00007fb547daa00c: mov    $0xa5a6400,%eax
  0x00007fb547daa011: callq  0x00007fb5478f7500  ; ImmutableOopMap{}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 96)
                                                ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x00007fb547daa016: jmpq   0x00007fb547da9e00
  0x00007fb547daa01b: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 96)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547daa020: mov    0x0(%rax),%eax
  0x00007fb547daa026: mov    $0x6050b00,%eax
  0x00007fb547daa02b: callq  0x00007fb5478f6c00  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@116 (line 96)
                                                ;   {runtime_call access_field_patching Runtime1 stub}
  0x00007fb547daa030: jmpq   0x00007fb547da9e10
  0x00007fb547daa035: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547daa03f: push   %rax
  0x00007fb547daa040: push   %rbx
  0x00007fb547daa041: mov    0x50(%rax),%rbx
  0x00007fb547daa045: push   %rdi
  0x00007fb547daa046: push   %rsi
  0x00007fb547daa047: push   %rdx
  0x00007fb547daa048: push   %rcx
  0x00007fb547daa049: push   %r8
  0x00007fb547daa04b: push   %r9
  0x00007fb547daa04d: push   %r10
  0x00007fb547daa04f: push   %r11
  0x00007fb547daa051: test   $0xf,%esp
  0x00007fb547daa057: je     0x00007fb547daa06f
  0x00007fb547daa05d: sub    $0x8,%rsp
  0x00007fb547daa061: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547daa066: add    $0x8,%rsp
  0x00007fb547daa06a: jmpq   0x00007fb547daa074
  0x00007fb547daa06f: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547daa074: pop    %r11
  0x00007fb547daa076: pop    %r10
  0x00007fb547daa078: pop    %r9
  0x00007fb547daa07a: pop    %r8
  0x00007fb547daa07c: pop    %rcx
  0x00007fb547daa07d: pop    %rdx
  0x00007fb547daa07e: pop    %rsi
  0x00007fb547daa07f: pop    %rdi
  0x00007fb547daa080: cmp    0x140(%rbx),%rax
  0x00007fb547daa087: pop    %rbx
  0x00007fb547daa088: pop    %rax
  0x00007fb547daa089: jne    0x00007fb547daa099
  0x00007fb547daa08f: jmpq   0x00007fb547da9e3a
  0x00007fb547daa094: mov    $0xa5a6400,%eax
  0x00007fb547daa099: callq  0x00007fb5478f7500  ; ImmutableOopMap{}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 91)
                                                ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x00007fb547daa09e: jmpq   0x00007fb547da9e30
  0x00007fb547daa0a3: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 91)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547daa0a8: mov    0x0(%rax),%eax
  0x00007fb547daa0ae: mov    $0x6050b00,%eax
  0x00007fb547daa0b3: callq  0x00007fb5478f6c00  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@108 (line 91)
                                                ;   {runtime_call access_field_patching Runtime1 stub}
  0x00007fb547daa0b8: jmpq   0x00007fb547da9e40
  0x00007fb547daa0bd: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547daa0c7: push   %rax
  0x00007fb547daa0c8: push   %rbx
  0x00007fb547daa0c9: mov    0x50(%rax),%rbx
  0x00007fb547daa0cd: push   %rdi
  0x00007fb547daa0ce: push   %rsi
  0x00007fb547daa0cf: push   %rdx
  0x00007fb547daa0d0: push   %rcx
  0x00007fb547daa0d1: push   %r8
  0x00007fb547daa0d3: push   %r9
  0x00007fb547daa0d5: push   %r10
  0x00007fb547daa0d7: push   %r11
  0x00007fb547daa0d9: test   $0xf,%esp
  0x00007fb547daa0df: je     0x00007fb547daa0f7
  0x00007fb547daa0e5: sub    $0x8,%rsp
  0x00007fb547daa0e9: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547daa0ee: add    $0x8,%rsp
  0x00007fb547daa0f2: jmpq   0x00007fb547daa0fc
  0x00007fb547daa0f7: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547daa0fc: pop    %r11
  0x00007fb547daa0fe: pop    %r10
  0x00007fb547daa100: pop    %r9
  0x00007fb547daa102: pop    %r8
  0x00007fb547daa104: pop    %rcx
  0x00007fb547daa105: pop    %rdx
  0x00007fb547daa106: pop    %rsi
  0x00007fb547daa107: pop    %rdi
  0x00007fb547daa108: cmp    0x140(%rbx),%rax
  0x00007fb547daa10f: pop    %rbx
  0x00007fb547daa110: pop    %rax
  0x00007fb547daa111: jne    0x00007fb547daa121
  0x00007fb547daa117: jmpq   0x00007fb547da9e6a
  0x00007fb547daa11c: mov    $0xa5a6400,%eax
  0x00007fb547daa121: callq  0x00007fb5478f7500  ; ImmutableOopMap{}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 89)
                                                ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x00007fb547daa126: jmpq   0x00007fb547da9e60
  0x00007fb547daa12b: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 89)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547daa130: mov    0x0(%rax),%eax
  0x00007fb547daa136: mov    $0x6050b00,%eax
  0x00007fb547daa13b: callq  0x00007fb5478f6c00  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@104 (line 89)
                                                ;   {runtime_call access_field_patching Runtime1 stub}
  0x00007fb547daa140: jmpq   0x00007fb547da9e70
  0x00007fb547daa145: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547daa14f: push   %rax
  0x00007fb547daa150: push   %rbx
  0x00007fb547daa151: mov    0x50(%rax),%rbx
  0x00007fb547daa155: push   %rdi
  0x00007fb547daa156: push   %rsi
  0x00007fb547daa157: push   %rdx
  0x00007fb547daa158: push   %rcx
  0x00007fb547daa159: push   %r8
  0x00007fb547daa15b: push   %r9
  0x00007fb547daa15d: push   %r10
  0x00007fb547daa15f: push   %r11
  0x00007fb547daa161: test   $0xf,%esp
  0x00007fb547daa167: je     0x00007fb547daa17f
  0x00007fb547daa16d: sub    $0x8,%rsp
  0x00007fb547daa171: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547daa176: add    $0x8,%rsp
  0x00007fb547daa17a: jmpq   0x00007fb547daa184
  0x00007fb547daa17f: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547daa184: pop    %r11
  0x00007fb547daa186: pop    %r10
  0x00007fb547daa188: pop    %r9
  0x00007fb547daa18a: pop    %r8
  0x00007fb547daa18c: pop    %rcx
  0x00007fb547daa18d: pop    %rdx
  0x00007fb547daa18e: pop    %rsi
  0x00007fb547daa18f: pop    %rdi
  0x00007fb547daa190: cmp    0x140(%rbx),%rax
  0x00007fb547daa197: pop    %rbx
  0x00007fb547daa198: pop    %rax
  0x00007fb547daa199: jne    0x00007fb547daa1a9
  0x00007fb547daa19f: jmpq   0x00007fb547da9e9a
  0x00007fb547daa1a4: mov    $0xa5a6400,%eax
  0x00007fb547daa1a9: callq  0x00007fb5478f7500  ; ImmutableOopMap{}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 87)
                                                ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x00007fb547daa1ae: jmpq   0x00007fb547da9e90
  0x00007fb547daa1b3: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 87)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547daa1b8: mov    0x0(%rax),%eax
  0x00007fb547daa1be: mov    $0x6050b00,%eax
  0x00007fb547daa1c3: callq  0x00007fb5478f6c00  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@100 (line 87)
                                                ;   {runtime_call access_field_patching Runtime1 stub}
  0x00007fb547daa1c8: jmpq   0x00007fb547da9ea0
  0x00007fb547daa1cd: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547daa1d7: push   %rax
  0x00007fb547daa1d8: push   %rbx
  0x00007fb547daa1d9: mov    0x50(%rax),%rbx
  0x00007fb547daa1dd: push   %rdi
  0x00007fb547daa1de: push   %rsi
  0x00007fb547daa1df: push   %rdx
  0x00007fb547daa1e0: push   %rcx
  0x00007fb547daa1e1: push   %r8
  0x00007fb547daa1e3: push   %r9
  0x00007fb547daa1e5: push   %r10
  0x00007fb547daa1e7: push   %r11
  0x00007fb547daa1e9: test   $0xf,%esp
  0x00007fb547daa1ef: je     0x00007fb547daa207
  0x00007fb547daa1f5: sub    $0x8,%rsp
  0x00007fb547daa1f9: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547daa1fe: add    $0x8,%rsp
  0x00007fb547daa202: jmpq   0x00007fb547daa20c
  0x00007fb547daa207: callq  0x00007fb564f66610  ;   {runtime_call Thread::current()}
  0x00007fb547daa20c: pop    %r11
  0x00007fb547daa20e: pop    %r10
  0x00007fb547daa210: pop    %r9
  0x00007fb547daa212: pop    %r8
  0x00007fb547daa214: pop    %rcx
  0x00007fb547daa215: pop    %rdx
  0x00007fb547daa216: pop    %rsi
  0x00007fb547daa217: pop    %rdi
  0x00007fb547daa218: cmp    0x140(%rbx),%rax
  0x00007fb547daa21f: pop    %rbx
  0x00007fb547daa220: pop    %rax
  0x00007fb547daa221: jne    0x00007fb547daa231
  0x00007fb547daa227: jmpq   0x00007fb547da9eca
  0x00007fb547daa22c: mov    $0xa5a6400,%eax
  0x00007fb547daa231: callq  0x00007fb5478f7500  ; ImmutableOopMap{}
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 85)
                                                ;   {runtime_call load_mirror_patching Runtime1 stub}
  0x00007fb547daa236: jmpq   0x00007fb547da9ec0
  0x00007fb547daa23b: callq  0x00007fb5478f3020  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 85)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547daa240: mov    0x0(%rax),%eax
  0x00007fb547daa246: mov    $0x6050b00,%eax
  0x00007fb547daa24b: callq  0x00007fb5478f6c00  ; ImmutableOopMap{rax=Oop }
                                                ;*getstatic instance {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@96 (line 85)
                                                ;   {runtime_call access_field_patching Runtime1 stub}
  0x00007fb547daa250: jmpq   0x00007fb547da9ed0
  0x00007fb547daa255: nop
  0x00007fb547daa256: nop
  0x00007fb547daa257: mov    0x440(%r15),%rax
  0x00007fb547daa25e: movabs $0x0,%r10
  0x00007fb547daa268: mov    %r10,0x440(%r15)
  0x00007fb547daa26f: movabs $0x0,%r10
  0x00007fb547daa279: mov    %r10,0x448(%r15)
  0x00007fb547daa280: add    $0x30,%rsp
  0x00007fb547daa284: pop    %rbp
  0x00007fb547daa285: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547daa28a: hlt    
  0x00007fb547daa28b: hlt    
  0x00007fb547daa28c: hlt    
  0x00007fb547daa28d: hlt    
  0x00007fb547daa28e: hlt    
  0x00007fb547daa28f: hlt    
  0x00007fb547daa290: hlt    
  0x00007fb547daa291: hlt    
  0x00007fb547daa292: hlt    
  0x00007fb547daa293: hlt    
  0x00007fb547daa294: hlt    
  0x00007fb547daa295: hlt    
  0x00007fb547daa296: hlt    
  0x00007fb547daa297: hlt    
  0x00007fb547daa298: hlt    
  0x00007fb547daa299: hlt    
  0x00007fb547daa29a: hlt    
  0x00007fb547daa29b: hlt    
  0x00007fb547daa29c: hlt    
  0x00007fb547daa29d: hlt    
  0x00007fb547daa29e: hlt    
  0x00007fb547daa29f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547daa2a0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547daa2a5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547daa2af: and    $0xfffffffffffffff0,%rsp
  0x00007fb547daa2b3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547daa2b8: hlt    
[Deopt Handler Code]
  0x00007fb547daa2b9: movabs $0x7fb547daa2b9,%r10  ;   {section_word}
  0x00007fb547daa2c3: push   %r10
  0x00007fb547daa2c5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547daa2ca: hlt    
  0x00007fb547daa2cb: hlt    
  0x00007fb547daa2cc: hlt    
  0x00007fb547daa2cd: hlt    
  0x00007fb547daa2ce: hlt    
  0x00007fb547daa2cf: hlt    

ImmutableOopMap{}pc offsets: 896 1006 
ImmutableOopMap{rax=Oop }pc offsets: 1016 1032 
ImmutableOopMap{}pc offsets: 1142 
ImmutableOopMap{rax=Oop }pc offsets: 1152 1168 
ImmutableOopMap{}pc offsets: 1278 
ImmutableOopMap{rax=Oop }pc offsets: 1288 1304 
ImmutableOopMap{}pc offsets: 1414 
ImmutableOopMap{rax=Oop }pc offsets: 1424 1440 
ImmutableOopMap{}pc offsets: 1550 
ImmutableOopMap{rax=Oop }pc offsets: 1560 1576 
ImmutableOopMap{}pc offsets: 1686 
ImmutableOopMap{rax=Oop }pc offsets: 1696 1712 </print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.915' address='0x00007fb54f2cda90'>
Compiled method (nm)     915   85     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLL)L (native)
 total in heap  [0x00007fb54f2cda90,0x00007fb54f2cdc48] = 440
 relocation     [0x00007fb54f2cdc08,0x00007fb54f2cdc10] = 8
 main code      [0x00007fb54f2cdc20,0x00007fb54f2cdc48] = 40
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2cdc20, 0x00007fb54f2cdc48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1481f0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x00007fb54f2cdc20: mov    0x10(%rsp),%rbx
  0x00007fb54f2cdc25: cmp    (%rsi),%rax
  0x00007fb54f2cdc28: mov    0x24(%rbx),%ebx
  0x00007fb54f2cdc2b: shl    $0x3,%rbx
  0x00007fb54f2cdc2f: mov    0x10(%rbx),%rbx
  0x00007fb54f2cdc33: test   %rbx,%rbx
  0x00007fb54f2cdc36: je     0x00007fb54f2cdc3f
  0x00007fb54f2cdc3c: jmpq   *0x38(%rbx)
  0x00007fb54f2cdc3f: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cdc44: hlt    
  0x00007fb54f2cdc45: hlt    
  0x00007fb54f2cdc46: hlt    
  0x00007fb54f2cdc47: hlt    
</print_native_nmethod>
<nmethod compile_id='85' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cdc20' size='440' address='0x00007fb54f2cda90' relocation_offset='376' consts_offset='440' insts_offset='400' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.916'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2cdc20, 0x00007fb54f2cdc48]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1481f0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x00007fb54f2cdc20: mov    0x10(%rsp),%rbx
  0x00007fb54f2cdc25: cmp    (%rsi),%rax
  0x00007fb54f2cdc28: mov    0x24(%rbx),%ebx
  0x00007fb54f2cdc2b: shl    $0x3,%rbx
  0x00007fb54f2cdc2f: mov    0x10(%rbx),%rbx
  0x00007fb54f2cdc33: test   %rbx,%rbx
  0x00007fb54f2cdc36: je     0x00007fb54f2cdc3f
  0x00007fb54f2cdc3c: jmpq   *0x38(%rbx)
  0x00007fb54f2cdc3f: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cdc44: hlt    
  0x00007fb54f2cdc45: hlt    
  0x00007fb54f2cdc46: hlt    
  0x00007fb54f2cdc47: hlt    
<writer thread='1329936'/>
<nmethod compile_id='83' compiler='c1' level='1' entry='0x00007fb54f2cdf40' size='704' address='0x00007fb54f2cdd90' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='133' iicount='133' stamp='0.916'/>
<writer thread='1329923'/>
<task_queued compile_id='86' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='256' backedge_count='4' iicount='256' level='3' stamp='0.916' comment='tiered' hot_count='256'/>
<writer thread='1329936'/>
<print_nmethod stamp='0.916'>
Compiled method (c1)     916   83       1       java.lang.Class::getClassLoader0 (5 bytes)
 total in heap  [0x00007fb54f2cdd90,0x00007fb54f2ce050] = 704
 relocation     [0x00007fb54f2cdf08,0x00007fb54f2cdf28] = 32
 main code      [0x00007fb54f2cdf40,0x00007fb54f2cdfc0] = 128
 stub code      [0x00007fb54f2cdfc0,0x00007fb54f2cdff0] = 48
 metadata       [0x00007fb54f2cdff0,0x00007fb54f2cdff8] = 8
 scopes data    [0x00007fb54f2cdff8,0x00007fb54f2ce008] = 16
 scopes pcs     [0x00007fb54f2ce008,0x00007fb54f2ce048] = 64
 dependencies   [0x00007fb54f2ce048,0x00007fb54f2ce050] = 8
----------------------------------------------------------------------
java/lang/Class.getClassLoader0()Ljava/lang/ClassLoader;  [0x00007fb54f2cdf40, 0x00007fb54f2cdff0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52ccbfda0} &apos;getClassLoader0&apos; &apos;()Ljava/lang/ClassLoader;&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cdf40: mov    0x8(%rsi),%r10d
  0x00007fb54f2cdf44: movabs $0x800000000,%r12
  0x00007fb54f2cdf4e: add    %r12,%r10
  0x00007fb54f2cdf51: xor    %r12,%r12
  0x00007fb54f2cdf54: cmp    %rax,%r10
  0x00007fb54f2cdf57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cdf5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cdf60: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cdf67: push   %rbp
  0x00007fb54f2cdf68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getClassLoader0@0 (line 836)

  0x00007fb54f2cdf6c: mov    0x1c(%rsi),%eax
  0x00007fb54f2cdf6f: shl    $0x3,%rax          ;*getfield classLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getClassLoader0@1 (line 836)

  0x00007fb54f2cdf73: add    $0x30,%rsp
  0x00007fb54f2cdf77: pop    %rbp
  0x00007fb54f2cdf78: mov    0x108(%r15),%r10
  0x00007fb54f2cdf7f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cdf82: retq   
  0x00007fb54f2cdf83: nop
  0x00007fb54f2cdf84: nop
  0x00007fb54f2cdf85: mov    0x440(%r15),%rax
  0x00007fb54f2cdf8c: movabs $0x0,%r10
  0x00007fb54f2cdf96: mov    %r10,0x440(%r15)
  0x00007fb54f2cdf9d: movabs $0x0,%r10
  0x00007fb54f2cdfa7: mov    %r10,0x448(%r15)
  0x00007fb54f2cdfae: add    $0x30,%rsp
  0x00007fb54f2cdfb2: pop    %rbp
  0x00007fb54f2cdfb3: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cdfb8: hlt    
  0x00007fb54f2cdfb9: hlt    
  0x00007fb54f2cdfba: hlt    
  0x00007fb54f2cdfbb: hlt    
  0x00007fb54f2cdfbc: hlt    
  0x00007fb54f2cdfbd: hlt    
  0x00007fb54f2cdfbe: hlt    
  0x00007fb54f2cdfbf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cdfc0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cdfc5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cdfcf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cdfd3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cdfd8: hlt    
[Deopt Handler Code]
  0x00007fb54f2cdfd9: movabs $0x7fb54f2cdfd9,%r10  ;   {section_word}
  0x00007fb54f2cdfe3: push   %r10
  0x00007fb54f2cdfe5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cdfea: hlt    
  0x00007fb54f2cdfeb: hlt    
  0x00007fb54f2cdfec: hlt    
  0x00007fb54f2cdfed: hlt    
  0x00007fb54f2cdfee: hlt    
  0x00007fb54f2cdfef: hlt    
</print_nmethod>
<nmethod compile_id='86' compiler='c1' level='3' entry='0x00007fb547daa880' size='5784' address='0x00007fb547daa610' relocation_offset='376' insts_offset='624' stub_offset='3888' scopes_data_offset='4040' scopes_pcs_offset='4648' dependencies_offset='5720' nul_chk_table_offset='5728' oops_offset='4000' metadata_offset='4008' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='261' backedge_count='4' iicount='261' stamp='0.919'/>
<print_nmethod stamp='0.919'>
Compiled method (c1)     918   86       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
 total in heap  [0x00007fb547daa610,0x00007fb547dabca8] = 5784
 relocation     [0x00007fb547daa788,0x00007fb547daa868] = 224
 main code      [0x00007fb547daa880,0x00007fb547dab540] = 3264
 stub code      [0x00007fb547dab540,0x00007fb547dab5b0] = 112
 oops           [0x00007fb547dab5b0,0x00007fb547dab5b8] = 8
 metadata       [0x00007fb547dab5b8,0x00007fb547dab5d8] = 32
 scopes data    [0x00007fb547dab5d8,0x00007fb547dab838] = 608
 scopes pcs     [0x00007fb547dab838,0x00007fb547dabc68] = 1072
 dependencies   [0x00007fb547dabc68,0x00007fb547dabc70] = 8
 nul chk table  [0x00007fb547dabc70,0x00007fb547dabca8] = 56
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;  [0x00007fb547daa880, 0x00007fb547dab5b0]  3376 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0xc0]  (sp of caller)
  0x00007fb547daa880: mov    0x8(%rsi),%r10d
  0x00007fb547daa884: movabs $0x800000000,%r12
  0x00007fb547daa88e: add    %r12,%r10
  0x00007fb547daa891: xor    %r12,%r12
  0x00007fb547daa894: cmp    %rax,%r10
  0x00007fb547daa897: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547daa89d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547daa8a0: mov    %eax,-0x14000(%rsp)
  0x00007fb547daa8a7: push   %rbp
  0x00007fb547daa8a8: sub    $0xb0,%rsp
  0x00007fb547daa8af: mov    %rdx,0x88(%rsp)
  0x00007fb547daa8b7: movabs $0x7fb52d169ae0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daa8c1: mov    0x100(%rdi),%ebx
  0x00007fb547daa8c7: add    $0x8,%ebx
  0x00007fb547daa8ca: mov    %ebx,0x100(%rdi)
  0x00007fb547daa8d0: and    $0x1ff8,%ebx
  0x00007fb547daa8d6: cmp    $0x0,%ebx
  0x00007fb547daa8d9: je     0x00007fb547dab3ce  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@0 (line 936)

  0x00007fb547daa8df: mov    %rsi,0x80(%rsp)
  0x00007fb547daa8e7: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007fb547dab3ef
  0x00007fb547daa8ea: mov    %rdx,%rdi
  0x00007fb547daa8ed: movabs $0x7fb52d169ae0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daa8f7: mov    0x8(%rdi),%edi
  0x00007fb547daa8fa: movabs $0x800000000,%r12
  0x00007fb547daa904: add    %r12,%rdi
  0x00007fb547daa907: xor    %r12,%r12
  0x00007fb547daa90a: cmp    0x150(%rbx),%rdi
  0x00007fb547daa911: jne    0x00007fb547daa920
  0x00007fb547daa913: addq   $0x1,0x158(%rbx)
  0x00007fb547daa91b: jmpq   0x00007fb547daa986
  0x00007fb547daa920: cmp    0x160(%rbx),%rdi
  0x00007fb547daa927: jne    0x00007fb547daa936
  0x00007fb547daa929: addq   $0x1,0x168(%rbx)
  0x00007fb547daa931: jmpq   0x00007fb547daa986
  0x00007fb547daa936: cmpq   $0x0,0x150(%rbx)
  0x00007fb547daa941: jne    0x00007fb547daa95a
  0x00007fb547daa943: mov    %rdi,0x150(%rbx)
  0x00007fb547daa94a: movq   $0x1,0x158(%rbx)
  0x00007fb547daa955: jmpq   0x00007fb547daa986
  0x00007fb547daa95a: cmpq   $0x0,0x160(%rbx)
  0x00007fb547daa965: jne    0x00007fb547daa97e
  0x00007fb547daa967: mov    %rdi,0x160(%rbx)
  0x00007fb547daa96e: movq   $0x1,0x168(%rbx)
  0x00007fb547daa979: jmpq   0x00007fb547daa986
  0x00007fb547daa97e: addq   $0x1,0x140(%rbx)
  0x00007fb547daa986: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)

  0x00007fb547daa989: nopl   0x0(%rax)
  0x00007fb547daa98d: movabs $0xffffffffffffffff,%rax
  0x00007fb547daa997: callq  0x00007fb54784aa80  ; ImmutableOopMap{[128]=Oop [136]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                ;   {virtual_call}
  0x00007fb547daa99c: movabs $0x7fb52d169ae0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daa9a6: addq   $0x1,0x178(%rcx)
  0x00007fb547daa9ae: movabs $0x7fb52cf4f270,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde2d28} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daa9b8: mov    0x100(%rcx),%edx
  0x00007fb547daa9be: add    $0x8,%edx
  0x00007fb547daa9c1: mov    %edx,0x100(%rcx)
  0x00007fb547daa9c7: and    $0x7ffff8,%edx
  0x00007fb547daa9cd: cmp    $0x0,%edx
  0x00007fb547daa9d0: je     0x00007fb547dab3f4
  0x00007fb547daa9d6: mov    %rax,%rcx
  0x00007fb547daa9d9: shr    $0x10,%ecx
  0x00007fb547daa9dc: xor    %rax,%rcx
  0x00007fb547daa9df: and    $0x7fffffff,%ecx
  0x00007fb547daa9e5: mov    %ecx,0x98(%rsp)
  0x00007fb547daa9ec: mov    0x80(%rsp),%rsi
  0x00007fb547daa9f4: mov    0x28(%rsi),%edx
  0x00007fb547daa9f7: shl    $0x3,%rdx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@10 (line 937)

  0x00007fb547daa9fb: cmp    $0x0,%rdx
  0x00007fb547daa9ff: movabs $0x7fb52d169ae0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daaa09: movabs $0x188,%rdi
  0x00007fb547daaa13: je     0x00007fb547daaa23
  0x00007fb547daaa19: movabs $0x198,%rdi
  0x00007fb547daaa23: mov    (%rsi,%rdi,1),%rbx
  0x00007fb547daaa27: lea    0x1(%rbx),%rbx
  0x00007fb547daaa2b: mov    %rbx,(%rsi,%rdi,1)
  0x00007fb547daaa2f: je     0x00007fb547dab37d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@15 (line 937)

  0x00007fb547daaa35: mov    0xc(%rdx),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                ; implicit exception: dispatches to 0x00007fb547dab415
  0x00007fb547daaa38: cmp    $0x0,%esi
  0x00007fb547daaa3b: movabs $0x7fb52d169ae0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daaa45: movabs $0x1a8,%rbx
  0x00007fb547daaa4f: jle    0x00007fb547daaa5f
  0x00007fb547daaa55: movabs $0x1b8,%rbx
  0x00007fb547daaa5f: mov    (%rdi,%rbx,1),%rax
  0x00007fb547daaa63: lea    0x1(%rax),%rax
  0x00007fb547daaa67: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547daaa6b: jle    0x00007fb547dab37d  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@23 (line 937)

  0x00007fb547daaa71: movabs $0x7fb52d169ae0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daaa7b: addq   $0x1,0x1c8(%rdi)
  0x00007fb547daaa83: dec    %esi
  0x00007fb547daaa85: and    %rcx,%rsi
  0x00007fb547daaa88: movabs $0x7fb52cebbd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daaa92: mov    0x100(%rdi),%ebx
  0x00007fb547daaa98: add    $0x8,%ebx
  0x00007fb547daaa9b: mov    %ebx,0x100(%rdi)
  0x00007fb547daaaa1: and    $0x7ffff8,%ebx
  0x00007fb547daaaa7: cmp    $0x0,%ebx
  0x00007fb547daaaaa: je     0x00007fb547dab41a
  0x00007fb547daaab0: movabs $0x7fb52cebbd60,%rdi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daaaba: lea    0x178(%rdi),%rdi
  0x00007fb547daaac1: mov    %rdx,%rbx
  0x00007fb547daaac4: mov    0x8(%rbx),%ebx
  0x00007fb547daaac7: movabs $0x800000000,%r12
  0x00007fb547daaad1: add    %r12,%rbx
  0x00007fb547daaad4: xor    %r12,%r12
  0x00007fb547daaad7: xor    0x8(%rdi),%rbx
  0x00007fb547daaadb: test   $0xfffffffffffffffc,%rbx
  0x00007fb547daaae2: je     0x00007fb547daaaf5
  0x00007fb547daaae4: test   $0x2,%rbx
  0x00007fb547daaaeb: jne    0x00007fb547daaaf5
  0x00007fb547daaaed: orq    $0x2,0x8(%rdi)
  0x00007fb547daaaf5: movabs $0x62d808180,%rdi  ;   {oop(a &apos;jdk/internal/misc/Unsafe&apos;{0x000000062d808180})}
  0x00007fb547daaaff: movabs $0x7fb52cebbd60,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daab09: addq   $0x1,0x140(%rbx)
  0x00007fb547daab11: movslq %esi,%rsi
  0x00007fb547daab14: mov    %rcx,%rdi
  0x00007fb547daab17: mov    $0x2,%ecx
  0x00007fb547daab1c: shl    %cl,%rsi
  0x00007fb547daab1f: movabs $0x10,%r10
  0x00007fb547daab29: add    %r10,%rsi
  0x00007fb547daab2c: movabs $0x7fb52cebc348,%rbx  ;   {metadata(method data for {method} {0x00007fb52cd68f60} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb547daab36: mov    0x100(%rbx),%eax
  0x00007fb547daab3c: add    $0x8,%eax
  0x00007fb547daab3f: mov    %eax,0x100(%rbx)
  0x00007fb547daab45: and    $0x7ffff8,%eax
  0x00007fb547daab4b: cmp    $0x0,%eax
  0x00007fb547daab4e: je     0x00007fb547dab43b
  0x00007fb547daab54: mov    (%rdx,%rsi,1),%edx
  0x00007fb547daab57: shl    $0x3,%rdx
  0x00007fb547daab5b: movsbl 0x30(%r15),%esi
  0x00007fb547daab60: cmp    $0x0,%esi
  0x00007fb547daab63: jne    0x00007fb547dab45c
  0x00007fb547daab69: cmp    $0x0,%rdx
  0x00007fb547daab6d: jne    0x00007fb547daab85
  0x00007fb547daab6f: movabs $0x7fb52cebbd60,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daab79: orb    $0x1,0x189(%rsi)
  0x00007fb547daab80: jmpq   0x00007fb547daac5e
  0x00007fb547daab85: movabs $0x80001a9e8,%rax  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00007fb547daab8f: mov    0x8(%rdx),%esi
  0x00007fb547daab92: movabs $0x800000000,%r12
  0x00007fb547daab9c: add    %r12,%rsi
  0x00007fb547daab9f: xor    %r12,%r12
  0x00007fb547daaba2: cmp    0x38(%rsi),%rax
  0x00007fb547daaba6: jne    0x00007fb547daac42
  0x00007fb547daabac: movabs $0x7fb52cebbd60,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daabb6: mov    0x8(%rdx),%eax
  0x00007fb547daabb9: movabs $0x800000000,%r12
  0x00007fb547daabc3: add    %r12,%rax
  0x00007fb547daabc6: xor    %r12,%r12
  0x00007fb547daabc9: cmp    0x1a0(%rsi),%rax
  0x00007fb547daabd0: jne    0x00007fb547daabdf
  0x00007fb547daabd2: addq   $0x1,0x1a8(%rsi)
  0x00007fb547daabda: jmpq   0x00007fb547daac5e
  0x00007fb547daabdf: cmp    0x1b0(%rsi),%rax
  0x00007fb547daabe6: jne    0x00007fb547daabf5
  0x00007fb547daabe8: addq   $0x1,0x1b8(%rsi)
  0x00007fb547daabf0: jmpq   0x00007fb547daac5e
  0x00007fb547daabf5: cmpq   $0x0,0x1a0(%rsi)
  0x00007fb547daac00: jne    0x00007fb547daac19
  0x00007fb547daac02: mov    %rax,0x1a0(%rsi)
  0x00007fb547daac09: movq   $0x1,0x1a8(%rsi)
  0x00007fb547daac14: jmpq   0x00007fb547daac5e
  0x00007fb547daac19: cmpq   $0x0,0x1b0(%rsi)
  0x00007fb547daac24: jne    0x00007fb547daac3d
  0x00007fb547daac26: mov    %rax,0x1b0(%rsi)
  0x00007fb547daac2d: movq   $0x1,0x1b8(%rsi)
  0x00007fb547daac38: jmpq   0x00007fb547daac5e
  0x00007fb547daac3d: jmpq   0x00007fb547daac5e
  0x00007fb547daac42: movabs $0x7fb52cebbd60,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daac4c: subq   $0x1,0x190(%rsi)
  0x00007fb547daac54: jmpq   0x00007fb547dab474
  0x00007fb547daac59: jmpq   0x00007fb547daac5e
  0x00007fb547daac5e: mov    %rdx,%rbx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)

  0x00007fb547daac61: cmp    $0x0,%rbx
  0x00007fb547daac65: movabs $0x7fb52d169ae0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daac6f: movabs $0x1d8,%rsi
  0x00007fb547daac79: je     0x00007fb547daac89
  0x00007fb547daac7f: movabs $0x1e8,%rsi
  0x00007fb547daac89: mov    (%rdx,%rsi,1),%rax
  0x00007fb547daac8d: lea    0x1(%rax),%rax
  0x00007fb547daac91: mov    %rax,(%rdx,%rsi,1)
  0x00007fb547daac95: je     0x00007fb547dab37d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@39 (line 938)

  0x00007fb547daac9b: mov    0xc(%rbx),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                ; implicit exception: dispatches to 0x00007fb547dab47d
  0x00007fb547daac9e: cmp    %edi,%esi
  0x00007fb547daaca0: movabs $0x7fb52d169ae0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daacaa: movabs $0x1f8,%rax
  0x00007fb547daacb4: jne    0x00007fb547daacc4
  0x00007fb547daacba: movabs $0x208,%rax
  0x00007fb547daacc4: mov    (%rdx,%rax,1),%rcx
  0x00007fb547daacc8: lea    0x1(%rcx),%rcx
  0x00007fb547daaccc: mov    %rcx,(%rdx,%rax,1)
  0x00007fb547daacd0: jne    0x00007fb547daae71  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@51 (line 939)

  0x00007fb547daacd6: mov    0x88(%rsp),%rdx
  0x00007fb547daacde: mov    0x10(%rbx),%esi
  0x00007fb547daace1: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@55 (line 940)

  0x00007fb547daace5: cmp    %rdx,%rsi
  0x00007fb547daace8: movabs $0x7fb52d169ae0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daacf2: movabs $0x218,%rcx
  0x00007fb547daacfc: je     0x00007fb547daad0c
  0x00007fb547daad02: movabs $0x228,%rcx
  0x00007fb547daad0c: mov    (%rax,%rcx,1),%r8
  0x00007fb547daad10: lea    0x1(%r8),%r8
  0x00007fb547daad14: mov    %r8,(%rax,%rcx,1)
  0x00007fb547daad18: je     0x00007fb547dab3b4  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@62 (line 940)

  0x00007fb547daad1e: cmp    $0x0,%rsi
  0x00007fb547daad22: movabs $0x7fb52d169ae0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daad2c: movabs $0x248,%rcx
  0x00007fb547daad36: jne    0x00007fb547daad46
  0x00007fb547daad3c: movabs $0x238,%rcx
  0x00007fb547daad46: mov    (%rax,%rcx,1),%r8
  0x00007fb547daad4a: lea    0x1(%r8),%r8
  0x00007fb547daad4e: mov    %r8,(%rax,%rcx,1)
  0x00007fb547daad52: jne    0x00007fb547daad60  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@67 (line 940)

  0x00007fb547daad58: mov    %rdi,%rcx
  0x00007fb547daad5b: jmpq   0x00007fb547daaed0  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007fb547daad60: mov    %rbx,0x90(%rsp)
  0x00007fb547daad68: mov    %rdx,%rdi
  0x00007fb547daad6b: movabs $0x7fb52d169ae0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daad75: mov    0x8(%rdi),%edi
  0x00007fb547daad78: movabs $0x800000000,%r12
  0x00007fb547daad82: add    %r12,%rdi
  0x00007fb547daad85: xor    %r12,%r12
  0x00007fb547daad88: cmp    0x268(%rax),%rdi
  0x00007fb547daad8f: jne    0x00007fb547daad9e
  0x00007fb547daad91: addq   $0x1,0x270(%rax)
  0x00007fb547daad99: jmpq   0x00007fb547daae04
  0x00007fb547daad9e: cmp    0x278(%rax),%rdi
  0x00007fb547daada5: jne    0x00007fb547daadb4
  0x00007fb547daada7: addq   $0x1,0x280(%rax)
  0x00007fb547daadaf: jmpq   0x00007fb547daae04
  0x00007fb547daadb4: cmpq   $0x0,0x268(%rax)
  0x00007fb547daadbf: jne    0x00007fb547daadd8
  0x00007fb547daadc1: mov    %rdi,0x268(%rax)
  0x00007fb547daadc8: movq   $0x1,0x270(%rax)
  0x00007fb547daadd3: jmpq   0x00007fb547daae04
  0x00007fb547daadd8: cmpq   $0x0,0x278(%rax)
  0x00007fb547daade3: jne    0x00007fb547daadfc
  0x00007fb547daade5: mov    %rdi,0x278(%rax)
  0x00007fb547daadec: movq   $0x1,0x280(%rax)
  0x00007fb547daadf7: jmpq   0x00007fb547daae04
  0x00007fb547daadfc: addq   $0x1,0x258(%rax)
  0x00007fb547daae04: mov    %rdx,%rdi
  0x00007fb547daae07: mov    %rsi,%rdx
  0x00007fb547daae0a: mov    %rdi,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)

  0x00007fb547daae0d: movabs $0xffffffffffffffff,%rax
  0x00007fb547daae17: callq  0x00007fb54784aa80  ; ImmutableOopMap{[136]=Oop [144]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)
                                                ;   {virtual_call}
  0x00007fb547daae1c: cmp    $0x0,%eax
  0x00007fb547daae1f: movabs $0x7fb52d169ae0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daae29: movabs $0x2a0,%rsi
  0x00007fb547daae33: jne    0x00007fb547daae43
  0x00007fb547daae39: movabs $0x290,%rsi
  0x00007fb547daae43: mov    (%rdx,%rsi,1),%rdi
  0x00007fb547daae47: lea    0x1(%rdi),%rdi
  0x00007fb547daae4b: mov    %rdi,(%rdx,%rsi,1)  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)

  0x00007fb547daae4f: mov    0x90(%rsp),%rbx    ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007fb547daae57: jne    0x00007fb547dab3b4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)

  0x00007fb547daae5d: mov    0x98(%rsp),%ecx
  0x00007fb547daae64: mov    0x88(%rsp),%rdx
  0x00007fb547daae6c: jmpq   0x00007fb547daaed0  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007fb547daae71: mov    %rbx,0x90(%rsp)
  0x00007fb547daae79: cmp    $0x0,%esi
  0x00007fb547daae7c: movabs $0x7fb52d169ae0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daae86: movabs $0x2c0,%rsi
  0x00007fb547daae90: jl     0x00007fb547daaea0
  0x00007fb547daae96: movabs $0x2b0,%rsi
  0x00007fb547daaea0: mov    (%rdx,%rsi,1),%rdi
  0x00007fb547daaea4: lea    0x1(%rdi),%rdi
  0x00007fb547daaea8: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb547daaeac: jl     0x00007fb547dab228  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@86 (line 943)

  0x00007fb547daaeb2: mov    0x90(%rsp),%rbx    ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007fb547daaeba: mov    0x98(%rsp),%ecx
  0x00007fb547daaec1: mov    0x88(%rsp),%rdx
  0x00007fb547daaec9: nopl   0x0(%rax)
  0x00007fb547daaed0: mov    0x18(%rbx),%edi    ; implicit exception: dispatches to 0x00007fb547dab482
  0x00007fb547daaed3: shl    $0x3,%rdi          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)

  0x00007fb547daaed7: cmp    $0x0,%rdi
  0x00007fb547daaedb: movabs $0x7fb52d169ae0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daaee5: movabs $0x340,%rbx
  0x00007fb547daaeef: je     0x00007fb547daaeff
  0x00007fb547daaef5: movabs $0x350,%rbx
  0x00007fb547daaeff: mov    (%rsi,%rbx,1),%rax
  0x00007fb547daaf03: lea    0x1(%rax),%rax
  0x00007fb547daaf07: mov    %rax,(%rsi,%rbx,1)
  0x00007fb547daaf0b: je     0x00007fb547dab37d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@118 (line 945)

  0x00007fb547daaf11: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                ; implicit exception: dispatches to 0x00007fb547dab487
  0x00007fb547daaf14: cmp    %ecx,%esi
  0x00007fb547daaf16: mov    $0x8,%ebx
  0x00007fb547daaf1b: jne    0x00007fb547daaf26
  0x00007fb547daaf21: mov    $0x0,%ebx
  0x00007fb547daaf26: movabs $0x7fb52d169ae0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daaf30: mov    0x104(%rax),%r8d
  0x00007fb547daaf37: add    %ebx,%r8d
  0x00007fb547daaf3a: mov    %r8d,0x104(%rax)
  0x00007fb547daaf41: cmp    $0x0,%ebx
  0x00007fb547daaf44: jne    0x00007fb547daaf50
  0x00007fb547daaf4a: mov    $0x8,%r8d
  0x00007fb547daaf50: and    $0xfff8,%r8d
  0x00007fb547daaf57: cmp    $0x0,%r8d
  0x00007fb547daaf5b: je     0x00007fb547dab48c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x00007fb547daaf61: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x00007fb547daaf68: test   %eax,(%r10)        ;   {poll}
  0x00007fb547daaf6b: cmp    %ecx,%esi
  0x00007fb547daaf6d: movabs $0x7fb52d169ae0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daaf77: movabs $0x360,%rbx
  0x00007fb547daaf81: jne    0x00007fb547daaf91
  0x00007fb547daaf87: movabs $0x370,%rbx
  0x00007fb547daaf91: mov    (%rsi,%rbx,1),%rax
  0x00007fb547daaf95: lea    0x1(%rax),%rax
  0x00007fb547daaf99: mov    %rax,(%rsi,%rbx,1)
  0x00007fb547daaf9d: jne    0x00007fb547dab1f7  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x00007fb547daafa3: mov    0x10(%rdi),%esi
  0x00007fb547daafa6: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@131 (line 946)

  0x00007fb547daafaa: cmp    %rdx,%rsi
  0x00007fb547daafad: movabs $0x7fb52d169ae0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547daafb7: movabs $0x380,%rax
  0x00007fb547daafc1: je     0x00007fb547daafd1
  0x00007fb547daafc7: movabs $0x390,%rax
  0x00007fb547daafd1: mov    (%rbx,%rax,1),%r8
  0x00007fb547daafd5: lea    0x1(%r8),%r8
  0x00007fb547daafd9: mov    %r8,(%rbx,%rax,1)
  0x00007fb547daafdd: je     0x00007fb547dab39a  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@138 (line 946)

  0x00007fb547daafe3: cmp    $0x0,%rsi
  0x00007fb547daafe7: mov    $0x8,%ebx
  0x00007fb547daafec: je     0x00007fb547daaff7
  0x00007fb547daaff2: mov    $0x0,%ebx
  0x00007fb547daaff7: movabs $0x7fb52d169ae0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab001: mov    0x104(%rax),%r8d
  0x00007fb547dab008: add    %ebx,%r8d
  0x00007fb547dab00b: mov    %r8d,0x104(%rax)
  0x00007fb547dab012: cmp    $0x0,%ebx
  0x00007fb547dab015: jne    0x00007fb547dab021
  0x00007fb547dab01b: mov    $0x8,%r8d
  0x00007fb547dab021: and    $0xfff8,%r8d
  0x00007fb547dab028: cmp    $0x0,%r8d
  0x00007fb547dab02c: je     0x00007fb547dab4ad  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x00007fb547dab032: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x00007fb547dab039: test   %eax,(%r10)        ;   {poll}
  0x00007fb547dab03c: cmp    $0x0,%rsi
  0x00007fb547dab040: movabs $0x7fb52d169ae0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab04a: movabs $0x3a0,%rax
  0x00007fb547dab054: je     0x00007fb547dab064
  0x00007fb547dab05a: movabs $0x3b0,%rax
  0x00007fb547dab064: mov    (%rbx,%rax,1),%r8
  0x00007fb547dab068: lea    0x1(%r8),%r8
  0x00007fb547dab06c: mov    %r8,(%rbx,%rax,1)
  0x00007fb547dab070: mov    %rdi,0xa0(%rsp)
  0x00007fb547dab078: je     0x00007fb547dab1db  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x00007fb547dab07e: mov    %rdx,%rbx
  0x00007fb547dab081: movabs $0x7fb52d169ae0,%rax  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab08b: mov    0x8(%rbx),%ebx
  0x00007fb547dab08e: movabs $0x800000000,%r12
  0x00007fb547dab098: add    %r12,%rbx
  0x00007fb547dab09b: xor    %r12,%r12
  0x00007fb547dab09e: cmp    0x3d0(%rax),%rbx
  0x00007fb547dab0a5: jne    0x00007fb547dab0b4
  0x00007fb547dab0a7: addq   $0x1,0x3d8(%rax)
  0x00007fb547dab0af: jmpq   0x00007fb547dab11a
  0x00007fb547dab0b4: cmp    0x3e0(%rax),%rbx
  0x00007fb547dab0bb: jne    0x00007fb547dab0ca
  0x00007fb547dab0bd: addq   $0x1,0x3e8(%rax)
  0x00007fb547dab0c5: jmpq   0x00007fb547dab11a
  0x00007fb547dab0ca: cmpq   $0x0,0x3d0(%rax)
  0x00007fb547dab0d5: jne    0x00007fb547dab0ee
  0x00007fb547dab0d7: mov    %rbx,0x3d0(%rax)
  0x00007fb547dab0de: movq   $0x1,0x3d8(%rax)
  0x00007fb547dab0e9: jmpq   0x00007fb547dab11a
  0x00007fb547dab0ee: cmpq   $0x0,0x3e0(%rax)
  0x00007fb547dab0f9: jne    0x00007fb547dab112
  0x00007fb547dab0fb: mov    %rbx,0x3e0(%rax)
  0x00007fb547dab102: movq   $0x1,0x3e8(%rax)
  0x00007fb547dab10d: jmpq   0x00007fb547dab11a
  0x00007fb547dab112: addq   $0x1,0x3c0(%rax)
  0x00007fb547dab11a: mov    %rdx,%rbx
  0x00007fb547dab11d: mov    %rsi,%rdx
  0x00007fb547dab120: mov    %rbx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)

  0x00007fb547dab123: xchg   %ax,%ax
  0x00007fb547dab125: movabs $0xffffffffffffffff,%rax
  0x00007fb547dab12f: callq  0x00007fb54784aa80  ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)
                                                ;   {virtual_call}
  0x00007fb547dab134: cmp    $0x0,%eax
  0x00007fb547dab137: mov    $0x8,%edx
  0x00007fb547dab13c: je     0x00007fb547dab147
  0x00007fb547dab142: mov    $0x0,%edx
  0x00007fb547dab147: movabs $0x7fb52d169ae0,%rcx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab151: mov    0x104(%rcx),%esi
  0x00007fb547dab157: add    %edx,%esi
  0x00007fb547dab159: mov    %esi,0x104(%rcx)
  0x00007fb547dab15f: cmp    $0x0,%edx
  0x00007fb547dab162: jne    0x00007fb547dab16d
  0x00007fb547dab168: mov    $0x8,%esi
  0x00007fb547dab16d: and    $0xfff8,%esi
  0x00007fb547dab173: cmp    $0x0,%esi
  0x00007fb547dab176: je     0x00007fb547dab4ce  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x00007fb547dab17c: mov    0x108(%r15),%r10   ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x00007fb547dab183: test   %eax,(%r10)        ;   {poll}
  0x00007fb547dab186: cmp    $0x0,%eax
  0x00007fb547dab189: movabs $0x7fb52d169ae0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab193: movabs $0x408,%rcx
  0x00007fb547dab19d: jne    0x00007fb547dab1ad
  0x00007fb547dab1a3: movabs $0x3f8,%rcx
  0x00007fb547dab1ad: mov    (%rdx,%rcx,1),%rsi
  0x00007fb547dab1b1: lea    0x1(%rsi),%rsi
  0x00007fb547dab1b5: mov    %rsi,(%rdx,%rcx,1)
  0x00007fb547dab1b9: jne    0x00007fb547dab21b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x00007fb547dab1bf: mov    0xa0(%rsp),%rbx
  0x00007fb547dab1c7: mov    0x98(%rsp),%ecx
  0x00007fb547dab1ce: mov    0x88(%rsp),%rdx
  0x00007fb547dab1d6: jmpq   0x00007fb547daaed0
  0x00007fb547dab1db: mov    0xa0(%rsp),%rbx
  0x00007fb547dab1e3: mov    0x98(%rsp),%ecx
  0x00007fb547dab1ea: mov    0x88(%rsp),%rdx
  0x00007fb547dab1f2: jmpq   0x00007fb547daaed0
  0x00007fb547dab1f7: mov    %rdi,0xa0(%rsp)
  0x00007fb547dab1ff: mov    0xa0(%rsp),%rbx
  0x00007fb547dab207: mov    0x98(%rsp),%ecx
  0x00007fb547dab20e: mov    0x88(%rsp),%rdx
  0x00007fb547dab216: jmpq   0x00007fb547daaed0  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007fb547dab21b: mov    0xa0(%rsp),%rdi
  0x00007fb547dab223: jmpq   0x00007fb547dab39a  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@155 (line 948)

  0x00007fb547dab228: mov    0x98(%rsp),%ecx
  0x00007fb547dab22f: mov    0x88(%rsp),%rsi
  0x00007fb547dab237: mov    0x90(%rsp),%rbx
  0x00007fb547dab23f: movabs $0x7fb52d169ae0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab249: mov    0x8(%rbx),%ebx
  0x00007fb547dab24c: movabs $0x800000000,%r12
  0x00007fb547dab256: add    %r12,%rbx
  0x00007fb547dab259: xor    %r12,%r12
  0x00007fb547dab25c: cmp    0x2e0(%rdx),%rbx
  0x00007fb547dab263: jne    0x00007fb547dab272
  0x00007fb547dab265: addq   $0x1,0x2e8(%rdx)
  0x00007fb547dab26d: jmpq   0x00007fb547dab2d8
  0x00007fb547dab272: cmp    0x2f0(%rdx),%rbx
  0x00007fb547dab279: jne    0x00007fb547dab288
  0x00007fb547dab27b: addq   $0x1,0x2f8(%rdx)
  0x00007fb547dab283: jmpq   0x00007fb547dab2d8
  0x00007fb547dab288: cmpq   $0x0,0x2e0(%rdx)
  0x00007fb547dab293: jne    0x00007fb547dab2ac
  0x00007fb547dab295: mov    %rbx,0x2e0(%rdx)
  0x00007fb547dab29c: movq   $0x1,0x2e8(%rdx)
  0x00007fb547dab2a7: jmpq   0x00007fb547dab2d8
  0x00007fb547dab2ac: cmpq   $0x0,0x2f0(%rdx)
  0x00007fb547dab2b7: jne    0x00007fb547dab2d0
  0x00007fb547dab2b9: mov    %rbx,0x2f0(%rdx)
  0x00007fb547dab2c0: movq   $0x1,0x2f8(%rdx)
  0x00007fb547dab2cb: jmpq   0x00007fb547dab2d8
  0x00007fb547dab2d0: addq   $0x1,0x2d0(%rdx)
  0x00007fb547dab2d8: mov    %rcx,%rdx
  0x00007fb547dab2db: mov    %rsi,%rcx
  0x00007fb547dab2de: mov    0x90(%rsp),%rsi    ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)

  0x00007fb547dab2e6: nopl   0x0(%rax)
  0x00007fb547dab2ed: movabs $0xffffffffffffffff,%rax
  0x00007fb547dab2f7: callq  0x00007fb54784aa80  ; ImmutableOopMap{}
                                                ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)
                                                ;   {virtual_call}
  0x00007fb547dab2fc: cmp    $0x0,%rax
  0x00007fb547dab300: movabs $0x7fb52d169ae0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab30a: movabs $0x308,%rdi
  0x00007fb547dab314: je     0x00007fb547dab324
  0x00007fb547dab31a: movabs $0x318,%rdi
  0x00007fb547dab324: mov    (%rsi,%rdi,1),%rbx
  0x00007fb547dab328: lea    0x1(%rbx),%rbx
  0x00007fb547dab32c: mov    %rbx,(%rsi,%rdi,1)
  0x00007fb547dab330: je     0x00007fb547dab360  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@99 (line 944)

  0x00007fb547dab336: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x00007fb547dab4ef
  0x00007fb547dab339: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)

  0x00007fb547dab33d: movabs $0x7fb52d169ae0,%rsi  ;   {metadata(method data for {method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab347: incl   0x328(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@107 (line 944)

  0x00007fb547dab34d: add    $0xb0,%rsp
  0x00007fb547dab354: pop    %rbp
  0x00007fb547dab355: mov    0x108(%r15),%r10
  0x00007fb547dab35c: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dab35f: retq   
  0x00007fb547dab360: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547dab36a: add    $0xb0,%rsp
  0x00007fb547dab371: pop    %rbp
  0x00007fb547dab372: mov    0x108(%r15),%r10
  0x00007fb547dab379: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dab37c: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@111 (line 944)

  0x00007fb547dab37d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007fb547dab387: add    $0xb0,%rsp
  0x00007fb547dab38e: pop    %rbp
  0x00007fb547dab38f: mov    0x108(%r15),%r10
  0x00007fb547dab396: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dab399: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@161 (line 951)

  0x00007fb547dab39a: mov    0x14(%rdi),%eax
  0x00007fb547dab39d: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@156 (line 948)

  0x00007fb547dab3a1: add    $0xb0,%rsp
  0x00007fb547dab3a8: pop    %rbp
  0x00007fb547dab3a9: mov    0x108(%r15),%r10
  0x00007fb547dab3b0: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dab3b3: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@159 (line 948)

  0x00007fb547dab3b4: mov    0x14(%rbx),%eax
  0x00007fb547dab3b7: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@80 (line 941)

  0x00007fb547dab3bb: add    $0xb0,%rsp
  0x00007fb547dab3c2: pop    %rbp
  0x00007fb547dab3c3: mov    0x108(%r15),%r10
  0x00007fb547dab3ca: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dab3cd: retq   
  0x00007fb547dab3ce: movabs $0x7fb52cde3a48,%r10  ;   {metadata({method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab3d8: mov    %r10,0x8(%rsp)
  0x00007fb547dab3dd: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dab3e5: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::get@-1 (line 936)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dab3ea: jmpq   0x00007fb547daa8df
  0x00007fb547dab3ef: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop [136]=Oop [128]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dab3f4: movabs $0x7fb52cde2d28,%r10  ;   {metadata({method} {0x00007fb52cde2d28} &apos;spread&apos; &apos;(I)I&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab3fe: mov    %r10,0x8(%rsp)
  0x00007fb547dab403: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dab40b: callq  0x00007fb5478f8100  ; ImmutableOopMap{[128]=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@4 (line 936)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dab410: jmpq   0x00007fb547daa9d6
  0x00007fb547dab415: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop [136]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dab41a: movabs $0x7fb52cde3108,%r10  ;   {metadata({method} {0x00007fb52cde3108} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab424: mov    %r10,0x8(%rsp)
  0x00007fb547dab429: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dab431: callq  0x00007fb5478f8100  ; ImmutableOopMap{[136]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dab436: jmpq   0x00007fb547daaab0
  0x00007fb547dab43b: movabs $0x7fb52cd68f60,%r10  ;   {metadata({method} {0x00007fb52cd68f60} &apos;getObjectAcquire&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;jdk/internal/misc/Unsafe&apos;)}
  0x00007fb547dab445: mov    %r10,0x8(%rsp)
  0x00007fb547dab44a: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dab452: callq  0x00007fb5478f8100  ; ImmutableOopMap{[136]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dab457: jmpq   0x00007fb547daab54
  0x00007fb547dab45c: cmp    $0x0,%rdx
  0x00007fb547dab460: je     0x00007fb547daab69
  0x00007fb547dab466: mov    %rdx,(%rsp)
  0x00007fb547dab46a: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547dab46f: jmpq   0x00007fb547daab69
  0x00007fb547dab474: mov    %rdx,(%rsp)
  0x00007fb547dab478: callq  0x00007fb5478f5420  ; ImmutableOopMap{[136]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007fb547dab47d: callq  0x00007fb5478f3020  ; ImmutableOopMap{rbx=Oop [136]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dab482: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop [136]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dab487: callq  0x00007fb5478f3020  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dab48c: movabs $0x7fb52cde3a48,%r10  ;   {metadata({method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab496: mov    %r10,0x8(%rsp)
  0x00007fb547dab49b: movq   $0x7f,(%rsp)
  0x00007fb547dab4a3: callq  0x00007fb5478f8100  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dab4a8: jmpq   0x00007fb547daaf61
  0x00007fb547dab4ad: movabs $0x7fb52cde3a48,%r10  ;   {metadata({method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab4b7: mov    %r10,0x8(%rsp)
  0x00007fb547dab4bc: movq   $0x8f,(%rsp)
  0x00007fb547dab4c4: callq  0x00007fb5478f8100  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dab4c9: jmpq   0x00007fb547dab032
  0x00007fb547dab4ce: movabs $0x7fb52cde3a48,%r10  ;   {metadata({method} {0x00007fb52cde3a48} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00007fb547dab4d8: mov    %r10,0x8(%rsp)
  0x00007fb547dab4dd: movq   $0x98,(%rsp)
  0x00007fb547dab4e5: callq  0x00007fb5478f8100  ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dab4ea: jmpq   0x00007fb547dab17c
  0x00007fb547dab4ef: callq  0x00007fb5478f3020  ; ImmutableOopMap{}
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dab4f4: nop
  0x00007fb547dab4f5: nop
  0x00007fb547dab4f6: mov    0x440(%r15),%rax
  0x00007fb547dab4fd: movabs $0x0,%r10
  0x00007fb547dab507: mov    %r10,0x440(%r15)
  0x00007fb547dab50e: movabs $0x0,%r10
  0x00007fb547dab518: mov    %r10,0x448(%r15)
  0x00007fb547dab51f: add    $0xb0,%rsp
  0x00007fb547dab526: pop    %rbp
  0x00007fb547dab527: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547dab52c: hlt    
  0x00007fb547dab52d: hlt    
  0x00007fb547dab52e: hlt    
  0x00007fb547dab52f: hlt    
  0x00007fb547dab530: hlt    
  0x00007fb547dab531: hlt    
  0x00007fb547dab532: hlt    
  0x00007fb547dab533: hlt    
  0x00007fb547dab534: hlt    
  0x00007fb547dab535: hlt    
  0x00007fb547dab536: hlt    
  0x00007fb547dab537: hlt    
  0x00007fb547dab538: hlt    
  0x00007fb547dab539: hlt    
  0x00007fb547dab53a: hlt    
  0x00007fb547dab53b: hlt    
  0x00007fb547dab53c: hlt    
  0x00007fb547dab53d: hlt    
  0x00007fb547dab53e: hlt    
  0x00007fb547dab53f: hlt    
[Stub Code]
  0x00007fb547dab540: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547dab545: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dab54f: jmpq   0x00007fb547dab54f  ;   {runtime_call}
  0x00007fb547dab554: nop
  0x00007fb547dab555: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dab55f: jmpq   0x00007fb547dab55f  ;   {runtime_call}
  0x00007fb547dab564: nop
  0x00007fb547dab565: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dab56f: jmpq   0x00007fb547dab56f  ;   {runtime_call}
  0x00007fb547dab574: nop
  0x00007fb547dab575: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dab57f: jmpq   0x00007fb547dab57f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547dab584: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547dab589: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547dab593: and    $0xfffffffffffffff0,%rsp
  0x00007fb547dab597: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547dab59c: hlt    
[Deopt Handler Code]
  0x00007fb547dab59d: movabs $0x7fb547dab59d,%r10  ;   {section_word}
  0x00007fb547dab5a7: push   %r10
  0x00007fb547dab5a9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547dab5ae: hlt    
  0x00007fb547dab5af: hlt    

ImmutableOopMap{[128]=Oop [136]=Oop }pc offsets: 284 
ImmutableOopMap{[136]=Oop [144]=Oop }pc offsets: 1436 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }pc offsets: 1768 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }pc offsets: 1977 
ImmutableOopMap{[136]=Oop [160]=Oop }pc offsets: 2228 2307 
ImmutableOopMap{}pc offsets: 2684 
ImmutableOopMap{rsi=Oop rdx=Oop [136]=Oop }pc offsets: 2922 
ImmutableOopMap{rdx=Oop [136]=Oop [128]=Oop }pc offsets: 2932 
ImmutableOopMap{[128]=Oop [136]=Oop }pc offsets: 2960 
ImmutableOopMap{rdx=Oop [136]=Oop }pc offsets: 2970 
ImmutableOopMap{[136]=Oop rdx=Oop }pc offsets: 2998 3031 
ImmutableOopMap{[136]=Oop }pc offsets: 3069 
ImmutableOopMap{rbx=Oop [136]=Oop }pc offsets: 3074 
ImmutableOopMap{rdx=Oop [136]=Oop }pc offsets: 3079 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }pc offsets: 3084 3112 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }pc offsets: 3145 
ImmutableOopMap{[136]=Oop [160]=Oop }pc offsets: 3178 
ImmutableOopMap{}pc offsets: 3188 </print_nmethod>
<writer thread='1329923'/>

argument handler #60 for: receiver jdk.internal.misc.Unsafe.defineAnonymousClass0(Ljava/lang/Class;[B[Ljava/lang/Object;)Ljava/lang/Class; (fingerprint = 1389368, 69 bytes generated)
  0x00007fb54784c3ea: lea    (%r14),%rsi
  0x00007fb54784c3ed: lea    -0x8(%r14),%rax
  0x00007fb54784c3f1: xor    %edx,%edx
  0x00007fb54784c3f3: cmpq   $0x0,-0x8(%r14)
  0x00007fb54784c3fb: cmovne %rax,%rdx
  0x00007fb54784c3ff: lea    -0x10(%r14),%rax
  0x00007fb54784c403: xor    %ecx,%ecx
  0x00007fb54784c405: cmpq   $0x0,-0x10(%r14)
  0x00007fb54784c40d: cmovne %rax,%rcx
  0x00007fb54784c411: lea    -0x18(%r14),%rax
  0x00007fb54784c415: xor    %r8d,%r8d
  0x00007fb54784c418: cmpq   $0x0,-0x18(%r14)
  0x00007fb54784c420: cmovne %rax,%r8
  0x00007fb54784c424: movabs $0x7fb54780cabb,%rax
  0x00007fb54784c42e: retq   
<task_queued compile_id='87' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.945' comment='tiered' hot_count='128'/>
<print_native_nmethod method='java.lang.Class isPrimitive ()Z' bytes='0' count='256' iicount='256' stamp='0.945' address='0x00007fb54f2ce090'>
Compiled method (nm)     945   88     n 0       java.lang.Class::isPrimitive (native)
 total in heap  [0x00007fb54f2ce090,0x00007fb54f2ce430] = 928
 relocation     [0x00007fb54f2ce208,0x00007fb54f2ce238] = 48
 main code      [0x00007fb54f2ce240,0x00007fb54f2ce430] = 496
----------------------------------------------------------------------
java/lang/Class.isPrimitive()Z  [0x00007fb54f2ce240, 0x00007fb54f2ce430]  496 bytes
[Entry Point]
  # {method} {0x00007fb52ccbf8f8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2ce240: mov    0x8(%rsi),%r10d
  0x00007fb54f2ce244: movabs $0x800000000,%r12
  0x00007fb54f2ce24e: add    %r12,%r10
  0x00007fb54f2ce251: xor    %r12,%r12
  0x00007fb54f2ce254: cmp    %r10,%rax
  0x00007fb54f2ce257: je     0x00007fb54f2ce268
  0x00007fb54f2ce25d: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2ce262: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2ce268: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2ce26f: push   %rbp
  0x00007fb54f2ce270: mov    %rsp,%rbp
  0x00007fb54f2ce273: sub    $0x40,%rsp
  0x00007fb54f2ce277: mov    %rsi,(%rsp)
  0x00007fb54f2ce27b: cmp    $0x0,%rsi
  0x00007fb54f2ce27f: lea    (%rsp),%rsi
  0x00007fb54f2ce283: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2ce288: vzeroupper 
  0x00007fb54f2ce28b: movabs $0x7fb54f2ce288,%r10  ;   {internal_word}
  0x00007fb54f2ce295: mov    %r10,0x330(%r15)
  0x00007fb54f2ce29c: mov    %rsp,0x328(%r15)
  0x00007fb54f2ce2a3: cmpb   $0x0,0x166bb52d(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2ce2aa: je     0x00007fb54f2ce2e2
  0x00007fb54f2ce2b0: push   %rsi
  0x00007fb54f2ce2b1: movabs $0x7fb52ccbf8f8,%rsi  ;   {metadata({method} {0x00007fb52ccbf8f8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x00007fb54f2ce2bb: mov    %r15,%rdi
  0x00007fb54f2ce2be: test   $0xf,%esp
  0x00007fb54f2ce2c4: je     0x00007fb54f2ce2dc
  0x00007fb54f2ce2ca: sub    $0x8,%rsp
  0x00007fb54f2ce2ce: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2ce2d3: add    $0x8,%rsp
  0x00007fb54f2ce2d7: jmpq   0x00007fb54f2ce2e1
  0x00007fb54f2ce2dc: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2ce2e1: pop    %rsi
  0x00007fb54f2ce2e2: lea    0x348(%r15),%rdi
  0x00007fb54f2ce2e9: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2ce2f4: callq  0x00007fb564d8af50  ;   {runtime_call JVM_IsPrimitiveClass}
  0x00007fb54f2ce2f9: vzeroupper 
  0x00007fb54f2ce2fc: and    $0xff,%eax
  0x00007fb54f2ce302: setne  %al
  0x00007fb54f2ce305: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2ce310: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2ce316: testb  $0x8,0x108(%r15)
  0x00007fb54f2ce31e: jne    0x00007fb54f2ce335
  0x00007fb54f2ce324: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2ce32f: je     0x00007fb54f2ce359
  0x00007fb54f2ce335: vzeroupper 
  0x00007fb54f2ce338: mov    %rax,-0x8(%rbp)
  0x00007fb54f2ce33c: mov    %r15,%rdi
  0x00007fb54f2ce33f: mov    %rsp,%r12
  0x00007fb54f2ce342: sub    $0x0,%rsp
  0x00007fb54f2ce346: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2ce34a: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2ce34f: mov    %r12,%rsp
  0x00007fb54f2ce352: xor    %r12,%r12
  0x00007fb54f2ce355: mov    -0x8(%rbp),%rax
  0x00007fb54f2ce359: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2ce364: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2ce36f: je     0x00007fb54f2ce405
  0x00007fb54f2ce375: cmpb   $0x0,0x166bb45b(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2ce37c: je     0x00007fb54f2ce3ba
  0x00007fb54f2ce382: mov    %rax,-0x8(%rbp)
  0x00007fb54f2ce386: movabs $0x7fb52ccbf8f8,%rsi  ;   {metadata({method} {0x00007fb52ccbf8f8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x00007fb54f2ce390: mov    %r15,%rdi
  0x00007fb54f2ce393: test   $0xf,%esp
  0x00007fb54f2ce399: je     0x00007fb54f2ce3b1
  0x00007fb54f2ce39f: sub    $0x8,%rsp
  0x00007fb54f2ce3a3: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2ce3a8: add    $0x8,%rsp
  0x00007fb54f2ce3ac: jmpq   0x00007fb54f2ce3b6
  0x00007fb54f2ce3b1: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2ce3b6: mov    -0x8(%rbp),%rax
  0x00007fb54f2ce3ba: movabs $0x0,%r10
  0x00007fb54f2ce3c4: mov    %r10,0x328(%r15)
  0x00007fb54f2ce3cb: movabs $0x0,%r10
  0x00007fb54f2ce3d5: mov    %r10,0x330(%r15)
  0x00007fb54f2ce3dc: vzeroupper 
  0x00007fb54f2ce3df: mov    0xe0(%r15),%rcx
  0x00007fb54f2ce3e6: movl   $0x0,0x100(%rcx)
  0x00007fb54f2ce3f0: leaveq 
  0x00007fb54f2ce3f1: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2ce3f9: jne    0x00007fb54f2ce400
  0x00007fb54f2ce3ff: retq   
  0x00007fb54f2ce400: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2ce405: vzeroupper 
  0x00007fb54f2ce408: mov    %rax,-0x8(%rbp)
  0x00007fb54f2ce40c: mov    %rsp,%r12
  0x00007fb54f2ce40f: sub    $0x0,%rsp
  0x00007fb54f2ce413: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2ce417: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2ce41c: mov    %r12,%rsp
  0x00007fb54f2ce41f: xor    %r12,%r12
  0x00007fb54f2ce422: mov    -0x8(%rbp),%rax
  0x00007fb54f2ce426: jmpq   0x00007fb54f2ce375
  0x00007fb54f2ce42b: hlt    
  0x00007fb54f2ce42c: hlt    
  0x00007fb54f2ce42d: hlt    
  0x00007fb54f2ce42e: hlt    
  0x00007fb54f2ce42f: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[0]=Oop off=72}
</print_native_nmethod>
<nmethod compile_id='88' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2ce240' size='928' address='0x00007fb54f2ce090' relocation_offset='376' consts_offset='928' insts_offset='432' method='java.lang.Class isPrimitive ()Z' bytes='0' count='256' iicount='256' stamp='0.947'/>
----------------------------------------------------------------------
java/lang/Class.isPrimitive()Z  [0x00007fb54f2ce240, 0x00007fb54f2ce430]  496 bytes
[Entry Point]
  # {method} {0x00007fb52ccbf8f8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2ce240: mov    0x8(%rsi),%r10d
  0x00007fb54f2ce244: movabs $0x800000000,%r12
  0x00007fb54f2ce24e: add    %r12,%r10
  0x00007fb54f2ce251: xor    %r12,%r12
  0x00007fb54f2ce254: cmp    %r10,%rax
  0x00007fb54f2ce257: je     0x00007fb54f2ce268
  0x00007fb54f2ce25d: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2ce262: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2ce268: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2ce26f: push   %rbp
  0x00007fb54f2ce270: mov    %rsp,%rbp
  0x00007fb54f2ce273: sub    $0x40,%rsp
  0x00007fb54f2ce277: mov    %rsi,(%rsp)
  0x00007fb54f2ce27b: cmp    $0x0,%rsi
  0x00007fb54f2ce27f: lea    (%rsp),%rsi
  0x00007fb54f2ce283: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2ce288: vzeroupper 
  0x00007fb54f2ce28b: movabs $0x7fb54f2ce288,%r10  ;   {internal_word}
  0x00007fb54f2ce295: mov    %r10,0x330(%r15)
  0x00007fb54f2ce29c: mov    %rsp,0x328(%r15)
  0x00007fb54f2ce2a3: cmpb   $0x0,0x166bb52d(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2ce2aa: je     0x00007fb54f2ce2e2
  0x00007fb54f2ce2b0: push   %rsi
  0x00007fb54f2ce2b1: movabs $0x7fb52ccbf8f8,%rsi  ;   {metadata({method} {0x00007fb52ccbf8f8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x00007fb54f2ce2bb: mov    %r15,%rdi
  0x00007fb54f2ce2be: test   $0xf,%esp
  0x00007fb54f2ce2c4: je     0x00007fb54f2ce2dc
  0x00007fb54f2ce2ca: sub    $0x8,%rsp
  0x00007fb54f2ce2ce: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2ce2d3: add    $0x8,%rsp
  0x00007fb54f2ce2d7: jmpq   0x00007fb54f2ce2e1
  0x00007fb54f2ce2dc: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2ce2e1: pop    %rsi
  0x00007fb54f2ce2e2: lea    0x348(%r15),%rdi
  0x00007fb54f2ce2e9: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2ce2f4: callq  0x00007fb564d8af50  ;   {runtime_call JVM_IsPrimitiveClass}
  0x00007fb54f2ce2f9: vzeroupper 
  0x00007fb54f2ce2fc: and    $0xff,%eax
  0x00007fb54f2ce302: setne  %al
  0x00007fb54f2ce305: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2ce310: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2ce316: testb  $0x8,0x108(%r15)
  0x00007fb54f2ce31e: jne    0x00007fb54f2ce335
  0x00007fb54f2ce324: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2ce32f: je     0x00007fb54f2ce359
  0x00007fb54f2ce335: vzeroupper 
  0x00007fb54f2ce338: mov    %rax,-0x8(%rbp)
  0x00007fb54f2ce33c: mov    %r15,%rdi
  0x00007fb54f2ce33f: mov    %rsp,%r12
  0x00007fb54f2ce342: sub    $0x0,%rsp
  0x00007fb54f2ce346: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2ce34a: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2ce34f: mov    %r12,%rsp
  0x00007fb54f2ce352: xor    %r12,%r12
  0x00007fb54f2ce355: mov    -0x8(%rbp),%rax
  0x00007fb54f2ce359: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2ce364: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2ce36f: je     0x00007fb54f2ce405
  0x00007fb54f2ce375: cmpb   $0x0,0x166bb45b(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2ce37c: je     0x00007fb54f2ce3ba
  0x00007fb54f2ce382: mov    %rax,-0x8(%rbp)
  0x00007fb54f2ce386: movabs $0x7fb52ccbf8f8,%rsi  ;   {metadata({method} {0x00007fb52ccbf8f8} &apos;isPrimitive&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x00007fb54f2ce390: mov    %r15,%rdi
  0x00007fb54f2ce393: test   $0xf,%esp
  0x00007fb54f2ce399: je     0x00007fb54f2ce3b1
  0x00007fb54f2ce39f: sub    $0x8,%rsp
  0x00007fb54f2ce3a3: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2ce3a8: add    $0x8,%rsp
  0x00007fb54f2ce3ac: jmpq   0x00007fb54f2ce3b6
  0x00007fb54f2ce3b1: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2ce3b6: mov    -0x8(%rbp),%rax
  0x00007fb54f2ce3ba: movabs $0x0,%r10
  0x00007fb54f2ce3c4: mov    %r10,0x328(%r15)
  0x00007fb54f2ce3cb: movabs $0x0,%r10
  0x00007fb54f2ce3d5: mov    %r10,0x330(%r15)
  0x00007fb54f2ce3dc: vzeroupper 
  0x00007fb54f2ce3df: mov    0xe0(%r15),%rcx
  0x00007fb54f2ce3e6: movl   $0x0,0x100(%rcx)
  0x00007fb54f2ce3f0: leaveq 
  0x00007fb54f2ce3f1: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2ce3f9: jne    0x00007fb54f2ce400
  0x00007fb54f2ce3ff: retq   
  0x00007fb54f2ce400: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2ce405: vzeroupper 
  0x00007fb54f2ce408: mov    %rax,-0x8(%rbp)
  0x00007fb54f2ce40c: mov    %rsp,%r12
  0x00007fb54f2ce40f: sub    $0x0,%rsp
  0x00007fb54f2ce413: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2ce417: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2ce41c: mov    %r12,%rsp
  0x00007fb54f2ce41f: xor    %r12,%r12
  0x00007fb54f2ce422: mov    -0x8(%rbp),%rax
  0x00007fb54f2ce426: jmpq   0x00007fb54f2ce375
  0x00007fb54f2ce42b: hlt    
  0x00007fb54f2ce42c: hlt    
  0x00007fb54f2ce42d: hlt    
  0x00007fb54f2ce42e: hlt    
  0x00007fb54f2ce42f: hlt    
<writer thread='1329936'/>
<nmethod compile_id='87' compiler='c1' level='1' entry='0x00007fb54f2ce640' size='704' address='0x00007fb54f2ce490' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='139' iicount='139' stamp='0.951'/>
<print_nmethod stamp='0.951'>
Compiled method (c1)     951   87       1       java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode (5 bytes)
 total in heap  [0x00007fb54f2ce490,0x00007fb54f2ce750] = 704
 relocation     [0x00007fb54f2ce608,0x00007fb54f2ce628] = 32
 main code      [0x00007fb54f2ce640,0x00007fb54f2ce6c0] = 128
 stub code      [0x00007fb54f2ce6c0,0x00007fb54f2ce6f0] = 48
 metadata       [0x00007fb54f2ce6f0,0x00007fb54f2ce6f8] = 8
 scopes data    [0x00007fb54f2ce6f8,0x00007fb54f2ce708] = 16
 scopes pcs     [0x00007fb54f2ce708,0x00007fb54f2ce748] = 64
 dependencies   [0x00007fb54f2ce748,0x00007fb54f2ce750] = 8
----------------------------------------------------------------------
java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry.hashCode()I  [0x00007fb54f2ce640, 0x00007fb54f2ce6f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52d03cc88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2ce640: mov    0x8(%rsi),%r10d
  0x00007fb54f2ce644: movabs $0x800000000,%r12
  0x00007fb54f2ce64e: add    %r12,%r10
  0x00007fb54f2ce651: xor    %r12,%r12
  0x00007fb54f2ce654: cmp    %rax,%r10
  0x00007fb54f2ce657: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2ce65d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2ce660: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2ce667: push   %rbp
  0x00007fb54f2ce668: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@0 (line 1348)

  0x00007fb54f2ce66c: mov    0x1c(%rsi),%eax    ;*getfield hashcode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@1 (line 1348)

  0x00007fb54f2ce66f: add    $0x30,%rsp
  0x00007fb54f2ce673: pop    %rbp
  0x00007fb54f2ce674: mov    0x108(%r15),%r10
  0x00007fb54f2ce67b: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2ce67e: retq   
  0x00007fb54f2ce67f: nop
  0x00007fb54f2ce680: nop
  0x00007fb54f2ce681: mov    0x440(%r15),%rax
  0x00007fb54f2ce688: movabs $0x0,%r10
  0x00007fb54f2ce692: mov    %r10,0x440(%r15)
  0x00007fb54f2ce699: movabs $0x0,%r10
  0x00007fb54f2ce6a3: mov    %r10,0x448(%r15)
  0x00007fb54f2ce6aa: add    $0x30,%rsp
  0x00007fb54f2ce6ae: pop    %rbp
  0x00007fb54f2ce6af: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2ce6b4: hlt    
  0x00007fb54f2ce6b5: hlt    
  0x00007fb54f2ce6b6: hlt    
  0x00007fb54f2ce6b7: hlt    
  0x00007fb54f2ce6b8: hlt    
  0x00007fb54f2ce6b9: hlt    
  0x00007fb54f2ce6ba: hlt    
  0x00007fb54f2ce6bb: hlt    
  0x00007fb54f2ce6bc: hlt    
  0x00007fb54f2ce6bd: hlt    
  0x00007fb54f2ce6be: hlt    
  0x00007fb54f2ce6bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2ce6c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2ce6c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2ce6cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2ce6d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2ce6d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2ce6d9: movabs $0x7fb54f2ce6d9,%r10  ;   {section_word}
  0x00007fb54f2ce6e3: push   %r10
  0x00007fb54f2ce6e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2ce6ea: hlt    
  0x00007fb54f2ce6eb: hlt    
  0x00007fb54f2ce6ec: hlt    
  0x00007fb54f2ce6ed: hlt    
  0x00007fb54f2ce6ee: hlt    
  0x00007fb54f2ce6ef: hlt    
</print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='java.lang.Object getClass ()Ljava/lang/Class;' bytes='0' count='256' iicount='256' stamp='0.954' address='0x00007fb54f2ce790'>
Compiled method (nm)     954   89     n 0       java.lang.Object::getClass (native)
 total in heap  [0x00007fb54f2ce790,0x00007fb54f2ceba8] = 1048
 relocation     [0x00007fb54f2ce908,0x00007fb54f2ce940] = 56
 main code      [0x00007fb54f2ce940,0x00007fb54f2ceba8] = 616
----------------------------------------------------------------------
java/lang/Object.getClass()Ljava/lang/Class;  [0x00007fb54f2ce940, 0x00007fb54f2ceba8]  616 bytes
[Entry Point]
  # {method} {0x00007fb52ccaf6c8} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2ce940: mov    0x8(%rsi),%r10d
  0x00007fb54f2ce944: movabs $0x800000000,%r12
  0x00007fb54f2ce94e: add    %r12,%r10
  0x00007fb54f2ce951: xor    %r12,%r12
  0x00007fb54f2ce954: cmp    %r10,%rax
  0x00007fb54f2ce957: je     0x00007fb54f2ce968
  0x00007fb54f2ce95d: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2ce962: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2ce968: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2ce96f: push   %rbp
  0x00007fb54f2ce970: mov    %rsp,%rbp
  0x00007fb54f2ce973: sub    $0x40,%rsp
  0x00007fb54f2ce977: mov    %rsi,(%rsp)
  0x00007fb54f2ce97b: cmp    $0x0,%rsi
  0x00007fb54f2ce97f: lea    (%rsp),%rsi
  0x00007fb54f2ce983: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2ce988: vzeroupper 
  0x00007fb54f2ce98b: movabs $0x7fb54f2ce988,%r10  ;   {internal_word}
  0x00007fb54f2ce995: mov    %r10,0x330(%r15)
  0x00007fb54f2ce99c: mov    %rsp,0x328(%r15)
  0x00007fb54f2ce9a3: cmpb   $0x0,0x166bae2d(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2ce9aa: je     0x00007fb54f2ce9e2
  0x00007fb54f2ce9b0: push   %rsi
  0x00007fb54f2ce9b1: movabs $0x7fb52ccaf6c8,%rsi  ;   {metadata({method} {0x00007fb52ccaf6c8} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb54f2ce9bb: mov    %r15,%rdi
  0x00007fb54f2ce9be: test   $0xf,%esp
  0x00007fb54f2ce9c4: je     0x00007fb54f2ce9dc
  0x00007fb54f2ce9ca: sub    $0x8,%rsp
  0x00007fb54f2ce9ce: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2ce9d3: add    $0x8,%rsp
  0x00007fb54f2ce9d7: jmpq   0x00007fb54f2ce9e1
  0x00007fb54f2ce9dc: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2ce9e1: pop    %rsi
  0x00007fb54f2ce9e2: lea    0x348(%r15),%rdi
  0x00007fb54f2ce9e9: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2ce9f4: callq  0x00007fb55f80f2c0  ;   {runtime_call Java_java_lang_Object_getClass}
  0x00007fb54f2ce9f9: vzeroupper 
  0x00007fb54f2ce9fc: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2cea07: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2cea0d: testb  $0x8,0x108(%r15)
  0x00007fb54f2cea15: jne    0x00007fb54f2cea2c
  0x00007fb54f2cea1b: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2cea26: je     0x00007fb54f2cea50
  0x00007fb54f2cea2c: vzeroupper 
  0x00007fb54f2cea2f: mov    %rax,-0x8(%rbp)
  0x00007fb54f2cea33: mov    %r15,%rdi
  0x00007fb54f2cea36: mov    %rsp,%r12
  0x00007fb54f2cea39: sub    $0x0,%rsp
  0x00007fb54f2cea3d: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cea41: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2cea46: mov    %r12,%rsp
  0x00007fb54f2cea49: xor    %r12,%r12
  0x00007fb54f2cea4c: mov    -0x8(%rbp),%rax
  0x00007fb54f2cea50: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2cea5b: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2cea66: je     0x00007fb54f2ceb7f
  0x00007fb54f2cea6c: cmpb   $0x0,0x166bad64(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2cea73: je     0x00007fb54f2ceab1
  0x00007fb54f2cea79: mov    %rax,-0x8(%rbp)
  0x00007fb54f2cea7d: movabs $0x7fb52ccaf6c8,%rsi  ;   {metadata({method} {0x00007fb52ccaf6c8} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb54f2cea87: mov    %r15,%rdi
  0x00007fb54f2cea8a: test   $0xf,%esp
  0x00007fb54f2cea90: je     0x00007fb54f2ceaa8
  0x00007fb54f2cea96: sub    $0x8,%rsp
  0x00007fb54f2cea9a: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2cea9f: add    $0x8,%rsp
  0x00007fb54f2ceaa3: jmpq   0x00007fb54f2ceaad
  0x00007fb54f2ceaa8: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2ceaad: mov    -0x8(%rbp),%rax
  0x00007fb54f2ceab1: movabs $0x0,%r10
  0x00007fb54f2ceabb: mov    %r10,0x328(%r15)
  0x00007fb54f2ceac2: movabs $0x0,%r10
  0x00007fb54f2ceacc: mov    %r10,0x330(%r15)
  0x00007fb54f2cead3: vzeroupper 
  0x00007fb54f2cead6: test   %rax,%rax
  0x00007fb54f2cead9: je     0x00007fb54f2ceb59
  0x00007fb54f2ceadf: test   $0x1,%rax
  0x00007fb54f2ceae5: je     0x00007fb54f2ceb56
  0x00007fb54f2ceaeb: mov    -0x1(%rax),%rax
  0x00007fb54f2ceaef: cmpb   $0x0,0x30(%r15)
  0x00007fb54f2ceaf4: je     0x00007fb54f2ceb51
  0x00007fb54f2ceafa: cmp    $0x0,%rax
  0x00007fb54f2ceafe: je     0x00007fb54f2ceb51
  0x00007fb54f2ceb04: mov    0x38(%r15),%rcx
  0x00007fb54f2ceb08: cmp    $0x0,%rcx
  0x00007fb54f2ceb0c: je     0x00007fb54f2ceb26
  0x00007fb54f2ceb12: sub    $0x8,%rcx
  0x00007fb54f2ceb16: mov    %rcx,0x38(%r15)
  0x00007fb54f2ceb1a: add    0x48(%r15),%rcx
  0x00007fb54f2ceb1e: mov    %rax,(%rcx)
  0x00007fb54f2ceb21: jmpq   0x00007fb54f2ceb51
  0x00007fb54f2ceb26: push   %rax
  0x00007fb54f2ceb27: mov    %r15,%rsi
  0x00007fb54f2ceb2a: mov    %rax,%rdi
  0x00007fb54f2ceb2d: test   $0xf,%esp
  0x00007fb54f2ceb33: je     0x00007fb54f2ceb4b
  0x00007fb54f2ceb39: sub    $0x8,%rsp
  0x00007fb54f2ceb3d: callq  0x00007fb564baa460  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007fb54f2ceb42: add    $0x8,%rsp
  0x00007fb54f2ceb46: jmpq   0x00007fb54f2ceb50
  0x00007fb54f2ceb4b: callq  0x00007fb564baa460  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007fb54f2ceb50: pop    %rax
  0x00007fb54f2ceb51: jmpq   0x00007fb54f2ceb59
  0x00007fb54f2ceb56: mov    (%rax),%rax
  0x00007fb54f2ceb59: mov    0xe0(%r15),%rcx
  0x00007fb54f2ceb60: movl   $0x0,0x100(%rcx)
  0x00007fb54f2ceb6a: leaveq 
  0x00007fb54f2ceb6b: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2ceb73: jne    0x00007fb54f2ceb7a
  0x00007fb54f2ceb79: retq   
  0x00007fb54f2ceb7a: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2ceb7f: vzeroupper 
  0x00007fb54f2ceb82: mov    %rax,-0x8(%rbp)
  0x00007fb54f2ceb86: mov    %rsp,%r12
  0x00007fb54f2ceb89: sub    $0x0,%rsp
  0x00007fb54f2ceb8d: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2ceb91: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2ceb96: mov    %r12,%rsp
  0x00007fb54f2ceb99: xor    %r12,%r12
  0x00007fb54f2ceb9c: mov    -0x8(%rbp),%rax
  0x00007fb54f2ceba0: jmpq   0x00007fb54f2cea6c
  0x00007fb54f2ceba5: hlt    
  0x00007fb54f2ceba6: hlt    
  0x00007fb54f2ceba7: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[0]=Oop off=72}
</print_native_nmethod>
<nmethod compile_id='89' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2ce940' size='1048' address='0x00007fb54f2ce790' relocation_offset='376' consts_offset='1048' insts_offset='432' method='java.lang.Object getClass ()Ljava/lang/Class;' bytes='0' count='256' iicount='256' stamp='0.956'/>
----------------------------------------------------------------------
java/lang/Object.getClass()Ljava/lang/Class;  [0x00007fb54f2ce940, 0x00007fb54f2ceba8]  616 bytes
[Entry Point]
  # {method} {0x00007fb52ccaf6c8} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2ce940: mov    0x8(%rsi),%r10d
  0x00007fb54f2ce944: movabs $0x800000000,%r12
  0x00007fb54f2ce94e: add    %r12,%r10
  0x00007fb54f2ce951: xor    %r12,%r12
  0x00007fb54f2ce954: cmp    %r10,%rax
  0x00007fb54f2ce957: je     0x00007fb54f2ce968
  0x00007fb54f2ce95d: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2ce962: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2ce968: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2ce96f: push   %rbp
  0x00007fb54f2ce970: mov    %rsp,%rbp
  0x00007fb54f2ce973: sub    $0x40,%rsp
  0x00007fb54f2ce977: mov    %rsi,(%rsp)
  0x00007fb54f2ce97b: cmp    $0x0,%rsi
  0x00007fb54f2ce97f: lea    (%rsp),%rsi
  0x00007fb54f2ce983: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2ce988: vzeroupper 
  0x00007fb54f2ce98b: movabs $0x7fb54f2ce988,%r10  ;   {internal_word}
  0x00007fb54f2ce995: mov    %r10,0x330(%r15)
  0x00007fb54f2ce99c: mov    %rsp,0x328(%r15)
  0x00007fb54f2ce9a3: cmpb   $0x0,0x166bae2d(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2ce9aa: je     0x00007fb54f2ce9e2
  0x00007fb54f2ce9b0: push   %rsi
  0x00007fb54f2ce9b1: movabs $0x7fb52ccaf6c8,%rsi  ;   {metadata({method} {0x00007fb52ccaf6c8} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb54f2ce9bb: mov    %r15,%rdi
  0x00007fb54f2ce9be: test   $0xf,%esp
  0x00007fb54f2ce9c4: je     0x00007fb54f2ce9dc
  0x00007fb54f2ce9ca: sub    $0x8,%rsp
  0x00007fb54f2ce9ce: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2ce9d3: add    $0x8,%rsp
  0x00007fb54f2ce9d7: jmpq   0x00007fb54f2ce9e1
  0x00007fb54f2ce9dc: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2ce9e1: pop    %rsi
  0x00007fb54f2ce9e2: lea    0x348(%r15),%rdi
  0x00007fb54f2ce9e9: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2ce9f4: callq  0x00007fb55f80f2c0  ;   {runtime_call Java_java_lang_Object_getClass}
  0x00007fb54f2ce9f9: vzeroupper 
  0x00007fb54f2ce9fc: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2cea07: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2cea0d: testb  $0x8,0x108(%r15)
  0x00007fb54f2cea15: jne    0x00007fb54f2cea2c
  0x00007fb54f2cea1b: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2cea26: je     0x00007fb54f2cea50
  0x00007fb54f2cea2c: vzeroupper 
  0x00007fb54f2cea2f: mov    %rax,-0x8(%rbp)
  0x00007fb54f2cea33: mov    %r15,%rdi
  0x00007fb54f2cea36: mov    %rsp,%r12
  0x00007fb54f2cea39: sub    $0x0,%rsp
  0x00007fb54f2cea3d: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cea41: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2cea46: mov    %r12,%rsp
  0x00007fb54f2cea49: xor    %r12,%r12
  0x00007fb54f2cea4c: mov    -0x8(%rbp),%rax
  0x00007fb54f2cea50: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2cea5b: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2cea66: je     0x00007fb54f2ceb7f
  0x00007fb54f2cea6c: cmpb   $0x0,0x166bad64(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2cea73: je     0x00007fb54f2ceab1
  0x00007fb54f2cea79: mov    %rax,-0x8(%rbp)
  0x00007fb54f2cea7d: movabs $0x7fb52ccaf6c8,%rsi  ;   {metadata({method} {0x00007fb52ccaf6c8} &apos;getClass&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb54f2cea87: mov    %r15,%rdi
  0x00007fb54f2cea8a: test   $0xf,%esp
  0x00007fb54f2cea90: je     0x00007fb54f2ceaa8
  0x00007fb54f2cea96: sub    $0x8,%rsp
  0x00007fb54f2cea9a: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2cea9f: add    $0x8,%rsp
  0x00007fb54f2ceaa3: jmpq   0x00007fb54f2ceaad
  0x00007fb54f2ceaa8: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2ceaad: mov    -0x8(%rbp),%rax
  0x00007fb54f2ceab1: movabs $0x0,%r10
  0x00007fb54f2ceabb: mov    %r10,0x328(%r15)
  0x00007fb54f2ceac2: movabs $0x0,%r10
  0x00007fb54f2ceacc: mov    %r10,0x330(%r15)
  0x00007fb54f2cead3: vzeroupper 
  0x00007fb54f2cead6: test   %rax,%rax
  0x00007fb54f2cead9: je     0x00007fb54f2ceb59
  0x00007fb54f2ceadf: test   $0x1,%rax
  0x00007fb54f2ceae5: je     0x00007fb54f2ceb56
  0x00007fb54f2ceaeb: mov    -0x1(%rax),%rax
  0x00007fb54f2ceaef: cmpb   $0x0,0x30(%r15)
  0x00007fb54f2ceaf4: je     0x00007fb54f2ceb51
  0x00007fb54f2ceafa: cmp    $0x0,%rax
  0x00007fb54f2ceafe: je     0x00007fb54f2ceb51
  0x00007fb54f2ceb04: mov    0x38(%r15),%rcx
  0x00007fb54f2ceb08: cmp    $0x0,%rcx
  0x00007fb54f2ceb0c: je     0x00007fb54f2ceb26
  0x00007fb54f2ceb12: sub    $0x8,%rcx
  0x00007fb54f2ceb16: mov    %rcx,0x38(%r15)
  0x00007fb54f2ceb1a: add    0x48(%r15),%rcx
  0x00007fb54f2ceb1e: mov    %rax,(%rcx)
  0x00007fb54f2ceb21: jmpq   0x00007fb54f2ceb51
  0x00007fb54f2ceb26: push   %rax
  0x00007fb54f2ceb27: mov    %r15,%rsi
  0x00007fb54f2ceb2a: mov    %rax,%rdi
  0x00007fb54f2ceb2d: test   $0xf,%esp
  0x00007fb54f2ceb33: je     0x00007fb54f2ceb4b
  0x00007fb54f2ceb39: sub    $0x8,%rsp
  0x00007fb54f2ceb3d: callq  0x00007fb564baa460  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007fb54f2ceb42: add    $0x8,%rsp
  0x00007fb54f2ceb46: jmpq   0x00007fb54f2ceb50
  0x00007fb54f2ceb4b: callq  0x00007fb564baa460  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007fb54f2ceb50: pop    %rax
  0x00007fb54f2ceb51: jmpq   0x00007fb54f2ceb59
  0x00007fb54f2ceb56: mov    (%rax),%rax
  0x00007fb54f2ceb59: mov    0xe0(%r15),%rcx
  0x00007fb54f2ceb60: movl   $0x0,0x100(%rcx)
  0x00007fb54f2ceb6a: leaveq 
  0x00007fb54f2ceb6b: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2ceb73: jne    0x00007fb54f2ceb7a
  0x00007fb54f2ceb79: retq   
  0x00007fb54f2ceb7a: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2ceb7f: vzeroupper 
  0x00007fb54f2ceb82: mov    %rax,-0x8(%rbp)
  0x00007fb54f2ceb86: mov    %rsp,%r12
  0x00007fb54f2ceb89: sub    $0x0,%rsp
  0x00007fb54f2ceb8d: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2ceb91: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2ceb96: mov    %r12,%rsp
  0x00007fb54f2ceb99: xor    %r12,%r12
  0x00007fb54f2ceb9c: mov    -0x8(%rbp),%rax
  0x00007fb54f2ceba0: jmpq   0x00007fb54f2cea6c
  0x00007fb54f2ceba5: hlt    
  0x00007fb54f2ceba6: hlt    
  0x00007fb54f2ceba7: hlt    
<print_native_nmethod method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.959' address='0x00007fb54f2cec10'>
Compiled method (nm)     959   90     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)L (native)
 total in heap  [0x00007fb54f2cec10,0x00007fb54f2cedc0] = 432
 relocation     [0x00007fb54f2ced88,0x00007fb54f2ced90] = 8
 main code      [0x00007fb54f2ceda0,0x00007fb54f2cedc0] = 32
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2ceda0, 0x00007fb54f2cedc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1928a8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2ceda0: mov    0x24(%rcx),%ebx
  0x00007fb54f2ceda3: shl    $0x3,%rbx
  0x00007fb54f2ceda7: mov    0x10(%rbx),%rbx
  0x00007fb54f2cedab: test   %rbx,%rbx
  0x00007fb54f2cedae: je     0x00007fb54f2cedb7
  0x00007fb54f2cedb4: jmpq   *0x38(%rbx)
  0x00007fb54f2cedb7: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cedbc: hlt    
  0x00007fb54f2cedbd: hlt    
  0x00007fb54f2cedbe: hlt    
  0x00007fb54f2cedbf: hlt    
</print_native_nmethod>
<nmethod compile_id='90' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2ceda0' size='432' address='0x00007fb54f2cec10' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.960'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2ceda0, 0x00007fb54f2cedc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1928a8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2ceda0: mov    0x24(%rcx),%ebx
  0x00007fb54f2ceda3: shl    $0x3,%rbx
  0x00007fb54f2ceda7: mov    0x10(%rbx),%rbx
  0x00007fb54f2cedab: test   %rbx,%rbx
  0x00007fb54f2cedae: je     0x00007fb54f2cedb7
  0x00007fb54f2cedb4: jmpq   *0x38(%rbx)
  0x00007fb54f2cedb7: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cedbc: hlt    
  0x00007fb54f2cedbd: hlt    
  0x00007fb54f2cedbe: hlt    
  0x00007fb54f2cedbf: hlt    
<task_queued compile_id='91' method='java.lang.StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='256' iicount='256' level='3' stamp='0.960' comment='tiered' hot_count='256'/>
<task_queued compile_id='92' method='java.lang.AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='45' count='256' iicount='256' level='3' stamp='0.960' comment='tiered' hot_count='256'/>
<task_queued compile_id='93' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='128' iicount='128' level='1' stamp='0.961' comment='tiered' hot_count='128'/>
<print_native_nmethod method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.961' address='0x00007fb54f2cef10'>
Compiled method (nm)     960   94     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (native)
 total in heap  [0x00007fb54f2cef10,0x00007fb54f2cf0c0] = 432
 relocation     [0x00007fb54f2cf088,0x00007fb54f2cf090] = 8
 main code      [0x00007fb54f2cf0a0,0x00007fb54f2cf0c0] = 32
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2cf0a0, 0x00007fb54f2cf0c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d194230} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cf0a0: mov    0x24(%r8),%ebx
  0x00007fb54f2cf0a4: shl    $0x3,%rbx
  0x00007fb54f2cf0a8: mov    0x10(%rbx),%rbx
  0x00007fb54f2cf0ac: test   %rbx,%rbx
  0x00007fb54f2cf0af: je     0x00007fb54f2cf0b8
  0x00007fb54f2cf0b5: jmpq   *0x38(%rbx)
  0x00007fb54f2cf0b8: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cf0bd: hlt    
  0x00007fb54f2cf0be: hlt    
  0x00007fb54f2cf0bf: hlt    
</print_native_nmethod>
<writer thread='1329936'/>
<nmethod compile_id='91' compiler='c1' level='3' entry='0x00007fb547dabec0' size='904' address='0x00007fb547dabd10' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='760' scopes_pcs_offset='800' dependencies_offset='896' metadata_offset='752' method='java.lang.StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='257' iicount='257' stamp='0.961'/>
<print_nmethod stamp='0.961'>
Compiled method (c1)     961   91       3       java.lang.StringBuilder::append (8 bytes)
 total in heap  [0x00007fb547dabd10,0x00007fb547dac098] = 904
 relocation     [0x00007fb547dabe88,0x00007fb547dabec0] = 56
 main code      [0x00007fb547dabec0,0x00007fb547dabfc0] = 256
 stub code      [0x00007fb547dabfc0,0x00007fb547dac000] = 64
 metadata       [0x00007fb547dac000,0x00007fb547dac008] = 8
 scopes data    [0x00007fb547dac008,0x00007fb547dac030] = 40
 scopes pcs     [0x00007fb547dac030,0x00007fb547dac090] = 96
 dependencies   [0x00007fb547dac090,0x00007fb547dac098] = 8
----------------------------------------------------------------------
java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;  [0x00007fb547dabec0, 0x00007fb547dac000]  320 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cd57b28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547dabec0: mov    0x8(%rsi),%r10d
  0x00007fb547dabec4: movabs $0x800000000,%r12
  0x00007fb547dabece: add    %r12,%r10
  0x00007fb547dabed1: xor    %r12,%r12
  0x00007fb547dabed4: cmp    %rax,%r10
  0x00007fb547dabed7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547dabedd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547dabee0: mov    %eax,-0x14000(%rsp)
  0x00007fb547dabee7: push   %rbp
  0x00007fb547dabee8: sub    $0x30,%rsp
  0x00007fb547dabeec: movabs $0x7fb52d193750,%rdi  ;   {metadata(method data for {method} {0x00007fb52cd57b28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb547dabef6: mov    0x100(%rdi),%ebx
  0x00007fb547dabefc: add    $0x8,%ebx
  0x00007fb547dabeff: mov    %ebx,0x100(%rdi)
  0x00007fb547dabf05: and    $0x1ff8,%ebx
  0x00007fb547dabf0b: cmp    $0x0,%ebx
  0x00007fb547dabf0e: je     0x00007fb547dabf51  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@0 (line 178)

  0x00007fb547dabf14: mov    %rsi,%rdi
  0x00007fb547dabf17: movabs $0x7fb52d193750,%rbx  ;   {metadata(method data for {method} {0x00007fb52cd57b28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb547dabf21: addq   $0x1,0x140(%rbx)
  0x00007fb547dabf29: mov    %rsi,%rdi
  0x00007fb547dabf2c: mov    %rdi,%rsi          ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 178)

  0x00007fb547dabf2f: mov    %rdi,0x20(%rsp)
  0x00007fb547dabf34: data16 xchg %ax,%ax
  0x00007fb547dabf37: callq  0x00007fb54784ad80  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 178)
                                                ;   {optimized virtual_call}
  0x00007fb547dabf3c: mov    0x20(%rsp),%rax
  0x00007fb547dabf41: add    $0x30,%rsp
  0x00007fb547dabf45: pop    %rbp
  0x00007fb547dabf46: mov    0x108(%r15),%r10
  0x00007fb547dabf4d: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dabf50: retq   
  0x00007fb547dabf51: movabs $0x7fb52cd57b28,%r10  ;   {metadata({method} {0x00007fb52cd57b28} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007fb547dabf5b: mov    %r10,0x8(%rsp)
  0x00007fb547dabf60: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dabf68: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 178)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dabf6d: jmp    0x00007fb547dabf14
  0x00007fb547dabf6f: nop
  0x00007fb547dabf70: nop
  0x00007fb547dabf71: mov    0x440(%r15),%rax
  0x00007fb547dabf78: movabs $0x0,%r10
  0x00007fb547dabf82: mov    %r10,0x440(%r15)
  0x00007fb547dabf89: movabs $0x0,%r10
  0x00007fb547dabf93: mov    %r10,0x448(%r15)
  0x00007fb547dabf9a: add    $0x30,%rsp
  0x00007fb547dabf9e: pop    %rbp
  0x00007fb547dabf9f: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547dabfa4: hlt    
  0x00007fb547dabfa5: hlt    
  0x00007fb547dabfa6: hlt    
  0x00007fb547dabfa7: hlt    
  0x00007fb547dabfa8: hlt    
  0x00007fb547dabfa9: hlt    
  0x00007fb547dabfaa: hlt    
  0x00007fb547dabfab: hlt    
  0x00007fb547dabfac: hlt    
  0x00007fb547dabfad: hlt    
  0x00007fb547dabfae: hlt    
  0x00007fb547dabfaf: hlt    
  0x00007fb547dabfb0: hlt    
  0x00007fb547dabfb1: hlt    
  0x00007fb547dabfb2: hlt    
  0x00007fb547dabfb3: hlt    
  0x00007fb547dabfb4: hlt    
  0x00007fb547dabfb5: hlt    
  0x00007fb547dabfb6: hlt    
  0x00007fb547dabfb7: hlt    
  0x00007fb547dabfb8: hlt    
  0x00007fb547dabfb9: hlt    
  0x00007fb547dabfba: hlt    
  0x00007fb547dabfbb: hlt    
  0x00007fb547dabfbc: hlt    
  0x00007fb547dabfbd: hlt    
  0x00007fb547dabfbe: hlt    
  0x00007fb547dabfbf: hlt    
[Stub Code]
  0x00007fb547dabfc0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547dabfc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dabfcf: jmpq   0x00007fb547dabfcf  ;   {runtime_call}
[Exception Handler]
  0x00007fb547dabfd4: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547dabfd9: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547dabfe3: and    $0xfffffffffffffff0,%rsp
  0x00007fb547dabfe7: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547dabfec: hlt    
[Deopt Handler Code]
  0x00007fb547dabfed: movabs $0x7fb547dabfed,%r10  ;   {section_word}
  0x00007fb547dabff7: push   %r10
  0x00007fb547dabff9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547dabffe: hlt    
  0x00007fb547dabfff: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 124 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 173 </print_nmethod>
<writer thread='1329923'/>
<nmethod compile_id='94' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cf0a0' size='432' address='0x00007fb54f2cef10' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.966'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2cf0a0, 0x00007fb54f2cf0c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d194230} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cf0a0: mov    0x24(%r8),%ebx
  0x00007fb54f2cf0a4: shl    $0x3,%rbx
  0x00007fb54f2cf0a8: mov    0x10(%rbx),%rbx
  0x00007fb54f2cf0ac: test   %rbx,%rbx
  0x00007fb54f2cf0af: je     0x00007fb54f2cf0b8
  0x00007fb54f2cf0b5: jmpq   *0x38(%rbx)
  0x00007fb54f2cf0b8: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cf0bd: hlt    
  0x00007fb54f2cf0be: hlt    
  0x00007fb54f2cf0bf: hlt    
<task_queued compile_id='95' method='java.lang.ref.Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='256' iicount='256' level='3' stamp='0.967' comment='tiered' hot_count='256'/>
<writer thread='1329936'/>
<nmethod compile_id='92' compiler='c1' level='3' entry='0x00007fb547dac340' size='2968' address='0x00007fb547dac110' relocation_offset='376' insts_offset='560' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2296' dependencies_offset='2936' nul_chk_table_offset='2944' metadata_offset='1856' method='java.lang.AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='45' count='260' iicount='260' stamp='0.967'/>
<print_nmethod stamp='0.967'>
Compiled method (c1)     967   92       3       java.lang.AbstractStringBuilder::append (45 bytes)
 total in heap  [0x00007fb547dac110,0x00007fb547dacca8] = 2968
 relocation     [0x00007fb547dac288,0x00007fb547dac328] = 160
 main code      [0x00007fb547dac340,0x00007fb547dac7e0] = 1184
 stub code      [0x00007fb547dac7e0,0x00007fb547dac850] = 112
 metadata       [0x00007fb547dac850,0x00007fb547dac878] = 40
 scopes data    [0x00007fb547dac878,0x00007fb547daca08] = 400
 scopes pcs     [0x00007fb547daca08,0x00007fb547dacc88] = 640
 dependencies   [0x00007fb547dacc88,0x00007fb547dacc90] = 8
 nul chk table  [0x00007fb547dacc90,0x00007fb547dacca8] = 24
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;  [0x00007fb547dac340, 0x00007fb547dac850]  1296 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cd52ba8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x90]  (sp of caller)
  0x00007fb547dac340: mov    0x8(%rsi),%r10d
  0x00007fb547dac344: movabs $0x800000000,%r12
  0x00007fb547dac34e: add    %r12,%r10
  0x00007fb547dac351: xor    %r12,%r12
  0x00007fb547dac354: cmp    %rax,%r10
  0x00007fb547dac357: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547dac35d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547dac360: mov    %eax,-0x14000(%rsp)
  0x00007fb547dac367: push   %rbp
  0x00007fb547dac368: sub    $0x80,%rsp
  0x00007fb547dac36f: mov    %rsi,0x58(%rsp)
  0x00007fb547dac374: mov    %rdx,0x60(%rsp)
  0x00007fb547dac379: movabs $0x7fb52d193c70,%rcx  ;   {metadata(method data for {method} {0x00007fb52cd52ba8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac383: mov    0x100(%rcx),%edi
  0x00007fb547dac389: add    $0x8,%edi
  0x00007fb547dac38c: mov    %edi,0x100(%rcx)
  0x00007fb547dac392: and    $0x1ff8,%edi
  0x00007fb547dac398: cmp    $0x0,%edi
  0x00007fb547dac39b: je     0x00007fb547dac6d7  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 534)

  0x00007fb547dac3a1: cmp    $0x0,%rdx
  0x00007fb547dac3a5: movabs $0x7fb52d193c70,%rcx  ;   {metadata(method data for {method} {0x00007fb52cd52ba8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac3af: movabs $0x150,%rdi
  0x00007fb547dac3b9: je     0x00007fb547dac3c9
  0x00007fb547dac3bf: movabs $0x140,%rdi
  0x00007fb547dac3c9: mov    (%rcx,%rdi,1),%rbx
  0x00007fb547dac3cd: lea    0x1(%rbx),%rbx
  0x00007fb547dac3d1: mov    %rbx,(%rcx,%rdi,1)
  0x00007fb547dac3d5: je     0x00007fb547dac6a3  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 534)

  0x00007fb547dac3db: cmp    (%rdx),%rax        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; implicit exception: dispatches to 0x00007fb547dac6f8
  0x00007fb547dac3de: mov    %rdx,%rcx
  0x00007fb547dac3e1: movabs $0x7fb52d193c70,%rdi  ;   {metadata(method data for {method} {0x00007fb52cd52ba8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac3eb: addq   $0x1,0x198(%rdi)
  0x00007fb547dac3f3: movabs $0x7fb52cf512f8,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb4330} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac3fd: mov    0x100(%rcx),%edi
  0x00007fb547dac403: add    $0x8,%edi
  0x00007fb547dac406: mov    %edi,0x100(%rcx)
  0x00007fb547dac40c: and    $0x7ffff8,%edi
  0x00007fb547dac412: cmp    $0x0,%edi
  0x00007fb547dac415: je     0x00007fb547dac6fd
  0x00007fb547dac41b: mov    0xc(%rdx),%ecx
  0x00007fb547dac41e: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x00007fb547dac422: mov    0xc(%rcx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; implicit exception: dispatches to 0x00007fb547dac71e
  0x00007fb547dac425: mov    %rdx,%rcx
  0x00007fb547dac428: movabs $0x7fb52cf512f8,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb4330} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac432: addq   $0x1,0x140(%rbx)
  0x00007fb547dac43a: movabs $0x7fb52ceed278,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac444: mov    0x100(%rcx),%ebx
  0x00007fb547dac44a: add    $0x8,%ebx
  0x00007fb547dac44d: mov    %ebx,0x100(%rcx)
  0x00007fb547dac453: and    $0x7ffff8,%ebx
  0x00007fb547dac459: cmp    $0x0,%ebx
  0x00007fb547dac45c: je     0x00007fb547dac723
  0x00007fb547dac462: movabs $0x7fb52ceed278,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac46c: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x00007fb547dac472: movsbl 0x14(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x00007fb547dac476: movabs $0x7fb52ceed278,%rbx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac480: incl   0x160(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x00007fb547dac486: shl    $0x18,%ecx
  0x00007fb547dac489: sar    $0x18,%ecx
  0x00007fb547dac48c: sar    %cl,%edi
  0x00007fb547dac48e: mov    0xc(%rsi),%ebx     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 538)

  0x00007fb547dac491: mov    %rsi,%rax
  0x00007fb547dac494: movabs $0x7fb52d193c70,%rcx  ;   {metadata(method data for {method} {0x00007fb52cd52ba8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac49e: addq   $0x1,0x1d0(%rcx)
  0x00007fb547dac4a6: add    %edi,%ebx
  0x00007fb547dac4a8: mov    %rbx,%rdx
  0x00007fb547dac4ab: mov    %rsi,%rbx
  0x00007fb547dac4ae: mov    %rbx,%rsi          ;*invokevirtual ensureCapacityInternal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x00007fb547dac4b1: mov    %edi,0x68(%rsp)
  0x00007fb547dac4b5: xchg   %ax,%ax
  0x00007fb547dac4b7: callq  0x00007fb547dac7e5  ; ImmutableOopMap{[88]=Oop [96]=Oop }
                                                ;*invokevirtual ensureCapacityInternal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ;   {optimized virtual_call}
  0x00007fb547dac4bc: mov    0x58(%rsp),%rsi
  0x00007fb547dac4c1: mov    0xc(%rsi),%edi     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 539)

  0x00007fb547dac4c4: mov    %rsi,%rbx
  0x00007fb547dac4c7: movabs $0x7fb52d193c70,%rax  ;   {metadata(method data for {method} {0x00007fb52cd52ba8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac4d1: addq   $0x1,0x208(%rax)
  0x00007fb547dac4d9: movabs $0x7fb52d1946c0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cd558f0} &apos;putStringAt&apos; &apos;(ILjava/lang/String;)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac4e3: mov    0x100(%rbx),%eax
  0x00007fb547dac4e9: add    $0x8,%eax
  0x00007fb547dac4ec: mov    %eax,0x100(%rbx)
  0x00007fb547dac4f2: and    $0x7ffff8,%eax
  0x00007fb547dac4f8: cmp    $0x0,%eax
  0x00007fb547dac4fb: je     0x00007fb547dac744
  0x00007fb547dac501: mov    %rsi,%rbx
  0x00007fb547dac504: movabs $0x7fb52d1946c0,%rax  ;   {metadata(method data for {method} {0x00007fb52cd558f0} &apos;putStringAt&apos; &apos;(ILjava/lang/String;)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac50e: addq   $0x1,0x140(%rax)
  0x00007fb547dac516: movabs $0x7fb52d194950,%rbx  ;   {metadata(method data for {method} {0x00007fb52cd55468} &apos;getCoder&apos; &apos;()B&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac520: mov    0x100(%rbx),%eax
  0x00007fb547dac526: add    $0x8,%eax
  0x00007fb547dac529: mov    %eax,0x100(%rbx)
  0x00007fb547dac52f: and    $0x7ffff8,%eax
  0x00007fb547dac535: cmp    $0x0,%eax
  0x00007fb547dac538: je     0x00007fb547dac765
  0x00007fb547dac53e: movabs $0x7fb52d194950,%rbx  ;   {metadata(method data for {method} {0x00007fb52cd55468} &apos;getCoder&apos; &apos;()B&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac548: incl   0x150(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@3 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac54e: movsbl 0x10(%rsi),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac552: movabs $0x7fb52d194950,%rax  ;   {metadata(method data for {method} {0x00007fb52cd55468} &apos;getCoder&apos; &apos;()B&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac55c: incl   0x160(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@10 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac562: shl    $0x18,%ebx
  0x00007fb547dac565: sar    $0x18,%ebx
  0x00007fb547dac568: mov    0x60(%rsp),%rdx
  0x00007fb547dac56d: movabs $0x7fb52d1946c0,%rax  ;   {metadata(method data for {method} {0x00007fb52cd558f0} &apos;putStringAt&apos; &apos;(ILjava/lang/String;)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac577: addq   $0x1,0x178(%rax)
  0x00007fb547dac57f: movabs $0x7fb52ceed278,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac589: mov    0x100(%rax),%edx
  0x00007fb547dac58f: add    $0x8,%edx
  0x00007fb547dac592: mov    %edx,0x100(%rax)
  0x00007fb547dac598: and    $0x7ffff8,%edx
  0x00007fb547dac59e: cmp    $0x0,%edx
  0x00007fb547dac5a1: je     0x00007fb547dac786
  0x00007fb547dac5a7: movabs $0x7fb52ceed278,%rax  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac5b1: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac5b7: mov    0x60(%rsp),%rdx
  0x00007fb547dac5bc: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac5c0: movabs $0x7fb52ceed278,%rcx  ;   {metadata(method data for {method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac5ca: incl   0x160(%rcx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac5d0: shl    $0x18,%eax
  0x00007fb547dac5d3: sar    $0x18,%eax
  0x00007fb547dac5d6: cmp    %eax,%ebx
  0x00007fb547dac5d8: movabs $0x7fb52d1946c0,%rbx  ;   {metadata(method data for {method} {0x00007fb52cd558f0} &apos;putStringAt&apos; &apos;(ILjava/lang/String;)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac5e2: movabs $0x1c0,%rax
  0x00007fb547dac5ec: jne    0x00007fb547dac5fc
  0x00007fb547dac5f2: movabs $0x1b0,%rax
  0x00007fb547dac5fc: mov    (%rbx,%rax,1),%rcx
  0x00007fb547dac600: lea    0x1(%rcx),%rcx
  0x00007fb547dac604: mov    %rcx,(%rbx,%rax,1)
  0x00007fb547dac608: jne    0x00007fb547dac619  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac60e: mov    %rdi,%rcx
  0x00007fb547dac611: mov    %rdx,%rdi
  0x00007fb547dac614: jmpq   0x00007fb547dac652  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@15 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac619: mov    %edi,0x6c(%rsp)
  0x00007fb547dac61d: mov    %rsi,%rbx
  0x00007fb547dac620: movabs $0x7fb52d1946c0,%rax  ;   {metadata(method data for {method} {0x00007fb52cd558f0} &apos;putStringAt&apos; &apos;(ILjava/lang/String;)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac62a: addq   $0x1,0x1d0(%rax)
  0x00007fb547dac632: mov    %rsi,%rbx
  0x00007fb547dac635: mov    %rbx,%rsi          ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@12 (line 1665)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac638: nopl   0x0(%rax)
  0x00007fb547dac63f: callq  0x00007fb54784ad80  ; ImmutableOopMap{[88]=Oop [96]=Oop }
                                                ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@12 (line 1665)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {optimized virtual_call}
  0x00007fb547dac644: mov    0x6c(%rsp),%ecx
  0x00007fb547dac648: mov    0x60(%rsp),%rdi
  0x00007fb547dac64d: mov    0x58(%rsp),%rsi
  0x00007fb547dac652: mov    0x14(%rsi),%edx
  0x00007fb547dac655: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac659: movsbl 0x10(%rsi),%r8d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@22 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac65e: mov    %rdi,%rbx
  0x00007fb547dac661: movabs $0x7fb52d1946c0,%rax  ;   {metadata(method data for {method} {0x00007fb52cd558f0} &apos;putStringAt&apos; &apos;(ILjava/lang/String;)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac66b: addq   $0x1,0x208(%rax)
  0x00007fb547dac673: mov    %rdi,%rsi          ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007fb547dac676: nop
  0x00007fb547dac677: callq  0x00007fb547dac805  ; ImmutableOopMap{[88]=Oop }
                                                ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {optimized virtual_call}
  0x00007fb547dac67c: mov    0x68(%rsp),%edi
  0x00007fb547dac680: mov    0x58(%rsp),%rsi
  0x00007fb547dac685: mov    0xc(%rsi),%eax     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 540)

  0x00007fb547dac688: add    %edi,%eax
  0x00007fb547dac68a: mov    %eax,0xc(%rsi)     ;*putfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 540)

  0x00007fb547dac68d: mov    %rsi,%rax
  0x00007fb547dac690: add    $0x80,%rsp
  0x00007fb547dac697: pop    %rbp
  0x00007fb547dac698: mov    0x108(%r15),%r10
  0x00007fb547dac69f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dac6a2: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@44 (line 541)

  0x00007fb547dac6a3: mov    %rsi,%rdi
  0x00007fb547dac6a6: movabs $0x7fb52d193c70,%rbx  ;   {metadata(method data for {method} {0x00007fb52cd52ba8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac6b0: addq   $0x1,0x160(%rbx)
  0x00007fb547dac6b8: nopl   0x0(%rax)
  0x00007fb547dac6bf: callq  0x00007fb54784ad80  ; ImmutableOopMap{}
                                                ;*invokevirtual appendNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 535)
                                                ;   {optimized virtual_call}
  0x00007fb547dac6c4: add    $0x80,%rsp
  0x00007fb547dac6cb: pop    %rbp
  0x00007fb547dac6cc: mov    0x108(%r15),%r10
  0x00007fb547dac6d3: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dac6d6: retq   
  0x00007fb547dac6d7: movabs $0x7fb52cd52ba8,%r10  ;   {metadata({method} {0x00007fb52cd52ba8} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac6e1: mov    %r10,0x8(%rsp)
  0x00007fb547dac6e6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dac6ee: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 534)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dac6f3: jmpq   0x00007fb547dac3a1
  0x00007fb547dac6f8: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dac6fd: movabs $0x7fb52ccb4330,%r10  ;   {metadata({method} {0x00007fb52ccb4330} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac707: mov    %r10,0x8(%rsp)
  0x00007fb547dac70c: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dac714: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dac719: jmpq   0x00007fb547dac41b
  0x00007fb547dac71e: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dac723: movabs $0x7fb52ccb91a0,%r10  ;   {metadata({method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac72d: mov    %r10,0x8(%rsp)
  0x00007fb547dac732: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dac73a: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dac73f: jmpq   0x00007fb547dac462
  0x00007fb547dac744: movabs $0x7fb52cd558f0,%r10  ;   {metadata({method} {0x00007fb52cd558f0} &apos;putStringAt&apos; &apos;(ILjava/lang/String;)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac74e: mov    %r10,0x8(%rsp)
  0x00007fb547dac753: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dac75b: callq  0x00007fb5478f8100  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::putStringAt@-1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dac760: jmpq   0x00007fb547dac501
  0x00007fb547dac765: movabs $0x7fb52cd55468,%r10  ;   {metadata({method} {0x00007fb52cd55468} &apos;getCoder&apos; &apos;()B&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dac76f: mov    %r10,0x8(%rsp)
  0x00007fb547dac774: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dac77c: callq  0x00007fb5478f8100  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::getCoder@-1 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dac781: jmpq   0x00007fb547dac53e
  0x00007fb547dac786: movabs $0x7fb52ccb91a0,%r10  ;   {metadata({method} {0x00007fb52ccb91a0} &apos;coder&apos; &apos;()B&apos; in &apos;java/lang/String&apos;)}
  0x00007fb547dac790: mov    %r10,0x8(%rsp)
  0x00007fb547dac795: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dac79d: callq  0x00007fb5478f8100  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dac7a2: jmpq   0x00007fb547dac5a7
  0x00007fb547dac7a7: nop
  0x00007fb547dac7a8: nop
  0x00007fb547dac7a9: mov    0x440(%r15),%rax
  0x00007fb547dac7b0: movabs $0x0,%r10
  0x00007fb547dac7ba: mov    %r10,0x440(%r15)
  0x00007fb547dac7c1: movabs $0x0,%r10
  0x00007fb547dac7cb: mov    %r10,0x448(%r15)
  0x00007fb547dac7d2: add    $0x80,%rsp
  0x00007fb547dac7d9: pop    %rbp
  0x00007fb547dac7da: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547dac7df: hlt    
[Stub Code]
  0x00007fb547dac7e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547dac7e5: movabs $0x7fb52cd51e88,%rbx  ;   {static_stub}
  0x00007fb547dac7ef: jmpq   0x00007fb547841a5f  ;   {runtime_call I2C/C2I adapters}
  0x00007fb547dac7f4: nop
  0x00007fb547dac7f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dac7ff: jmpq   0x00007fb547dac7ff  ;   {runtime_call}
  0x00007fb547dac804: nop
  0x00007fb547dac805: movabs $0x7fb52ccb8d90,%rbx  ;   {static_stub}
  0x00007fb547dac80f: jmpq   0x00007fb54783b167  ;   {runtime_call I2C/C2I adapters}
  0x00007fb547dac814: nop
  0x00007fb547dac815: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dac81f: jmpq   0x00007fb547dac81f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547dac824: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547dac829: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547dac833: and    $0xfffffffffffffff0,%rsp
  0x00007fb547dac837: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547dac83c: hlt    
[Deopt Handler Code]
  0x00007fb547dac83d: movabs $0x7fb547dac83d,%r10  ;   {section_word}
  0x00007fb547dac847: push   %r10
  0x00007fb547dac849: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547dac84e: hlt    
  0x00007fb547dac84f: hlt    

ImmutableOopMap{[88]=Oop [96]=Oop }pc offsets: 380 772 
ImmutableOopMap{[88]=Oop }pc offsets: 828 
ImmutableOopMap{}pc offsets: 900 
ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }pc offsets: 947 957 985 995 1023 
ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }pc offsets: 1056 1089 1122 </print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='java.lang.invoke.MethodHandle invokeBasic ()Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.978' address='0x00007fb54f2cf210'>
Compiled method (nm)     978   96     n 0       java.lang.invoke.MethodHandle::invokeBasic()L (native)
 total in heap  [0x00007fb54f2cf210,0x00007fb54f2cf3d0] = 448
 relocation     [0x00007fb54f2cf388,0x00007fb54f2cf390] = 8
 main code      [0x00007fb54f2cf3a0,0x00007fb54f2cf3d0] = 48
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic()Ljava/lang/Object;  [0x00007fb54f2cf3a0, 0x00007fb54f2cf3d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1b34b0} &apos;invokeBasic&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cf3a0: mov    0x14(%rsi),%ebx
  0x00007fb54f2cf3a3: shl    $0x3,%rbx
  0x00007fb54f2cf3a7: mov    0x28(%rbx),%ebx
  0x00007fb54f2cf3aa: shl    $0x3,%rbx
  0x00007fb54f2cf3ae: mov    0x24(%rbx),%ebx
  0x00007fb54f2cf3b1: shl    $0x3,%rbx
  0x00007fb54f2cf3b5: mov    0x10(%rbx),%rbx
  0x00007fb54f2cf3b9: test   %rbx,%rbx
  0x00007fb54f2cf3bc: je     0x00007fb54f2cf3c5
  0x00007fb54f2cf3c2: jmpq   *0x38(%rbx)
  0x00007fb54f2cf3c5: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cf3ca: hlt    
  0x00007fb54f2cf3cb: hlt    
  0x00007fb54f2cf3cc: hlt    
  0x00007fb54f2cf3cd: hlt    
  0x00007fb54f2cf3ce: hlt    
  0x00007fb54f2cf3cf: hlt    
</print_native_nmethod>
<nmethod compile_id='96' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cf3a0' size='448' address='0x00007fb54f2cf210' relocation_offset='376' consts_offset='448' insts_offset='400' method='java.lang.invoke.MethodHandle invokeBasic ()Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.979'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic()Ljava/lang/Object;  [0x00007fb54f2cf3a0, 0x00007fb54f2cf3d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1b34b0} &apos;invokeBasic&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cf3a0: mov    0x14(%rsi),%ebx
  0x00007fb54f2cf3a3: shl    $0x3,%rbx
  0x00007fb54f2cf3a7: mov    0x28(%rbx),%ebx
  0x00007fb54f2cf3aa: shl    $0x3,%rbx
  0x00007fb54f2cf3ae: mov    0x24(%rbx),%ebx
  0x00007fb54f2cf3b1: shl    $0x3,%rbx
  0x00007fb54f2cf3b5: mov    0x10(%rbx),%rbx
  0x00007fb54f2cf3b9: test   %rbx,%rbx
  0x00007fb54f2cf3bc: je     0x00007fb54f2cf3c5
  0x00007fb54f2cf3c2: jmpq   *0x38(%rbx)
  0x00007fb54f2cf3c5: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cf3ca: hlt    
  0x00007fb54f2cf3cb: hlt    
  0x00007fb54f2cf3cc: hlt    
  0x00007fb54f2cf3cd: hlt    
  0x00007fb54f2cf3ce: hlt    
  0x00007fb54f2cf3cf: hlt    
<writer thread='1329936'/>
<nmethod compile_id='95' compiler='c1' level='3' entry='0x00007fb547dacee0' size='1328' address='0x00007fb547dacd10' relocation_offset='376' insts_offset='464' stub_offset='1040' scopes_data_offset='1112' scopes_pcs_offset='1176' dependencies_offset='1320' metadata_offset='1088' method='java.lang.ref.Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='300' iicount='301' stamp='0.980'/>
<print_nmethod stamp='0.980'>
Compiled method (c1)     979   95       3       java.lang.ref.Reference::&lt;init&gt; (25 bytes)
 total in heap  [0x00007fb547dacd10,0x00007fb547dad240] = 1328
 relocation     [0x00007fb547dace88,0x00007fb547dacec8] = 64
 main code      [0x00007fb547dacee0,0x00007fb547dad120] = 576
 stub code      [0x00007fb547dad120,0x00007fb547dad150] = 48
 metadata       [0x00007fb547dad150,0x00007fb547dad168] = 24
 scopes data    [0x00007fb547dad168,0x00007fb547dad1a8] = 64
 scopes pcs     [0x00007fb547dad1a8,0x00007fb547dad238] = 144
 dependencies   [0x00007fb547dad238,0x00007fb547dad240] = 8
----------------------------------------------------------------------
java/lang/ref/Reference.&lt;init&gt;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V  [0x00007fb547dacee0, 0x00007fb547dad150]  624 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cce4a30} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rsi:rsi   = &apos;java/lang/ref/Reference&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547dacee0: mov    0x8(%rsi),%r10d
  0x00007fb547dacee4: movabs $0x800000000,%r12
  0x00007fb547daceee: add    %r12,%r10
  0x00007fb547dacef1: xor    %r12,%r12
  0x00007fb547dacef4: cmp    %rax,%r10
  0x00007fb547dacef7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547dacefd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547dacf00: mov    %eax,-0x14000(%rsp)
  0x00007fb547dacf07: push   %rbp
  0x00007fb547dacf08: sub    $0x30,%rsp
  0x00007fb547dacf0c: movabs $0x7fb52d1b3518,%rdi  ;   {metadata(method data for {method} {0x00007fb52cce4a30} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007fb547dacf16: mov    0x100(%rdi),%ebx
  0x00007fb547dacf1c: add    $0x8,%ebx
  0x00007fb547dacf1f: mov    %ebx,0x100(%rdi)
  0x00007fb547dacf25: and    $0x1ff8,%ebx
  0x00007fb547dacf2b: cmp    $0x0,%ebx
  0x00007fb547dacf2e: je     0x00007fb547dad035  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 398)

  0x00007fb547dacf34: mov    %rsi,%rdi
  0x00007fb547dacf37: movabs $0x7fb52d1b3518,%rbx  ;   {metadata(method data for {method} {0x00007fb52cce4a30} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007fb547dacf41: addq   $0x1,0x140(%rbx)
  0x00007fb547dacf49: movabs $0x7fb52cedd4a0,%rdi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547dacf53: mov    0x100(%rdi),%ebx
  0x00007fb547dacf59: add    $0x8,%ebx
  0x00007fb547dacf5c: mov    %ebx,0x100(%rdi)
  0x00007fb547dacf62: and    $0x7ffff8,%ebx
  0x00007fb547dacf68: cmp    $0x0,%ebx
  0x00007fb547dacf6b: je     0x00007fb547dad056
  0x00007fb547dacf71: movsbl 0x30(%r15),%edi
  0x00007fb547dacf76: cmp    $0x0,%edi
  0x00007fb547dacf79: jne    0x00007fb547dad077
  0x00007fb547dacf7f: mov    %rdx,%r10
  0x00007fb547dacf82: shr    $0x3,%r10
  0x00007fb547dacf86: mov    %r10d,0xc(%rsi)
  0x00007fb547dacf8a: mov    %rsi,%rdi
  0x00007fb547dacf8d: xor    %rdx,%rdi
  0x00007fb547dacf90: shr    $0x15,%rdi
  0x00007fb547dacf94: cmp    $0x0,%rdi
  0x00007fb547dacf98: jne    0x00007fb547dad096  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)

  0x00007fb547dacf9e: cmp    $0x0,%rcx
  0x00007fb547dacfa2: movabs $0x7fb52d1b3518,%rdi  ;   {metadata(method data for {method} {0x00007fb52cce4a30} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007fb547dacfac: movabs $0x150,%rbx
  0x00007fb547dacfb6: jne    0x00007fb547dacfc6
  0x00007fb547dacfbc: movabs $0x160,%rbx
  0x00007fb547dacfc6: mov    (%rdi,%rbx,1),%rax
  0x00007fb547dacfca: lea    0x1(%rax),%rax
  0x00007fb547dacfce: mov    %rax,(%rdi,%rbx,1)
  0x00007fb547dacfd2: jne    0x00007fb547dacff2  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 400)

  0x00007fb547dacfd8: movabs $0x7fb52d1b3518,%rdi  ;   {metadata(method data for {method} {0x00007fb52cce4a30} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007fb547dacfe2: incl   0x170(%rdi)
  0x00007fb547dacfe8: movabs $0x62d8089d8,%rcx  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 400)
                                                ;   {oop(a &apos;java/lang/ref/ReferenceQueue$Null&apos;{0x000000062d8089d8})}
  0x00007fb547dacff2: movsbl 0x30(%r15),%edi
  0x00007fb547dacff7: cmp    $0x0,%edi
  0x00007fb547dacffa: jne    0x00007fb547dad0ae
  0x00007fb547dad000: mov    %rcx,%r10
  0x00007fb547dad003: shr    $0x3,%r10
  0x00007fb547dad007: mov    %r10d,0x10(%rsi)
  0x00007fb547dad00b: lock addl $0x0,-0x40(%rsp)
  0x00007fb547dad011: mov    %rsi,%rdi
  0x00007fb547dad014: xor    %rcx,%rdi
  0x00007fb547dad017: shr    $0x15,%rdi
  0x00007fb547dad01b: cmp    $0x0,%rdi
  0x00007fb547dad01f: jne    0x00007fb547dad0cd  ;*putfield queue {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 400)

  0x00007fb547dad025: add    $0x30,%rsp
  0x00007fb547dad029: pop    %rbp
  0x00007fb547dad02a: mov    0x108(%r15),%r10
  0x00007fb547dad031: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dad034: retq   
  0x00007fb547dad035: movabs $0x7fb52cce4a30,%r10  ;   {metadata({method} {0x00007fb52cce4a30} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00007fb547dad03f: mov    %r10,0x8(%rsp)
  0x00007fb547dad044: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dad04c: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 398)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dad051: jmpq   0x00007fb547dacf34
  0x00007fb547dad056: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547dad060: mov    %r10,0x8(%rsp)
  0x00007fb547dad065: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dad06d: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 398)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dad072: jmpq   0x00007fb547dacf71
  0x00007fb547dad077: mov    0xc(%rsi),%edi
  0x00007fb547dad07a: shl    $0x3,%rdi
  0x00007fb547dad07e: cmp    $0x0,%rdi
  0x00007fb547dad082: je     0x00007fb547dacf7f
  0x00007fb547dad088: mov    %rdi,(%rsp)
  0x00007fb547dad08c: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547dad091: jmpq   0x00007fb547dacf7f
  0x00007fb547dad096: cmp    $0x0,%rdx
  0x00007fb547dad09a: je     0x00007fb547dacf9e
  0x00007fb547dad0a0: mov    %rsi,(%rsp)
  0x00007fb547dad0a4: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547dad0a9: jmpq   0x00007fb547dacf9e
  0x00007fb547dad0ae: mov    0x10(%rsi),%edi
  0x00007fb547dad0b1: shl    $0x3,%rdi
  0x00007fb547dad0b5: cmp    $0x0,%rdi
  0x00007fb547dad0b9: je     0x00007fb547dad000
  0x00007fb547dad0bf: mov    %rdi,(%rsp)
  0x00007fb547dad0c3: callq  0x00007fb5478f8700  ;   {runtime_call g1_pre_barrier_slow}
  0x00007fb547dad0c8: jmpq   0x00007fb547dad000
  0x00007fb547dad0cd: cmp    $0x0,%rcx
  0x00007fb547dad0d1: je     0x00007fb547dad025
  0x00007fb547dad0d7: mov    %rsi,(%rsp)
  0x00007fb547dad0db: callq  0x00007fb5478f8a00  ;   {runtime_call g1_post_barrier_slow}
  0x00007fb547dad0e0: jmpq   0x00007fb547dad025
  0x00007fb547dad0e5: nop
  0x00007fb547dad0e6: nop
  0x00007fb547dad0e7: mov    0x440(%r15),%rax
  0x00007fb547dad0ee: movabs $0x0,%r10
  0x00007fb547dad0f8: mov    %r10,0x440(%r15)
  0x00007fb547dad0ff: movabs $0x0,%r10
  0x00007fb547dad109: mov    %r10,0x448(%r15)
  0x00007fb547dad110: add    $0x30,%rsp
  0x00007fb547dad114: pop    %rbp
  0x00007fb547dad115: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547dad11a: hlt    
  0x00007fb547dad11b: hlt    
  0x00007fb547dad11c: hlt    
  0x00007fb547dad11d: hlt    
  0x00007fb547dad11e: hlt    
  0x00007fb547dad11f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547dad120: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547dad125: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547dad12f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547dad133: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547dad138: hlt    
[Deopt Handler Code]
  0x00007fb547dad139: movabs $0x7fb547dad139,%r10  ;   {section_word}
  0x00007fb547dad143: push   %r10
  0x00007fb547dad145: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547dad14a: hlt    
  0x00007fb547dad14b: hlt    
  0x00007fb547dad14c: hlt    
  0x00007fb547dad14d: hlt    
  0x00007fb547dad14e: hlt    
  0x00007fb547dad14f: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 369 402 </print_nmethod>
<writer thread='1329923'/>
<print_native_nmethod method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.983' address='0x00007fb54f2cf510'>
Compiled method (nm)     982   97     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)L (native)
 total in heap  [0x00007fb54f2cf510,0x00007fb54f2cf6c0] = 432
 relocation     [0x00007fb54f2cf688,0x00007fb54f2cf690] = 8
 main code      [0x00007fb54f2cf6a0,0x00007fb54f2cf6c0] = 32
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2cf6a0, 0x00007fb54f2cf6c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1b37a0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cf6a0: cmp    (%rsi),%rax
  0x00007fb54f2cf6a3: mov    0x24(%rdx),%ebx
  0x00007fb54f2cf6a6: shl    $0x3,%rbx
  0x00007fb54f2cf6aa: mov    0x10(%rbx),%rbx
  0x00007fb54f2cf6ae: test   %rbx,%rbx
  0x00007fb54f2cf6b1: je     0x00007fb54f2cf6ba
  0x00007fb54f2cf6b7: jmpq   *0x38(%rbx)
  0x00007fb54f2cf6ba: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cf6bf: hlt    
</print_native_nmethod>
<nmethod compile_id='97' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cf6a0' size='432' address='0x00007fb54f2cf510' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.984'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007fb54f2cf6a0, 0x00007fb54f2cf6c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1b37a0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cf6a0: cmp    (%rsi),%rax
  0x00007fb54f2cf6a3: mov    0x24(%rdx),%ebx
  0x00007fb54f2cf6a6: shl    $0x3,%rbx
  0x00007fb54f2cf6aa: mov    0x10(%rbx),%rbx
  0x00007fb54f2cf6ae: test   %rbx,%rbx
  0x00007fb54f2cf6b1: je     0x00007fb54f2cf6ba
  0x00007fb54f2cf6b7: jmpq   *0x38(%rbx)
  0x00007fb54f2cf6ba: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cf6bf: hlt    
<writer thread='1329936'/>
<nmethod compile_id='93' compiler='c1' level='1' entry='0x00007fb54f2cf9c0' size='704' address='0x00007fb54f2cf810' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' metadata_offset='608' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='155' iicount='155' stamp='0.984'/>
<print_nmethod stamp='0.984'>
Compiled method (c1)     984   93       1       java.lang.invoke.MethodType::returnType (5 bytes)
 total in heap  [0x00007fb54f2cf810,0x00007fb54f2cfad0] = 704
 relocation     [0x00007fb54f2cf988,0x00007fb54f2cf9a8] = 32
 main code      [0x00007fb54f2cf9c0,0x00007fb54f2cfa40] = 128
 stub code      [0x00007fb54f2cfa40,0x00007fb54f2cfa70] = 48
 metadata       [0x00007fb54f2cfa70,0x00007fb54f2cfa78] = 8
 scopes data    [0x00007fb54f2cfa78,0x00007fb54f2cfa88] = 16
 scopes pcs     [0x00007fb54f2cfa88,0x00007fb54f2cfac8] = 64
 dependencies   [0x00007fb54f2cfac8,0x00007fb54f2cfad0] = 8
----------------------------------------------------------------------
java/lang/invoke/MethodType.returnType()Ljava/lang/Class;  [0x00007fb54f2cf9c0, 0x00007fb54f2cfa70]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cd44938} &apos;returnType&apos; &apos;()Ljava/lang/Class;&apos; in &apos;java/lang/invoke/MethodType&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2cf9c0: mov    0x8(%rsi),%r10d
  0x00007fb54f2cf9c4: movabs $0x800000000,%r12
  0x00007fb54f2cf9ce: add    %r12,%r10
  0x00007fb54f2cf9d1: xor    %r12,%r12
  0x00007fb54f2cf9d4: cmp    %rax,%r10
  0x00007fb54f2cf9d7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cf9dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2cf9e0: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cf9e7: push   %rbp
  0x00007fb54f2cf9e8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::returnType@0 (line 741)

  0x00007fb54f2cf9ec: mov    0xc(%rsi),%eax
  0x00007fb54f2cf9ef: shl    $0x3,%rax          ;*getfield rtype {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::returnType@1 (line 741)

  0x00007fb54f2cf9f3: add    $0x30,%rsp
  0x00007fb54f2cf9f7: pop    %rbp
  0x00007fb54f2cf9f8: mov    0x108(%r15),%r10
  0x00007fb54f2cf9ff: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2cfa02: retq   
  0x00007fb54f2cfa03: nop
  0x00007fb54f2cfa04: nop
  0x00007fb54f2cfa05: mov    0x440(%r15),%rax
  0x00007fb54f2cfa0c: movabs $0x0,%r10
  0x00007fb54f2cfa16: mov    %r10,0x440(%r15)
  0x00007fb54f2cfa1d: movabs $0x0,%r10
  0x00007fb54f2cfa27: mov    %r10,0x448(%r15)
  0x00007fb54f2cfa2e: add    $0x30,%rsp
  0x00007fb54f2cfa32: pop    %rbp
  0x00007fb54f2cfa33: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2cfa38: hlt    
  0x00007fb54f2cfa39: hlt    
  0x00007fb54f2cfa3a: hlt    
  0x00007fb54f2cfa3b: hlt    
  0x00007fb54f2cfa3c: hlt    
  0x00007fb54f2cfa3d: hlt    
  0x00007fb54f2cfa3e: hlt    
  0x00007fb54f2cfa3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2cfa40: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2cfa45: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2cfa4f: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2cfa53: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2cfa58: hlt    
[Deopt Handler Code]
  0x00007fb54f2cfa59: movabs $0x7fb54f2cfa59,%r10  ;   {section_word}
  0x00007fb54f2cfa63: push   %r10
  0x00007fb54f2cfa65: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2cfa6a: hlt    
  0x00007fb54f2cfa6b: hlt    
  0x00007fb54f2cfa6c: hlt    
  0x00007fb54f2cfa6d: hlt    
  0x00007fb54f2cfa6e: hlt    
  0x00007fb54f2cfa6f: hlt    
</print_nmethod>
<writer thread='1329923'/>
<task_queued compile_id='98' method='java.lang.StringLatin1 lastIndexOf ([BII)I' bytes='40' count='128' backedge_count='2912' iicount='128' level='3' stamp='0.986' comment='tiered' hot_count='128'/>
<writer thread='1329936'/>
<nmethod compile_id='98' compiler='c1' level='3' entry='0x00007fb547dad460' size='2056' address='0x00007fb547dad290' relocation_offset='376' insts_offset='464' stub_offset='1360' scopes_data_offset='1432' scopes_pcs_offset='1632' dependencies_offset='2032' nul_chk_table_offset='2040' metadata_offset='1408' method='java.lang.StringLatin1 lastIndexOf ([BII)I' bytes='40' count='128' backedge_count='2927' iicount='128' stamp='0.986'/>
<print_nmethod stamp='0.986'>
Compiled method (c1)     985   98       3       java.lang.StringLatin1::lastIndexOf (40 bytes)
 total in heap  [0x00007fb547dad290,0x00007fb547dada98] = 2056
 relocation     [0x00007fb547dad408,0x00007fb547dad460] = 88
 main code      [0x00007fb547dad460,0x00007fb547dad7e0] = 896
 stub code      [0x00007fb547dad7e0,0x00007fb547dad810] = 48
 metadata       [0x00007fb547dad810,0x00007fb547dad828] = 24
 scopes data    [0x00007fb547dad828,0x00007fb547dad8f0] = 200
 scopes pcs     [0x00007fb547dad8f0,0x00007fb547dada80] = 400
 dependencies   [0x00007fb547dada80,0x00007fb547dada88] = 8
 nul chk table  [0x00007fb547dada88,0x00007fb547dada98] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.lastIndexOf([BII)I  [0x00007fb547dad460, 0x00007fb547dad810]  944 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007fb547dad460: mov    %eax,-0x14000(%rsp)
  0x00007fb547dad467: push   %rbp
  0x00007fb547dad468: sub    $0x40,%rsp
  0x00007fb547dad46c: movabs $0x7fb52d1b38f8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad476: mov    0x100(%rax),%edi
  0x00007fb547dad47c: add    $0x8,%edi
  0x00007fb547dad47f: mov    %edi,0x100(%rax)
  0x00007fb547dad485: and    $0x1ff8,%edi
  0x00007fb547dad48b: cmp    $0x0,%edi
  0x00007fb547dad48e: je     0x00007fb547dad70f  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@0 (line 284)

  0x00007fb547dad494: movabs $0x7fb52d1b38f8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad49e: addq   $0x1,0x140(%rax)
  0x00007fb547dad4a6: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad4b0: mov    0x100(%rax),%edi
  0x00007fb547dad4b6: add    $0x8,%edi
  0x00007fb547dad4b9: mov    %edi,0x100(%rax)
  0x00007fb547dad4bf: and    $0x7ffff8,%edi
  0x00007fb547dad4c5: cmp    $0x0,%edi
  0x00007fb547dad4c8: je     0x00007fb547dad730
  0x00007fb547dad4ce: mov    %rdx,%rax
  0x00007fb547dad4d1: shr    $0x8,%eax
  0x00007fb547dad4d4: cmp    $0x0,%eax
  0x00007fb547dad4d7: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad4e1: movabs $0x140,%rdi
  0x00007fb547dad4eb: jne    0x00007fb547dad4fb
  0x00007fb547dad4f1: movabs $0x150,%rdi
  0x00007fb547dad4fb: mov    (%rax,%rdi,1),%rbx
  0x00007fb547dad4ff: lea    0x1(%rbx),%rbx
  0x00007fb547dad503: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547dad507: jne    0x00007fb547dad527  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)

  0x00007fb547dad50d: movabs $0x7fb52d0a6830,%rax  ;   {metadata(method data for {method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad517: incl   0x160(%rax)
  0x00007fb547dad51d: mov    $0x1,%eax
  0x00007fb547dad522: jmpq   0x00007fb547dad52c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)

  0x00007fb547dad527: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)

  0x00007fb547dad52c: and    $0x1,%eax
  0x00007fb547dad52f: cmp    $0x0,%eax
  0x00007fb547dad532: movabs $0x7fb52d1b38f8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad53c: movabs $0x160,%rdi
  0x00007fb547dad546: je     0x00007fb547dad556
  0x00007fb547dad54c: movabs $0x150,%rdi
  0x00007fb547dad556: mov    (%rax,%rdi,1),%rbx
  0x00007fb547dad55a: lea    0x1(%rbx),%rbx
  0x00007fb547dad55e: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547dad562: je     0x00007fb547dad6fa  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@4 (line 284)

  0x00007fb547dad568: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@11 (line 287)
                                                ; implicit exception: dispatches to 0x00007fb547dad751
  0x00007fb547dad56b: dec    %eax
  0x00007fb547dad56d: movabs $0x7fb52d1b38f8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad577: addq   $0x1,0x170(%rdi)
  0x00007fb547dad57f: movabs $0x7fb52d0a3ad8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547dad589: mov    0x100(%rdi),%ebx
  0x00007fb547dad58f: add    $0x8,%ebx
  0x00007fb547dad592: mov    %ebx,0x100(%rdi)
  0x00007fb547dad598: and    $0x7ffff8,%ebx
  0x00007fb547dad59e: cmp    $0x0,%ebx
  0x00007fb547dad5a1: je     0x00007fb547dad756
  0x00007fb547dad5a7: cmp    %eax,%ecx
  0x00007fb547dad5a9: movabs $0x7fb52d0a3ad8,%rdi  ;   {metadata(method data for {method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547dad5b3: movabs $0x140,%rbx
  0x00007fb547dad5bd: jg     0x00007fb547dad5cd
  0x00007fb547dad5c3: movabs $0x150,%rbx
  0x00007fb547dad5cd: mov    (%rdi,%rbx,1),%r8
  0x00007fb547dad5d1: lea    0x1(%r8),%r8
  0x00007fb547dad5d5: mov    %r8,(%rdi,%rbx,1)
  0x00007fb547dad5d9: jg     0x00007fb547dad5f4  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1521)
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)

  0x00007fb547dad5df: movabs $0x7fb52d0a3ad8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547dad5e9: incl   0x160(%rax)
  0x00007fb547dad5ef: jmpq   0x00007fb547dad694  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1521)
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)

  0x00007fb547dad5f4: mov    %rax,%rcx
  0x00007fb547dad5f7: jmpq   0x00007fb547dad694  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1521)
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)

  0x00007fb547dad5fc: nopl   0x0(%rax)
  0x00007fb547dad600: cmp    0xc(%rsi),%ecx
  0x00007fb547dad603: jae    0x00007fb547dad777
  0x00007fb547dad609: movslq %ecx,%rax
  0x00007fb547dad60c: movsbl 0x10(%rsi,%rax,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007fb547dad611: mov    %rdx,%rdi
  0x00007fb547dad614: movsbl %dil,%edi
  0x00007fb547dad618: cmp    %edi,%eax
  0x00007fb547dad61a: movabs $0x7fb52d1b38f8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad624: movabs $0x1b0,%rdi
  0x00007fb547dad62e: je     0x00007fb547dad63e
  0x00007fb547dad634: movabs $0x1a0,%rdi
  0x00007fb547dad63e: mov    (%rax,%rdi,1),%rbx
  0x00007fb547dad642: lea    0x1(%rbx),%rbx
  0x00007fb547dad646: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547dad64a: je     0x00007fb547dad6d2  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007fb547dad650: dec    %ecx
  0x00007fb547dad652: movabs $0x7fb52d1b38f8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad65c: mov    0x104(%rax),%edi
  0x00007fb547dad662: add    $0x8,%edi
  0x00007fb547dad665: mov    %edi,0x104(%rax)
  0x00007fb547dad66b: and    $0xfff8,%edi
  0x00007fb547dad671: cmp    $0x0,%edi
  0x00007fb547dad674: je     0x00007fb547dad785  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)

  0x00007fb547dad67a: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)

  0x00007fb547dad681: test   %eax,(%r10)        ;   {poll}
  0x00007fb547dad684: movabs $0x7fb52d1b38f8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad68e: incl   0x1c0(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)

  0x00007fb547dad694: cmp    $0x0,%ecx
  0x00007fb547dad697: movabs $0x7fb52d1b38f8,%rax  ;   {metadata(method data for {method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad6a1: movabs $0x180,%rdi
  0x00007fb547dad6ab: jl     0x00007fb547dad6bb
  0x00007fb547dad6b1: movabs $0x190,%rdi
  0x00007fb547dad6bb: mov    (%rax,%rdi,1),%rbx
  0x00007fb547dad6bf: lea    0x1(%rbx),%rbx
  0x00007fb547dad6c3: mov    %rbx,(%rax,%rdi,1)
  0x00007fb547dad6c7: jl     0x00007fb547dad6e5
  0x00007fb547dad6cd: jmpq   0x00007fb547dad600  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@19 (line 288)

  0x00007fb547dad6d2: mov    %rcx,%rax
  0x00007fb547dad6d5: add    $0x40,%rsp
  0x00007fb547dad6d9: pop    %rbp
  0x00007fb547dad6da: mov    0x108(%r15),%r10
  0x00007fb547dad6e1: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dad6e4: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@31 (line 290)

  0x00007fb547dad6e5: mov    $0xffffffff,%eax
  0x00007fb547dad6ea: add    $0x40,%rsp
  0x00007fb547dad6ee: pop    %rbp
  0x00007fb547dad6ef: mov    0x108(%r15),%r10
  0x00007fb547dad6f6: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dad6f9: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@39 (line 293)

  0x00007fb547dad6fa: mov    $0xffffffff,%eax
  0x00007fb547dad6ff: add    $0x40,%rsp
  0x00007fb547dad703: pop    %rbp
  0x00007fb547dad704: mov    0x108(%r15),%r10
  0x00007fb547dad70b: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dad70e: retq   
  0x00007fb547dad70f: movabs $0x7fb52ce09650,%r10  ;   {metadata({method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad719: mov    %r10,0x8(%rsp)
  0x00007fb547dad71e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dad726: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::lastIndexOf@-1 (line 284)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dad72b: jmpq   0x00007fb547dad494
  0x00007fb547dad730: movabs $0x7fb52ce07f58,%r10  ;   {metadata({method} {0x00007fb52ce07f58} &apos;canEncode&apos; &apos;(I)Z&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad73a: mov    %r10,0x8(%rsp)
  0x00007fb547dad73f: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dad747: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dad74c: jmpq   0x00007fb547dad4ce
  0x00007fb547dad751: callq  0x00007fb5478f3020  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@11 (line 287)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547dad756: movabs $0x7fb52ce2eea8,%r10  ;   {metadata({method} {0x00007fb52ce2eea8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007fb547dad760: mov    %r10,0x8(%rsp)
  0x00007fb547dad765: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dad76d: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1521)
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dad772: jmpq   0x00007fb547dad5a7
  0x00007fb547dad777: mov    %rcx,(%rsp)
  0x00007fb547dad77b: mov    %rsi,0x8(%rsp)
  0x00007fb547dad780: callq  0x00007fb5478eeca0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007fb547dad785: movabs $0x7fb52ce09650,%r10  ;   {metadata({method} {0x00007fb52ce09650} &apos;lastIndexOf&apos; &apos;([BII)I&apos; in &apos;java/lang/StringLatin1&apos;)}
  0x00007fb547dad78f: mov    %r10,0x8(%rsp)
  0x00007fb547dad794: movq   $0x23,(%rsp)
  0x00007fb547dad79c: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dad7a1: jmpq   0x00007fb547dad67a
  0x00007fb547dad7a6: nop
  0x00007fb547dad7a7: nop
  0x00007fb547dad7a8: mov    0x440(%r15),%rax
  0x00007fb547dad7af: movabs $0x0,%r10
  0x00007fb547dad7b9: mov    %r10,0x440(%r15)
  0x00007fb547dad7c0: movabs $0x0,%r10
  0x00007fb547dad7ca: mov    %r10,0x448(%r15)
  0x00007fb547dad7d1: add    $0x40,%rsp
  0x00007fb547dad7d5: pop    %rbp
  0x00007fb547dad7d6: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547dad7db: hlt    
  0x00007fb547dad7dc: hlt    
  0x00007fb547dad7dd: hlt    
  0x00007fb547dad7de: hlt    
  0x00007fb547dad7df: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547dad7e0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547dad7e5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547dad7ef: and    $0xfffffffffffffff0,%rsp
  0x00007fb547dad7f3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547dad7f8: hlt    
[Deopt Handler Code]
  0x00007fb547dad7f9: movabs $0x7fb547dad7f9,%r10  ;   {section_word}
  0x00007fb547dad803: push   %r10
  0x00007fb547dad805: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547dad80a: hlt    
  0x00007fb547dad80b: hlt    
  0x00007fb547dad80c: hlt    
  0x00007fb547dad80d: hlt    
  0x00007fb547dad80e: hlt    
  0x00007fb547dad80f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 545 715 748 758 786 805 833 </print_nmethod>
<writer thread='1329958'/>
<print_native_nmethod method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.994' address='0x00007fb54f2cfb10'>
Compiled method (nm)     993  100     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)I (native)
 total in heap  [0x00007fb54f2cfb10,0x00007fb54f2cfcc0] = 432
 relocation     [0x00007fb54f2cfc88,0x00007fb54f2cfc90] = 8
 main code      [0x00007fb54f2cfca0,0x00007fb54f2cfcc0] = 32
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x00007fb54f2cfca0, 0x00007fb54f2cfcc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1bb698} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cfca0: mov    0x24(%r9),%ebx
  0x00007fb54f2cfca4: shl    $0x3,%rbx
  0x00007fb54f2cfca8: mov    0x10(%rbx),%rbx
  0x00007fb54f2cfcac: test   %rbx,%rbx
  0x00007fb54f2cfcaf: je     0x00007fb54f2cfcb8
  0x00007fb54f2cfcb5: jmpq   *0x38(%rbx)
  0x00007fb54f2cfcb8: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cfcbd: hlt    
  0x00007fb54f2cfcbe: hlt    
  0x00007fb54f2cfcbf: hlt    
</print_native_nmethod>
<nmethod compile_id='100' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cfca0' size='432' address='0x00007fb54f2cfb10' relocation_offset='376' consts_offset='432' insts_offset='400' method='java.lang.invoke.MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.994'/>
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x00007fb54f2cfca0, 0x00007fb54f2cfcc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007fb52d1bb698} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00007fb54f2cfca0: mov    0x24(%r9),%ebx
  0x00007fb54f2cfca4: shl    $0x3,%rbx
  0x00007fb54f2cfca8: mov    0x10(%rbx),%rbx
  0x00007fb54f2cfcac: test   %rbx,%rbx
  0x00007fb54f2cfcaf: je     0x00007fb54f2cfcb8
  0x00007fb54f2cfcb5: jmpq   *0x38(%rbx)
  0x00007fb54f2cfcb8: jmpq   0x00007fb54782e600  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007fb54f2cfcbd: hlt    
  0x00007fb54f2cfcbe: hlt    
  0x00007fb54f2cfcbf: hlt    
<writer thread='1329957'/>
<task_queued compile_id='99' method='java.lang.invoke.MethodType checkPtype (Ljava/lang/Class;)V' bytes='19' count='284' iicount='284' level='3' stamp='0.995' comment='tiered' hot_count='256'/>
<writer thread='1329923'/>
<task_queued compile_id='101' method='java.lang.System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='258' iicount='258' level='3' stamp='0.995' comment='tiered' hot_count='256'/>
<writer thread='1329957'/>
<print_native_nmethod method='java.lang.Class isArray ()Z' bytes='0' count='256' iicount='256' stamp='0.995' address='0x00007fb54f2cfe10'>
Compiled method (nm)     995  102     n 0       java.lang.Class::isArray (native)
 total in heap  [0x00007fb54f2cfe10,0x00007fb54f2d01b0] = 928
 relocation     [0x00007fb54f2cff88,0x00007fb54f2cffb8] = 48
 main code      [0x00007fb54f2cffc0,0x00007fb54f2d01b0] = 496
----------------------------------------------------------------------
java/lang/Class.isArray()Z  [0x00007fb54f2cffc0, 0x00007fb54f2d01b0]  496 bytes
[Entry Point]
  # {method} {0x00007fb52ccbf838} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2cffc0: mov    0x8(%rsi),%r10d
  0x00007fb54f2cffc4: movabs $0x800000000,%r12
  0x00007fb54f2cffce: add    %r12,%r10
  0x00007fb54f2cffd1: xor    %r12,%r12
  0x00007fb54f2cffd4: cmp    %r10,%rax
  0x00007fb54f2cffd7: je     0x00007fb54f2cffe8
  0x00007fb54f2cffdd: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cffe2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2cffe8: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cffef: push   %rbp
  0x00007fb54f2cfff0: mov    %rsp,%rbp
  0x00007fb54f2cfff3: sub    $0x40,%rsp
  0x00007fb54f2cfff7: mov    %rsi,(%rsp)
  0x00007fb54f2cfffb: cmp    $0x0,%rsi
  0x00007fb54f2cffff: lea    (%rsp),%rsi
  0x00007fb54f2d0003: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2d0008: vzeroupper 
  0x00007fb54f2d000b: movabs $0x7fb54f2d0008,%r10  ;   {internal_word}
  0x00007fb54f2d0015: mov    %r10,0x330(%r15)
  0x00007fb54f2d001c: mov    %rsp,0x328(%r15)
  0x00007fb54f2d0023: cmpb   $0x0,0x166b97ad(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d002a: je     0x00007fb54f2d0062
  0x00007fb54f2d0030: push   %rsi
  0x00007fb54f2d0031: movabs $0x7fb52ccbf838,%rsi  ;   {metadata({method} {0x00007fb52ccbf838} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x00007fb54f2d003b: mov    %r15,%rdi
  0x00007fb54f2d003e: test   $0xf,%esp
  0x00007fb54f2d0044: je     0x00007fb54f2d005c
  0x00007fb54f2d004a: sub    $0x8,%rsp
  0x00007fb54f2d004e: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d0053: add    $0x8,%rsp
  0x00007fb54f2d0057: jmpq   0x00007fb54f2d0061
  0x00007fb54f2d005c: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d0061: pop    %rsi
  0x00007fb54f2d0062: lea    0x348(%r15),%rdi
  0x00007fb54f2d0069: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2d0074: callq  0x00007fb564d8aed0  ;   {runtime_call JVM_IsArrayClass}
  0x00007fb54f2d0079: vzeroupper 
  0x00007fb54f2d007c: and    $0xff,%eax
  0x00007fb54f2d0082: setne  %al
  0x00007fb54f2d0085: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2d0090: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2d0096: testb  $0x8,0x108(%r15)
  0x00007fb54f2d009e: jne    0x00007fb54f2d00b5
  0x00007fb54f2d00a4: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2d00af: je     0x00007fb54f2d00d9
  0x00007fb54f2d00b5: vzeroupper 
  0x00007fb54f2d00b8: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d00bc: mov    %r15,%rdi
  0x00007fb54f2d00bf: mov    %rsp,%r12
  0x00007fb54f2d00c2: sub    $0x0,%rsp
  0x00007fb54f2d00c6: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d00ca: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2d00cf: mov    %r12,%rsp
  0x00007fb54f2d00d2: xor    %r12,%r12
  0x00007fb54f2d00d5: mov    -0x8(%rbp),%rax
  0x00007fb54f2d00d9: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2d00e4: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2d00ef: je     0x00007fb54f2d0185
  0x00007fb54f2d00f5: cmpb   $0x0,0x166b96db(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d00fc: je     0x00007fb54f2d013a
  0x00007fb54f2d0102: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d0106: movabs $0x7fb52ccbf838,%rsi  ;   {metadata({method} {0x00007fb52ccbf838} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x00007fb54f2d0110: mov    %r15,%rdi
  0x00007fb54f2d0113: test   $0xf,%esp
  0x00007fb54f2d0119: je     0x00007fb54f2d0131
  0x00007fb54f2d011f: sub    $0x8,%rsp
  0x00007fb54f2d0123: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d0128: add    $0x8,%rsp
  0x00007fb54f2d012c: jmpq   0x00007fb54f2d0136
  0x00007fb54f2d0131: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d0136: mov    -0x8(%rbp),%rax
  0x00007fb54f2d013a: movabs $0x0,%r10
  0x00007fb54f2d0144: mov    %r10,0x328(%r15)
  0x00007fb54f2d014b: movabs $0x0,%r10
  0x00007fb54f2d0155: mov    %r10,0x330(%r15)
  0x00007fb54f2d015c: vzeroupper 
  0x00007fb54f2d015f: mov    0xe0(%r15),%rcx
  0x00007fb54f2d0166: movl   $0x0,0x100(%rcx)
  0x00007fb54f2d0170: leaveq 
  0x00007fb54f2d0171: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2d0179: jne    0x00007fb54f2d0180
  0x00007fb54f2d017f: retq   
  0x00007fb54f2d0180: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2d0185: vzeroupper 
  0x00007fb54f2d0188: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d018c: mov    %rsp,%r12
  0x00007fb54f2d018f: sub    $0x0,%rsp
  0x00007fb54f2d0193: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d0197: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2d019c: mov    %r12,%rsp
  0x00007fb54f2d019f: xor    %r12,%r12
  0x00007fb54f2d01a2: mov    -0x8(%rbp),%rax
  0x00007fb54f2d01a6: jmpq   0x00007fb54f2d00f5
  0x00007fb54f2d01ab: hlt    
  0x00007fb54f2d01ac: hlt    
  0x00007fb54f2d01ad: hlt    
  0x00007fb54f2d01ae: hlt    
  0x00007fb54f2d01af: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[0]=Oop off=72}
</print_native_nmethod>
<nmethod compile_id='102' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2cffc0' size='928' address='0x00007fb54f2cfe10' relocation_offset='376' consts_offset='928' insts_offset='432' method='java.lang.Class isArray ()Z' bytes='0' count='256' iicount='256' stamp='0.997'/>
----------------------------------------------------------------------
java/lang/Class.isArray()Z  [0x00007fb54f2cffc0, 0x00007fb54f2d01b0]  496 bytes
[Entry Point]
  # {method} {0x00007fb52ccbf838} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2cffc0: mov    0x8(%rsi),%r10d
  0x00007fb54f2cffc4: movabs $0x800000000,%r12
  0x00007fb54f2cffce: add    %r12,%r10
  0x00007fb54f2cffd1: xor    %r12,%r12
  0x00007fb54f2cffd4: cmp    %r10,%rax
  0x00007fb54f2cffd7: je     0x00007fb54f2cffe8
  0x00007fb54f2cffdd: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2cffe2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2cffe8: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2cffef: push   %rbp
  0x00007fb54f2cfff0: mov    %rsp,%rbp
  0x00007fb54f2cfff3: sub    $0x40,%rsp
  0x00007fb54f2cfff7: mov    %rsi,(%rsp)
  0x00007fb54f2cfffb: cmp    $0x0,%rsi
  0x00007fb54f2cffff: lea    (%rsp),%rsi
  0x00007fb54f2d0003: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2d0008: vzeroupper 
  0x00007fb54f2d000b: movabs $0x7fb54f2d0008,%r10  ;   {internal_word}
  0x00007fb54f2d0015: mov    %r10,0x330(%r15)
  0x00007fb54f2d001c: mov    %rsp,0x328(%r15)
  0x00007fb54f2d0023: cmpb   $0x0,0x166b97ad(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d002a: je     0x00007fb54f2d0062
  0x00007fb54f2d0030: push   %rsi
  0x00007fb54f2d0031: movabs $0x7fb52ccbf838,%rsi  ;   {metadata({method} {0x00007fb52ccbf838} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x00007fb54f2d003b: mov    %r15,%rdi
  0x00007fb54f2d003e: test   $0xf,%esp
  0x00007fb54f2d0044: je     0x00007fb54f2d005c
  0x00007fb54f2d004a: sub    $0x8,%rsp
  0x00007fb54f2d004e: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d0053: add    $0x8,%rsp
  0x00007fb54f2d0057: jmpq   0x00007fb54f2d0061
  0x00007fb54f2d005c: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d0061: pop    %rsi
  0x00007fb54f2d0062: lea    0x348(%r15),%rdi
  0x00007fb54f2d0069: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2d0074: callq  0x00007fb564d8aed0  ;   {runtime_call JVM_IsArrayClass}
  0x00007fb54f2d0079: vzeroupper 
  0x00007fb54f2d007c: and    $0xff,%eax
  0x00007fb54f2d0082: setne  %al
  0x00007fb54f2d0085: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2d0090: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2d0096: testb  $0x8,0x108(%r15)
  0x00007fb54f2d009e: jne    0x00007fb54f2d00b5
  0x00007fb54f2d00a4: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2d00af: je     0x00007fb54f2d00d9
  0x00007fb54f2d00b5: vzeroupper 
  0x00007fb54f2d00b8: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d00bc: mov    %r15,%rdi
  0x00007fb54f2d00bf: mov    %rsp,%r12
  0x00007fb54f2d00c2: sub    $0x0,%rsp
  0x00007fb54f2d00c6: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d00ca: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2d00cf: mov    %r12,%rsp
  0x00007fb54f2d00d2: xor    %r12,%r12
  0x00007fb54f2d00d5: mov    -0x8(%rbp),%rax
  0x00007fb54f2d00d9: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2d00e4: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2d00ef: je     0x00007fb54f2d0185
  0x00007fb54f2d00f5: cmpb   $0x0,0x166b96db(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d00fc: je     0x00007fb54f2d013a
  0x00007fb54f2d0102: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d0106: movabs $0x7fb52ccbf838,%rsi  ;   {metadata({method} {0x00007fb52ccbf838} &apos;isArray&apos; &apos;()Z&apos; in &apos;java/lang/Class&apos;)}
  0x00007fb54f2d0110: mov    %r15,%rdi
  0x00007fb54f2d0113: test   $0xf,%esp
  0x00007fb54f2d0119: je     0x00007fb54f2d0131
  0x00007fb54f2d011f: sub    $0x8,%rsp
  0x00007fb54f2d0123: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d0128: add    $0x8,%rsp
  0x00007fb54f2d012c: jmpq   0x00007fb54f2d0136
  0x00007fb54f2d0131: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d0136: mov    -0x8(%rbp),%rax
  0x00007fb54f2d013a: movabs $0x0,%r10
  0x00007fb54f2d0144: mov    %r10,0x328(%r15)
  0x00007fb54f2d014b: movabs $0x0,%r10
  0x00007fb54f2d0155: mov    %r10,0x330(%r15)
  0x00007fb54f2d015c: vzeroupper 
  0x00007fb54f2d015f: mov    0xe0(%r15),%rcx
  0x00007fb54f2d0166: movl   $0x0,0x100(%rcx)
  0x00007fb54f2d0170: leaveq 
  0x00007fb54f2d0171: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2d0179: jne    0x00007fb54f2d0180
  0x00007fb54f2d017f: retq   
  0x00007fb54f2d0180: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2d0185: vzeroupper 
  0x00007fb54f2d0188: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d018c: mov    %rsp,%r12
  0x00007fb54f2d018f: sub    $0x0,%rsp
  0x00007fb54f2d0193: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d0197: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2d019c: mov    %r12,%rsp
  0x00007fb54f2d019f: xor    %r12,%r12
  0x00007fb54f2d01a2: mov    -0x8(%rbp),%rax
  0x00007fb54f2d01a6: jmpq   0x00007fb54f2d00f5
  0x00007fb54f2d01ab: hlt    
  0x00007fb54f2d01ac: hlt    
  0x00007fb54f2d01ad: hlt    
  0x00007fb54f2d01ae: hlt    
  0x00007fb54f2d01af: hlt    
<writer thread='1329958'/>
<task_queued compile_id='103' method='java.lang.AbstractStringBuilder isLatin1 ()Z' bytes='19' count='256' iicount='256' level='3' stamp='1.000' comment='tiered' hot_count='256'/>
<writer thread='1329936'/>
<nmethod compile_id='99' compiler='c1' level='3' entry='0x00007fb547dadd00' size='1952' address='0x00007fb547dadb10' relocation_offset='376' insts_offset='496' stub_offset='1360' scopes_data_offset='1472' scopes_pcs_offset='1624' dependencies_offset='1944' oops_offset='1440' metadata_offset='1448' method='java.lang.invoke.MethodType checkPtype (Ljava/lang/Class;)V' bytes='19' count='287' iicount='287' stamp='1.000'/>
<print_nmethod stamp='1.000'>
Compiled method (c1)     999   99       3       java.lang.invoke.MethodType::checkPtype (19 bytes)
 total in heap  [0x00007fb547dadb10,0x00007fb547dae2b0] = 1952
 relocation     [0x00007fb547dadc88,0x00007fb547dadcf0] = 104
 main code      [0x00007fb547dadd00,0x00007fb547dae060] = 864
 stub code      [0x00007fb547dae060,0x00007fb547dae0b0] = 80
 oops           [0x00007fb547dae0b0,0x00007fb547dae0b8] = 8
 metadata       [0x00007fb547dae0b8,0x00007fb547dae0d0] = 24
 scopes data    [0x00007fb547dae0d0,0x00007fb547dae168] = 152
 scopes pcs     [0x00007fb547dae168,0x00007fb547dae2a8] = 320
 dependencies   [0x00007fb547dae2a8,0x00007fb547dae2b0] = 8
----------------------------------------------------------------------
java/lang/invoke/MethodType.checkPtype(Ljava/lang/Class;)V  [0x00007fb547dadd00, 0x00007fb547dae0b0]  944 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cd42678} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Class&apos;
  #           [sp+0x70]  (sp of caller)
  0x00007fb547dadd00: mov    %eax,-0x14000(%rsp)
  0x00007fb547dadd07: push   %rbp
  0x00007fb547dadd08: sub    $0x60,%rsp
  0x00007fb547dadd0c: movabs $0x7fb52d1bbd80,%rdx  ;   {metadata(method data for {method} {0x00007fb52cd42678} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00007fb547dadd16: mov    0x100(%rdx),%edi
  0x00007fb547dadd1c: add    $0x8,%edi
  0x00007fb547dadd1f: mov    %edi,0x100(%rdx)
  0x00007fb547dadd25: and    $0x1ff8,%edi
  0x00007fb547dadd2b: cmp    $0x0,%edi
  0x00007fb547dadd2e: je     0x00007fb547dadf66  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::checkPtype@0 (line 157)

  0x00007fb547dadd34: movabs $0x7fb52d1bbd80,%rdx  ;   {metadata(method data for {method} {0x00007fb52cd42678} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00007fb547dadd3e: addq   $0x1,0x140(%rdx)
  0x00007fb547dadd46: movabs $0x7fb52ceefac0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547dadd50: mov    0x100(%rdx),%edi
  0x00007fb547dadd56: add    $0x8,%edi
  0x00007fb547dadd59: mov    %edi,0x100(%rdx)
  0x00007fb547dadd5f: and    $0x7ffff8,%edi
  0x00007fb547dadd65: cmp    $0x0,%edi
  0x00007fb547dadd68: je     0x00007fb547dadf87
  0x00007fb547dadd6e: cmp    $0x0,%rsi
  0x00007fb547dadd72: movabs $0x7fb52ceefac0,%rdx  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547dadd7c: movabs $0x150,%rdi
  0x00007fb547dadd86: je     0x00007fb547dadd96
  0x00007fb547dadd8c: movabs $0x140,%rdi
  0x00007fb547dadd96: mov    (%rdx,%rdi,1),%rax
  0x00007fb547dadd9a: lea    0x1(%rax),%rax
  0x00007fb547dadd9e: mov    %rax,(%rdx,%rdi,1)
  0x00007fb547dadda2: je     0x00007fb547dadece  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 157)

  0x00007fb547dadda8: movabs $0x62d800390,%r10  ;   {oop(a &apos;java/lang/Class&apos;{0x000000062d800390} = void)}
  0x00007fb547daddb2: cmp    %r10,%rsi
  0x00007fb547daddb5: movabs $0x7fb52d1bbd80,%rdx  ;   {metadata(method data for {method} {0x00007fb52cd42678} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00007fb547daddbf: movabs $0x160,%rsi
  0x00007fb547daddc9: je     0x00007fb547daddd9
  0x00007fb547daddcf: movabs $0x150,%rsi
  0x00007fb547daddd9: mov    (%rdx,%rsi,1),%rdi
  0x00007fb547dadddd: lea    0x1(%rdi),%rdi
  0x00007fb547dadde1: mov    %rdi,(%rdx,%rsi,1)
  0x00007fb547dadde5: je     0x00007fb547daddfb  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::checkPtype@9 (line 158)

  0x00007fb547daddeb: add    $0x60,%rsp
  0x00007fb547daddef: pop    %rbp
  0x00007fb547daddf0: mov    0x108(%r15),%r10
  0x00007fb547daddf7: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547daddfa: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::checkPtype@18 (line 160)

  0x00007fb547daddfb: movabs $0x7fb52d1bbd80,%rdx  ;   {metadata(method data for {method} {0x00007fb52cd42678} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00007fb547dade05: addq   $0x1,0x170(%rdx)
  0x00007fb547dade0d: movabs $0x7fb52d1bbf40,%rdx  ;   {metadata(method data for {method} {0x00007fb52cea03a8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x00007fb547dade17: mov    0x100(%rdx),%esi
  0x00007fb547dade1d: add    $0x8,%esi
  0x00007fb547dade20: mov    %esi,0x100(%rdx)
  0x00007fb547dade26: and    $0x7ffff8,%esi
  0x00007fb547dade2c: cmp    $0x0,%esi
  0x00007fb547dade2f: je     0x00007fb547dadfa8
  0x00007fb547dade35: data16 xchg %ax,%ax
  0x00007fb547dade38: jmpq   0x00007fb547dadfd8  ;   {no_reloc}
  0x00007fb547dade3d: add    %al,(%rax)
  0x00007fb547dade3f: add    %al,(%rax)
  0x00007fb547dade41: add    %cl,-0x75(%rcx)
  0x00007fb547dade44: xchg   %ebx,(%rax)
  0x00007fb547dade46: add    %eax,(%rax)
  0x00007fb547dade48: add    %cl,-0x73(%rax)
  0x00007fb547dade4b: js     0x00007fb547dade75
  0x00007fb547dade4d: cmp    0x128(%r15),%rdi
  0x00007fb547dade54: ja     0x00007fb547dadfe2
  0x00007fb547dade5a: mov    %rdi,0x118(%r15)
  0x00007fb547dade61: mov    0xb8(%rdx),%rcx
  0x00007fb547dade68: mov    %rcx,(%rax)
  0x00007fb547dade6b: mov    %rdx,%rcx
  0x00007fb547dade6e: movabs $0x800000000,%r12
  0x00007fb547dade78: sub    %r12,%rcx
  0x00007fb547dade7b: xor    %r12,%r12
  0x00007fb547dade7e: mov    %ecx,0x8(%rax)
  0x00007fb547dade81: xor    %rcx,%rcx
  0x00007fb547dade84: mov    %ecx,0xc(%rax)
  0x00007fb547dade87: xor    %rcx,%rcx
  0x00007fb547dade8a: mov    %rcx,0x10(%rax)
  0x00007fb547dade8e: mov    %rcx,0x18(%rax)
  0x00007fb547dade92: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 123)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 159)

  0x00007fb547dade96: mov    %rax,%rdx
  0x00007fb547dade99: movabs $0x7fb52d1bbf40,%rsi  ;   {metadata(method data for {method} {0x00007fb52cea03a8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x00007fb547dadea3: addq   $0x1,0x140(%rsi)
  0x00007fb547dadeab: movabs $0x62d8f5d98,%rdx  ;   {oop(&quot;parameter type cannot be void&quot;{0x000000062d8f5d98})}
  0x00007fb547dadeb5: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 123)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 159)

  0x00007fb547dadeb8: mov    %rax,0x38(%rsp)
  0x00007fb547dadebd: xchg   %ax,%ax
  0x00007fb547dadebf: callq  0x00007fb54784ad80  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@5 (line 123)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 159)
                                                ;   {optimized virtual_call}
  0x00007fb547dadec4: mov    0x38(%rsp),%rax
  0x00007fb547dadec9: jmpq   0x00007fb547dae040  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::checkPtype@17 (line 159)

  0x00007fb547dadece: mov    %rsi,0x48(%rsp)
  0x00007fb547daded3: nopl   0x0(%rax,%rax,1)
  0x00007fb547daded8: jmpq   0x00007fb547dadffe  ;   {no_reloc}
  0x00007fb547dadedd: add    %al,(%rax)
  0x00007fb547dadedf: add    %al,(%rax)
  0x00007fb547dadee1: add    %cl,-0x75(%rcx)
  0x00007fb547dadee4: xchg   %ebx,(%rax)
  0x00007fb547dadee6: add    %eax,(%rax)
  0x00007fb547dadee8: add    %cl,-0x73(%rax)
  0x00007fb547dadeeb: js     0x00007fb547dadf15
  0x00007fb547dadeed: cmp    0x128(%r15),%rdi
  0x00007fb547dadef4: ja     0x00007fb547dae008
  0x00007fb547dadefa: mov    %rdi,0x118(%r15)
  0x00007fb547dadf01: mov    0xb8(%rdx),%rcx
  0x00007fb547dadf08: mov    %rcx,(%rax)
  0x00007fb547dadf0b: mov    %rdx,%rcx
  0x00007fb547dadf0e: movabs $0x800000000,%r12
  0x00007fb547dadf18: sub    %r12,%rcx
  0x00007fb547dadf1b: xor    %r12,%r12
  0x00007fb547dadf1e: mov    %ecx,0x8(%rax)
  0x00007fb547dadf21: xor    %rcx,%rcx
  0x00007fb547dadf24: mov    %ecx,0xc(%rax)
  0x00007fb547dadf27: xor    %rcx,%rcx
  0x00007fb547dadf2a: mov    %rcx,0x10(%rax)
  0x00007fb547dadf2e: mov    %rcx,0x18(%rax)
  0x00007fb547dadf32: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 157)

  0x00007fb547dadf36: mov    %rax,%rsi
  0x00007fb547dadf39: movabs $0x7fb52ceefac0,%rdi  ;   {metadata(method data for {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547dadf43: addq   $0x1,0x160(%rdi)
  0x00007fb547dadf4b: mov    %rax,%rsi          ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 157)

  0x00007fb547dadf4e: mov    %rax,0x40(%rsp)
  0x00007fb547dadf53: nopl   0x0(%rax)
  0x00007fb547dadf57: callq  0x00007fb54784ad80  ; ImmutableOopMap{[64]=Oop [72]=Oop }
                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 157)
                                                ;   {optimized virtual_call}
  0x00007fb547dadf5c: mov    0x40(%rsp),%rax
  0x00007fb547dadf61: jmpq   0x00007fb547dae040
  0x00007fb547dadf66: movabs $0x7fb52cd42678,%r10  ;   {metadata({method} {0x00007fb52cd42678} &apos;checkPtype&apos; &apos;(Ljava/lang/Class;)V&apos; in &apos;java/lang/invoke/MethodType&apos;)}
  0x00007fb547dadf70: mov    %r10,0x8(%rsp)
  0x00007fb547dadf75: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dadf7d: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::checkPtype@-1 (line 157)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dadf82: jmpq   0x00007fb547dadd34
  0x00007fb547dadf87: movabs $0x7fb52cdce768,%r10  ;   {metadata({method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;)}
  0x00007fb547dadf91: mov    %r10,0x8(%rsp)
  0x00007fb547dadf96: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dadf9e: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 157)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dadfa3: jmpq   0x00007fb547dadd6e
  0x00007fb547dadfa8: movabs $0x7fb52cea03a8,%r10  ;   {metadata({method} {0x00007fb52cea03a8} &apos;newIllegalArgumentException&apos; &apos;(Ljava/lang/String;)Ljava/lang/RuntimeException;&apos; in &apos;java/lang/invoke/MethodHandleStatics&apos;)}
  0x00007fb547dadfb2: mov    %r10,0x8(%rsp)
  0x00007fb547dadfb7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dadfbf: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@-1 (line 123)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 159)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dadfc4: jmpq   0x00007fb547dade35
  0x00007fb547dadfc9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547dadfd3: mov    $0xa050f00,%eax
  0x00007fb547dadfd8: callq  0x00007fb5478f7080  ; ImmutableOopMap{}
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 123)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 159)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547dadfdd: jmpq   0x00007fb547dade38
  0x00007fb547dadfe2: mov    %rdx,%rdx
  0x00007fb547dadfe5: callq  0x00007fb5478f3900  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodHandleStatics::newIllegalArgumentException@0 (line 123)
                                                ; - java.lang.invoke.MethodType::checkPtype@14 (line 159)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547dadfea: jmpq   0x00007fb547dade96
  0x00007fb547dadfef: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007fb547dadff9: mov    $0xa050f00,%eax
  0x00007fb547dadffe: callq  0x00007fb5478f7080  ; ImmutableOopMap{[72]=Oop }
                                                ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 157)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007fb547dae003: jmpq   0x00007fb547daded8
  0x00007fb547dae008: mov    %rdx,%rdx
  0x00007fb547dae00b: callq  0x00007fb5478f3900  ; ImmutableOopMap{[72]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - java.lang.invoke.MethodType::checkPtype@1 (line 157)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547dae010: jmpq   0x00007fb547dadf36
  0x00007fb547dae015: nop
  0x00007fb547dae016: nop
  0x00007fb547dae017: mov    0x440(%r15),%rax
  0x00007fb547dae01e: movabs $0x0,%r10
  0x00007fb547dae028: mov    %r10,0x440(%r15)
  0x00007fb547dae02f: movabs $0x0,%r10
  0x00007fb547dae039: mov    %r10,0x448(%r15)
  0x00007fb547dae040: add    $0x60,%rsp
  0x00007fb547dae044: pop    %rbp
  0x00007fb547dae045: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547dae04a: hlt    
  0x00007fb547dae04b: hlt    
  0x00007fb547dae04c: hlt    
  0x00007fb547dae04d: hlt    
  0x00007fb547dae04e: hlt    
  0x00007fb547dae04f: hlt    
  0x00007fb547dae050: hlt    
  0x00007fb547dae051: hlt    
  0x00007fb547dae052: hlt    
  0x00007fb547dae053: hlt    
  0x00007fb547dae054: hlt    
  0x00007fb547dae055: hlt    
  0x00007fb547dae056: hlt    
  0x00007fb547dae057: hlt    
  0x00007fb547dae058: hlt    
  0x00007fb547dae059: hlt    
  0x00007fb547dae05a: hlt    
  0x00007fb547dae05b: hlt    
  0x00007fb547dae05c: hlt    
  0x00007fb547dae05d: hlt    
  0x00007fb547dae05e: hlt    
  0x00007fb547dae05f: hlt    
[Stub Code]
  0x00007fb547dae060: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547dae065: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dae06f: jmpq   0x00007fb547dae06f  ;   {runtime_call}
  0x00007fb547dae074: nop
  0x00007fb547dae075: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547dae07f: jmpq   0x00007fb547dae07f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547dae084: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547dae089: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547dae093: and    $0xfffffffffffffff0,%rsp
  0x00007fb547dae097: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547dae09c: hlt    
[Deopt Handler Code]
  0x00007fb547dae09d: movabs $0x7fb547dae09d,%r10  ;   {section_word}
  0x00007fb547dae0a7: push   %r10
  0x00007fb547dae0a9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547dae0ae: hlt    
  0x00007fb547dae0af: hlt    

ImmutableOopMap{[56]=Oop }pc offsets: 452 
ImmutableOopMap{[64]=Oop [72]=Oop }pc offsets: 604 
ImmutableOopMap{rsi=Oop }pc offsets: 642 675 
ImmutableOopMap{}pc offsets: 708 733 746 
ImmutableOopMap{[72]=Oop }pc offsets: 771 784 </print_nmethod>
<writer thread='1329958'/>
<dependency_failed type='unique_concrete_method' ctxk='io/type/pollution/benchmarks/InternalContext' x='io.type.pollution.benchmarks.NonDuplicatedContext isDuplicated ()Z' witness='io/type/pollution/benchmarks/InternalContext' stamp='1.007'/>
<dependency_failed type='unique_concrete_method' ctxk='io/type/pollution/benchmarks/InternalContext' x='io.type.pollution.benchmarks.NonDuplicatedContext isDuplicated ()Z' witness='io/type/pollution/benchmarks/InternalContext' stamp='1.007'/>
<writer thread='1329930'/>
<make_not_entrant thread='1329930' compile_id='76' compiler='c1' level='3' stamp='1.007'/>
<make_not_entrant thread='1329930' compile_id='79' compiler='c1' level='2' stamp='1.007'/>
<writer thread='1329936'/>
<nmethod compile_id='103' compiler='c1' level='3' entry='0x00007fb547dae4c0' size='1008' address='0x00007fb547dae310' relocation_offset='376' insts_offset='432' stub_offset='752' scopes_data_offset='808' scopes_pcs_offset='856' dependencies_offset='1000' metadata_offset='800' method='java.lang.AbstractStringBuilder isLatin1 ()Z' bytes='19' count='258' iicount='258' stamp='1.007'/>
<print_nmethod stamp='1.007'>
Compiled method (c1)    1007  103       3       java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
 total in heap  [0x00007fb547dae310,0x00007fb547dae700] = 1008
 relocation     [0x00007fb547dae488,0x00007fb547dae4b8] = 48
 main code      [0x00007fb547dae4c0,0x00007fb547dae600] = 320
 stub code      [0x00007fb547dae600,0x00007fb547dae630] = 48
 metadata       [0x00007fb547dae630,0x00007fb547dae638] = 8
 scopes data    [0x00007fb547dae638,0x00007fb547dae668] = 48
 scopes pcs     [0x00007fb547dae668,0x00007fb547dae6f8] = 144
 dependencies   [0x00007fb547dae6f8,0x00007fb547dae700] = 8
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.isLatin1()Z  [0x00007fb547dae4c0, 0x00007fb547dae630]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cd55520} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547dae4c0: mov    0x8(%rsi),%r10d
  0x00007fb547dae4c4: movabs $0x800000000,%r12
  0x00007fb547dae4ce: add    %r12,%r10
  0x00007fb547dae4d1: xor    %r12,%r12
  0x00007fb547dae4d4: cmp    %rax,%r10
  0x00007fb547dae4d7: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547dae4dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547dae4e0: mov    %eax,-0x14000(%rsp)
  0x00007fb547dae4e7: push   %rbp
  0x00007fb547dae4e8: sub    $0x30,%rsp
  0x00007fb547dae4ec: movabs $0x7fb52d1bc230,%rax  ;   {metadata(method data for {method} {0x00007fb52cd55520} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dae4f6: mov    0x100(%rax),%edi
  0x00007fb547dae4fc: add    $0x8,%edi
  0x00007fb547dae4ff: mov    %edi,0x100(%rax)
  0x00007fb547dae505: and    $0x1ff8,%edi
  0x00007fb547dae50b: cmp    $0x0,%edi
  0x00007fb547dae50e: je     0x00007fb547dae593  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@0 (line 1624)

  0x00007fb547dae514: movabs $0x7fb52d1bc230,%rax  ;   {metadata(method data for {method} {0x00007fb52cd55520} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dae51e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@3 (line 1624)

  0x00007fb547dae524: movsbl 0x10(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1624)

  0x00007fb547dae528: cmp    $0x0,%eax
  0x00007fb547dae52b: movabs $0x7fb52d1bc230,%rax  ;   {metadata(method data for {method} {0x00007fb52cd55520} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dae535: movabs $0x160,%rsi
  0x00007fb547dae53f: jne    0x00007fb547dae54f
  0x00007fb547dae545: movabs $0x170,%rsi
  0x00007fb547dae54f: mov    (%rax,%rsi,1),%rdi
  0x00007fb547dae553: lea    0x1(%rdi),%rdi
  0x00007fb547dae557: mov    %rdi,(%rax,%rsi,1)
  0x00007fb547dae55b: jne    0x00007fb547dae57b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)

  0x00007fb547dae561: movabs $0x7fb52d1bc230,%rax  ;   {metadata(method data for {method} {0x00007fb52cd55520} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dae56b: incl   0x180(%rax)
  0x00007fb547dae571: mov    $0x1,%eax
  0x00007fb547dae576: jmpq   0x00007fb547dae580  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@14 (line 1624)

  0x00007fb547dae57b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@18 (line 1624)

  0x00007fb547dae580: and    $0x1,%eax
  0x00007fb547dae583: add    $0x30,%rsp
  0x00007fb547dae587: pop    %rbp
  0x00007fb547dae588: mov    0x108(%r15),%r10
  0x00007fb547dae58f: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dae592: retq   
  0x00007fb547dae593: movabs $0x7fb52cd55520,%r10  ;   {metadata({method} {0x00007fb52cd55520} &apos;isLatin1&apos; &apos;()Z&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007fb547dae59d: mov    %r10,0x8(%rsp)
  0x00007fb547dae5a2: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dae5aa: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::isLatin1@-1 (line 1624)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dae5af: jmpq   0x00007fb547dae514
  0x00007fb547dae5b4: nop
  0x00007fb547dae5b5: nop
  0x00007fb547dae5b6: mov    0x440(%r15),%rax
  0x00007fb547dae5bd: movabs $0x0,%r10
  0x00007fb547dae5c7: mov    %r10,0x440(%r15)
  0x00007fb547dae5ce: movabs $0x0,%r10
  0x00007fb547dae5d8: mov    %r10,0x448(%r15)
  0x00007fb547dae5df: add    $0x30,%rsp
  0x00007fb547dae5e3: pop    %rbp
  0x00007fb547dae5e4: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547dae5e9: hlt    
  0x00007fb547dae5ea: hlt    
  0x00007fb547dae5eb: hlt    
  0x00007fb547dae5ec: hlt    
  0x00007fb547dae5ed: hlt    
  0x00007fb547dae5ee: hlt    
  0x00007fb547dae5ef: hlt    
  0x00007fb547dae5f0: hlt    
  0x00007fb547dae5f1: hlt    
  0x00007fb547dae5f2: hlt    
  0x00007fb547dae5f3: hlt    
  0x00007fb547dae5f4: hlt    
  0x00007fb547dae5f5: hlt    
  0x00007fb547dae5f6: hlt    
  0x00007fb547dae5f7: hlt    
  0x00007fb547dae5f8: hlt    
  0x00007fb547dae5f9: hlt    
  0x00007fb547dae5fa: hlt    
  0x00007fb547dae5fb: hlt    
  0x00007fb547dae5fc: hlt    
  0x00007fb547dae5fd: hlt    
  0x00007fb547dae5fe: hlt    
  0x00007fb547dae5ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547dae600: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547dae605: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547dae60f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547dae613: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547dae618: hlt    
[Deopt Handler Code]
  0x00007fb547dae619: movabs $0x7fb547dae619,%r10  ;   {section_word}
  0x00007fb547dae623: push   %r10
  0x00007fb547dae625: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547dae62a: hlt    
  0x00007fb547dae62b: hlt    
  0x00007fb547dae62c: hlt    
  0x00007fb547dae62d: hlt    
  0x00007fb547dae62e: hlt    
  0x00007fb547dae62f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 239 </print_nmethod>
<writer thread='1329957'/>
<task_queued compile_id='104' method='io.type.pollution.benchmarks.Main applicationStack (Lio/type/pollution/benchmarks/Context;I)Z' bytes='19' count='88190' iicount='88190' stamp='1.010' comment='tiered' hot_count='88079'/>
<task_queued compile_id='105' method='io.type.pollution.benchmarks.DuplicatedContext isDuplicated ()Z' bytes='2' count='128' iicount='128' level='1' stamp='1.010' comment='tiered' hot_count='128'/>
<task_queued compile_id='106' method='io.type.pollution.benchmarks.ContextUtil isDuplicatedContext (Lio/type/pollution/benchmarks/Context;)Z' bytes='18' count='11162' iicount='11162' stamp='1.010' comment='tiered' hot_count='11162'/>
<print_native_nmethod method='java.lang.Thread currentThread ()Ljava/lang/Thread;' bytes='0' count='280' iicount='280' stamp='1.010' address='0x00007fb54f2d0210'>
Compiled method (nm)    1010  107     n 0       java.lang.Thread::currentThread (native)
 total in heap  [0x00007fb54f2d0210,0x00007fb54f2d0630] = 1056
 relocation     [0x00007fb54f2d0388,0x00007fb54f2d03c0] = 56
 main code      [0x00007fb54f2d03c0,0x00007fb54f2d0630] = 624
----------------------------------------------------------------------
java/lang/Thread.currentThread()Ljava/lang/Thread;  [0x00007fb54f2d03c0, 0x00007fb54f2d0630]  624 bytes
[Entry Point]
  # {method} {0x00007fb52cce8798} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2d03c0: mov    0x8(%rsi),%r10d
  0x00007fb54f2d03c4: movabs $0x800000000,%r12
  0x00007fb54f2d03ce: add    %r12,%r10
  0x00007fb54f2d03d1: xor    %r12,%r12
  0x00007fb54f2d03d4: cmp    %r10,%rax
  0x00007fb54f2d03d7: je     0x00007fb54f2d03e8
  0x00007fb54f2d03dd: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2d03e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2d03e8: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d03ef: push   %rbp
  0x00007fb54f2d03f0: mov    %rsp,%rbp
  0x00007fb54f2d03f3: sub    $0x40,%rsp
  0x00007fb54f2d03f7: movabs $0x62d801cf8,%r14  ;   {oop(a &apos;java/lang/Class&apos;{0x000000062d801cf8} = &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d0401: mov    %r14,0x30(%rsp)
  0x00007fb54f2d0406: lea    0x30(%rsp),%r14
  0x00007fb54f2d040b: mov    %r14,%rsi          ; ImmutableOopMap{[48]=Oop }
  0x00007fb54f2d040e: vzeroupper 
  0x00007fb54f2d0411: movabs $0x7fb54f2d040e,%r10  ;   {internal_word}
  0x00007fb54f2d041b: mov    %r10,0x330(%r15)
  0x00007fb54f2d0422: mov    %rsp,0x328(%r15)
  0x00007fb54f2d0429: cmpb   $0x0,0x166b93a7(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d0430: je     0x00007fb54f2d0468
  0x00007fb54f2d0436: push   %rsi
  0x00007fb54f2d0437: movabs $0x7fb52cce8798,%rsi  ;   {metadata({method} {0x00007fb52cce8798} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d0441: mov    %r15,%rdi
  0x00007fb54f2d0444: test   $0xf,%esp
  0x00007fb54f2d044a: je     0x00007fb54f2d0462
  0x00007fb54f2d0450: sub    $0x8,%rsp
  0x00007fb54f2d0454: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d0459: add    $0x8,%rsp
  0x00007fb54f2d045d: jmpq   0x00007fb54f2d0467
  0x00007fb54f2d0462: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d0467: pop    %rsi
  0x00007fb54f2d0468: lea    0x348(%r15),%rdi
  0x00007fb54f2d046f: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2d047a: callq  0x00007fb564d8e540  ;   {runtime_call JVM_CurrentThread}
  0x00007fb54f2d047f: vzeroupper 
  0x00007fb54f2d0482: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2d048d: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2d0493: testb  $0x8,0x108(%r15)
  0x00007fb54f2d049b: jne    0x00007fb54f2d04b2
  0x00007fb54f2d04a1: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2d04ac: je     0x00007fb54f2d04d6
  0x00007fb54f2d04b2: vzeroupper 
  0x00007fb54f2d04b5: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d04b9: mov    %r15,%rdi
  0x00007fb54f2d04bc: mov    %rsp,%r12
  0x00007fb54f2d04bf: sub    $0x0,%rsp
  0x00007fb54f2d04c3: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d04c7: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2d04cc: mov    %r12,%rsp
  0x00007fb54f2d04cf: xor    %r12,%r12
  0x00007fb54f2d04d2: mov    -0x8(%rbp),%rax
  0x00007fb54f2d04d6: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2d04e1: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2d04ec: je     0x00007fb54f2d0605
  0x00007fb54f2d04f2: cmpb   $0x0,0x166b92de(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d04f9: je     0x00007fb54f2d0537
  0x00007fb54f2d04ff: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d0503: movabs $0x7fb52cce8798,%rsi  ;   {metadata({method} {0x00007fb52cce8798} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d050d: mov    %r15,%rdi
  0x00007fb54f2d0510: test   $0xf,%esp
  0x00007fb54f2d0516: je     0x00007fb54f2d052e
  0x00007fb54f2d051c: sub    $0x8,%rsp
  0x00007fb54f2d0520: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d0525: add    $0x8,%rsp
  0x00007fb54f2d0529: jmpq   0x00007fb54f2d0533
  0x00007fb54f2d052e: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d0533: mov    -0x8(%rbp),%rax
  0x00007fb54f2d0537: movabs $0x0,%r10
  0x00007fb54f2d0541: mov    %r10,0x328(%r15)
  0x00007fb54f2d0548: movabs $0x0,%r10
  0x00007fb54f2d0552: mov    %r10,0x330(%r15)
  0x00007fb54f2d0559: vzeroupper 
  0x00007fb54f2d055c: test   %rax,%rax
  0x00007fb54f2d055f: je     0x00007fb54f2d05df
  0x00007fb54f2d0565: test   $0x1,%rax
  0x00007fb54f2d056b: je     0x00007fb54f2d05dc
  0x00007fb54f2d0571: mov    -0x1(%rax),%rax
  0x00007fb54f2d0575: cmpb   $0x0,0x30(%r15)
  0x00007fb54f2d057a: je     0x00007fb54f2d05d7
  0x00007fb54f2d0580: cmp    $0x0,%rax
  0x00007fb54f2d0584: je     0x00007fb54f2d05d7
  0x00007fb54f2d058a: mov    0x38(%r15),%rcx
  0x00007fb54f2d058e: cmp    $0x0,%rcx
  0x00007fb54f2d0592: je     0x00007fb54f2d05ac
  0x00007fb54f2d0598: sub    $0x8,%rcx
  0x00007fb54f2d059c: mov    %rcx,0x38(%r15)
  0x00007fb54f2d05a0: add    0x48(%r15),%rcx
  0x00007fb54f2d05a4: mov    %rax,(%rcx)
  0x00007fb54f2d05a7: jmpq   0x00007fb54f2d05d7
  0x00007fb54f2d05ac: push   %rax
  0x00007fb54f2d05ad: mov    %r15,%rsi
  0x00007fb54f2d05b0: mov    %rax,%rdi
  0x00007fb54f2d05b3: test   $0xf,%esp
  0x00007fb54f2d05b9: je     0x00007fb54f2d05d1
  0x00007fb54f2d05bf: sub    $0x8,%rsp
  0x00007fb54f2d05c3: callq  0x00007fb564baa460  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007fb54f2d05c8: add    $0x8,%rsp
  0x00007fb54f2d05cc: jmpq   0x00007fb54f2d05d6
  0x00007fb54f2d05d1: callq  0x00007fb564baa460  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007fb54f2d05d6: pop    %rax
  0x00007fb54f2d05d7: jmpq   0x00007fb54f2d05df
  0x00007fb54f2d05dc: mov    (%rax),%rax
  0x00007fb54f2d05df: mov    0xe0(%r15),%rcx
  0x00007fb54f2d05e6: movl   $0x0,0x100(%rcx)
  0x00007fb54f2d05f0: leaveq 
  0x00007fb54f2d05f1: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2d05f9: jne    0x00007fb54f2d0600
  0x00007fb54f2d05ff: retq   
  0x00007fb54f2d0600: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2d0605: vzeroupper 
  0x00007fb54f2d0608: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d060c: mov    %rsp,%r12
  0x00007fb54f2d060f: sub    $0x0,%rsp
  0x00007fb54f2d0613: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d0617: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2d061c: mov    %r12,%rsp
  0x00007fb54f2d061f: xor    %r12,%r12
  0x00007fb54f2d0622: mov    -0x8(%rbp),%rax
  0x00007fb54f2d0626: jmpq   0x00007fb54f2d04f2
  0x00007fb54f2d062b: hlt    
  0x00007fb54f2d062c: hlt    
  0x00007fb54f2d062d: hlt    
  0x00007fb54f2d062e: hlt    
  0x00007fb54f2d062f: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[48]=Oop off=78}
</print_native_nmethod>
<nmethod compile_id='107' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2d03c0' size='1056' address='0x00007fb54f2d0210' relocation_offset='376' consts_offset='1056' insts_offset='432' method='java.lang.Thread currentThread ()Ljava/lang/Thread;' bytes='0' count='332' iicount='332' stamp='1.014'/>
----------------------------------------------------------------------
java/lang/Thread.currentThread()Ljava/lang/Thread;  [0x00007fb54f2d03c0, 0x00007fb54f2d0630]  624 bytes
[Entry Point]
  # {method} {0x00007fb52cce8798} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2d03c0: mov    0x8(%rsi),%r10d
  0x00007fb54f2d03c4: movabs $0x800000000,%r12
  0x00007fb54f2d03ce: add    %r12,%r10
  0x00007fb54f2d03d1: xor    %r12,%r12
  0x00007fb54f2d03d4: cmp    %r10,%rax
  0x00007fb54f2d03d7: je     0x00007fb54f2d03e8
  0x00007fb54f2d03dd: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2d03e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2d03e8: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d03ef: push   %rbp
  0x00007fb54f2d03f0: mov    %rsp,%rbp
  0x00007fb54f2d03f3: sub    $0x40,%rsp
  0x00007fb54f2d03f7: movabs $0x62d801cf8,%r14  ;   {oop(a &apos;java/lang/Class&apos;{0x000000062d801cf8} = &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d0401: mov    %r14,0x30(%rsp)
  0x00007fb54f2d0406: lea    0x30(%rsp),%r14
  0x00007fb54f2d040b: mov    %r14,%rsi          ; ImmutableOopMap{[48]=Oop }
  0x00007fb54f2d040e: vzeroupper 
  0x00007fb54f2d0411: movabs $0x7fb54f2d040e,%r10  ;   {internal_word}
  0x00007fb54f2d041b: mov    %r10,0x330(%r15)
  0x00007fb54f2d0422: mov    %rsp,0x328(%r15)
  0x00007fb54f2d0429: cmpb   $0x0,0x166b93a7(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d0430: je     0x00007fb54f2d0468
  0x00007fb54f2d0436: push   %rsi
  0x00007fb54f2d0437: movabs $0x7fb52cce8798,%rsi  ;   {metadata({method} {0x00007fb52cce8798} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d0441: mov    %r15,%rdi
  0x00007fb54f2d0444: test   $0xf,%esp
  0x00007fb54f2d044a: je     0x00007fb54f2d0462
  0x00007fb54f2d0450: sub    $0x8,%rsp
  0x00007fb54f2d0454: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d0459: add    $0x8,%rsp
  0x00007fb54f2d045d: jmpq   0x00007fb54f2d0467
  0x00007fb54f2d0462: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d0467: pop    %rsi
  0x00007fb54f2d0468: lea    0x348(%r15),%rdi
  0x00007fb54f2d046f: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2d047a: callq  0x00007fb564d8e540  ;   {runtime_call JVM_CurrentThread}
  0x00007fb54f2d047f: vzeroupper 
  0x00007fb54f2d0482: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2d048d: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2d0493: testb  $0x8,0x108(%r15)
  0x00007fb54f2d049b: jne    0x00007fb54f2d04b2
  0x00007fb54f2d04a1: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2d04ac: je     0x00007fb54f2d04d6
  0x00007fb54f2d04b2: vzeroupper 
  0x00007fb54f2d04b5: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d04b9: mov    %r15,%rdi
  0x00007fb54f2d04bc: mov    %rsp,%r12
  0x00007fb54f2d04bf: sub    $0x0,%rsp
  0x00007fb54f2d04c3: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d04c7: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2d04cc: mov    %r12,%rsp
  0x00007fb54f2d04cf: xor    %r12,%r12
  0x00007fb54f2d04d2: mov    -0x8(%rbp),%rax
  0x00007fb54f2d04d6: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2d04e1: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2d04ec: je     0x00007fb54f2d0605
  0x00007fb54f2d04f2: cmpb   $0x0,0x166b92de(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d04f9: je     0x00007fb54f2d0537
  0x00007fb54f2d04ff: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d0503: movabs $0x7fb52cce8798,%rsi  ;   {metadata({method} {0x00007fb52cce8798} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d050d: mov    %r15,%rdi
  0x00007fb54f2d0510: test   $0xf,%esp
  0x00007fb54f2d0516: je     0x00007fb54f2d052e
  0x00007fb54f2d051c: sub    $0x8,%rsp
  0x00007fb54f2d0520: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d0525: add    $0x8,%rsp
  0x00007fb54f2d0529: jmpq   0x00007fb54f2d0533
  0x00007fb54f2d052e: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d0533: mov    -0x8(%rbp),%rax
  0x00007fb54f2d0537: movabs $0x0,%r10
  0x00007fb54f2d0541: mov    %r10,0x328(%r15)
  0x00007fb54f2d0548: movabs $0x0,%r10
  0x00007fb54f2d0552: mov    %r10,0x330(%r15)
  0x00007fb54f2d0559: vzeroupper 
  0x00007fb54f2d055c: test   %rax,%rax
  0x00007fb54f2d055f: je     0x00007fb54f2d05df
  0x00007fb54f2d0565: test   $0x1,%rax
  0x00007fb54f2d056b: je     0x00007fb54f2d05dc
  0x00007fb54f2d0571: mov    -0x1(%rax),%rax
  0x00007fb54f2d0575: cmpb   $0x0,0x30(%r15)
  0x00007fb54f2d057a: je     0x00007fb54f2d05d7
  0x00007fb54f2d0580: cmp    $0x0,%rax
  0x00007fb54f2d0584: je     0x00007fb54f2d05d7
  0x00007fb54f2d058a: mov    0x38(%r15),%rcx
  0x00007fb54f2d058e: cmp    $0x0,%rcx
  0x00007fb54f2d0592: je     0x00007fb54f2d05ac
  0x00007fb54f2d0598: sub    $0x8,%rcx
  0x00007fb54f2d059c: mov    %rcx,0x38(%r15)
  0x00007fb54f2d05a0: add    0x48(%r15),%rcx
  0x00007fb54f2d05a4: mov    %rax,(%rcx)
  0x00007fb54f2d05a7: jmpq   0x00007fb54f2d05d7
  0x00007fb54f2d05ac: push   %rax
  0x00007fb54f2d05ad: mov    %r15,%rsi
  0x00007fb54f2d05b0: mov    %rax,%rdi
  0x00007fb54f2d05b3: test   $0xf,%esp
  0x00007fb54f2d05b9: je     0x00007fb54f2d05d1
  0x00007fb54f2d05bf: sub    $0x8,%rsp
  0x00007fb54f2d05c3: callq  0x00007fb564baa460  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007fb54f2d05c8: add    $0x8,%rsp
  0x00007fb54f2d05cc: jmpq   0x00007fb54f2d05d6
  0x00007fb54f2d05d1: callq  0x00007fb564baa460  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00007fb54f2d05d6: pop    %rax
  0x00007fb54f2d05d7: jmpq   0x00007fb54f2d05df
  0x00007fb54f2d05dc: mov    (%rax),%rax
  0x00007fb54f2d05df: mov    0xe0(%r15),%rcx
  0x00007fb54f2d05e6: movl   $0x0,0x100(%rcx)
  0x00007fb54f2d05f0: leaveq 
  0x00007fb54f2d05f1: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2d05f9: jne    0x00007fb54f2d0600
  0x00007fb54f2d05ff: retq   
  0x00007fb54f2d0600: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2d0605: vzeroupper 
  0x00007fb54f2d0608: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d060c: mov    %rsp,%r12
  0x00007fb54f2d060f: sub    $0x0,%rsp
  0x00007fb54f2d0613: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d0617: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2d061c: mov    %r12,%rsp
  0x00007fb54f2d061f: xor    %r12,%r12
  0x00007fb54f2d0622: mov    -0x8(%rbp),%rax
  0x00007fb54f2d0626: jmpq   0x00007fb54f2d04f2
  0x00007fb54f2d062b: hlt    
  0x00007fb54f2d062c: hlt    
  0x00007fb54f2d062d: hlt    
  0x00007fb54f2d062e: hlt    
  0x00007fb54f2d062f: hlt    
<writer thread='1329958'/>
<print_native_nmethod method='java.lang.Thread isInterrupted (Z)Z' bytes='0' count='263' iicount='263' stamp='1.017' address='0x00007fb54f2d0690'>
Compiled method (nm)    1016  108     n 0       java.lang.Thread::isInterrupted (native)
 total in heap  [0x00007fb54f2d0690,0x00007fb54f2d0a30] = 928
 relocation     [0x00007fb54f2d0808,0x00007fb54f2d0838] = 48
 main code      [0x00007fb54f2d0840,0x00007fb54f2d0a30] = 496
----------------------------------------------------------------------
java/lang/Thread.isInterrupted(Z)Z  [0x00007fb54f2d0840, 0x00007fb54f2d0a30]  496 bytes
[Entry Point]
  # {method} {0x00007fb52cce9d60} &apos;isInterrupted&apos; &apos;(Z)Z&apos; in &apos;java/lang/Thread&apos;
  # this:     rsi:rsi   = &apos;java/lang/Thread&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2d0840: mov    0x8(%rsi),%r10d
  0x00007fb54f2d0844: movabs $0x800000000,%r12
  0x00007fb54f2d084e: add    %r12,%r10
  0x00007fb54f2d0851: xor    %r12,%r12
  0x00007fb54f2d0854: cmp    %r10,%rax
  0x00007fb54f2d0857: je     0x00007fb54f2d0868
  0x00007fb54f2d085d: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2d0862: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2d0868: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d086f: push   %rbp
  0x00007fb54f2d0870: mov    %rsp,%rbp
  0x00007fb54f2d0873: sub    $0x40,%rsp
  0x00007fb54f2d0877: mov    %rsi,(%rsp)
  0x00007fb54f2d087b: cmp    $0x0,%rsi
  0x00007fb54f2d087f: lea    (%rsp),%rsi
  0x00007fb54f2d0883: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2d0888: vzeroupper 
  0x00007fb54f2d088b: movabs $0x7fb54f2d0888,%r10  ;   {internal_word}
  0x00007fb54f2d0895: mov    %r10,0x330(%r15)
  0x00007fb54f2d089c: mov    %rsp,0x328(%r15)
  0x00007fb54f2d08a3: cmpb   $0x0,0x166b8f2d(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d08aa: je     0x00007fb54f2d08e4
  0x00007fb54f2d08b0: push   %rsi
  0x00007fb54f2d08b1: push   %rdx
  0x00007fb54f2d08b2: movabs $0x7fb52cce9d60,%rsi  ;   {metadata({method} {0x00007fb52cce9d60} &apos;isInterrupted&apos; &apos;(Z)Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d08bc: mov    %r15,%rdi
  0x00007fb54f2d08bf: test   $0xf,%esp
  0x00007fb54f2d08c5: je     0x00007fb54f2d08dd
  0x00007fb54f2d08cb: sub    $0x8,%rsp
  0x00007fb54f2d08cf: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d08d4: add    $0x8,%rsp
  0x00007fb54f2d08d8: jmpq   0x00007fb54f2d08e2
  0x00007fb54f2d08dd: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d08e2: pop    %rdx
  0x00007fb54f2d08e3: pop    %rsi
  0x00007fb54f2d08e4: lea    0x348(%r15),%rdi
  0x00007fb54f2d08eb: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2d08f6: callq  0x00007fb564d8e820  ;   {runtime_call JVM_IsInterrupted}
  0x00007fb54f2d08fb: vzeroupper 
  0x00007fb54f2d08fe: and    $0xff,%eax
  0x00007fb54f2d0904: setne  %al
  0x00007fb54f2d0907: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2d0912: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2d0918: testb  $0x8,0x108(%r15)
  0x00007fb54f2d0920: jne    0x00007fb54f2d0937
  0x00007fb54f2d0926: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2d0931: je     0x00007fb54f2d095b
  0x00007fb54f2d0937: vzeroupper 
  0x00007fb54f2d093a: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d093e: mov    %r15,%rdi
  0x00007fb54f2d0941: mov    %rsp,%r12
  0x00007fb54f2d0944: sub    $0x0,%rsp
  0x00007fb54f2d0948: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d094c: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2d0951: mov    %r12,%rsp
  0x00007fb54f2d0954: xor    %r12,%r12
  0x00007fb54f2d0957: mov    -0x8(%rbp),%rax
  0x00007fb54f2d095b: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2d0966: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2d0971: je     0x00007fb54f2d0a07
  0x00007fb54f2d0977: cmpb   $0x0,0x166b8e59(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d097e: je     0x00007fb54f2d09bc
  0x00007fb54f2d0984: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d0988: movabs $0x7fb52cce9d60,%rsi  ;   {metadata({method} {0x00007fb52cce9d60} &apos;isInterrupted&apos; &apos;(Z)Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d0992: mov    %r15,%rdi
  0x00007fb54f2d0995: test   $0xf,%esp
  0x00007fb54f2d099b: je     0x00007fb54f2d09b3
  0x00007fb54f2d09a1: sub    $0x8,%rsp
  0x00007fb54f2d09a5: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d09aa: add    $0x8,%rsp
  0x00007fb54f2d09ae: jmpq   0x00007fb54f2d09b8
  0x00007fb54f2d09b3: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d09b8: mov    -0x8(%rbp),%rax
  0x00007fb54f2d09bc: movabs $0x0,%r10
  0x00007fb54f2d09c6: mov    %r10,0x328(%r15)
  0x00007fb54f2d09cd: movabs $0x0,%r10
  0x00007fb54f2d09d7: mov    %r10,0x330(%r15)
  0x00007fb54f2d09de: vzeroupper 
  0x00007fb54f2d09e1: mov    0xe0(%r15),%rcx
  0x00007fb54f2d09e8: movl   $0x0,0x100(%rcx)
  0x00007fb54f2d09f2: leaveq 
  0x00007fb54f2d09f3: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2d09fb: jne    0x00007fb54f2d0a02
  0x00007fb54f2d0a01: retq   
  0x00007fb54f2d0a02: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2d0a07: vzeroupper 
  0x00007fb54f2d0a0a: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d0a0e: mov    %rsp,%r12
  0x00007fb54f2d0a11: sub    $0x0,%rsp
  0x00007fb54f2d0a15: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d0a19: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2d0a1e: mov    %r12,%rsp
  0x00007fb54f2d0a21: xor    %r12,%r12
  0x00007fb54f2d0a24: mov    -0x8(%rbp),%rax
  0x00007fb54f2d0a28: jmpq   0x00007fb54f2d0977
  0x00007fb54f2d0a2d: hlt    
  0x00007fb54f2d0a2e: hlt    
  0x00007fb54f2d0a2f: hlt    
OopMapSet contains 1 OopMaps

#0 
OopMap{[0]=Oop off=72}
</print_native_nmethod>
<nmethod compile_id='108' compile_kind='c2n' compiler='' level='0' entry='0x00007fb54f2d0840' size='928' address='0x00007fb54f2d0690' relocation_offset='376' consts_offset='928' insts_offset='432' method='java.lang.Thread isInterrupted (Z)Z' bytes='0' count='263' iicount='263' stamp='1.019'/>
----------------------------------------------------------------------
java/lang/Thread.isInterrupted(Z)Z  [0x00007fb54f2d0840, 0x00007fb54f2d0a30]  496 bytes
[Entry Point]
  # {method} {0x00007fb52cce9d60} &apos;isInterrupted&apos; &apos;(Z)Z&apos; in &apos;java/lang/Thread&apos;
  # this:     rsi:rsi   = &apos;java/lang/Thread&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x50]  (sp of caller)
  0x00007fb54f2d0840: mov    0x8(%rsi),%r10d
  0x00007fb54f2d0844: movabs $0x800000000,%r12
  0x00007fb54f2d084e: add    %r12,%r10
  0x00007fb54f2d0851: xor    %r12,%r12
  0x00007fb54f2d0854: cmp    %r10,%rax
  0x00007fb54f2d0857: je     0x00007fb54f2d0868
  0x00007fb54f2d085d: jmpq   0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2d0862: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007fb54f2d0868: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d086f: push   %rbp
  0x00007fb54f2d0870: mov    %rsp,%rbp
  0x00007fb54f2d0873: sub    $0x40,%rsp
  0x00007fb54f2d0877: mov    %rsi,(%rsp)
  0x00007fb54f2d087b: cmp    $0x0,%rsi
  0x00007fb54f2d087f: lea    (%rsp),%rsi
  0x00007fb54f2d0883: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007fb54f2d0888: vzeroupper 
  0x00007fb54f2d088b: movabs $0x7fb54f2d0888,%r10  ;   {internal_word}
  0x00007fb54f2d0895: mov    %r10,0x330(%r15)
  0x00007fb54f2d089c: mov    %rsp,0x328(%r15)
  0x00007fb54f2d08a3: cmpb   $0x0,0x166b8f2d(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d08aa: je     0x00007fb54f2d08e4
  0x00007fb54f2d08b0: push   %rsi
  0x00007fb54f2d08b1: push   %rdx
  0x00007fb54f2d08b2: movabs $0x7fb52cce9d60,%rsi  ;   {metadata({method} {0x00007fb52cce9d60} &apos;isInterrupted&apos; &apos;(Z)Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d08bc: mov    %r15,%rdi
  0x00007fb54f2d08bf: test   $0xf,%esp
  0x00007fb54f2d08c5: je     0x00007fb54f2d08dd
  0x00007fb54f2d08cb: sub    $0x8,%rsp
  0x00007fb54f2d08cf: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d08d4: add    $0x8,%rsp
  0x00007fb54f2d08d8: jmpq   0x00007fb54f2d08e2
  0x00007fb54f2d08dd: callq  0x00007fb56514b220  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007fb54f2d08e2: pop    %rdx
  0x00007fb54f2d08e3: pop    %rsi
  0x00007fb54f2d08e4: lea    0x348(%r15),%rdi
  0x00007fb54f2d08eb: movl   $0x4,0x3c0(%r15)
  0x00007fb54f2d08f6: callq  0x00007fb564d8e820  ;   {runtime_call JVM_IsInterrupted}
  0x00007fb54f2d08fb: vzeroupper 
  0x00007fb54f2d08fe: and    $0xff,%eax
  0x00007fb54f2d0904: setne  %al
  0x00007fb54f2d0907: movl   $0x5,0x3c0(%r15)
  0x00007fb54f2d0912: lock addl $0x0,-0x40(%rsp)
  0x00007fb54f2d0918: testb  $0x8,0x108(%r15)
  0x00007fb54f2d0920: jne    0x00007fb54f2d0937
  0x00007fb54f2d0926: cmpl   $0x0,0xd8(%r15)
  0x00007fb54f2d0931: je     0x00007fb54f2d095b
  0x00007fb54f2d0937: vzeroupper 
  0x00007fb54f2d093a: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d093e: mov    %r15,%rdi
  0x00007fb54f2d0941: mov    %rsp,%r12
  0x00007fb54f2d0944: sub    $0x0,%rsp
  0x00007fb54f2d0948: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d094c: callq  0x00007fb5652d8ba0  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007fb54f2d0951: mov    %r12,%rsp
  0x00007fb54f2d0954: xor    %r12,%r12
  0x00007fb54f2d0957: mov    -0x8(%rbp),%rax
  0x00007fb54f2d095b: movl   $0x8,0x3c0(%r15)
  0x00007fb54f2d0966: cmpl   $0x2,0x428(%r15)
  0x00007fb54f2d0971: je     0x00007fb54f2d0a07
  0x00007fb54f2d0977: cmpb   $0x0,0x166b8e59(%rip)        # 0x00007fb5659897d7
                                                ;   {external_word}
  0x00007fb54f2d097e: je     0x00007fb54f2d09bc
  0x00007fb54f2d0984: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d0988: movabs $0x7fb52cce9d60,%rsi  ;   {metadata({method} {0x00007fb52cce9d60} &apos;isInterrupted&apos; &apos;(Z)Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb54f2d0992: mov    %r15,%rdi
  0x00007fb54f2d0995: test   $0xf,%esp
  0x00007fb54f2d099b: je     0x00007fb54f2d09b3
  0x00007fb54f2d09a1: sub    $0x8,%rsp
  0x00007fb54f2d09a5: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d09aa: add    $0x8,%rsp
  0x00007fb54f2d09ae: jmpq   0x00007fb54f2d09b8
  0x00007fb54f2d09b3: callq  0x00007fb56514b2d0  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007fb54f2d09b8: mov    -0x8(%rbp),%rax
  0x00007fb54f2d09bc: movabs $0x0,%r10
  0x00007fb54f2d09c6: mov    %r10,0x328(%r15)
  0x00007fb54f2d09cd: movabs $0x0,%r10
  0x00007fb54f2d09d7: mov    %r10,0x330(%r15)
  0x00007fb54f2d09de: vzeroupper 
  0x00007fb54f2d09e1: mov    0xe0(%r15),%rcx
  0x00007fb54f2d09e8: movl   $0x0,0x100(%rcx)
  0x00007fb54f2d09f2: leaveq 
  0x00007fb54f2d09f3: cmpq   $0x0,0x8(%r15)
  0x00007fb54f2d09fb: jne    0x00007fb54f2d0a02
  0x00007fb54f2d0a01: retq   
  0x00007fb54f2d0a02: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007fb54f2d0a07: vzeroupper 
  0x00007fb54f2d0a0a: mov    %rax,-0x8(%rbp)
  0x00007fb54f2d0a0e: mov    %rsp,%r12
  0x00007fb54f2d0a11: sub    $0x0,%rsp
  0x00007fb54f2d0a15: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d0a19: callq  0x00007fb565150950  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007fb54f2d0a1e: mov    %r12,%rsp
  0x00007fb54f2d0a21: xor    %r12,%r12
  0x00007fb54f2d0a24: mov    -0x8(%rbp),%rax
  0x00007fb54f2d0a28: jmpq   0x00007fb54f2d0977
  0x00007fb54f2d0a2d: hlt    
  0x00007fb54f2d0a2e: hlt    
  0x00007fb54f2d0a2f: hlt    
<writer thread='1329936'/>
<nmethod compile_id='101' compiler='c1' level='3' entry='0x00007fb547dae8c0' size='768' address='0x00007fb547dae710' relocation_offset='376' insts_offset='432' stub_offset='624' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' metadata_offset='672' method='java.lang.System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='262' iicount='262' stamp='1.023'/>
<print_nmethod stamp='1.023'>
Compiled method (c1)    1022  101       3       java.lang.System::getSecurityManager (4 bytes)
 total in heap  [0x00007fb547dae710,0x00007fb547daea10] = 768
 relocation     [0x00007fb547dae888,0x00007fb547dae8b0] = 40
 main code      [0x00007fb547dae8c0,0x00007fb547dae980] = 192
 stub code      [0x00007fb547dae980,0x00007fb547dae9b0] = 48
 metadata       [0x00007fb547dae9b0,0x00007fb547dae9b8] = 8
 scopes data    [0x00007fb547dae9b8,0x00007fb547dae9c8] = 16
 scopes pcs     [0x00007fb547dae9c8,0x00007fb547daea08] = 64
 dependencies   [0x00007fb547daea08,0x00007fb547daea10] = 8
----------------------------------------------------------------------
java/lang/System.getSecurityManager()Ljava/lang/SecurityManager;  [0x00007fb547dae8c0, 0x00007fb547dae9b0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52ccd20c0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547dae8c0: mov    %eax,-0x14000(%rsp)
  0x00007fb547dae8c7: push   %rbp
  0x00007fb547dae8c8: sub    $0x30,%rsp
  0x00007fb547dae8cc: movabs $0x7fb52d1bc3f8,%rax  ;   {metadata(method data for {method} {0x00007fb52ccd20c0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007fb547dae8d6: mov    0x100(%rax),%esi
  0x00007fb547dae8dc: add    $0x8,%esi
  0x00007fb547dae8df: mov    %esi,0x100(%rax)
  0x00007fb547dae8e5: and    $0x1ff8,%esi
  0x00007fb547dae8eb: cmp    $0x0,%esi
  0x00007fb547dae8ee: je     0x00007fb547dae915
  0x00007fb547dae8f4: movabs $0x62d800d60,%rax  ;   {oop(a &apos;java/lang/Class&apos;{0x000000062d800d60} = &apos;java/lang/System&apos;)}
  0x00007fb547dae8fe: mov    0x7c(%rax),%eax
  0x00007fb547dae901: shl    $0x3,%rax          ;*getstatic security {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.System::getSecurityManager@0 (line 375)

  0x00007fb547dae905: add    $0x30,%rsp
  0x00007fb547dae909: pop    %rbp
  0x00007fb547dae90a: mov    0x108(%r15),%r10
  0x00007fb547dae911: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547dae914: retq   
  0x00007fb547dae915: movabs $0x7fb52ccd20c0,%r10  ;   {metadata({method} {0x00007fb52ccd20c0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007fb547dae91f: mov    %r10,0x8(%rsp)
  0x00007fb547dae924: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547dae92c: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 375)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547dae931: jmp    0x00007fb547dae8f4
  0x00007fb547dae933: nop
  0x00007fb547dae934: nop
  0x00007fb547dae935: mov    0x440(%r15),%rax
  0x00007fb547dae93c: movabs $0x0,%r10
  0x00007fb547dae946: mov    %r10,0x440(%r15)
  0x00007fb547dae94d: movabs $0x0,%r10
  0x00007fb547dae957: mov    %r10,0x448(%r15)
  0x00007fb547dae95e: add    $0x30,%rsp
  0x00007fb547dae962: pop    %rbp
  0x00007fb547dae963: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547dae968: hlt    
  0x00007fb547dae969: hlt    
  0x00007fb547dae96a: hlt    
  0x00007fb547dae96b: hlt    
  0x00007fb547dae96c: hlt    
  0x00007fb547dae96d: hlt    
  0x00007fb547dae96e: hlt    
  0x00007fb547dae96f: hlt    
  0x00007fb547dae970: hlt    
  0x00007fb547dae971: hlt    
  0x00007fb547dae972: hlt    
  0x00007fb547dae973: hlt    
  0x00007fb547dae974: hlt    
  0x00007fb547dae975: hlt    
  0x00007fb547dae976: hlt    
  0x00007fb547dae977: hlt    
  0x00007fb547dae978: hlt    
  0x00007fb547dae979: hlt    
  0x00007fb547dae97a: hlt    
  0x00007fb547dae97b: hlt    
  0x00007fb547dae97c: hlt    
  0x00007fb547dae97d: hlt    
  0x00007fb547dae97e: hlt    
  0x00007fb547dae97f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb547dae980: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb547dae985: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547dae98f: and    $0xfffffffffffffff0,%rsp
  0x00007fb547dae993: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547dae998: hlt    
[Deopt Handler Code]
  0x00007fb547dae999: movabs $0x7fb547dae999,%r10  ;   {section_word}
  0x00007fb547dae9a3: push   %r10
  0x00007fb547dae9a5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547dae9aa: hlt    
  0x00007fb547dae9ab: hlt    
  0x00007fb547dae9ac: hlt    
  0x00007fb547dae9ad: hlt    
  0x00007fb547dae9ae: hlt    
  0x00007fb547dae9af: hlt    

ImmutableOopMap{}pc offsets: 113 </print_nmethod>
<writer thread='1329957'/>
<task_queued compile_id='109' method='java.lang.Thread isInterrupted ()Z' bytes='6' count='469' iicount='469' level='3' stamp='1.023' comment='tiered' hot_count='256'/>
<writer thread='1329958'/>
<task_queued compile_id='110' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='14865' iicount='14865' stamp='1.024' comment='tiered' hot_count='14848'/>
<writer thread='1329936'/>
<nmethod compile_id='109' compiler='c1' level='3' entry='0x00007fb547daec40' size='864' address='0x00007fb547daea90' relocation_offset='376' insts_offset='432' stub_offset='656' scopes_data_offset='728' scopes_pcs_offset='760' dependencies_offset='856' metadata_offset='720' method='java.lang.Thread isInterrupted ()Z' bytes='6' count='807' iicount='807' stamp='1.024'/>
<print_nmethod stamp='1.024'>
Compiled method (c1)    1023  109       3       java.lang.Thread::isInterrupted (6 bytes)
 total in heap  [0x00007fb547daea90,0x00007fb547daedf0] = 864
 relocation     [0x00007fb547daec08,0x00007fb547daec40] = 56
 main code      [0x00007fb547daec40,0x00007fb547daed20] = 224
 stub code      [0x00007fb547daed20,0x00007fb547daed60] = 64
 metadata       [0x00007fb547daed60,0x00007fb547daed68] = 8
 scopes data    [0x00007fb547daed68,0x00007fb547daed88] = 32
 scopes pcs     [0x00007fb547daed88,0x00007fb547daede8] = 96
 dependencies   [0x00007fb547daede8,0x00007fb547daedf0] = 8
----------------------------------------------------------------------
java/lang/Thread.isInterrupted()Z  [0x00007fb547daec40, 0x00007fb547daed60]  288 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cce9cc8} &apos;isInterrupted&apos; &apos;()Z&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb547daec40: mov    0x8(%rsi),%r10d
  0x00007fb547daec44: movabs $0x800000000,%r12
  0x00007fb547daec4e: add    %r12,%r10
  0x00007fb547daec51: xor    %r12,%r12
  0x00007fb547daec54: cmp    %rax,%r10
  0x00007fb547daec57: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb547daec5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb547daec60: mov    %eax,-0x14000(%rsp)
  0x00007fb547daec67: push   %rbp
  0x00007fb547daec68: sub    $0x30,%rsp
  0x00007fb547daec6c: movabs $0x7fb52d1bc550,%rdx  ;   {metadata(method data for {method} {0x00007fb52cce9cc8} &apos;isInterrupted&apos; &apos;()Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb547daec76: mov    0x100(%rdx),%edi
  0x00007fb547daec7c: add    $0x8,%edi
  0x00007fb547daec7f: mov    %edi,0x100(%rdx)
  0x00007fb547daec85: and    $0x1ff8,%edi
  0x00007fb547daec8b: cmp    $0x0,%edi
  0x00007fb547daec8e: je     0x00007fb547daecc7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@0 (line 1033)

  0x00007fb547daec94: mov    %rsi,%rdx
  0x00007fb547daec97: movabs $0x7fb52d1bc550,%rdi  ;   {metadata(method data for {method} {0x00007fb52cce9cc8} &apos;isInterrupted&apos; &apos;()Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb547daeca1: addq   $0x1,0x140(%rdi)
  0x00007fb547daeca9: mov    $0x0,%edx          ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)

  0x00007fb547daecae: nop
  0x00007fb547daecaf: callq  0x00007fb54f2d0868  ; ImmutableOopMap{}
                                                ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ;   {optimized virtual_call}
  0x00007fb547daecb4: and    $0x1,%eax
  0x00007fb547daecb7: add    $0x30,%rsp
  0x00007fb547daecbb: pop    %rbp
  0x00007fb547daecbc: mov    0x108(%r15),%r10
  0x00007fb547daecc3: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547daecc6: retq   
  0x00007fb547daecc7: movabs $0x7fb52cce9cc8,%r10  ;   {metadata({method} {0x00007fb52cce9cc8} &apos;isInterrupted&apos; &apos;()Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb547daecd1: mov    %r10,0x8(%rsp)
  0x00007fb547daecd6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547daecde: callq  0x00007fb5478f8100  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Thread::isInterrupted@-1 (line 1033)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daece3: jmp    0x00007fb547daec94
  0x00007fb547daece5: nop
  0x00007fb547daece6: nop
  0x00007fb547daece7: mov    0x440(%r15),%rax
  0x00007fb547daecee: movabs $0x0,%r10
  0x00007fb547daecf8: mov    %r10,0x440(%r15)
  0x00007fb547daecff: movabs $0x0,%r10
  0x00007fb547daed09: mov    %r10,0x448(%r15)
  0x00007fb547daed10: add    $0x30,%rsp
  0x00007fb547daed14: pop    %rbp
  0x00007fb547daed15: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547daed1a: hlt    
  0x00007fb547daed1b: hlt    
  0x00007fb547daed1c: hlt    
  0x00007fb547daed1d: hlt    
  0x00007fb547daed1e: hlt    
  0x00007fb547daed1f: hlt    
[Stub Code]
  0x00007fb547daed20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547daed25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547daed2f: jmpq   0x00007fb547daed2f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547daed34: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547daed39: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547daed43: and    $0xfffffffffffffff0,%rsp
  0x00007fb547daed47: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547daed4c: hlt    
[Deopt Handler Code]
  0x00007fb547daed4d: movabs $0x7fb547daed4d,%r10  ;   {section_word}
  0x00007fb547daed57: push   %r10
  0x00007fb547daed59: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547daed5e: hlt    
  0x00007fb547daed5f: hlt    

ImmutableOopMap{}pc offsets: 116 
ImmutableOopMap{rsi=Oop }pc offsets: 163 </print_nmethod>
<writer thread='1329957'/>
<task_queued compile_id='111' method='io.type.pollution.benchmarks.Main applicationStackBase (Lio/type/pollution/benchmarks/Context;)Z' bytes='7' count='14401' iicount='14401' stamp='1.025' comment='tiered' hot_count='12537'/>
<writer thread='1329935'/>
<nmethod compile_id='104' compiler='c2' level='4' entry='0x00007fb54f2d0c60' size='1712' address='0x00007fb54f2d0a90' relocation_offset='376' insts_offset='464' stub_offset='1040' scopes_data_offset='1128' scopes_pcs_offset='1304' dependencies_offset='1656' handler_table_offset='1664' nul_chk_table_offset='1688' oops_offset='1080' metadata_offset='1088' method='io.type.pollution.benchmarks.Main applicationStack (Lio/type/pollution/benchmarks/Context;I)Z' bytes='19' count='107709' iicount='107713' stamp='1.025'/>
<print_nmethod stamp='1.025'>
Compiled method (c2)    1025  104       4       io.type.pollution.benchmarks.Main::applicationStack (19 bytes)
 total in heap  [0x00007fb54f2d0a90,0x00007fb54f2d1140] = 1712
 relocation     [0x00007fb54f2d0c08,0x00007fb54f2d0c50] = 72
 main code      [0x00007fb54f2d0c60,0x00007fb54f2d0ea0] = 576
 stub code      [0x00007fb54f2d0ea0,0x00007fb54f2d0ec8] = 40
 oops           [0x00007fb54f2d0ec8,0x00007fb54f2d0ed0] = 8
 metadata       [0x00007fb54f2d0ed0,0x00007fb54f2d0ef8] = 40
 scopes data    [0x00007fb54f2d0ef8,0x00007fb54f2d0fa8] = 176
 scopes pcs     [0x00007fb54f2d0fa8,0x00007fb54f2d1108] = 352
 dependencies   [0x00007fb54f2d1108,0x00007fb54f2d1110] = 8
 handler table  [0x00007fb54f2d1110,0x00007fb54f2d1128] = 24
 nul chk table  [0x00007fb54f2d1128,0x00007fb54f2d1140] = 24
----------------------------------------------------------------------
io/type/pollution/benchmarks/Main.applicationStack(Lio/type/pollution/benchmarks/Context;I)Z  [0x00007fb54f2d0c60, 0x00007fb54f2d0ec8]  616 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;
  # parm0:    rsi:rsi   = &apos;io/type/pollution/benchmarks/Context&apos;
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00007fb54f2d0c60: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d0c67: push   %rbp
  0x00007fb54f2d0c68: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@-1 (line 37)

  0x00007fb54f2d0c6c: mov    %rsi,%r8
  0x00007fb54f2d0c6f: cmp    $0x1,%edx
  0x00007fb54f2d0c72: je     0x00007fb54f2d0c98  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@2 (line 37)

  0x00007fb54f2d0c74: mov    %edx,%r11d
  0x00007fb54f2d0c77: dec    %r11d
  0x00007fb54f2d0c7a: cmp    $0x1,%r11d
  0x00007fb54f2d0c7e: je     0x00007fb54f2d0ce7  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@2 (line 37)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb54f2d0c80: add    $0xfffffffe,%edx
  0x00007fb54f2d0c83: callq  0x00007fb54f2d0c60  ; ImmutableOopMap{}
                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {static_call}
  0x00007fb54f2d0c88: add    $0x20,%rsp
  0x00007fb54f2d0c8c: pop    %rbp
  0x00007fb54f2d0c8d: mov    0x108(%r15),%r10
  0x00007fb54f2d0c94: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2d0c97: retq   
  0x00007fb54f2d0c98: mov    %rsi,%r11
  0x00007fb54f2d0c9b: mov    0x8(%rsi),%r10d    ; implicit exception: dispatches to 0x00007fb54f2d0e7d
  0x00007fb54f2d0c9f: movabs $0x800000000,%rsi
  0x00007fb54f2d0ca9: add    %r10,%rsi
  0x00007fb54f2d0cac: mov    0x20(%rsi),%r10
  0x00007fb54f2d0cb0: movabs $0x800062248,%r8   ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0x00007fb54f2d0cba: cmp    %r8,%r10
  0x00007fb54f2d0cbd: jne    0x00007fb54f2d0d3a  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb54f2d0cbf: movabs $0x800062448,%r8   ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0x00007fb54f2d0cc9: cmp    %r8,%r10
  0x00007fb54f2d0ccc: jne    0x00007fb54f2d0d78  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb54f2d0cd2: mov    0x8(%r11),%r10d
  0x00007fb54f2d0cd6: cmp    $0x67840,%r10d     ;   {metadata(&apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb54f2d0cdd: jne    0x00007fb54f2d0e2c  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb54f2d0ce3: xor    %eax,%eax
  0x00007fb54f2d0ce5: jmp    0x00007fb54f2d0c88
  0x00007fb54f2d0ce7: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x00007fb54f2d0e8c
  0x00007fb54f2d0ceb: movabs $0x800000000,%rsi
  0x00007fb54f2d0cf5: add    %r11,%rsi
  0x00007fb54f2d0cf8: mov    0x20(%rsi),%r11
  0x00007fb54f2d0cfc: movabs $0x800062248,%r10  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0x00007fb54f2d0d06: cmp    %r10,%r11
  0x00007fb54f2d0d09: jne    0x00007fb54f2d0db4  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb54f2d0d0f: movabs $0x800062448,%r10  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0x00007fb54f2d0d19: cmp    %r10,%r11
  0x00007fb54f2d0d1c: jne    0x00007fb54f2d0df0  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb54f2d0d22: mov    0x8(%r8),%r11d
  0x00007fb54f2d0d26: cmp    $0x67840,%r11d     ;   {metadata(&apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb54f2d0d2d: jne    0x00007fb54f2d0e3f  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb54f2d0d33: xor    %eax,%eax
  0x00007fb54f2d0d35: jmpq   0x00007fb54f2d0c88
  0x00007fb54f2d0d3a: movabs $0x800062248,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0x00007fb54f2d0d44: push   %rax
  0x00007fb54f2d0d45: mov    %rax,%rax
  0x00007fb54f2d0d48: mov    0x28(%rsi),%rdi
  0x00007fb54f2d0d4c: mov    (%rdi),%ecx
  0x00007fb54f2d0d4e: add    $0x8,%rdi
  0x00007fb54f2d0d52: test   %rax,%rax
  0x00007fb54f2d0d55: repnz scas %es:(%rdi),%rax
  0x00007fb54f2d0d58: pop    %rax
  0x00007fb54f2d0d59: jne    0x00007fb54f2d0d63
  0x00007fb54f2d0d5f: mov    %rax,0x20(%rsi)
  0x00007fb54f2d0d63: je     0x00007fb54f2d0cbf
  0x00007fb54f2d0d69: mov    $0xffffffde,%esi
  0x00007fb54f2d0d6e: mov    %r11,%rbp
  0x00007fb54f2d0d71: xchg   %ax,%ax
  0x00007fb54f2d0d73: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d0d78: movabs $0x800062448,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0x00007fb54f2d0d82: push   %rax
  0x00007fb54f2d0d83: mov    %rax,%rax
  0x00007fb54f2d0d86: mov    0x28(%rsi),%rdi
  0x00007fb54f2d0d8a: mov    (%rdi),%ecx
  0x00007fb54f2d0d8c: add    $0x8,%rdi
  0x00007fb54f2d0d90: test   %rax,%rax
  0x00007fb54f2d0d93: repnz scas %es:(%rdi),%rax
  0x00007fb54f2d0d96: pop    %rax
  0x00007fb54f2d0d97: jne    0x00007fb54f2d0da1
  0x00007fb54f2d0d9d: mov    %rax,0x20(%rsi)
  0x00007fb54f2d0da1: je     0x00007fb54f2d0cd2
  0x00007fb54f2d0da7: mov    $0xffffffde,%esi
  0x00007fb54f2d0dac: mov    %r11,%rbp
  0x00007fb54f2d0daf: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d0db4: movabs $0x800062248,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0x00007fb54f2d0dbe: push   %rax
  0x00007fb54f2d0dbf: mov    %rax,%rax
  0x00007fb54f2d0dc2: mov    0x28(%rsi),%rdi
  0x00007fb54f2d0dc6: mov    (%rdi),%ecx
  0x00007fb54f2d0dc8: add    $0x8,%rdi
  0x00007fb54f2d0dcc: test   %rax,%rax
  0x00007fb54f2d0dcf: repnz scas %es:(%rdi),%rax
  0x00007fb54f2d0dd2: pop    %rax
  0x00007fb54f2d0dd3: jne    0x00007fb54f2d0ddd
  0x00007fb54f2d0dd9: mov    %rax,0x20(%rsi)
  0x00007fb54f2d0ddd: je     0x00007fb54f2d0d0f
  0x00007fb54f2d0de3: mov    $0xffffffde,%esi
  0x00007fb54f2d0de8: mov    %r8,%rbp
  0x00007fb54f2d0deb: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d0df0: movabs $0x800062448,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0x00007fb54f2d0dfa: push   %rax
  0x00007fb54f2d0dfb: mov    %rax,%rax
  0x00007fb54f2d0dfe: mov    0x28(%rsi),%rdi
  0x00007fb54f2d0e02: mov    (%rdi),%ecx
  0x00007fb54f2d0e04: add    $0x8,%rdi
  0x00007fb54f2d0e08: test   %rax,%rax
  0x00007fb54f2d0e0b: repnz scas %es:(%rdi),%rax
  0x00007fb54f2d0e0e: pop    %rax
  0x00007fb54f2d0e0f: jne    0x00007fb54f2d0e19
  0x00007fb54f2d0e15: mov    %rax,0x20(%rsi)
  0x00007fb54f2d0e19: je     0x00007fb54f2d0d22
  0x00007fb54f2d0e1f: mov    $0xffffffde,%esi
  0x00007fb54f2d0e24: mov    %r8,%rbp
  0x00007fb54f2d0e27: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d0e2c: cmp    $0x67c70,%r10d     ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb54f2d0e33: jne    0x00007fb54f2d0e52  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)

  0x00007fb54f2d0e35: mov    $0x1,%eax
  0x00007fb54f2d0e3a: jmpq   0x00007fb54f2d0c88
  0x00007fb54f2d0e3f: cmp    $0x67c70,%r11d     ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb54f2d0e46: jne    0x00007fb54f2d0e60  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)

  0x00007fb54f2d0e48: mov    $0x1,%eax
  0x00007fb54f2d0e4d: jmpq   0x00007fb54f2d0c88
  0x00007fb54f2d0e52: mov    $0xffffffc6,%esi
  0x00007fb54f2d0e57: mov    %r11,%rbp
  0x00007fb54f2d0e5a: nop
  0x00007fb54f2d0e5b: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d0e60: mov    $0xffffffc6,%esi
  0x00007fb54f2d0e65: mov    %r8,%rbp
  0x00007fb54f2d0e68: data16 xchg %ax,%ax
  0x00007fb54f2d0e6b: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d0e70: mov    %rax,%rsi
  0x00007fb54f2d0e73: add    $0x20,%rsp
  0x00007fb54f2d0e77: pop    %rbp
  0x00007fb54f2d0e78: jmpq   0x00007fb5478fc000  ;   {runtime_call _rethrow_Java}
  0x00007fb54f2d0e7d: mov    $0xffffff4d,%esi
  0x00007fb54f2d0e82: mov    %r11,(%rsp)
  0x00007fb54f2d0e86: nop
  0x00007fb54f2d0e87: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d0e8c: mov    $0xffffff4d,%esi
  0x00007fb54f2d0e91: mov    %r8,(%rsp)
  0x00007fb54f2d0e95: xchg   %ax,%ax
  0x00007fb54f2d0e97: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d0e9c: hlt    
  0x00007fb54f2d0e9d: hlt    
  0x00007fb54f2d0e9e: hlt    
  0x00007fb54f2d0e9f: hlt    
[Stub Code]
  0x00007fb54f2d0ea0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00007fb54f2d0eaa: jmpq   0x00007fb54f2d0eaa  ;   {runtime_call}
[Exception Handler]
  0x00007fb54f2d0eaf: jmpq   0x00007fb547861300  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007fb54f2d0eb4: callq  0x00007fb54f2d0eb9
  0x00007fb54f2d0eb9: subq   $0x5,(%rsp)
  0x00007fb54f2d0ebe: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2d0ec3: hlt    
  0x00007fb54f2d0ec4: hlt    
  0x00007fb54f2d0ec5: hlt    
  0x00007fb54f2d0ec6: hlt    
  0x00007fb54f2d0ec7: hlt    

ImmutableOopMap{}pc offsets: 40 
ImmutableOopMap{rbp=Oop }pc offsets: 280 340 400 460 512 528 
ImmutableOopMap{[0]=Oop }pc offsets: 556 572 </print_nmethod>
<writer thread='1329936'/>
<nmethod compile_id='105' compiler='c1' level='1' entry='0x00007fb54f2d1340' size='688' address='0x00007fb54f2d1190' relocation_offset='376' insts_offset='432' stub_offset='560' scopes_data_offset='624' scopes_pcs_offset='632' dependencies_offset='680' oops_offset='608' metadata_offset='616' method='io.type.pollution.benchmarks.DuplicatedContext isDuplicated ()Z' bytes='2' count='3465' iicount='3465' stamp='1.036'/>
<print_nmethod stamp='1.036'>
Compiled method (c1)    1036  105       1       io.type.pollution.benchmarks.DuplicatedContext::isDuplicated (2 bytes)
 total in heap  [0x00007fb54f2d1190,0x00007fb54f2d1440] = 688
 relocation     [0x00007fb54f2d1308,0x00007fb54f2d1328] = 32
 main code      [0x00007fb54f2d1340,0x00007fb54f2d13c0] = 128
 stub code      [0x00007fb54f2d13c0,0x00007fb54f2d13f0] = 48
 oops           [0x00007fb54f2d13f0,0x00007fb54f2d13f8] = 8
 metadata       [0x00007fb54f2d13f8,0x00007fb54f2d1400] = 8
 scopes data    [0x00007fb54f2d1400,0x00007fb54f2d1408] = 8
 scopes pcs     [0x00007fb54f2d1408,0x00007fb54f2d1438] = 48
 dependencies   [0x00007fb54f2d1438,0x00007fb54f2d1440] = 8
----------------------------------------------------------------------
io/type/pollution/benchmarks/DuplicatedContext.isDuplicated()Z  [0x00007fb54f2d1340, 0x00007fb54f2d13f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52d0bc280} &apos;isDuplicated&apos; &apos;()Z&apos; in &apos;io/type/pollution/benchmarks/DuplicatedContext&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007fb54f2d1340: mov    0x8(%rsi),%r10d
  0x00007fb54f2d1344: movabs $0x800000000,%r12
  0x00007fb54f2d134e: add    %r12,%r10
  0x00007fb54f2d1351: xor    %r12,%r12
  0x00007fb54f2d1354: cmp    %rax,%r10
  0x00007fb54f2d1357: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2d135d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2d1360: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d1367: push   %rbp
  0x00007fb54f2d1368: sub    $0x30,%rsp         ;*iconst_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.DuplicatedContext::isDuplicated@0 (line 6)

  0x00007fb54f2d136c: mov    $0x1,%eax
  0x00007fb54f2d1371: add    $0x30,%rsp
  0x00007fb54f2d1375: pop    %rbp
  0x00007fb54f2d1376: mov    0x108(%r15),%r10
  0x00007fb54f2d137d: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2d1380: retq   
  0x00007fb54f2d1381: nop
  0x00007fb54f2d1382: nop
  0x00007fb54f2d1383: mov    0x440(%r15),%rax
  0x00007fb54f2d138a: movabs $0x0,%r10
  0x00007fb54f2d1394: mov    %r10,0x440(%r15)
  0x00007fb54f2d139b: movabs $0x0,%r10
  0x00007fb54f2d13a5: mov    %r10,0x448(%r15)
  0x00007fb54f2d13ac: add    $0x30,%rsp
  0x00007fb54f2d13b0: pop    %rbp
  0x00007fb54f2d13b1: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb54f2d13b6: hlt    
  0x00007fb54f2d13b7: hlt    
  0x00007fb54f2d13b8: hlt    
  0x00007fb54f2d13b9: hlt    
  0x00007fb54f2d13ba: hlt    
  0x00007fb54f2d13bb: hlt    
  0x00007fb54f2d13bc: hlt    
  0x00007fb54f2d13bd: hlt    
  0x00007fb54f2d13be: hlt    
  0x00007fb54f2d13bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2d13c0: callq  0x00007fb5478f4e00  ;   {no_reloc}
  0x00007fb54f2d13c5: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb54f2d13cf: and    $0xfffffffffffffff0,%rsp
  0x00007fb54f2d13d3: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb54f2d13d8: hlt    
[Deopt Handler Code]
  0x00007fb54f2d13d9: movabs $0x7fb54f2d13d9,%r10  ;   {section_word}
  0x00007fb54f2d13e3: push   %r10
  0x00007fb54f2d13e5: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2d13ea: hlt    
  0x00007fb54f2d13eb: hlt    
  0x00007fb54f2d13ec: hlt    
  0x00007fb54f2d13ed: hlt    
  0x00007fb54f2d13ee: hlt    
  0x00007fb54f2d13ef: hlt    
</print_nmethod>
<writer thread='1329957'/>
<task_queued compile_id='112' method='java.lang.Thread isInterrupted ()Z' bytes='6' count='8710' iicount='8710' stamp='1.037' comment='tiered' hot_count='8710'/>
<writer thread='1329935'/>
<nmethod compile_id='110' compiler='c2' level='4' entry='0x00007fb54f2d1620' size='608' address='0x00007fb54f2d1490' relocation_offset='376' insts_offset='400' stub_offset='464' scopes_data_offset='496' scopes_pcs_offset='520' dependencies_offset='600' metadata_offset='488' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='17822' iicount='17822' stamp='1.037'/>
<make_not_entrant thread='1329935' compile_id='17' compiler='c1' level='3' stamp='1.037'/>
<print_nmethod stamp='1.037'>
Compiled method (c2)    1037  110       4       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x00007fb54f2d1490,0x00007fb54f2d16f0] = 608
 relocation     [0x00007fb54f2d1608,0x00007fb54f2d1618] = 16
 main code      [0x00007fb54f2d1620,0x00007fb54f2d1660] = 64
 stub code      [0x00007fb54f2d1660,0x00007fb54f2d1678] = 24
 metadata       [0x00007fb54f2d1678,0x00007fb54f2d1680] = 8
 scopes data    [0x00007fb54f2d1680,0x00007fb54f2d1698] = 24
 scopes pcs     [0x00007fb54f2d1698,0x00007fb54f2d16e8] = 80
 dependencies   [0x00007fb54f2d16e8,0x00007fb54f2d16f0] = 8
----------------------------------------------------------------------
java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;  [0x00007fb54f2d1620, 0x00007fb54f2d1678]  88 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52cdce768} &apos;requireNonNull&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Objects&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x30]  (sp of caller)
  0x00007fb54f2d1620: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d1627: push   %rbp
  0x00007fb54f2d1628: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)

  0x00007fb54f2d162c: mov    %rsi,%rax
  0x00007fb54f2d162f: test   %rsi,%rsi
  0x00007fb54f2d1632: je     0x00007fb54f2d1644  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)

  0x00007fb54f2d1634: add    $0x20,%rsp
  0x00007fb54f2d1638: pop    %rbp
  0x00007fb54f2d1639: mov    0x108(%r15),%r10
  0x00007fb54f2d1640: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2d1643: retq   
  0x00007fb54f2d1644: mov    $0xffffff4d,%esi
  0x00007fb54f2d1649: mov    %rax,(%rsp)
  0x00007fb54f2d164d: xchg   %ax,%ax
  0x00007fb54f2d164f: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d1654: hlt    
  0x00007fb54f2d1655: hlt    
  0x00007fb54f2d1656: hlt    
  0x00007fb54f2d1657: hlt    
  0x00007fb54f2d1658: hlt    
  0x00007fb54f2d1659: hlt    
  0x00007fb54f2d165a: hlt    
  0x00007fb54f2d165b: hlt    
  0x00007fb54f2d165c: hlt    
  0x00007fb54f2d165d: hlt    
  0x00007fb54f2d165e: hlt    
  0x00007fb54f2d165f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2d1660: jmpq   0x00007fb547861300  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb54f2d1665: callq  0x00007fb54f2d166a
  0x00007fb54f2d166a: subq   $0x5,(%rsp)
  0x00007fb54f2d166f: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2d1674: hlt    
  0x00007fb54f2d1675: hlt    
  0x00007fb54f2d1676: hlt    
  0x00007fb54f2d1677: hlt    

ImmutableOopMap{[0]=Oop }pc offsets: 52 </print_nmethod>
<nmethod compile_id='112' compiler='c2' level='4' entry='0x00007fb54f2d1920' size='688' address='0x00007fb54f2d1790' relocation_offset='376' insts_offset='400' stub_offset='528' scopes_data_offset='576' scopes_pcs_offset='592' dependencies_offset='656' handler_table_offset='664' metadata_offset='568' method='java.lang.Thread isInterrupted ()Z' bytes='6' count='16201' iicount='16203' stamp='1.038'/>
<make_not_entrant thread='1329935' compile_id='109' compiler='c1' level='3' stamp='1.038'/>
<print_nmethod stamp='1.038'>
Compiled method (c2)    1038  112       4       java.lang.Thread::isInterrupted (6 bytes)
 total in heap  [0x00007fb54f2d1790,0x00007fb54f2d1a40] = 688
 relocation     [0x00007fb54f2d1908,0x00007fb54f2d1920] = 24
 main code      [0x00007fb54f2d1920,0x00007fb54f2d19a0] = 128
 stub code      [0x00007fb54f2d19a0,0x00007fb54f2d19c8] = 40
 metadata       [0x00007fb54f2d19c8,0x00007fb54f2d19d0] = 8
 scopes data    [0x00007fb54f2d19d0,0x00007fb54f2d19e0] = 16
 scopes pcs     [0x00007fb54f2d19e0,0x00007fb54f2d1a20] = 64
 dependencies   [0x00007fb54f2d1a20,0x00007fb54f2d1a28] = 8
 handler table  [0x00007fb54f2d1a28,0x00007fb54f2d1a40] = 24
----------------------------------------------------------------------
java/lang/Thread.isInterrupted()Z  [0x00007fb54f2d1920, 0x00007fb54f2d19c8]  168 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb52cce9cc8} &apos;isInterrupted&apos; &apos;()Z&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x20]  (sp of caller)
  0x00007fb54f2d1920: mov    0x8(%rsi),%r10d
  0x00007fb54f2d1924: movabs $0x800000000,%r12
  0x00007fb54f2d192e: add    %r12,%r10
  0x00007fb54f2d1931: xor    %r12,%r12
  0x00007fb54f2d1934: cmp    %r10,%rax
  0x00007fb54f2d1937: jne    0x00007fb54784b080  ;   {runtime_call ic_miss_stub}
  0x00007fb54f2d193d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007fb54f2d1940: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d1947: push   %rbp
  0x00007fb54f2d1948: sub    $0x10,%rsp
  0x00007fb54f2d194c: xor    %edx,%edx
  0x00007fb54f2d194e: mov    0x320(%r15),%r10
  0x00007fb54f2d1955: cmp    %rsi,%r10
  0x00007fb54f2d1958: jne    0x00007fb54f2d197c
  0x00007fb54f2d195a: mov    0x270(%r15),%r10
  0x00007fb54f2d1961: mov    0x14(%r10),%r11d
  0x00007fb54f2d1965: test   %r11d,%r11d
  0x00007fb54f2d1968: jne    0x00007fb54f2d1986
  0x00007fb54f2d196a: xor    %eax,%eax
  0x00007fb54f2d196c: add    $0x10,%rsp
  0x00007fb54f2d1970: pop    %rbp
  0x00007fb54f2d1971: mov    0x108(%r15),%r10
  0x00007fb54f2d1978: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2d197b: retq   
  0x00007fb54f2d197c: data16 xchg %ax,%ax
  0x00007fb54f2d197f: callq  0x00007fb54784ad80  ; ImmutableOopMap{}
                                                ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ;   {optimized virtual_call}
  0x00007fb54f2d1984: jmp    0x00007fb54f2d196c
  0x00007fb54f2d1986: mov    $0x1,%eax
  0x00007fb54f2d198b: jmp    0x00007fb54f2d196c  ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)

  0x00007fb54f2d198d: mov    %rax,%rsi
  0x00007fb54f2d1990: add    $0x10,%rsp
  0x00007fb54f2d1994: pop    %rbp
  0x00007fb54f2d1995: jmpq   0x00007fb5478fc000  ;   {runtime_call _rethrow_Java}
  0x00007fb54f2d199a: hlt    
  0x00007fb54f2d199b: hlt    
  0x00007fb54f2d199c: hlt    
  0x00007fb54f2d199d: hlt    
  0x00007fb54f2d199e: hlt    
  0x00007fb54f2d199f: hlt    
[Stub Code]
  0x00007fb54f2d19a0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00007fb54f2d19aa: jmpq   0x00007fb54f2d19aa  ;   {runtime_call}
[Exception Handler]
  0x00007fb54f2d19af: jmpq   0x00007fb547861300  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007fb54f2d19b4: callq  0x00007fb54f2d19b9
  0x00007fb54f2d19b9: subq   $0x5,(%rsp)
  0x00007fb54f2d19be: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2d19c3: hlt    
  0x00007fb54f2d19c4: hlt    
  0x00007fb54f2d19c5: hlt    
  0x00007fb54f2d19c6: hlt    
  0x00007fb54f2d19c7: hlt    

ImmutableOopMap{}pc offsets: 100 </print_nmethod>
<nmethod compile_id='111' compiler='c2' level='4' entry='0x00007fb54f2d1c20' size='696' address='0x00007fb54f2d1a90' relocation_offset='376' insts_offset='400' stub_offset='464' scopes_data_offset='528' scopes_pcs_offset='584' dependencies_offset='664' handler_table_offset='672' oops_offset='504' metadata_offset='512' method='io.type.pollution.benchmarks.Main applicationStackBase (Lio/type/pollution/benchmarks/Context;)Z' bytes='7' count='36657' iicount='36660' stamp='1.039'/>
<make_not_entrant thread='1329935' compile_id='78' compiler='c1' level='2' stamp='1.039'/>
<print_nmethod stamp='1.039'>
Compiled method (c2)    1039  111       4       io.type.pollution.benchmarks.Main::applicationStackBase (7 bytes)
 total in heap  [0x00007fb54f2d1a90,0x00007fb54f2d1d48] = 696
 relocation     [0x00007fb54f2d1c08,0x00007fb54f2d1c20] = 24
 main code      [0x00007fb54f2d1c20,0x00007fb54f2d1c60] = 64
 stub code      [0x00007fb54f2d1c60,0x00007fb54f2d1c88] = 40
 oops           [0x00007fb54f2d1c88,0x00007fb54f2d1c90] = 8
 metadata       [0x00007fb54f2d1c90,0x00007fb54f2d1ca0] = 16
 scopes data    [0x00007fb54f2d1ca0,0x00007fb54f2d1cd8] = 56
 scopes pcs     [0x00007fb54f2d1cd8,0x00007fb54f2d1d28] = 80
 dependencies   [0x00007fb54f2d1d28,0x00007fb54f2d1d30] = 8
 handler table  [0x00007fb54f2d1d30,0x00007fb54f2d1d48] = 24
----------------------------------------------------------------------
io/type/pollution/benchmarks/Main.applicationStackBase(Lio/type/pollution/benchmarks/Context;)Z  [0x00007fb54f2d1c20, 0x00007fb54f2d1c88]  104 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0bf7d0} &apos;applicationStackBase&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;
  # parm0:    rsi:rsi   = &apos;io/type/pollution/benchmarks/Context&apos;
  #           [sp+0x20]  (sp of caller)
  0x00007fb54f2d1c20: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d1c27: push   %rbp
  0x00007fb54f2d1c28: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@-1 (line 32)

  0x00007fb54f2d1c2c: mov    $0x6,%edx
  0x00007fb54f2d1c31: xchg   %ax,%ax
  0x00007fb54f2d1c33: callq  0x00007fb54f2d0c60  ; ImmutableOopMap{}
                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ;   {static_call}
  0x00007fb54f2d1c38: add    $0x10,%rsp
  0x00007fb54f2d1c3c: pop    %rbp
  0x00007fb54f2d1c3d: mov    0x108(%r15),%r10
  0x00007fb54f2d1c44: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2d1c47: retq                      ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)

  0x00007fb54f2d1c48: mov    %rax,%rsi
  0x00007fb54f2d1c4b: add    $0x10,%rsp
  0x00007fb54f2d1c4f: pop    %rbp
  0x00007fb54f2d1c50: jmpq   0x00007fb5478fc000  ;   {runtime_call _rethrow_Java}
  0x00007fb54f2d1c55: hlt    
  0x00007fb54f2d1c56: hlt    
  0x00007fb54f2d1c57: hlt    
  0x00007fb54f2d1c58: hlt    
  0x00007fb54f2d1c59: hlt    
  0x00007fb54f2d1c5a: hlt    
  0x00007fb54f2d1c5b: hlt    
  0x00007fb54f2d1c5c: hlt    
  0x00007fb54f2d1c5d: hlt    
  0x00007fb54f2d1c5e: hlt    
  0x00007fb54f2d1c5f: hlt    
[Stub Code]
  0x00007fb54f2d1c60: movabs $0x0,%rbx          ;   {no_reloc}
  0x00007fb54f2d1c6a: jmpq   0x00007fb54f2d1c6a  ;   {runtime_call}
[Exception Handler]
  0x00007fb54f2d1c6f: jmpq   0x00007fb547861300  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007fb54f2d1c74: callq  0x00007fb54f2d1c79
  0x00007fb54f2d1c79: subq   $0x5,(%rsp)
  0x00007fb54f2d1c7e: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2d1c83: hlt    
  0x00007fb54f2d1c84: hlt    
  0x00007fb54f2d1c85: hlt    
  0x00007fb54f2d1c86: hlt    
  0x00007fb54f2d1c87: hlt    

ImmutableOopMap{}pc offsets: 24 </print_nmethod>
<nmethod compile_id='106' compiler='c2' level='4' entry='0x00007fb54f2d1f40' size='1024' address='0x00007fb54f2d1d90' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='752' scopes_pcs_offset='824' dependencies_offset='1000' nul_chk_table_offset='1008' oops_offset='712' metadata_offset='720' method='io.type.pollution.benchmarks.ContextUtil isDuplicatedContext (Lio/type/pollution/benchmarks/Context;)Z' bytes='18' count='14451' iicount='14451' stamp='1.041'/>
<print_nmethod stamp='1.041'>
Compiled method (c2)    1040  106       4       io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext (18 bytes)
 total in heap  [0x00007fb54f2d1d90,0x00007fb54f2d2190] = 1024
 relocation     [0x00007fb54f2d1f08,0x00007fb54f2d1f28] = 32
 main code      [0x00007fb54f2d1f40,0x00007fb54f2d2040] = 256
 stub code      [0x00007fb54f2d2040,0x00007fb54f2d2058] = 24
 oops           [0x00007fb54f2d2058,0x00007fb54f2d2060] = 8
 metadata       [0x00007fb54f2d2060,0x00007fb54f2d2080] = 32
 scopes data    [0x00007fb54f2d2080,0x00007fb54f2d20c8] = 72
 scopes pcs     [0x00007fb54f2d20c8,0x00007fb54f2d2178] = 176
 dependencies   [0x00007fb54f2d2178,0x00007fb54f2d2180] = 8
 nul chk table  [0x00007fb54f2d2180,0x00007fb54f2d2190] = 16
----------------------------------------------------------------------
io/type/pollution/benchmarks/ContextUtil.isDuplicatedContext(Lio/type/pollution/benchmarks/Context;)Z  [0x00007fb54f2d1f40, 0x00007fb54f2d2058]  280 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0be6f0} &apos;isDuplicatedContext&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/ContextUtil&apos;
  # parm0:    rsi:rsi   = &apos;io/type/pollution/benchmarks/Context&apos;
  #           [sp+0x30]  (sp of caller)
  0x00007fb54f2d1f40: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d1f47: push   %rbp
  0x00007fb54f2d1f48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@-1 (line 8)

  0x00007fb54f2d1f4c: mov    %rsi,%r8
  0x00007fb54f2d1f4f: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x00007fb54f2d2024
  0x00007fb54f2d1f53: movabs $0x800000000,%rsi
  0x00007fb54f2d1f5d: add    %r11,%rsi
  0x00007fb54f2d1f60: mov    0x20(%rsi),%r10
  0x00007fb54f2d1f64: movabs $0x800062248,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0x00007fb54f2d1f6e: cmp    %rax,%r10
  0x00007fb54f2d1f71: jne    0x00007fb54f2d1fb1  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)

  0x00007fb54f2d1f73: movabs $0x800062448,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0x00007fb54f2d1f7d: cmp    %rax,%r10
  0x00007fb54f2d1f80: jne    0x00007fb54f2d1fe0  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)

  0x00007fb54f2d1f82: mov    0x8(%r8),%r11d
  0x00007fb54f2d1f86: cmp    $0x67840,%r11d     ;   {metadata(&apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
  0x00007fb54f2d1f8d: je     0x00007fb54f2d1f9f
  0x00007fb54f2d1f8f: cmp    $0x67c70,%r11d     ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb54f2d1f96: jne    0x00007fb54f2d2014  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)

  0x00007fb54f2d1f98: mov    $0x1,%eax
  0x00007fb54f2d1f9d: jmp    0x00007fb54f2d1fa1
  0x00007fb54f2d1f9f: xor    %eax,%eax          ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@-1 (line 8)

  0x00007fb54f2d1fa1: add    $0x20,%rsp
  0x00007fb54f2d1fa5: pop    %rbp
  0x00007fb54f2d1fa6: mov    0x108(%r15),%r10
  0x00007fb54f2d1fad: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb54f2d1fb0: retq   
  0x00007fb54f2d1fb1: push   %rax
  0x00007fb54f2d1fb2: mov    %rax,%rax
  0x00007fb54f2d1fb5: mov    0x28(%rsi),%rdi
  0x00007fb54f2d1fb9: mov    (%rdi),%ecx
  0x00007fb54f2d1fbb: add    $0x8,%rdi
  0x00007fb54f2d1fbf: test   %rax,%rax
  0x00007fb54f2d1fc2: repnz scas %es:(%rdi),%rax
  0x00007fb54f2d1fc5: pop    %rax
  0x00007fb54f2d1fc6: jne    0x00007fb54f2d1fd0
  0x00007fb54f2d1fcc: mov    %rax,0x20(%rsi)
  0x00007fb54f2d1fd0: je     0x00007fb54f2d1f73
  0x00007fb54f2d1fd2: mov    $0xffffffde,%esi
  0x00007fb54f2d1fd7: mov    %r8,%rbp
  0x00007fb54f2d1fda: nop
  0x00007fb54f2d1fdb: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d1fe0: push   %rax
  0x00007fb54f2d1fe1: mov    %rax,%rax
  0x00007fb54f2d1fe4: mov    0x28(%rsi),%rdi
  0x00007fb54f2d1fe8: mov    (%rdi),%ecx
  0x00007fb54f2d1fea: add    $0x8,%rdi
  0x00007fb54f2d1fee: test   %rax,%rax
  0x00007fb54f2d1ff1: repnz scas %es:(%rdi),%rax
  0x00007fb54f2d1ff4: pop    %rax
  0x00007fb54f2d1ff5: jne    0x00007fb54f2d1fff
  0x00007fb54f2d1ffb: mov    %rax,0x20(%rsi)
  0x00007fb54f2d1fff: je     0x00007fb54f2d1f82
  0x00007fb54f2d2005: mov    $0xffffffde,%esi
  0x00007fb54f2d200a: mov    %r8,%rbp
  0x00007fb54f2d200d: xchg   %ax,%ax
  0x00007fb54f2d200f: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d2014: mov    $0xffffffc6,%esi
  0x00007fb54f2d2019: mov    %r8,%rbp
  0x00007fb54f2d201c: data16 xchg %ax,%ax
  0x00007fb54f2d201f: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d2024: mov    $0xffffff4d,%esi
  0x00007fb54f2d2029: mov    %r8,(%rsp)
  0x00007fb54f2d202d: xchg   %ax,%ax
  0x00007fb54f2d202f: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@1 (line 8)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d2034: hlt    
  0x00007fb54f2d2035: hlt    
  0x00007fb54f2d2036: hlt    
  0x00007fb54f2d2037: hlt    
  0x00007fb54f2d2038: hlt    
  0x00007fb54f2d2039: hlt    
  0x00007fb54f2d203a: hlt    
  0x00007fb54f2d203b: hlt    
  0x00007fb54f2d203c: hlt    
  0x00007fb54f2d203d: hlt    
  0x00007fb54f2d203e: hlt    
  0x00007fb54f2d203f: hlt    
[Exception Handler]
[Stub Code]
  0x00007fb54f2d2040: jmpq   0x00007fb547861300  ;   {no_reloc}
[Deopt Handler Code]
  0x00007fb54f2d2045: callq  0x00007fb54f2d204a
  0x00007fb54f2d204a: subq   $0x5,(%rsp)
  0x00007fb54f2d204f: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2d2054: hlt    
  0x00007fb54f2d2055: hlt    
  0x00007fb54f2d2056: hlt    
  0x00007fb54f2d2057: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 160 212 228 
ImmutableOopMap{[0]=Oop }pc offsets: 244 </print_nmethod>
<writer thread='1329957'/>
<task_queued compile_id='113' compile_kind='osr' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='67408' iicount='2' osr_bci='8' level='3' stamp='1.043' comment='tiered' hot_count='60420'/>
<writer thread='1329936'/>
<nmethod compile_id='113' compile_kind='osr' compiler='c1' level='3' entry='0x00007fb547daf020' size='2672' address='0x00007fb547daee10' relocation_offset='376' insts_offset='528' stub_offset='1872' scopes_data_offset='2008' scopes_pcs_offset='2232' dependencies_offset='2648' nul_chk_table_offset='2656' oops_offset='1952' metadata_offset='1960' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='72528' iicount='2' stamp='1.043'/>
<print_nmethod stamp='1.043'>
Compiled method (c1)    1043  113 %     3       io.type.pollution.benchmarks.Main::lambda$main$0 @ 8 (26 bytes)
 total in heap  [0x00007fb547daee10,0x00007fb547daf880] = 2672
 relocation     [0x00007fb547daef88,0x00007fb547daf010] = 136
 main code      [0x00007fb547daf020,0x00007fb547daf560] = 1344
 stub code      [0x00007fb547daf560,0x00007fb547daf5b0] = 80
 oops           [0x00007fb547daf5b0,0x00007fb547daf5b8] = 8
 metadata       [0x00007fb547daf5b8,0x00007fb547daf5e8] = 48
 scopes data    [0x00007fb547daf5e8,0x00007fb547daf6c8] = 224
 scopes pcs     [0x00007fb547daf6c8,0x00007fb547daf868] = 416
 dependencies   [0x00007fb547daf868,0x00007fb547daf870] = 8
 nul chk table  [0x00007fb547daf870,0x00007fb547daf880] = 16
----------------------------------------------------------------------
io/type/pollution/benchmarks/Main.lambda$main$0()V  [0x00007fb547daf020, 0x00007fb547daf5b0]  1424 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;
  0x00007fb547daf020: mov    %eax,-0x14000(%rsp)
  0x00007fb547daf027: push   %rbp
  0x00007fb547daf028: sub    $0x80,%rsp
  0x00007fb547daf02f: movabs $0x7fb52d0bc428,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf039: mov    0x100(%rdx),%esi
  0x00007fb547daf03f: add    $0x8,%esi
  0x00007fb547daf042: mov    %esi,0x100(%rdx)
  0x00007fb547daf048: and    $0x1ff8,%esi
  0x00007fb547daf04e: cmp    $0x0,%esi
  0x00007fb547daf051: je     0x00007fb547daf3f0
  0x00007fb547daf057: movabs $0x800067c70,%rdx  ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb547daf061: mov    0x118(%r15),%rax
  0x00007fb547daf068: lea    0x10(%rax),%rdi
  0x00007fb547daf06c: cmp    0x128(%r15),%rdi
  0x00007fb547daf073: ja     0x00007fb547daf411
  0x00007fb547daf079: mov    %rdi,0x118(%r15)
  0x00007fb547daf080: mov    0xb8(%rdx),%rcx
  0x00007fb547daf087: mov    %rcx,(%rax)
  0x00007fb547daf08a: mov    %rdx,%rcx
  0x00007fb547daf08d: movabs $0x800000000,%r12
  0x00007fb547daf097: sub    %r12,%rcx
  0x00007fb547daf09a: xor    %r12,%r12
  0x00007fb547daf09d: mov    %ecx,0x8(%rax)
  0x00007fb547daf0a0: xor    %rcx,%rcx
  0x00007fb547daf0a3: mov    %ecx,0xc(%rax)
  0x00007fb547daf0a6: xor    %rcx,%rcx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@0 (line 21)

  0x00007fb547daf0a9: mov    %rax,%rsi
  0x00007fb547daf0ac: movabs $0x7fb52d0bc428,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf0b6: addq   $0x1,0x140(%rdi)
  0x00007fb547daf0be: movabs $0x7fb52d0bc640,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bc1d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb547daf0c8: mov    0x100(%rsi),%edi
  0x00007fb547daf0ce: add    $0x8,%edi
  0x00007fb547daf0d1: mov    %edi,0x100(%rsi)
  0x00007fb547daf0d7: and    $0x7ffff8,%edi
  0x00007fb547daf0dd: cmp    $0x0,%edi
  0x00007fb547daf0e0: je     0x00007fb547daf41e
  0x00007fb547daf0e6: mov    %rax,%rsi
  0x00007fb547daf0e9: movabs $0x7fb52d0bc640,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bc1d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb547daf0f3: addq   $0x1,0x140(%rdi)
  0x00007fb547daf0fb: movabs $0x7fb52cedd4a0,%rsi  ;   {metadata(method data for {method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547daf105: mov    0x100(%rsi),%edi
  0x00007fb547daf10b: add    $0x8,%edi
  0x00007fb547daf10e: mov    %edi,0x100(%rsi)
  0x00007fb547daf114: and    $0x7ffff8,%edi
  0x00007fb547daf11a: cmp    $0x0,%edi
  0x00007fb547daf11d: je     0x00007fb547daf43f
  0x00007fb547daf123: mov    %rax,0x68(%rsp)
  0x00007fb547daf128: movabs $0x7fb52d0bc428,%rdx  ;   {metadata(method data for {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf132: addq   $0x1,0x150(%rdx)
  0x00007fb547daf13a: mov    0x320(%r15),%rsi   ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@8 (line 22)

  0x00007fb547daf141: cmp    (%rsi),%rax        ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                ; implicit exception: dispatches to 0x00007fb547daf460
  0x00007fb547daf144: mov    %rsi,%rdx
  0x00007fb547daf147: movabs $0x7fb52d0bc428,%rdi  ;   {metadata(method data for {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf151: mov    0x8(%rdx),%edx
  0x00007fb547daf154: movabs $0x800000000,%r12
  0x00007fb547daf15e: add    %r12,%rdx
  0x00007fb547daf161: xor    %r12,%r12
  0x00007fb547daf164: cmp    0x170(%rdi),%rdx
  0x00007fb547daf16b: jne    0x00007fb547daf17a
  0x00007fb547daf16d: addq   $0x1,0x178(%rdi)
  0x00007fb547daf175: jmpq   0x00007fb547daf1e0
  0x00007fb547daf17a: cmp    0x180(%rdi),%rdx
  0x00007fb547daf181: jne    0x00007fb547daf190
  0x00007fb547daf183: addq   $0x1,0x188(%rdi)
  0x00007fb547daf18b: jmpq   0x00007fb547daf1e0
  0x00007fb547daf190: cmpq   $0x0,0x170(%rdi)
  0x00007fb547daf19b: jne    0x00007fb547daf1b4
  0x00007fb547daf19d: mov    %rdx,0x170(%rdi)
  0x00007fb547daf1a4: movq   $0x1,0x178(%rdi)
  0x00007fb547daf1af: jmpq   0x00007fb547daf1e0
  0x00007fb547daf1b4: cmpq   $0x0,0x180(%rdi)
  0x00007fb547daf1bf: jne    0x00007fb547daf1d8
  0x00007fb547daf1c1: mov    %rdx,0x180(%rdi)
  0x00007fb547daf1c8: movq   $0x1,0x188(%rdi)
  0x00007fb547daf1d3: jmpq   0x00007fb547daf1e0
  0x00007fb547daf1d8: addq   $0x1,0x160(%rdi)
  0x00007fb547daf1e0: movabs $0x7fb52d1bc550,%rdx  ;   {metadata(method data for {method} {0x00007fb52cce9cc8} &apos;isInterrupted&apos; &apos;()Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb547daf1ea: mov    0x100(%rdx),%edi
  0x00007fb547daf1f0: add    $0x8,%edi
  0x00007fb547daf1f3: mov    %edi,0x100(%rdx)
  0x00007fb547daf1f9: and    $0x7ffff8,%edi
  0x00007fb547daf1ff: cmp    $0x0,%edi
  0x00007fb547daf202: je     0x00007fb547daf465
  0x00007fb547daf208: mov    %rsi,%rdx
  0x00007fb547daf20b: movabs $0x7fb52d1bc550,%rdi  ;   {metadata(method data for {method} {0x00007fb52cce9cc8} &apos;isInterrupted&apos; &apos;()Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb547daf215: addq   $0x1,0x140(%rdi)
  0x00007fb547daf21d: mov    $0x0,%edx          ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)

  0x00007fb547daf222: nopl   0x0(%rax,%rax,1)
  0x00007fb547daf227: callq  0x00007fb54f2d0868  ; ImmutableOopMap{[104]=Oop }
                                                ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                ;   {optimized virtual_call}
  0x00007fb547daf22c: and    $0x1,%eax
  0x00007fb547daf22f: cmp    $0x0,%eax
  0x00007fb547daf232: movabs $0x7fb52d0bc428,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf23c: movabs $0x198,%rdx
  0x00007fb547daf246: jne    0x00007fb547daf256
  0x00007fb547daf24c: movabs $0x1a8,%rdx
  0x00007fb547daf256: mov    (%rsi,%rdx,1),%rdi
  0x00007fb547daf25a: lea    0x1(%rdi),%rdi
  0x00007fb547daf25e: mov    %rdi,(%rsi,%rdx,1)
  0x00007fb547daf262: jne    0x00007fb547daf3ac  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@14 (line 22)

  0x00007fb547daf268: movabs $0x7fb52d0bc428,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf272: addq   $0x1,0x1b8(%rsi)
  0x00007fb547daf27a: movabs $0x7fb52d0bedc8,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf7d0} &apos;applicationStackBase&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf284: mov    0x100(%rsi),%edx
  0x00007fb547daf28a: add    $0x8,%edx
  0x00007fb547daf28d: mov    %edx,0x100(%rsi)
  0x00007fb547daf293: and    $0x7ffff8,%edx
  0x00007fb547daf299: cmp    $0x0,%edx
  0x00007fb547daf29c: je     0x00007fb547daf486
  0x00007fb547daf2a2: movabs $0x7fb52d0bedc8,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf7d0} &apos;applicationStackBase&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf2ac: addq   $0x1,0x140(%rsi)
  0x00007fb547daf2b4: movabs $0x7fb52d0be870,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf2be: mov    0x100(%rsi),%edx
  0x00007fb547daf2c4: add    $0x8,%edx
  0x00007fb547daf2c7: mov    %edx,0x100(%rsi)
  0x00007fb547daf2cd: and    $0x7ffff8,%edx
  0x00007fb547daf2d3: cmp    $0x0,%edx
  0x00007fb547daf2d6: je     0x00007fb547daf4a7
  0x00007fb547daf2dc: movabs $0x7fb52d0be870,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf2e6: incl   0x140(%rsi)        ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@2 (line 37)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)

  0x00007fb547daf2ec: movabs $0x7fb52d0be870,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf2f6: addq   $0x1,0x170(%rsi)
  0x00007fb547daf2fe: movabs $0x7fb52d0be870,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf308: mov    0x100(%rsi),%edx
  0x00007fb547daf30e: add    $0x8,%edx
  0x00007fb547daf311: mov    %edx,0x100(%rsi)
  0x00007fb547daf317: and    $0x7ffff8,%edx
  0x00007fb547daf31d: cmp    $0x0,%edx
  0x00007fb547daf320: je     0x00007fb547daf4c8
  0x00007fb547daf326: movabs $0x7fb52d0be870,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf330: incl   0x140(%rsi)        ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@2 (line 37)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)

  0x00007fb547daf336: movabs $0x7fb52d0be870,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf340: addq   $0x1,0x170(%rsi)
  0x00007fb547daf348: mov    0x68(%rsp),%rsi
  0x00007fb547daf34d: mov    $0x6,%edx          ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)

  0x00007fb547daf352: nopl   0x0(%rax,%rax,1)
  0x00007fb547daf357: callq  0x00007fb54f2d0c60  ; ImmutableOopMap{[104]=Oop }
                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)
                                                ;   {static_call}
  0x00007fb547daf35c: and    $0x1,%eax
  0x00007fb547daf35f: and    $0x1,%eax
  0x00007fb547daf362: and    $0x1,%eax
  0x00007fb547daf365: movabs $0x7fb52d0bc428,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf36f: mov    0x104(%rsi),%edi
  0x00007fb547daf375: add    $0x8,%edi
  0x00007fb547daf378: mov    %edi,0x104(%rsi)
  0x00007fb547daf37e: and    $0xfff8,%edi
  0x00007fb547daf384: cmp    $0x0,%edi
  0x00007fb547daf387: je     0x00007fb547daf4e9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@22 (line 23)

  0x00007fb547daf38d: mov    0x108(%r15),%r10   ; ImmutableOopMap{[104]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@22 (line 23)

  0x00007fb547daf394: test   %eax,(%r10)        ;   {poll}
  0x00007fb547daf397: movabs $0x7fb52d0bc428,%rsi  ;   {metadata(method data for {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf3a1: incl   0x1c8(%rsi)
  0x00007fb547daf3a7: jmpq   0x00007fb547daf128  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@22 (line 23)

  0x00007fb547daf3ac: add    $0x80,%rsp
  0x00007fb547daf3b3: pop    %rbp
  0x00007fb547daf3b4: mov    0x108(%r15),%r10
  0x00007fb547daf3bb: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb547daf3be: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@25 (line 25)

  0x00007fb547daf3bf: mov    %eax,-0x14000(%rsp)
  0x00007fb547daf3c6: push   %rbp
  0x00007fb547daf3c7: sub    $0x80,%rsp
  0x00007fb547daf3ce: mov    (%rsi),%rbx
  0x00007fb547daf3d1: mov    %rsi,%rdi
  0x00007fb547daf3d4: mov    %rbx,0x60(%rsp)
  0x00007fb547daf3d9: callq  0x00007fb565152090  ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x00007fb547daf3de: mov    0x60(%rsp),%rbx
  0x00007fb547daf3e3: mov    %rbx,%rax
  0x00007fb547daf3e6: mov    %rax,0x68(%rsp)
  0x00007fb547daf3eb: jmpq   0x00007fb547daf128
  0x00007fb547daf3f0: movabs $0x7fb52d0bf9a8,%r10  ;   {metadata({method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf3fa: mov    %r10,0x8(%rsp)
  0x00007fb547daf3ff: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547daf407: callq  0x00007fb5478f8100  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@-1 (line 21)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daf40c: jmpq   0x00007fb547daf057
  0x00007fb547daf411: mov    %rdx,%rdx
  0x00007fb547daf414: callq  0x00007fb5478f3900  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@0 (line 21)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb547daf419: jmpq   0x00007fb547daf0a9
  0x00007fb547daf41e: movabs $0x7fb52d0bc1d8,%r10  ;   {metadata({method} {0x00007fb52d0bc1d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb547daf428: mov    %r10,0x8(%rsp)
  0x00007fb547daf42d: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547daf435: callq  0x00007fb5478f8100  ; ImmutableOopMap{rax=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.DuplicatedContext::&lt;init&gt;@-1 (line 3)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@4 (line 21)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daf43a: jmpq   0x00007fb547daf0e6
  0x00007fb547daf43f: movabs $0x7fb52ccaf610,%r10  ;   {metadata({method} {0x00007fb52ccaf610} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007fb547daf449: mov    %r10,0x8(%rsp)
  0x00007fb547daf44e: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547daf456: callq  0x00007fb5478f8100  ; ImmutableOopMap{rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 50)
                                                ; - io.type.pollution.benchmarks.DuplicatedContext::&lt;init&gt;@1 (line 3)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@4 (line 21)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daf45b: jmpq   0x00007fb547daf123
  0x00007fb547daf460: callq  0x00007fb5478f3020  ; ImmutableOopMap{[104]=Oop rsi=Oop }
                                                ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007fb547daf465: movabs $0x7fb52cce9cc8,%r10  ;   {metadata({method} {0x00007fb52cce9cc8} &apos;isInterrupted&apos; &apos;()Z&apos; in &apos;java/lang/Thread&apos;)}
  0x00007fb547daf46f: mov    %r10,0x8(%rsp)
  0x00007fb547daf474: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547daf47c: callq  0x00007fb5478f8100  ; ImmutableOopMap{[104]=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Thread::isInterrupted@-1 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daf481: jmpq   0x00007fb547daf208
  0x00007fb547daf486: movabs $0x7fb52d0bf7d0,%r10  ;   {metadata({method} {0x00007fb52d0bf7d0} &apos;applicationStackBase&apos; &apos;(Lio/type/pollution/benchmarks/Context;)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf490: mov    %r10,0x8(%rsp)
  0x00007fb547daf495: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547daf49d: callq  0x00007fb5478f8100  ; ImmutableOopMap{[104]=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@-1 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daf4a2: jmpq   0x00007fb547daf2a2
  0x00007fb547daf4a7: movabs $0x7fb52d0bf8b8,%r10  ;   {metadata({method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf4b1: mov    %r10,0x8(%rsp)
  0x00007fb547daf4b6: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547daf4be: callq  0x00007fb5478f8100  ; ImmutableOopMap{[104]=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@-1 (line 37)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daf4c3: jmpq   0x00007fb547daf2dc
  0x00007fb547daf4c8: movabs $0x7fb52d0bf8b8,%r10  ;   {metadata({method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf4d2: mov    %r10,0x8(%rsp)
  0x00007fb547daf4d7: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb547daf4df: callq  0x00007fb5478f8100  ; ImmutableOopMap{[104]=Oop }
                                                ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@-1 (line 37)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daf4e4: jmpq   0x00007fb547daf326
  0x00007fb547daf4e9: movabs $0x7fb52d0bf9a8,%r10  ;   {metadata({method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;)}
  0x00007fb547daf4f3: mov    %r10,0x8(%rsp)
  0x00007fb547daf4f8: movq   $0x16,(%rsp)
  0x00007fb547daf500: callq  0x00007fb5478f8100  ; ImmutableOopMap{[104]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@22 (line 23)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb547daf505: jmpq   0x00007fb547daf38d
  0x00007fb547daf50a: nop
  0x00007fb547daf50b: nop
  0x00007fb547daf50c: mov    0x440(%r15),%rax
  0x00007fb547daf513: movabs $0x0,%r10
  0x00007fb547daf51d: mov    %r10,0x440(%r15)
  0x00007fb547daf524: movabs $0x0,%r10
  0x00007fb547daf52e: mov    %r10,0x448(%r15)
  0x00007fb547daf535: add    $0x80,%rsp
  0x00007fb547daf53c: pop    %rbp
  0x00007fb547daf53d: jmpq   0x00007fb547860980  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb547daf542: hlt    
  0x00007fb547daf543: hlt    
  0x00007fb547daf544: hlt    
  0x00007fb547daf545: hlt    
  0x00007fb547daf546: hlt    
  0x00007fb547daf547: hlt    
  0x00007fb547daf548: hlt    
  0x00007fb547daf549: hlt    
  0x00007fb547daf54a: hlt    
  0x00007fb547daf54b: hlt    
  0x00007fb547daf54c: hlt    
  0x00007fb547daf54d: hlt    
  0x00007fb547daf54e: hlt    
  0x00007fb547daf54f: hlt    
  0x00007fb547daf550: hlt    
  0x00007fb547daf551: hlt    
  0x00007fb547daf552: hlt    
  0x00007fb547daf553: hlt    
  0x00007fb547daf554: hlt    
  0x00007fb547daf555: hlt    
  0x00007fb547daf556: hlt    
  0x00007fb547daf557: hlt    
  0x00007fb547daf558: hlt    
  0x00007fb547daf559: hlt    
  0x00007fb547daf55a: hlt    
  0x00007fb547daf55b: hlt    
  0x00007fb547daf55c: hlt    
  0x00007fb547daf55d: hlt    
  0x00007fb547daf55e: hlt    
  0x00007fb547daf55f: hlt    
[Stub Code]
  0x00007fb547daf560: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007fb547daf565: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547daf56f: jmpq   0x00007fb547daf56f  ;   {runtime_call}
  0x00007fb547daf574: nop
  0x00007fb547daf575: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb547daf57f: jmpq   0x00007fb547daf57f  ;   {runtime_call}
[Exception Handler]
  0x00007fb547daf584: callq  0x00007fb5478f4e00  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007fb547daf589: movabs $0x7fb5653eb56e,%rdi  ;   {external_word}
  0x00007fb547daf593: and    $0xfffffffffffffff0,%rsp
  0x00007fb547daf597: callq  0x00007fb564f2f1e0  ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x00007fb547daf59c: hlt    
[Deopt Handler Code]
  0x00007fb547daf59d: movabs $0x7fb547daf59d,%r10  ;   {section_word}
  0x00007fb547daf5a7: push   %r10
  0x00007fb547daf5a9: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb547daf5ae: hlt    
  0x00007fb547daf5af: hlt    

ImmutableOopMap{[104]=Oop }pc offsets: 524 828 884 
ImmutableOopMap{}pc offsets: 1004 1017 
ImmutableOopMap{rax=Oop }pc offsets: 1050 1083 
ImmutableOopMap{[104]=Oop rsi=Oop }pc offsets: 1093 1121 
ImmutableOopMap{[104]=Oop }pc offsets: 1154 1187 1220 1253 </print_nmethod>
<writer thread='1329958'/>
<task_queued compile_id='114' compile_kind='osr' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='174858' iicount='2' osr_bci='8' stamp='1.056' comment='tiered' hot_count='174750'/>
<writer thread='1329935'/>
<nmethod compile_id='114' compile_kind='osr' compiler='c2' level='4' entry='0x00007fb54f2d23c0' size='1176' address='0x00007fb54f2d2210' relocation_offset='376' insts_offset='432' stub_offset='688' scopes_data_offset='792' scopes_pcs_offset='912' dependencies_offset='1120' handler_table_offset='1128' oops_offset='744' metadata_offset='752' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='186001' iicount='2' stamp='1.057'/>
<make_not_entrant thread='1329935' compile_id='113' compile_kind='osr' compiler='c1' level='3' stamp='1.057'/>
<print_nmethod stamp='1.057'>
Compiled method (c2)    1057  114 %     4       io.type.pollution.benchmarks.Main::lambda$main$0 @ 8 (26 bytes)
 total in heap  [0x00007fb54f2d2210,0x00007fb54f2d26a8] = 1176
 relocation     [0x00007fb54f2d2388,0x00007fb54f2d23b8] = 48
 main code      [0x00007fb54f2d23c0,0x00007fb54f2d24c0] = 256
 stub code      [0x00007fb54f2d24c0,0x00007fb54f2d24f8] = 56
 oops           [0x00007fb54f2d24f8,0x00007fb54f2d2500] = 8
 metadata       [0x00007fb54f2d2500,0x00007fb54f2d2528] = 40
 scopes data    [0x00007fb54f2d2528,0x00007fb54f2d25a0] = 120
 scopes pcs     [0x00007fb54f2d25a0,0x00007fb54f2d2670] = 208
 dependencies   [0x00007fb54f2d2670,0x00007fb54f2d2678] = 8
 handler table  [0x00007fb54f2d2678,0x00007fb54f2d26a8] = 48
----------------------------------------------------------------------
io/type/pollution/benchmarks/Main.lambda$main$0()V  [0x00007fb54f2d23c0, 0x00007fb54f2d24f8]  312 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;
  0x00007fb54f2d23c0: callq  0x00007fb56506c970  ;   {runtime_call os::breakpoint()}
  0x00007fb54f2d23c5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb54f2d23d0: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d23d7: push   %rbp
  0x00007fb54f2d23d8: sub    $0x20,%rsp
  0x00007fb54f2d23dc: mov    (%rsi),%rbp
  0x00007fb54f2d23df: mov    %rsi,%rdi
  0x00007fb54f2d23e2: movabs $0x7fb565152090,%r10
  0x00007fb54f2d23ec: callq  *%r10
  0x00007fb54f2d23ef: test   %rbp,%rbp
  0x00007fb54f2d23f2: je     0x00007fb54f2d247c
  0x00007fb54f2d23f8: mov    0x8(%rbp),%r11d
  0x00007fb54f2d23fc: cmp    $0x67c70,%r11d     ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb54f2d2403: jne    0x00007fb54f2d2489  ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@8 (line 22)

  0x00007fb54f2d2409: mov    %rbp,%r8
  0x00007fb54f2d240c: jmp    0x00007fb54f2d2443
  0x00007fb54f2d240e: mov    %r8,(%rsp)
  0x00007fb54f2d2412: xor    %edx,%edx
  0x00007fb54f2d2414: data16 xchg %ax,%ax
  0x00007fb54f2d2417: callq  0x00007fb54784ad80  ; ImmutableOopMap{[0]=Oop }
                                                ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                ;   {optimized virtual_call}
  0x00007fb54f2d241c: test   %eax,%eax
  0x00007fb54f2d241e: jne    0x00007fb54f2d2481
  0x00007fb54f2d2420: mov    (%rsp),%r8
  0x00007fb54f2d2424: nopl   0x0(%rax,%rax,1)
  0x00007fb54f2d242c: data16 data16 xchg %ax,%ax  ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)

  0x00007fb54f2d2430: mov    %r8,%rbp
  0x00007fb54f2d2433: mov    %r8,%rsi
  0x00007fb54f2d2436: mov    $0x6,%edx
  0x00007fb54f2d243b: callq  0x00007fb54784a780  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)
                                                ;   {static_call}
  0x00007fb54f2d2440: mov    %rbp,%r8
  0x00007fb54f2d2443: mov    0x320(%r15),%rsi
  0x00007fb54f2d244a: mov    0x320(%r15),%r10
  0x00007fb54f2d2451: cmp    %rsi,%r10
  0x00007fb54f2d2454: jne    0x00007fb54f2d240e  ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@8 (line 22)

  0x00007fb54f2d2456: mov    0x270(%r15),%r10
  0x00007fb54f2d245d: mov    0x14(%r10),%r11d
  0x00007fb54f2d2461: test   %r11d,%r11d
  0x00007fb54f2d2464: je     0x00007fb54f2d2430
  0x00007fb54f2d2466: mov    $0x1,%ebp          ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)

  0x00007fb54f2d246b: mov    $0xffffff4d,%esi
  0x00007fb54f2d2470: mov    %r8,(%rsp)
  0x00007fb54f2d2474: data16 xchg %ax,%ax
  0x00007fb54f2d2477: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@14 (line 22)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d247c: xor    %r8d,%r8d
  0x00007fb54f2d247f: jmp    0x00007fb54f2d2443
  0x00007fb54f2d2481: mov    %eax,%ebp
  0x00007fb54f2d2483: mov    (%rsp),%r8
  0x00007fb54f2d2487: jmp    0x00007fb54f2d246b
  0x00007fb54f2d2489: mov    $0xffffff95,%esi
  0x00007fb54f2d248e: nop
  0x00007fb54f2d248f: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@8 (line 22)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d2494: mov    %rax,%rsi
  0x00007fb54f2d2497: jmp    0x00007fb54f2d249c  ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)

  0x00007fb54f2d2499: mov    %rax,%rsi          ;*synchronization entry
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@-1 (line 21)

  0x00007fb54f2d249c: add    $0x20,%rsp
  0x00007fb54f2d24a0: pop    %rbp
  0x00007fb54f2d24a1: jmpq   0x00007fb5478fc000  ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@8 (line 22)
                                                ;   {runtime_call _rethrow_Java}
  0x00007fb54f2d24a6: hlt    
  0x00007fb54f2d24a7: hlt    
  0x00007fb54f2d24a8: hlt    
  0x00007fb54f2d24a9: hlt    
  0x00007fb54f2d24aa: hlt    
  0x00007fb54f2d24ab: hlt    
  0x00007fb54f2d24ac: hlt    
  0x00007fb54f2d24ad: hlt    
  0x00007fb54f2d24ae: hlt    
  0x00007fb54f2d24af: hlt    
  0x00007fb54f2d24b0: hlt    
  0x00007fb54f2d24b1: hlt    
  0x00007fb54f2d24b2: hlt    
  0x00007fb54f2d24b3: hlt    
  0x00007fb54f2d24b4: hlt    
  0x00007fb54f2d24b5: hlt    
  0x00007fb54f2d24b6: hlt    
  0x00007fb54f2d24b7: hlt    
  0x00007fb54f2d24b8: hlt    
  0x00007fb54f2d24b9: hlt    
  0x00007fb54f2d24ba: hlt    
  0x00007fb54f2d24bb: hlt    
  0x00007fb54f2d24bc: hlt    
  0x00007fb54f2d24bd: hlt    
  0x00007fb54f2d24be: hlt    
  0x00007fb54f2d24bf: hlt    
[Stub Code]
  0x00007fb54f2d24c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00007fb54f2d24ca: jmpq   0x00007fb54f2d24ca  ;   {runtime_call}
  0x00007fb54f2d24cf: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb54f2d24d9: jmpq   0x00007fb54f2d24d9  ;   {runtime_call}
[Exception Handler]
  0x00007fb54f2d24de: jmpq   0x00007fb547861300  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007fb54f2d24e3: callq  0x00007fb54f2d24e8
  0x00007fb54f2d24e8: subq   $0x5,(%rsp)
  0x00007fb54f2d24ed: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2d24f2: hlt    
  0x00007fb54f2d24f3: hlt    
  0x00007fb54f2d24f4: hlt    
  0x00007fb54f2d24f5: hlt    
  0x00007fb54f2d24f6: hlt    
  0x00007fb54f2d24f7: hlt    

ImmutableOopMap{[0]=Oop }pc offsets: 92 
ImmutableOopMap{rbp=Oop }pc offsets: 128 
ImmutableOopMap{[0]=Oop }pc offsets: 188 
ImmutableOopMap{rbp=Oop }pc offsets: 212 </print_nmethod>
<writer thread='1329958'/>
<deoptimized thread='1329958' reason='constraint' pc='0x00007fb547daf505' compile_id='113' compile_kind='osr' compiler='c1' level='3'>
<jvms bci='22' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='198377' iicount='2'/>
</deoptimized>
<writer thread='1329957'/>
<task_queued compile_id='115' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='199405' iicount='2' stamp='1.059' comment='tiered' hot_count='2'/>
<deoptimized thread='1329957' reason='constraint' pc='0x00007fb547daf505' compile_id='113' compile_kind='osr' compiler='c1' level='3'>
<jvms bci='22' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='199534' iicount='2'/>
</deoptimized>
<writer thread='1329935'/>
<nmethod compile_id='115' compiler='c2' level='4' entry='0x00007fb54f2d28e0' size='1488' address='0x00007fb54f2d2710' relocation_offset='376' insts_offset='464' stub_offset='816' scopes_data_offset='936' scopes_pcs_offset='1064' dependencies_offset='1384' handler_table_offset='1392' oops_offset='888' metadata_offset='896' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='200340' iicount='2' stamp='1.061'/>
<print_nmethod stamp='1.061'>
Compiled method (c2)    1060  115       4       io.type.pollution.benchmarks.Main::lambda$main$0 (26 bytes)
 total in heap  [0x00007fb54f2d2710,0x00007fb54f2d2ce0] = 1488
 relocation     [0x00007fb54f2d2888,0x00007fb54f2d28c8] = 64
 main code      [0x00007fb54f2d28e0,0x00007fb54f2d2a40] = 352
 stub code      [0x00007fb54f2d2a40,0x00007fb54f2d2a88] = 72
 oops           [0x00007fb54f2d2a88,0x00007fb54f2d2a90] = 8
 metadata       [0x00007fb54f2d2a90,0x00007fb54f2d2ab8] = 40
 scopes data    [0x00007fb54f2d2ab8,0x00007fb54f2d2b38] = 128
 scopes pcs     [0x00007fb54f2d2b38,0x00007fb54f2d2c78] = 320
 dependencies   [0x00007fb54f2d2c78,0x00007fb54f2d2c80] = 8
 handler table  [0x00007fb54f2d2c80,0x00007fb54f2d2ce0] = 96
----------------------------------------------------------------------
io/type/pollution/benchmarks/Main.lambda$main$0()V  [0x00007fb54f2d28e0, 0x00007fb54f2d2a88]  424 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007fb52d0bf9a8} &apos;lambda$main$0&apos; &apos;()V&apos; in &apos;io/type/pollution/benchmarks/Main&apos;
  #           [sp+0x30]  (sp of caller)
  0x00007fb54f2d28e0: mov    %eax,-0x14000(%rsp)
  0x00007fb54f2d28e7: push   %rbp
  0x00007fb54f2d28e8: sub    $0x20,%rsp
  0x00007fb54f2d28ec: mov    0x118(%r15),%rax
  0x00007fb54f2d28f3: mov    %rax,%r10
  0x00007fb54f2d28f6: add    $0x10,%r10
  0x00007fb54f2d28fa: cmp    0x128(%r15),%r10
  0x00007fb54f2d2901: jae    0x00007fb54f2d29fe
  0x00007fb54f2d2907: mov    %r10,0x118(%r15)
  0x00007fb54f2d290e: prefetchw 0xc0(%r10)
  0x00007fb54f2d2916: mov    $0x67c70,%r10d     ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb54f2d291c: movabs $0x800000000,%r12
  0x00007fb54f2d2926: add    %r12,%r10
  0x00007fb54f2d2929: xor    %r12,%r12
  0x00007fb54f2d292c: mov    0xb8(%r10),%r10
  0x00007fb54f2d2933: mov    %r10,(%rax)
  0x00007fb54f2d2936: movl   $0x67c70,0x8(%rax)  ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb54f2d293d: movl   $0x0,0xc(%rax)
  0x00007fb54f2d2944: mov    %rax,%r8
  0x00007fb54f2d2947: mov    0x320(%r15),%rsi
  0x00007fb54f2d294e: mov    0x320(%r15),%r10
  0x00007fb54f2d2955: mov    $0x1,%ebp
  0x00007fb54f2d295a: cmp    %rsi,%r10
  0x00007fb54f2d295d: jne    0x00007fb54f2d29e8  ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@8 (line 22)

  0x00007fb54f2d2963: mov    0x270(%r15),%r10
  0x00007fb54f2d296a: mov    0x14(%r10),%r11d
  0x00007fb54f2d296e: test   %r11d,%r11d
  0x00007fb54f2d2971: je     0x00007fb54f2d29a4  ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)

  0x00007fb54f2d2973: mov    $0xffffff4d,%esi
  0x00007fb54f2d2978: mov    %r8,(%rsp)
  0x00007fb54f2d297c: data16 xchg %ax,%ax
  0x00007fb54f2d297f: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@14 (line 22)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d2984: xor    %edx,%edx
  0x00007fb54f2d2986: nop
  0x00007fb54f2d2987: callq  0x00007fb54784ad80  ; ImmutableOopMap{[0]=Oop }
                                                ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                ;   {optimized virtual_call}
  0x00007fb54f2d298c: test   %eax,%eax
  0x00007fb54f2d298e: jne    0x00007fb54f2d2a15
  0x00007fb54f2d2994: nopl   0x0(%rax,%rax,1)
  0x00007fb54f2d299c: data16 data16 xchg %ax,%ax  ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)

  0x00007fb54f2d29a0: mov    (%rsp),%r8         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@17 (line 23)

  0x00007fb54f2d29a4: mov    %r8,(%rsp)
  0x00007fb54f2d29a8: mov    %r8,%rsi
  0x00007fb54f2d29ab: mov    $0x6,%edx
  0x00007fb54f2d29b0: data16 xchg %ax,%ax
  0x00007fb54f2d29b3: callq  0x00007fb54784a780  ; ImmutableOopMap{[0]=Oop }
                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)
                                                ;   {static_call}
  0x00007fb54f2d29b8: mov    0x320(%r15),%rsi
  0x00007fb54f2d29bf: mov    0x320(%r15),%r10
  0x00007fb54f2d29c6: cmp    %rsi,%r10
  0x00007fb54f2d29c9: jne    0x00007fb54f2d2984  ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@8 (line 22)

  0x00007fb54f2d29cb: mov    0x270(%r15),%r10
  0x00007fb54f2d29d2: mov    0x14(%r10),%r10d
  0x00007fb54f2d29d6: test   %r10d,%r10d
  0x00007fb54f2d29d9: je     0x00007fb54f2d29a0  ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)

  0x00007fb54f2d29db: mov    $0xffffff4d,%esi
  0x00007fb54f2d29e0: data16 xchg %ax,%ax
  0x00007fb54f2d29e3: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@14 (line 22)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007fb54f2d29e8: mov    %r8,(%rsp)
  0x00007fb54f2d29ec: xor    %edx,%edx
  0x00007fb54f2d29ee: nop
  0x00007fb54f2d29ef: callq  0x00007fb54784ad80  ; ImmutableOopMap{[0]=Oop }
                                                ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                ;   {optimized virtual_call}
  0x00007fb54f2d29f4: test   %eax,%eax
  0x00007fb54f2d29f6: jne    0x00007fb54f2d2a19  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@14 (line 22)

  0x00007fb54f2d29f8: mov    (%rsp),%r8
  0x00007fb54f2d29fc: jmp    0x00007fb54f2d29a4
  0x00007fb54f2d29fe: movabs $0x800067c70,%rsi  ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
  0x00007fb54f2d2a08: data16 xchg %ax,%ax
  0x00007fb54f2d2a0b: callq  0x00007fb547860d00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@0 (line 21)
                                                ;   {runtime_call _new_instance_Java}
  0x00007fb54f2d2a10: jmpq   0x00007fb54f2d2944
  0x00007fb54f2d2a15: mov    %eax,%ebp
  0x00007fb54f2d2a17: jmp    0x00007fb54f2d29db
  0x00007fb54f2d2a19: mov    %eax,%ebp
  0x00007fb54f2d2a1b: mov    (%rsp),%r8
  0x00007fb54f2d2a1f: jmpq   0x00007fb54f2d2973  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@0 (line 21)

  0x00007fb54f2d2a24: mov    %rax,%rsi
  0x00007fb54f2d2a27: jmp    0x00007fb54f2d2a36
  0x00007fb54f2d2a29: mov    %rax,%rsi
  0x00007fb54f2d2a2c: jmp    0x00007fb54f2d2a36  ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)

  0x00007fb54f2d2a2e: mov    %rax,%rsi
  0x00007fb54f2d2a31: jmp    0x00007fb54f2d2a36  ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)

  0x00007fb54f2d2a33: mov    %rax,%rsi          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@0 (line 21)

  0x00007fb54f2d2a36: add    $0x20,%rsp
  0x00007fb54f2d2a3a: pop    %rbp
  0x00007fb54f2d2a3b: jmpq   0x00007fb5478fc000  ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                ;   {runtime_call _rethrow_Java}
[Stub Code]
  0x00007fb54f2d2a40: movabs $0x0,%rbx          ;   {no_reloc}
  0x00007fb54f2d2a4a: jmpq   0x00007fb54f2d2a4a  ;   {runtime_call}
  0x00007fb54f2d2a4f: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb54f2d2a59: jmpq   0x00007fb54f2d2a59  ;   {runtime_call}
  0x00007fb54f2d2a5e: movabs $0x0,%rbx          ;   {static_stub}
  0x00007fb54f2d2a68: jmpq   0x00007fb54f2d2a68  ;   {runtime_call}
[Exception Handler]
  0x00007fb54f2d2a6d: jmpq   0x00007fb547861300  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007fb54f2d2a72: callq  0x00007fb54f2d2a77
  0x00007fb54f2d2a77: subq   $0x5,(%rsp)
  0x00007fb54f2d2a7c: jmpq   0x00007fb54784a1a0  ;   {runtime_call DeoptimizationBlob}
  0x00007fb54f2d2a81: hlt    
  0x00007fb54f2d2a82: hlt    
  0x00007fb54f2d2a83: hlt    
  0x00007fb54f2d2a84: hlt    
  0x00007fb54f2d2a85: hlt    
  0x00007fb54f2d2a86: hlt    
  0x00007fb54f2d2a87: hlt    

ImmutableOopMap{[0]=Oop }pc offsets: 164 172 216 264 276 
ImmutableOopMap{}pc offsets: 304 </print_nmethod>
<writer thread='1330304'/>

argument handler #61 for: static java.lang.Shutdown.halt0(I)V (fingerprint = 5309, 14 bytes generated)
  0x00007fb54784c42f: mov    (%r14),%edx
  0x00007fb54784c432: movabs $0x7fb54780cab8,%rax
  0x00007fb54784c43c: retq   
<tty_done stamp='19.725'/>
</tty>
<compilation_log thread='1329936'>
<start_compile_thread name='C1 CompilerThread0' thread='1329936' process='1329904' stamp='0.326'/>
<task compile_id='1' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='100' backedge_count='2073' iicount='100' level='3' stamp='0.391'>
<phase name='setup' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<phase name='buildIR' stamp='0.391'>
<type id='982' name='int'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1102' name='java.lang.StringLatin1' flags='16'/>
<method id='1103' holder='1102' name='hashCode' return='982' arguments='1094' flags='9' bytes='42' iicount='100'/>
<parse method='1103'  stamp='0.391'>
<phase name='parse_hir' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<parse_done stamp='0.391'/>
</parse>
<phase name='optimize_blocks' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<phase name='gvn' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<phase name='optimize_null_checks' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<phase_done stamp='0.391'/>
</phase>
<phase name='emit_lir' stamp='0.391'>
<phase name='lirGeneration' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<phase name='linearScan' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<phase_done stamp='0.391'/>
</phase>
<phase name='codeemit' stamp='0.391'>
<phase_done stamp='0.391'/>
</phase>
<phase name='codeinstall' stamp='0.391'>
<phase_done stamp='0.393'/>
</phase>
<code_cache total_blobs='199' nmethods='1' adapters='125' free_code_cache='250649088'/>
<task_done success='1' nmsize='432' count='101' backedge_count='2091' stamp='0.399'/>
</task>
<task compile_id='2' method='java.util.concurrent.ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='22' count='258' iicount='258' level='3' stamp='0.400'>
<phase name='setup' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<phase name='buildIR' stamp='0.400'>
<klass id='1103' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1104' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<type id='982' name='int'/>
<klass id='1102' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1105' holder='1102' name='tabAt' return='1103' arguments='1104 982' flags='24' bytes='22' iicount='258'/>
<parse method='1105'  stamp='0.400'>
<phase name='parse_hir' stamp='0.400'>
<bc code='182' bci='15'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<type id='983' name='long'/>
<klass id='1060' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1109' holder='1060' name='getObjectAcquire' return='989' arguments='989 983' flags='17' bytes='7' iicount='258'/>
<call method='1109' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1109'>
<bc code='182' bci='3'/>
<method id='1111' holder='1060' name='getObjectVolatile' return='989' arguments='989 983' flags='257' bytes='0' iicount='260'/>
<call method='1111' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.400'/>
</parse>
<phase_done stamp='0.400'/>
</phase>
<parse_done stamp='0.400'/>
</parse>
<phase name='optimize_blocks' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<phase name='gvn' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<phase name='optimize_null_checks' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<phase_done stamp='0.400'/>
</phase>
<phase name='emit_lir' stamp='0.400'>
<phase name='lirGeneration' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<phase name='linearScan' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<phase_done stamp='0.400'/>
</phase>
<phase name='codeemit' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<phase name='codeinstall' stamp='0.400'>
<phase_done stamp='0.400'/>
</phase>
<code_cache total_blobs='204' nmethods='2' adapters='126' free_code_cache='250644480'/>
<task_done success='1' nmsize='752' count='261' inlined_bytes='7' stamp='0.404'/>
</task>
<task compile_id='4' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='559' iicount='559' level='3' stamp='0.405'>
<phase name='setup' stamp='0.405'>
<phase_done stamp='0.405'/>
</phase>
<phase name='buildIR' stamp='0.405'>
<type id='984' name='void'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<method id='1102' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' iicount='561'/>
<parse method='1102'  stamp='0.405'>
<phase name='parse_hir' stamp='0.405'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='989'/>
<phase_done stamp='0.405'/>
</phase>
<parse_done stamp='0.405'/>
</parse>
<phase name='optimize_blocks' stamp='0.405'>
<phase_done stamp='0.405'/>
</phase>
<phase name='gvn' stamp='0.405'>
<phase_done stamp='0.405'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.405'>
<phase_done stamp='0.405'/>
</phase>
<phase name='optimize_null_checks' stamp='0.405'>
<phase_done stamp='0.405'/>
</phase>
<phase_done stamp='0.405'/>
</phase>
<phase name='emit_lir' stamp='0.405'>
<phase name='lirGeneration' stamp='0.405'>
<phase_done stamp='0.405'/>
</phase>
<phase name='linearScan' stamp='0.405'>
<phase_done stamp='0.405'/>
</phase>
<phase_done stamp='0.405'/>
</phase>
<phase name='codeemit' stamp='0.405'>
<phase_done stamp='0.405'/>
</phase>
<phase name='codeinstall' stamp='0.405'>
<dependency type='no_finalizable_subclasses' ctxk='989'/>
<phase_done stamp='0.405'/>
</phase>
<code_cache total_blobs='211' nmethods='3' adapters='131' free_code_cache='250638592'/>
<task_done success='1' nmsize='240' count='652' stamp='0.406'/>
</task>
<task compile_id='5' method='java.lang.String isLatin1 ()Z' bytes='19' count='415' iicount='415' level='3' stamp='0.407'>
<phase name='setup' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<phase name='buildIR' stamp='0.407'>
<type id='976' name='boolean'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='990' name='isLatin1' return='976' flags='2' bytes='19' iicount='428'/>
<parse method='1102'  stamp='0.407'>
<phase name='parse_hir' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<parse_done stamp='0.407'/>
</parse>
<phase name='optimize_blocks' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<phase name='gvn' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<phase name='optimize_null_checks' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<phase_done stamp='0.407'/>
</phase>
<phase name='emit_lir' stamp='0.407'>
<phase name='lirGeneration' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<phase name='linearScan' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<phase_done stamp='0.407'/>
</phase>
<phase name='codeemit' stamp='0.407'>
<phase_done stamp='0.407'/>
</phase>
<phase name='codeinstall' stamp='0.407'>
<phase_done stamp='0.409'/>
</phase>
<code_cache total_blobs='214' nmethods='4' adapters='131' free_code_cache='250636032'/>
<task_done success='1' nmsize='368' count='512' stamp='0.411'/>
</task>
<task compile_id='6' method='java.lang.String hashCode ()I' bytes='49' count='705' iicount='705' level='3' stamp='0.411'>
<phase name='setup' stamp='0.411'>
<phase_done stamp='0.411'/>
</phase>
<phase name='buildIR' stamp='0.411'>
<type id='982' name='int'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='990' name='hashCode' return='982' flags='1' bytes='49' iicount='705'/>
<parse method='1102'  stamp='0.411'>
<phase name='parse_hir' stamp='0.411'>
<bc code='182' bci='19'/>
<type id='976' name='boolean'/>
<method id='1104' holder='990' name='isLatin1' return='976' flags='2' bytes='19' compile_id='5' compiler='c1' level='3' iicount='603'/>
<call method='1104' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1104'>
<parse_done stamp='0.411'/>
</parse>
<bc code='184' bci='29'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1107' name='java.lang.StringLatin1' flags='16'/>
<method id='1108' holder='1107' name='hashCode' return='982' arguments='1094' flags='9' bytes='42' compile_id='1' compiler='c1' level='3' iicount='347'/>
<call method='1108' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='39'/>
<klass id='1110' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1111' holder='1110' name='hashCode' return='982' arguments='1094' unloaded='1'/>
<call method='1111' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done stamp='0.411'/>
</phase>
<parse_done stamp='0.411'/>
</parse>
<phase name='optimize_blocks' stamp='0.411'>
<phase_done stamp='0.411'/>
</phase>
<phase name='gvn' stamp='0.411'>
<phase_done stamp='0.411'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.411'>
<phase_done stamp='0.411'/>
</phase>
<phase name='optimize_null_checks' stamp='0.411'>
<phase_done stamp='0.412'/>
</phase>
<phase_done stamp='0.412'/>
</phase>
<phase name='emit_lir' stamp='0.412'>
<phase name='lirGeneration' stamp='0.412'>
<phase_done stamp='0.412'/>
</phase>
<phase name='linearScan' stamp='0.412'>
<phase_done stamp='0.412'/>
</phase>
<phase_done stamp='0.412'/>
</phase>
<phase name='codeemit' stamp='0.412'>
<phase_done stamp='0.412'/>
</phase>
<phase name='codeinstall' stamp='0.412'>
<phase_done stamp='0.412'/>
</phase>
<code_cache total_blobs='217' nmethods='5' adapters='131' free_code_cache='250632576'/>
<task_done success='1' nmsize='752' count='826' inlined_bytes='19' stamp='0.418'/>
</task>
<task compile_id='10' method='java.util.ImmutableCollections$SetN probe (Ljava/lang/Object;)I' bytes='56' count='558' backedge_count='224' iicount='558' level='3' stamp='0.419'>
<phase name='setup' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<phase name='buildIR' stamp='0.419'>
<type id='982' name='int'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.ImmutableCollections$SetN' flags='24'/>
<method id='1103' holder='1102' name='probe' return='982' arguments='989' flags='2' bytes='56' iicount='559'/>
<parse method='1103'  stamp='0.419'>
<phase name='parse_hir' stamp='0.419'>
<bc code='182' bci='1'/>
<method id='1106' holder='989' name='hashCode' return='982' flags='257' bytes='0' iicount='3'/>
<call method='1106' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='9'/>
<klass id='1108' name='java.lang.Math' flags='17'/>
<method id='1109' holder='1108' name='floorMod' return='982' arguments='982 982' flags='9' bytes='10' iicount='609'/>
<call method='1109' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1109'>
<bc code='184' bci='3'/>
<method id='1111' holder='1108' name='floorDiv' return='982' arguments='982 982' flags='9' bytes='22' iicount='614'/>
<call method='1111' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1111'>
<parse_done stamp='0.419'/>
</parse>
<parse_done stamp='0.419'/>
</parse>
<bc code='182' bci='31'/>
<type id='976' name='boolean'/>
<method id='1113' holder='989' name='equals' return='976' arguments='989' flags='1' bytes='11' iicount='1'/>
<call method='1113' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.419'/>
</phase>
<parse_done stamp='0.419'/>
</parse>
<phase name='optimize_blocks' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<phase name='gvn' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<phase name='optimize_null_checks' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<phase_done stamp='0.419'/>
</phase>
<phase name='emit_lir' stamp='0.419'>
<phase name='lirGeneration' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<phase name='linearScan' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<phase_done stamp='0.419'/>
</phase>
<phase name='codeemit' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<phase name='codeinstall' stamp='0.419'>
<phase_done stamp='0.419'/>
</phase>
<code_cache total_blobs='220' nmethods='6' adapters='131' free_code_cache='250623104'/>
<task_done success='1' nmsize='1456' count='744' backedge_count='304' inlined_bytes='32' stamp='0.433'/>
</task>
<task compile_id='9' method='java.lang.String coder ()B' bytes='15' count='896' iicount='896' level='3' stamp='0.433'>
<phase name='setup' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<phase name='buildIR' stamp='0.433'>
<type id='980' name='byte'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='990' name='coder' return='980' flags='0' bytes='15' iicount='904'/>
<parse method='1102'  stamp='0.433'>
<phase name='parse_hir' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<parse_done stamp='0.433'/>
</parse>
<phase name='optimize_blocks' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<phase name='gvn' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<phase name='optimize_null_checks' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<phase_done stamp='0.433'/>
</phase>
<phase name='emit_lir' stamp='0.433'>
<phase name='lirGeneration' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<phase name='linearScan' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<phase_done stamp='0.433'/>
</phase>
<phase name='codeemit' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<phase name='codeinstall' stamp='0.433'>
<phase_done stamp='0.433'/>
</phase>
<code_cache total_blobs='222' nmethods='7' adapters='131' free_code_cache='250624256'/>
<task_done success='1' nmsize='304' count='912' stamp='0.434'/>
</task>
<task compile_id='7' method='java.lang.Math floorMod (II)I' bytes='10' count='826' iicount='826' level='3' stamp='0.434'>
<phase name='setup' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<phase name='buildIR' stamp='0.434'>
<type id='982' name='int'/>
<klass id='1102' name='java.lang.Math' flags='17'/>
<method id='1103' holder='1102' name='floorMod' return='982' arguments='982 982' flags='9' bytes='10' iicount='826'/>
<parse method='1103'  stamp='0.434'>
<phase name='parse_hir' stamp='0.434'>
<bc code='184' bci='3'/>
<method id='1105' holder='1102' name='floorDiv' return='982' arguments='982 982' flags='9' bytes='22' iicount='826'/>
<call method='1105' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1105'>
<parse_done stamp='0.434'/>
</parse>
<phase_done stamp='0.434'/>
</phase>
<parse_done stamp='0.434'/>
</parse>
<phase name='optimize_blocks' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<phase name='gvn' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<phase name='optimize_null_checks' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<phase_done stamp='0.434'/>
</phase>
<phase name='emit_lir' stamp='0.434'>
<phase name='lirGeneration' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<phase name='linearScan' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<phase_done stamp='0.434'/>
</phase>
<phase name='codeemit' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<phase name='codeinstall' stamp='0.434'>
<phase_done stamp='0.434'/>
</phase>
<code_cache total_blobs='224' nmethods='8' adapters='131' free_code_cache='250622208'/>
<task_done success='1' nmsize='496' count='829' inlined_bytes='22' stamp='0.438'/>
</task>
<task compile_id='11' method='java.lang.String equals (Ljava/lang/Object;)Z' bytes='65' count='441' iicount='441' level='3' stamp='0.438'>
<phase name='setup' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<phase name='buildIR' stamp='0.438'>
<type id='976' name='boolean'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='990' name='equals' return='976' arguments='989' flags='1' bytes='65' iicount='441'/>
<parse method='1102'  stamp='0.438'>
<phase name='parse_hir' stamp='0.438'>
<bc code='182' bci='20'/>
<type id='980' name='byte'/>
<method id='1104' holder='990' name='coder' return='980' flags='0' bytes='15' compile_id='9' compiler='c1' level='3' iicount='912'/>
<call method='1104' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1104'>
<parse_done stamp='0.438'/>
</parse>
<bc code='182' bci='24'/>
<call method='1104' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1104'>
<parse_done stamp='0.438'/>
</parse>
<bc code='182' bci='31'/>
<method id='1107' holder='990' name='isLatin1' return='976' flags='2' bytes='19' compile_id='5' compiler='c1' level='3' iicount='1139'/>
<call method='1107' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1107'>
<parse_done stamp='0.438'/>
</parse>
<bc code='184' bci='45'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1109' name='java.lang.StringLatin1' flags='16'/>
<method id='1110' holder='1109' name='equals' return='976' arguments='1094 1094' flags='9' bytes='36' iicount='447'/>
<call method='1110' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='59'/>
<klass id='1112' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1113' holder='1112' name='equals' return='976' arguments='1094 1094' unloaded='1'/>
<call method='1113' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done stamp='0.438'/>
</phase>
<parse_done stamp='0.438'/>
</parse>
<phase name='optimize_blocks' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<phase name='gvn' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<phase name='optimize_null_checks' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<phase_done stamp='0.438'/>
</phase>
<phase name='emit_lir' stamp='0.438'>
<phase name='lirGeneration' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<phase name='linearScan' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<phase_done stamp='0.438'/>
</phase>
<phase name='codeemit' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<phase name='codeinstall' stamp='0.438'>
<phase_done stamp='0.438'/>
</phase>
<code_cache total_blobs='226' nmethods='9' adapters='131' free_code_cache='250618368'/>
<task_done success='1' nmsize='1616' count='524' inlined_bytes='49' stamp='0.451'/>
</task>
<task compile_id='12' method='java.util.ImmutableCollections$SetN hashCode ()I' bytes='46' count='442' backedge_count='198' iicount='442' level='3' stamp='0.451'>
<phase name='setup' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<phase name='buildIR' stamp='0.451'>
<type id='982' name='int'/>
<klass id='1102' name='java.util.ImmutableCollections$SetN' flags='24'/>
<method id='1103' holder='1102' name='hashCode' return='982' flags='1' bytes='46' iicount='442'/>
<parse method='1103'  stamp='0.451'>
<phase name='parse_hir' stamp='0.451'>
<bc code='182' bci='33'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<method id='1106' holder='989' name='hashCode' return='982' flags='257' bytes='0' iicount='16'/>
<call method='1106' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.451'/>
</phase>
<parse_done stamp='0.451'/>
</parse>
<phase name='optimize_blocks' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<phase name='gvn' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<phase name='optimize_null_checks' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<phase_done stamp='0.451'/>
</phase>
<phase name='emit_lir' stamp='0.451'>
<phase name='lirGeneration' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<phase name='linearScan' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<phase_done stamp='0.451'/>
</phase>
<phase name='codeemit' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<phase name='codeinstall' stamp='0.451'>
<phase_done stamp='0.451'/>
</phase>
<code_cache total_blobs='227' nmethods='10' adapters='131' free_code_cache='250616576'/>
<task_done success='1' nmsize='736' count='510' backedge_count='212' stamp='0.456'/>
</task>
<task compile_id='3' method='jdk.internal.misc.Unsafe getObjectAcquire (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='7' count='261' iicount='261' level='3' stamp='0.456'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='261' stamp='0.456'/>
</task>
<task compile_id='16' method='java.lang.StringLatin1 equals ([B[B)Z' bytes='36' count='581' backedge_count='368' iicount='581' level='3' stamp='0.456'>
<phase name='setup' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<phase name='buildIR' stamp='0.456'>
<type id='976' name='boolean'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1102' name='java.lang.StringLatin1' flags='16'/>
<method id='1103' holder='1102' name='equals' return='976' arguments='1094 1094' flags='9' bytes='36' iicount='586'/>
<parse method='1103'  stamp='0.456'>
<phase name='parse_hir' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<parse_done stamp='0.456'/>
</parse>
<phase name='optimize_blocks' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<phase name='gvn' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<phase name='optimize_null_checks' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<phase_done stamp='0.456'/>
</phase>
<phase name='emit_lir' stamp='0.456'>
<phase name='lirGeneration' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<phase name='linearScan' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<phase_done stamp='0.456'/>
</phase>
<phase name='codeemit' stamp='0.456'>
<phase_done stamp='0.456'/>
</phase>
<phase name='codeinstall' stamp='0.456'>
<phase_done stamp='0.459'/>
</phase>
<code_cache total_blobs='229' nmethods='12' adapters='131' free_code_cache='250613632'/>
<task_done success='1' nmsize='592' count='671' backedge_count='504' stamp='0.464'/>
</task>
<task compile_id='8' method='java.lang.Math floorDiv (II)I' bytes='22' count='1376' iicount='1376' level='3' stamp='0.464'>
<phase name='setup' stamp='0.464'>
<phase_done stamp='0.464'/>
</phase>
<phase name='buildIR' stamp='0.464'>
<type id='982' name='int'/>
<klass id='1102' name='java.lang.Math' flags='17'/>
<method id='1103' holder='1102' name='floorDiv' return='982' arguments='982 982' flags='9' bytes='22' iicount='1376'/>
<parse method='1103'  stamp='0.464'>
<phase name='parse_hir' stamp='0.464'>
<phase_done stamp='0.464'/>
</phase>
<parse_done stamp='0.464'/>
</parse>
<phase name='optimize_blocks' stamp='0.464'>
<phase_done stamp='0.464'/>
</phase>
<phase name='gvn' stamp='0.464'>
<phase_done stamp='0.464'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.464'>
<phase_done stamp='0.464'/>
</phase>
<phase name='optimize_null_checks' stamp='0.464'>
<phase_done stamp='0.464'/>
</phase>
<phase_done stamp='0.464'/>
</phase>
<phase name='emit_lir' stamp='0.464'>
<phase name='lirGeneration' stamp='0.464'>
<phase_done stamp='0.464'/>
</phase>
<phase name='linearScan' stamp='0.464'>
<phase_done stamp='0.465'/>
</phase>
<phase_done stamp='0.465'/>
</phase>
<phase name='codeemit' stamp='0.465'>
<phase_done stamp='0.465'/>
</phase>
<phase name='codeinstall' stamp='0.465'>
<phase_done stamp='0.465'/>
</phase>
<code_cache total_blobs='232' nmethods='13' adapters='131' free_code_cache='250600192'/>
<task_done success='1' nmsize='368' count='1376' stamp='0.466'/>
</task>
<task compile_id='14' method='java.util.ImmutableCollections emptySet ()Ljava/util/Set;' bytes='4' count='697' iicount='697' level='3' stamp='0.466'>
<phase name='setup' stamp='0.466'>
<phase_done stamp='0.466'/>
</phase>
<phase name='buildIR' stamp='0.467'>
<klass id='1103' name='java.util.Set' flags='1537'/>
<klass id='1102' name='java.util.ImmutableCollections' flags='0'/>
<method id='1104' holder='1102' name='emptySet' return='1103' flags='8' bytes='4' iicount='697'/>
<parse method='1104'  stamp='0.467'>
<phase name='parse_hir' stamp='0.467'>
<phase_done stamp='0.467'/>
</phase>
<parse_done stamp='0.467'/>
</parse>
<phase name='optimize_blocks' stamp='0.467'>
<phase_done stamp='0.467'/>
</phase>
<phase name='gvn' stamp='0.467'>
<phase_done stamp='0.467'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.467'>
<phase_done stamp='0.467'/>
</phase>
<phase name='optimize_null_checks' stamp='0.467'>
<phase_done stamp='0.467'/>
</phase>
<phase_done stamp='0.467'/>
</phase>
<phase name='emit_lir' stamp='0.467'>
<phase name='lirGeneration' stamp='0.467'>
<phase_done stamp='0.467'/>
</phase>
<phase name='linearScan' stamp='0.467'>
<phase_done stamp='0.467'/>
</phase>
<phase_done stamp='0.467'/>
</phase>
<phase name='codeemit' stamp='0.467'>
<phase_done stamp='0.467'/>
</phase>
<phase name='codeinstall' stamp='0.467'>
<phase_done stamp='0.468'/>
</phase>
<code_cache total_blobs='232' nmethods='15' adapters='131' free_code_cache='250610816'/>
<task_done success='1' nmsize='240' count='697' stamp='0.470'/>
</task>
<task compile_id='17' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='832' iicount='832' level='3' stamp='0.471'>
<phase name='setup' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<phase name='buildIR' stamp='0.471'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.Objects' flags='17'/>
<method id='1103' holder='1102' name='requireNonNull' return='989' arguments='989' flags='9' bytes='14' iicount='832'/>
<parse method='1103'  stamp='0.471'>
<phase name='parse_hir' stamp='0.471'>
<bc code='183' bci='8'/>
<type id='984' name='void'/>
<klass id='1098' name='java.lang.NullPointerException' flags='1'/>
<method id='1105' holder='1098' name='&lt;init&gt;' return='984' flags='1' bytes='5' iicount='1'/>
<call method='1105' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<phase_done stamp='0.471'/>
</phase>
<parse_done stamp='0.471'/>
</parse>
<phase name='optimize_blocks' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<phase name='gvn' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<phase name='optimize_null_checks' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<phase_done stamp='0.471'/>
</phase>
<phase name='emit_lir' stamp='0.471'>
<phase name='lirGeneration' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<phase name='linearScan' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<phase_done stamp='0.471'/>
</phase>
<phase name='codeemit' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<phase name='codeinstall' stamp='0.471'>
<phase_done stamp='0.471'/>
</phase>
<code_cache total_blobs='233' nmethods='16' adapters='131' free_code_cache='250609536'/>
<task_done success='1' nmsize='480' count='832' stamp='0.474'/>
</task>
<task compile_id='15' method='java.util.Set of ()Ljava/util/Set;' bytes='4' count='603' iicount='603' level='3' stamp='0.474'>
<phase name='setup' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<phase name='buildIR' stamp='0.474'>
<klass id='1102' name='java.util.Set' flags='1537'/>
<method id='1103' holder='1102' name='of' return='1102' flags='9' bytes='4' iicount='603'/>
<parse method='1103'  stamp='0.474'>
<phase name='parse_hir' stamp='0.474'>
<bc code='184' bci='0'/>
<klass id='1105' name='java.util.ImmutableCollections' flags='0'/>
<method id='1106' holder='1105' name='emptySet' return='1102' flags='8' bytes='4' compile_id='14' compiler='c1' level='3' iicount='697'/>
<call method='1106' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1106'>
<parse_done stamp='0.474'/>
</parse>
<phase_done stamp='0.474'/>
</phase>
<parse_done stamp='0.474'/>
</parse>
<phase name='optimize_blocks' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<phase name='gvn' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<phase name='optimize_null_checks' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<phase_done stamp='0.474'/>
</phase>
<phase name='emit_lir' stamp='0.474'>
<phase name='lirGeneration' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<phase name='linearScan' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<phase_done stamp='0.474'/>
</phase>
<phase name='codeemit' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<phase name='codeinstall' stamp='0.474'>
<phase_done stamp='0.474'/>
</phase>
<code_cache total_blobs='234' nmethods='17' adapters='131' free_code_cache='250608640'/>
<task_done success='1' nmsize='304' count='603' inlined_bytes='4' stamp='0.479'/>
</task>
<task compile_id='20' method='java.lang.module.ModuleReference descriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='160' iicount='160' level='1' stamp='0.479'>
<phase name='setup' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<phase name='buildIR' stamp='0.479'>
<klass id='1103' name='java.lang.module.ModuleDescriptor' flags='1'/>
<klass id='1102' name='java.lang.module.ModuleReference' flags='1025'/>
<method id='1104' holder='1102' name='descriptor' return='1103' flags='17' bytes='5' iicount='160'/>
<parse method='1104'  stamp='0.479'>
<phase name='parse_hir' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<parse_done stamp='0.479'/>
</parse>
<phase name='optimize_blocks' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<phase name='gvn' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<phase name='optimize_null_checks' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<phase_done stamp='0.479'/>
</phase>
<phase name='emit_lir' stamp='0.479'>
<phase name='lirGeneration' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<phase name='linearScan' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<phase_done stamp='0.479'/>
</phase>
<phase name='codeemit' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<phase name='codeinstall' stamp='0.479'>
<phase_done stamp='0.479'/>
</phase>
<code_cache total_blobs='235' nmethods='18' adapters='131' free_code_cache='250607872'/>
<task_done success='1' nmsize='176' count='160' stamp='0.480'/>
</task>
<task compile_id='19' method='java.lang.module.ModuleDescriptor name ()Ljava/lang/String;' bytes='5' count='183' iicount='183' level='1' stamp='0.480'>
<phase name='setup' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<phase name='buildIR' stamp='0.480'>
<klass id='990' name='java.lang.String' flags='17'/>
<klass id='1102' name='java.lang.module.ModuleDescriptor' flags='1'/>
<method id='1103' holder='1102' name='name' return='990' flags='1' bytes='5' iicount='183'/>
<parse method='1103'  stamp='0.480'>
<phase name='parse_hir' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<parse_done stamp='0.480'/>
</parse>
<phase name='optimize_blocks' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<phase name='gvn' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<phase name='optimize_null_checks' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<phase_done stamp='0.480'/>
</phase>
<phase name='emit_lir' stamp='0.480'>
<phase name='lirGeneration' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<phase name='linearScan' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<phase_done stamp='0.480'/>
</phase>
<phase name='codeemit' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<phase name='codeinstall' stamp='0.480'>
<phase_done stamp='0.480'/>
</phase>
<code_cache total_blobs='237' nmethods='19' adapters='132' free_code_cache='250606336'/>
<task_done success='1' nmsize='176' count='183' stamp='0.481'/>
</task>
<task compile_id='21' method='java.util.AbstractCollection &lt;init&gt; ()V' bytes='5' count='385' iicount='385' level='3' stamp='0.481'>
<phase name='setup' stamp='0.481'>
<phase_done stamp='0.481'/>
</phase>
<phase name='buildIR' stamp='0.481'>
<type id='984' name='void'/>
<klass id='1102' name='java.util.AbstractCollection' flags='1025'/>
<method id='1103' holder='1102' name='&lt;init&gt;' return='984' flags='4' bytes='5' iicount='385'/>
<parse method='1103'  stamp='0.481'>
<phase name='parse_hir' stamp='0.481'>
<bc code='183' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<method id='1105' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='1558'/>
<call method='1105' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1105'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<parse_done stamp='0.481'/>
</parse>
<phase_done stamp='0.481'/>
</phase>
<parse_done stamp='0.481'/>
</parse>
<phase name='optimize_blocks' stamp='0.481'>
<phase_done stamp='0.481'/>
</phase>
<phase name='gvn' stamp='0.481'>
<phase_done stamp='0.481'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.481'>
<phase_done stamp='0.481'/>
</phase>
<phase name='optimize_null_checks' stamp='0.481'>
<phase_done stamp='0.481'/>
</phase>
<phase_done stamp='0.481'/>
</phase>
<phase name='emit_lir' stamp='0.481'>
<phase name='lirGeneration' stamp='0.481'>
<phase_done stamp='0.481'/>
</phase>
<phase name='linearScan' stamp='0.481'>
<phase_done stamp='0.481'/>
</phase>
<phase_done stamp='0.481'/>
</phase>
<phase name='codeemit' stamp='0.481'>
<phase_done stamp='0.481'/>
</phase>
<phase name='codeinstall' stamp='0.481'>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<phase_done stamp='0.481'/>
</phase>
<code_cache total_blobs='241' nmethods='20' adapters='135' free_code_cache='250603008'/>
<task_done success='1' nmsize='336' count='385' inlined_bytes='1' stamp='0.483'/>
</task>
<task compile_id='22' method='java.lang.String charAt (I)C' bytes='25' count='445' iicount='445' level='3' stamp='0.483'>
<phase name='setup' stamp='0.483'>
<phase_done stamp='0.483'/>
</phase>
<phase name='buildIR' stamp='0.483'>
<type id='977' name='char'/>
<type id='982' name='int'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='990' name='charAt' return='977' arguments='982' flags='1' bytes='25' iicount='445'/>
<parse method='1102'  stamp='0.483'>
<phase name='parse_hir' stamp='0.483'>
<bc code='182' bci='1'/>
<type id='976' name='boolean'/>
<method id='1104' holder='990' name='isLatin1' return='976' flags='2' bytes='19' compile_id='5' compiler='c1' level='3' iicount='2359'/>
<call method='1104' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1104'>
<parse_done stamp='0.483'/>
</parse>
<bc code='184' bci='12'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1107' name='java.lang.StringLatin1' flags='16'/>
<method id='1108' holder='1107' name='charAt' return='977' arguments='1094 982' flags='9' bytes='28' iicount='445'/>
<call method='1108' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1108'>
<bc code='183' bci='15'/>
<type id='984' name='void'/>
<klass id='1110' name='java.lang.StringIndexOutOfBoundsException' unloaded='1'/>
<method id='1111' holder='1110' name='&lt;init&gt;' return='984' arguments='982' unloaded='1'/>
<call method='1111' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.483'/>
</parse>
<bc code='184' bci='21'/>
<klass id='1112' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1113' holder='1112' name='charAt' return='977' arguments='1094 982' unloaded='1'/>
<call method='1113' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done stamp='0.483'/>
</phase>
<parse_done stamp='0.483'/>
</parse>
<phase name='optimize_blocks' stamp='0.483'>
<phase_done stamp='0.483'/>
</phase>
<phase name='gvn' stamp='0.483'>
<phase_done stamp='0.483'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.483'>
<phase_done stamp='0.483'/>
</phase>
<phase name='optimize_null_checks' stamp='0.483'>
<phase_done stamp='0.483'/>
</phase>
<phase_done stamp='0.483'/>
</phase>
<phase name='emit_lir' stamp='0.483'>
<phase name='lirGeneration' stamp='0.483'>
<phase_done stamp='0.483'/>
</phase>
<phase name='linearScan' stamp='0.483'>
<phase_done stamp='0.484'/>
</phase>
<phase_done stamp='0.484'/>
</phase>
<phase name='codeemit' stamp='0.484'>
<phase_done stamp='0.484'/>
</phase>
<phase name='codeinstall' stamp='0.484'>
<phase_done stamp='0.484'/>
</phase>
<code_cache total_blobs='246' nmethods='21' adapters='139' free_code_cache='250597760'/>
<task_done success='1' nmsize='944' count='445' inlined_bytes='47' stamp='0.494'/>
</task>
<task compile_id='23' method='java.lang.StringLatin1 charAt ([BI)C' bytes='28' count='445' iicount='445' level='3' stamp='0.494'>
<phase name='setup' stamp='0.494'>
<phase_done stamp='0.494'/>
</phase>
<phase name='buildIR' stamp='0.494'>
<type id='977' name='char'/>
<klass id='1094' name='[B' flags='1041'/>
<type id='982' name='int'/>
<klass id='1102' name='java.lang.StringLatin1' flags='16'/>
<method id='1103' holder='1102' name='charAt' return='977' arguments='1094 982' flags='9' bytes='28' iicount='445'/>
<parse method='1103'  stamp='0.494'>
<phase name='parse_hir' stamp='0.494'>
<bc code='183' bci='15'/>
<type id='984' name='void'/>
<klass id='1105' name='java.lang.StringIndexOutOfBoundsException' unloaded='1'/>
<method id='1106' holder='1105' name='&lt;init&gt;' return='984' arguments='982' unloaded='1'/>
<call method='1106' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<phase_done stamp='0.494'/>
</phase>
<parse_done stamp='0.494'/>
</parse>
<phase name='optimize_blocks' stamp='0.494'>
<phase_done stamp='0.494'/>
</phase>
<phase name='gvn' stamp='0.494'>
<phase_done stamp='0.494'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.494'>
<phase_done stamp='0.494'/>
</phase>
<phase name='optimize_null_checks' stamp='0.494'>
<phase_done stamp='0.494'/>
</phase>
<phase_done stamp='0.494'/>
</phase>
<phase name='emit_lir' stamp='0.494'>
<phase name='lirGeneration' stamp='0.494'>
<phase_done stamp='0.494'/>
</phase>
<phase name='linearScan' stamp='0.494'>
<phase_done stamp='0.494'/>
</phase>
<phase_done stamp='0.494'/>
</phase>
<phase name='codeemit' stamp='0.494'>
<phase_done stamp='0.495'/>
</phase>
<phase name='codeinstall' stamp='0.495'>
<phase_done stamp='0.495'/>
</phase>
<code_cache total_blobs='247' nmethods='22' adapters='139' free_code_cache='250596352'/>
<task_done success='1' nmsize='480' count='448' stamp='0.496'/>
</task>
<task compile_id='24' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='329' iicount='329' level='3' stamp='0.497'>
<phase name='setup' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase name='buildIR' stamp='0.497'>
<type id='976' name='boolean'/>
<klass id='1102' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1103' holder='1102' name='hasNext' return='976' flags='1' bytes='13' iicount='329'/>
<parse method='1103'  stamp='0.497'>
<phase name='parse_hir' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<parse_done stamp='0.497'/>
</parse>
<phase name='optimize_blocks' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase name='gvn' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase name='optimize_null_checks' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase_done stamp='0.497'/>
</phase>
<phase name='emit_lir' stamp='0.497'>
<phase name='lirGeneration' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase name='linearScan' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase_done stamp='0.497'/>
</phase>
<phase name='codeemit' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<phase name='codeinstall' stamp='0.497'>
<phase_done stamp='0.497'/>
</phase>
<code_cache total_blobs='250' nmethods='23' adapters='141' free_code_cache='250593792'/>
<task_done success='1' nmsize='336' count='658' stamp='0.499'/>
</task>
<task compile_id='26' method='java.util.ImmutableCollections$SetN$SetNIterator nextIndex ()I' bytes='56' count='656' iicount='656' level='3' stamp='0.499'>
<phase name='setup' stamp='0.499'>
<phase_done stamp='0.499'/>
</phase>
<phase name='buildIR' stamp='0.499'>
<type id='982' name='int'/>
<klass id='1102' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1103' holder='1102' name='nextIndex' return='982' flags='2' bytes='56' iicount='656'/>
<parse method='1103'  stamp='0.499'>
<phase name='parse_hir' stamp='0.499'>
<phase_done stamp='0.499'/>
</phase>
<parse_done stamp='0.499'/>
</parse>
<phase name='optimize_blocks' stamp='0.499'>
<phase_done stamp='0.499'/>
</phase>
<phase name='gvn' stamp='0.499'>
<phase_done stamp='0.499'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.499'>
<phase_done stamp='0.499'/>
</phase>
<phase name='optimize_null_checks' stamp='0.499'>
<phase_done stamp='0.499'/>
</phase>
<phase_done stamp='0.499'/>
</phase>
<phase name='emit_lir' stamp='0.499'>
<phase name='lirGeneration' stamp='0.499'>
<phase_done stamp='0.499'/>
</phase>
<phase name='linearScan' stamp='0.499'>
<phase_done stamp='0.500'/>
</phase>
<phase_done stamp='0.500'/>
</phase>
<phase name='codeemit' stamp='0.500'>
<phase_done stamp='0.500'/>
</phase>
<phase name='codeinstall' stamp='0.500'>
<phase_done stamp='0.500'/>
</phase>
<code_cache total_blobs='251' nmethods='24' adapters='141' free_code_cache='250592640'/>
<task_done success='1' nmsize='368' count='656' stamp='0.503'/>
</task>
<task compile_id='27' method='java.util.ImmutableCollections$AbstractImmutableCollection &lt;init&gt; ()V' bytes='5' count='402' iicount='402' level='3' stamp='0.503'>
<phase name='setup' stamp='0.503'>
<phase_done stamp='0.503'/>
</phase>
<phase name='buildIR' stamp='0.503'>
<type id='984' name='void'/>
<klass id='1102' name='java.util.ImmutableCollections$AbstractImmutableCollection' flags='1032'/>
<method id='1103' holder='1102' name='&lt;init&gt;' return='984' flags='0' bytes='5' iicount='402'/>
<parse method='1103'  stamp='0.503'>
<phase name='parse_hir' stamp='0.503'>
<bc code='183' bci='1'/>
<klass id='1105' name='java.util.AbstractCollection' flags='1025'/>
<method id='1106' holder='1105' name='&lt;init&gt;' return='984' flags='4' bytes='5' compile_id='21' compiler='c1' level='3' iicount='416'/>
<call method='1106' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1106'>
<bc code='183' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<method id='1108' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='1589'/>
<call method='1108' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1108'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<parse_done stamp='0.503'/>
</parse>
<parse_done stamp='0.503'/>
</parse>
<phase_done stamp='0.503'/>
</phase>
<parse_done stamp='0.503'/>
</parse>
<phase name='optimize_blocks' stamp='0.503'>
<phase_done stamp='0.503'/>
</phase>
<phase name='gvn' stamp='0.503'>
<phase_done stamp='0.503'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.503'>
<phase_done stamp='0.503'/>
</phase>
<phase name='optimize_null_checks' stamp='0.503'>
<phase_done stamp='0.503'/>
</phase>
<phase_done stamp='0.503'/>
</phase>
<phase name='emit_lir' stamp='0.503'>
<phase name='lirGeneration' stamp='0.503'>
<phase_done stamp='0.503'/>
</phase>
<phase name='linearScan' stamp='0.503'>
<phase_done stamp='0.503'/>
</phase>
<phase_done stamp='0.503'/>
</phase>
<phase name='codeemit' stamp='0.503'>
<phase_done stamp='0.503'/>
</phase>
<phase name='codeinstall' stamp='0.503'>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<phase_done stamp='0.503'/>
</phase>
<code_cache total_blobs='252' nmethods='25' adapters='141' free_code_cache='250591488'/>
<task_done success='1' nmsize='432' count='402' inlined_bytes='6' stamp='0.506'/>
</task>
<task compile_id='28' method='java.util.KeyValueHolder getKey ()Ljava/lang/Object;' bytes='5' count='155' iicount='155' level='1' stamp='0.507'>
<phase name='setup' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<phase name='buildIR' stamp='0.507'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.KeyValueHolder' flags='16'/>
<method id='1103' holder='1102' name='getKey' return='989' flags='1' bytes='5' iicount='163'/>
<parse method='1103'  stamp='0.507'>
<phase name='parse_hir' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<parse_done stamp='0.507'/>
</parse>
<phase name='optimize_blocks' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<phase name='gvn' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<phase name='optimize_null_checks' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<phase_done stamp='0.507'/>
</phase>
<phase name='emit_lir' stamp='0.507'>
<phase name='lirGeneration' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<phase name='linearScan' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<phase_done stamp='0.507'/>
</phase>
<phase name='codeemit' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<phase name='codeinstall' stamp='0.507'>
<phase_done stamp='0.507'/>
</phase>
<code_cache total_blobs='253' nmethods='26' adapters='141' free_code_cache='250590720'/>
<task_done success='1' nmsize='176' count='244' stamp='0.511'/>
</task>
<task compile_id='31' method='java.util.ImmutableCollections$MapN probe (Ljava/lang/Object;)I' bytes='60' count='417' backedge_count='225' iicount='417' level='3' stamp='0.511'>
<phase name='setup' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<phase name='buildIR' stamp='0.511'>
<type id='982' name='int'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.ImmutableCollections$MapN' flags='24'/>
<method id='1103' holder='1102' name='probe' return='982' arguments='989' flags='2' bytes='60' iicount='427'/>
<parse method='1103'  stamp='0.511'>
<phase name='parse_hir' stamp='0.511'>
<bc code='182' bci='1'/>
<method id='1105' holder='989' name='hashCode' return='982' flags='257' bytes='0' iicount='142'/>
<call method='1105' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='11'/>
<klass id='1107' name='java.lang.Math' flags='17'/>
<method id='1108' holder='1107' name='floorMod' return='982' arguments='982 982' flags='9' bytes='10' compile_id='7' compiler='c1' level='3' iicount='2100'/>
<call method='1108' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1108'>
<bc code='184' bci='3'/>
<method id='1110' holder='1107' name='floorDiv' return='982' arguments='982 982' flags='9' bytes='22' compile_id='8' compiler='c1' level='3' iicount='2115'/>
<call method='1110' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1110'>
<parse_done stamp='0.511'/>
</parse>
<parse_done stamp='0.511'/>
</parse>
<bc code='182' bci='35'/>
<type id='976' name='boolean'/>
<method id='1112' holder='989' name='equals' return='976' arguments='989' flags='1' bytes='11' iicount='1'/>
<call method='1112' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.511'/>
</phase>
<parse_done stamp='0.511'/>
</parse>
<phase name='optimize_blocks' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<phase name='gvn' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<phase name='optimize_null_checks' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<phase_done stamp='0.511'/>
</phase>
<phase name='emit_lir' stamp='0.511'>
<phase name='lirGeneration' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<phase name='linearScan' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<phase_done stamp='0.511'/>
</phase>
<phase name='codeemit' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<phase name='codeinstall' stamp='0.511'>
<phase_done stamp='0.511'/>
</phase>
<code_cache total_blobs='254' nmethods='27' adapters='141' free_code_cache='250587776'/>
<task_done success='1' nmsize='1488' count='562' backedge_count='261' inlined_bytes='32' stamp='0.520'/>
</task>
<task compile_id='32' method='java.util.ImmutableCollections$SetN$SetNIterator next ()Ljava/lang/Object;' bytes='47' count='524' backedge_count='503' iicount='524' level='3' stamp='0.520'>
<phase name='setup' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<phase name='buildIR' stamp='0.520'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1103' holder='1102' name='next' return='989' flags='1' bytes='47' iicount='524'/>
<parse method='1103'  stamp='0.520'>
<phase name='parse_hir' stamp='0.520'>
<bc code='182' bci='1'/>
<type id='976' name='boolean'/>
<method id='1105' holder='1102' name='hasNext' return='976' flags='1' bytes='13' compile_id='24' compiler='c1' level='3' iicount='1093'/>
<call method='1105' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1105'>
<parse_done stamp='0.520'/>
</parse>
<bc code='182' bci='15'/>
<type id='982' name='int'/>
<method id='1109' holder='1102' name='nextIndex' return='982' flags='2' bytes='56' compile_id='26' compiler='c1' level='3' iicount='1085'/>
<call method='1109' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='43'/>
<type id='984' name='void'/>
<klass id='1111' name='java.util.NoSuchElementException' unloaded='1'/>
<method id='1112' holder='1111' name='&lt;init&gt;' return='984' unloaded='1'/>
<call method='1112' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<phase_done stamp='0.520'/>
</phase>
<parse_done stamp='0.520'/>
</parse>
<phase name='optimize_blocks' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<phase name='gvn' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<phase name='optimize_null_checks' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<phase_done stamp='0.520'/>
</phase>
<phase name='emit_lir' stamp='0.520'>
<phase name='lirGeneration' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<phase name='linearScan' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<phase_done stamp='0.520'/>
</phase>
<phase name='codeemit' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<phase name='codeinstall' stamp='0.520'>
<phase_done stamp='0.520'/>
</phase>
<code_cache total_blobs='255' nmethods='28' adapters='141' free_code_cache='250585600'/>
<task_done success='1' nmsize='912' count='752' backedge_count='703' inlined_bytes='13' stamp='0.534'/>
</task>
<task compile_id='25' method='java.util.concurrent.ConcurrentHashMap spread (I)I' bytes='10' count='581' iicount='581' level='3' stamp='0.534'>
<phase name='setup' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<phase name='buildIR' stamp='0.534'>
<type id='982' name='int'/>
<klass id='1102' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1103' holder='1102' name='spread' return='982' arguments='982' flags='24' bytes='10' iicount='582'/>
<parse method='1103'  stamp='0.534'>
<phase name='parse_hir' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<parse_done stamp='0.534'/>
</parse>
<phase name='optimize_blocks' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<phase name='gvn' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<phase name='optimize_null_checks' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<phase_done stamp='0.534'/>
</phase>
<phase name='emit_lir' stamp='0.534'>
<phase name='lirGeneration' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<phase name='linearScan' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<phase_done stamp='0.534'/>
</phase>
<phase name='codeemit' stamp='0.534'>
<phase_done stamp='0.534'/>
</phase>
<phase name='codeinstall' stamp='0.534'>
<phase_done stamp='0.541'/>
</phase>
<code_cache total_blobs='257' nmethods='30' adapters='141' free_code_cache='250583680'/>
<task_done success='1' nmsize='240' count='633' stamp='0.542'/>
</task>
<task compile_id='35' method='java.util.concurrent.ConcurrentHashMap putVal (Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' bytes='432' count='569' backedge_count='10' iicount='569' level='3' stamp='0.542'>
<phase name='setup' stamp='0.542'>
<phase_done stamp='0.542'/>
</phase>
<phase name='buildIR' stamp='0.542'>
<klass id='989' name='java.lang.Object' flags='1'/>
<type id='976' name='boolean'/>
<klass id='1102' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1103' holder='1102' name='putVal' return='989' arguments='989 989 976' flags='16' bytes='432' iicount='569'/>
<parse method='1103'  stamp='0.542'>
<phase name='parse_hir' stamp='0.542'>
<bc code='182' bci='17'/>
<type id='982' name='int'/>
<method id='1105' holder='989' name='hashCode' return='982' flags='257' bytes='0' iicount='274'/>
<call method='1105' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='20'/>
<method id='1106' holder='1102' name='spread' return='982' arguments='982' flags='24' bytes='10' compile_id='25' compiler='c1' level='3' iicount='633'/>
<call method='1106' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1106'>
<parse_done stamp='0.543'/>
</parse>
<bc code='184' bci='69'/>
<klass id='1108' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1109' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<method id='1110' holder='1102' name='tabAt' return='1108' arguments='1109 982' flags='24' bytes='22' compile_id='2' compiler='c1' level='3' iicount='872'/>
<call method='1110' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1110'>
<bc code='182' bci='15'/>
<type id='983' name='long'/>
<klass id='1060' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1115' holder='1060' name='getObjectAcquire' return='989' arguments='989 983' flags='17' bytes='7' iicount='872'/>
<call method='1115' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1115'>
<bc code='182' bci='3'/>
<method id='1117' holder='1060' name='getObjectVolatile' return='989' arguments='989 983' flags='257' bytes='0' iicount='260'/>
<call method='1117' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.543'/>
</parse>
<parse_done stamp='0.543'/>
</parse>
<bc code='183' bci='91'/>
<type id='984' name='void'/>
<method id='1118' holder='1108' name='&lt;init&gt;' return='984' arguments='982 989 989' flags='0' bytes='20' iicount='563'/>
<call method='1118' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1118'>
<bc code='183' bci='1'/>
<method id='1120' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='1655'/>
<call method='1120' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1120'>
<parse_done stamp='0.543'/>
</parse>
<parse_done stamp='0.543'/>
</parse>
<bc code='184' bci='94'/>
<method id='1122' holder='1102' name='casTabAt' return='976' arguments='1109 982 1108 1108' flags='24' bytes='21' iicount='510'/>
<call method='1122' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1122'>
<bc code='182' bci='17'/>
<method id='1124' holder='1060' name='compareAndSetObject' return='976' arguments='989 983 989 989' flags='273' bytes='0' iicount='512'/>
<call method='1124' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.543'/>
</parse>
<bc code='182' bci='120'/>
<method id='1125' holder='1102' name='helpTransfer' return='1109' arguments='1109 1108' flags='16' bytes='130' iicount='1'/>
<call method='1125' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='159'/>
<method id='1127' holder='989' name='equals' return='976' arguments='989' flags='1' bytes='11' iicount='1'/>
<call method='1127' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='192'/>
<call method='1110' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1110'>
<bc code='182' bci='15'/>
<call method='1115' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1115'>
<bc code='182' bci='3'/>
<call method='1117' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.543'/>
</parse>
<parse_done stamp='0.543'/>
</parse>
<bc code='182' bci='242'/>
<call method='1127' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='293'/>
<call method='1118' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1118'>
<bc code='183' bci='1'/>
<call method='1120' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1120'>
<parse_done stamp='0.543'/>
</parse>
<parse_done stamp='0.543'/>
</parse>
<bc code='182' bci='331'/>
<klass id='1129' name='java.util.concurrent.ConcurrentHashMap$TreeNode' unloaded='1'/>
<klass id='1128' name='java.util.concurrent.ConcurrentHashMap$TreeBin' unloaded='1'/>
<method id='1130' holder='1128' name='putTreeVal' return='1129' arguments='982 989 989' unloaded='1'/>
<call method='1130' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='374'/>
<klass id='990' name='java.lang.String' flags='17'/>
<klass id='1132' name='java.lang.IllegalStateException' unloaded='1'/>
<method id='1134' holder='1132' name='&lt;init&gt;' return='984' arguments='990' unloaded='1'/>
<call method='1134' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='409'/>
<method id='1135' holder='1102' name='treeifyBin' return='984' arguments='1109 982' flags='18' bytes='164' iicount='1'/>
<call method='1135' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='427'/>
<method id='1137' holder='1102' name='addCount' return='984' arguments='983 982' flags='18' bytes='289' iicount='562'/>
<call method='1137' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='49'/>
<method id='1139' holder='1102' name='initTable' return='1109' flags='18' bytes='112' iicount='5'/>
<call method='1139' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='12'/>
<klass id='1098' name='java.lang.NullPointerException' flags='1'/>
<method id='1141' holder='1098' name='&lt;init&gt;' return='984' flags='1' bytes='5' iicount='1'/>
<call method='1141' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<phase_done stamp='0.543'/>
</phase>
<parse_done stamp='0.543'/>
</parse>
<phase name='optimize_blocks' stamp='0.543'>
<phase_done stamp='0.543'/>
</phase>
<phase name='gvn' stamp='0.543'>
<phase_done stamp='0.543'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.543'>
<phase_done stamp='0.543'/>
</phase>
<phase name='optimize_null_checks' stamp='0.543'>
<phase_done stamp='0.543'/>
</phase>
<phase_done stamp='0.543'/>
</phase>
<phase name='emit_lir' stamp='0.543'>
<phase name='lirGeneration' stamp='0.543'>
<phase_done stamp='0.544'/>
</phase>
<phase name='linearScan' stamp='0.544'>
<phase_done stamp='0.544'/>
</phase>
<phase_done stamp='0.544'/>
</phase>
<phase name='codeemit' stamp='0.544'>
<phase_done stamp='0.544'/>
</phase>
<phase name='codeinstall' stamp='0.544'>
<dependency type='leaf_type' ctxk='1102'/>
<phase_done stamp='0.550'/>
</phase>
<code_cache total_blobs='259' nmethods='32' adapters='141' free_code_cache='250567936'/>
<task_done success='1' nmsize='8816' count='644' backedge_count='11' inlined_bytes='131' stamp='0.619'/>
</task>
<task compile_id='33' method='java.util.ImmutableCollections$AbstractImmutableSet &lt;init&gt; ()V' bytes='5' count='406' iicount='406' level='3' stamp='0.619'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='406' stamp='0.619'/>
</task>
<task compile_id='30' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='614' iicount='614' level='3' stamp='0.619'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='614' stamp='0.619'/>
</task>
<task compile_id='29' method='java.util.KeyValueHolder getValue ()Ljava/lang/Object;' bytes='5' count='244' iicount='244' level='1' stamp='0.619'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='244' stamp='0.619'/>
</task>
<task compile_id='37' method='java.util.concurrent.ConcurrentHashMap addCount (JI)V' bytes='289' count='645' backedge_count='2' iicount='646' level='3' stamp='0.619'>
<phase name='setup' stamp='0.619'>
<phase_done stamp='0.619'/>
</phase>
<phase name='buildIR' stamp='0.619'>
<type id='984' name='void'/>
<type id='983' name='long'/>
<type id='982' name='int'/>
<klass id='1102' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1103' holder='1102' name='addCount' return='984' arguments='983 982' flags='18' bytes='289' iicount='646'/>
<parse method='1103'  stamp='0.619'>
<phase name='parse_hir' stamp='0.619'>
<bc code='182' bci='31'/>
<type id='976' name='boolean'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1060' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1109' holder='1060' name='compareAndSetLong' return='976' arguments='989 983 983 983' flags='273' bytes='0' compile_id='38' compile_kind='c2n' compiler='' level='0' iicount='512'/>
<call method='1109' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='184' bci='58'/>
<klass id='1110' name='java.util.concurrent.ThreadLocalRandom' unloaded='1'/>
<method id='1111' holder='1110' name='getProbe' return='982' unloaded='1'/>
<call method='1111' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='91'/>
<call method='1109' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='115'/>
<method id='1112' holder='1102' name='sumCount' return='983' flags='16' bytes='60' iicount='6'/>
<call method='1112' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='161'/>
<method id='1116' holder='1102' name='resizeStamp' return='982' arguments='982' flags='24' bytes='8' iicount='6'/>
<call method='1116' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1116'>
<bc code='184' bci='1'/>
<klass id='1085' name='java.lang.Integer' flags='17'/>
<method id='1118' holder='1085' name='numberOfLeadingZeros' return='982' arguments='982' flags='9' bytes='78' iicount='15'/>
<call method='1118' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.619'/>
</parse>
<bc code='182' bci='233'/>
<method id='1120' holder='1060' name='compareAndSetInt' return='976' arguments='989 983 982 982' flags='273' bytes='0' iicount='16'/>
<call method='1120' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='244'/>
<klass id='1115' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<method id='1121' holder='1102' name='transfer' return='984' arguments='1115 1115' flags='18' bytes='828' iicount='3'/>
<call method='1121' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='266'/>
<call method='1120' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='276'/>
<call method='1121' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='280'/>
<call method='1112' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='104'/>
<method id='1123' holder='1102' name='fullAddCount' return='984' arguments='983 976' flags='18' bytes='462' iicount='1'/>
<call method='1123' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='0.619'/>
</phase>
<parse_done stamp='0.619'/>
</parse>
<phase name='optimize_blocks' stamp='0.619'>
<phase_done stamp='0.619'/>
</phase>
<phase name='gvn' stamp='0.619'>
<phase_done stamp='0.619'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.619'>
<phase_done stamp='0.619'/>
</phase>
<phase name='optimize_null_checks' stamp='0.619'>
<phase_done stamp='0.619'/>
</phase>
<phase_done stamp='0.619'/>
</phase>
<phase name='emit_lir' stamp='0.619'>
<phase name='lirGeneration' stamp='0.619'>
<phase_done stamp='0.619'/>
</phase>
<phase name='linearScan' stamp='0.619'>
<phase_done stamp='0.619'/>
</phase>
<phase_done stamp='0.619'/>
</phase>
<phase name='codeemit' stamp='0.619'>
<phase_done stamp='0.619'/>
</phase>
<phase name='codeinstall' stamp='0.619'>
<dependency type='leaf_type' ctxk='1102'/>
<phase_done stamp='0.619'/>
</phase>
<code_cache total_blobs='260' nmethods='33' adapters='141' free_code_cache='250563072'/>
<task_done success='1' nmsize='2432' count='891' backedge_count='3' inlined_bytes='8' stamp='0.639'/>
</task>
<task compile_id='36' method='java.util.concurrent.ConcurrentHashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;)V' bytes='20' count='896' iicount='896' level='3' stamp='0.639'>
<phase name='setup' stamp='0.639'>
<phase_done stamp='0.639'/>
</phase>
<phase name='buildIR' stamp='0.639'>
<type id='984' name='void'/>
<type id='982' name='int'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<method id='1103' holder='1102' name='&lt;init&gt;' return='984' arguments='982 989 989' flags='0' bytes='20' iicount='896'/>
<parse method='1103'  stamp='0.639'>
<phase name='parse_hir' stamp='0.639'>
<bc code='183' bci='1'/>
<method id='1105' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='1982'/>
<call method='1105' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1105'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<parse_done stamp='0.639'/>
</parse>
<phase_done stamp='0.639'/>
</phase>
<parse_done stamp='0.639'/>
</parse>
<phase name='optimize_blocks' stamp='0.639'>
<phase_done stamp='0.639'/>
</phase>
<phase name='gvn' stamp='0.639'>
<phase_done stamp='0.639'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.639'>
<phase_done stamp='0.639'/>
</phase>
<phase name='optimize_null_checks' stamp='0.639'>
<phase_done stamp='0.639'/>
</phase>
<phase_done stamp='0.639'/>
</phase>
<phase name='emit_lir' stamp='0.639'>
<phase name='lirGeneration' stamp='0.639'>
<phase_done stamp='0.639'/>
</phase>
<phase name='linearScan' stamp='0.639'>
<phase_done stamp='0.639'/>
</phase>
<phase_done stamp='0.639'/>
</phase>
<phase name='codeemit' stamp='0.639'>
<phase_done stamp='0.639'/>
</phase>
<phase name='codeinstall' stamp='0.639'>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<phase_done stamp='0.639'/>
</phase>
<code_cache total_blobs='261' nmethods='34' adapters='141' free_code_cache='250561792'/>
<task_done success='1' nmsize='560' count='896' inlined_bytes='1' stamp='0.643'/>
</task>
<task compile_id='41' method='java.lang.String length ()I' bytes='11' count='808' iicount='808' level='3' stamp='0.643'>
<phase name='setup' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<phase name='buildIR' stamp='0.643'>
<type id='982' name='int'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='990' name='length' return='982' flags='1' bytes='11' iicount='808'/>
<parse method='1102'  stamp='0.643'>
<phase name='parse_hir' stamp='0.643'>
<bc code='182' bci='6'/>
<type id='980' name='byte'/>
<method id='1104' holder='990' name='coder' return='980' flags='0' bytes='15' compile_id='9' compiler='c1' level='3' iicount='3634'/>
<call method='1104' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1104'>
<parse_done stamp='0.643'/>
</parse>
<phase_done stamp='0.643'/>
</phase>
<parse_done stamp='0.643'/>
</parse>
<phase name='optimize_blocks' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<phase name='gvn' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<phase name='optimize_null_checks' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<phase_done stamp='0.643'/>
</phase>
<phase name='emit_lir' stamp='0.643'>
<phase name='lirGeneration' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<phase name='linearScan' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<phase_done stamp='0.643'/>
</phase>
<phase name='codeemit' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<phase name='codeinstall' stamp='0.643'>
<phase_done stamp='0.643'/>
</phase>
<code_cache total_blobs='262' nmethods='35' adapters='141' free_code_cache='250560640'/>
<task_done success='1' nmsize='400' count='808' inlined_bytes='15' stamp='0.646'/>
</task>
<task compile_id='42' method='java.util.HashMap hash (Ljava/lang/Object;)I' bytes='20' count='739' iicount='739' level='3' stamp='0.647'>
<phase name='setup' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<phase name='buildIR' stamp='0.647'>
<type id='982' name='int'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.HashMap' flags='1'/>
<method id='1103' holder='1102' name='hash' return='982' arguments='989' flags='24' bytes='20' iicount='741'/>
<parse method='1103'  stamp='0.647'>
<phase name='parse_hir' stamp='0.647'>
<bc code='182' bci='9'/>
<method id='1105' holder='989' name='hashCode' return='982' flags='257' bytes='0' iicount='339'/>
<call method='1105' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.647'/>
</phase>
<parse_done stamp='0.647'/>
</parse>
<phase name='optimize_blocks' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<phase name='gvn' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<phase name='optimize_null_checks' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<phase_done stamp='0.647'/>
</phase>
<phase name='emit_lir' stamp='0.647'>
<phase name='lirGeneration' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<phase name='linearScan' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<phase_done stamp='0.647'/>
</phase>
<phase name='codeemit' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<phase name='codeinstall' stamp='0.647'>
<phase_done stamp='0.647'/>
</phase>
<code_cache total_blobs='263' nmethods='36' adapters='141' free_code_cache='250559360'/>
<task_done success='1' nmsize='512' count='999' stamp='0.686'/>
</task>
<task compile_id='46' method='java.util.HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='520' backedge_count='22' iicount='520' level='3' stamp='0.686'>
<phase name='setup' stamp='0.686'>
<phase_done stamp='0.686'/>
</phase>
<phase name='buildIR' stamp='0.686'>
<klass id='989' name='java.lang.Object' flags='1'/>
<type id='982' name='int'/>
<type id='976' name='boolean'/>
<klass id='1102' name='java.util.HashMap' flags='1'/>
<method id='1103' holder='1102' name='putVal' return='989' arguments='982 989 989 976 976' flags='16' bytes='300' iicount='528'/>
<parse method='1103'  stamp='0.686'>
<phase name='parse_hir' stamp='0.686'>
<bc code='182' bci='20'/>
<klass id='1106' name='[Ljava.util.HashMap$Node;' flags='1040'/>
<method id='1107' holder='1102' name='resize' return='1106' flags='16' bytes='356' iicount='85'/>
<call method='1107' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='1105' name='java.util.HashMap$Node' flags='8'/>
<method id='1109' holder='1102' name='newNode' return='1105' arguments='982 989 989 1105' flags='0' bytes='13' iicount='553'/>
<call method='1109' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='1110' holder='989' name='equals' return='976' arguments='989' flags='1' bytes='11' iicount='1'/>
<call method='1110' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='1111' name='java.util.HashMap$TreeNode' flags='24'/>
<method id='1112' holder='1111' name='putTreeVal' return='1111' arguments='1102 1106 982 989 989' flags='16' bytes='314' iicount='1'/>
<call method='1112' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='1109' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='984' name='void'/>
<method id='1113' holder='1102' name='treeifyBin' return='984' arguments='1106 982' flags='16' bytes='110' iicount='1'/>
<call method='1113' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='1110' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='1115' holder='1102' name='afterNodeAccess' return='984' arguments='1105' flags='0' bytes='1' iicount='16'/>
<call method='1115' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='1107' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='1116' holder='1102' name='afterNodeInsertion' return='984' arguments='976' flags='0' bytes='1' iicount='585'/>
<call method='1116' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.686'/>
</phase>
<parse_done stamp='0.686'/>
</parse>
<phase name='optimize_blocks' stamp='0.686'>
<phase_done stamp='0.686'/>
</phase>
<phase name='gvn' stamp='0.686'>
<phase_done stamp='0.686'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.686'>
<phase_done stamp='0.686'/>
</phase>
<phase name='optimize_null_checks' stamp='0.686'>
<phase_done stamp='0.686'/>
</phase>
<phase_done stamp='0.686'/>
</phase>
<phase name='emit_lir' stamp='0.686'>
<phase name='lirGeneration' stamp='0.686'>
<phase_done stamp='0.686'/>
</phase>
<phase name='linearScan' stamp='0.686'>
<phase_done stamp='0.687'/>
</phase>
<phase_done stamp='0.687'/>
</phase>
<phase name='codeemit' stamp='0.687'>
<phase_done stamp='0.687'/>
</phase>
<phase name='codeinstall' stamp='0.687'>
<phase_done stamp='0.687'/>
</phase>
<code_cache total_blobs='264' nmethods='37' adapters='141' free_code_cache='250551296'/>
<task_done success='1' nmsize='4688' count='857' backedge_count='31' stamp='0.721'/>
</task>
<task compile_id='40' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='835' iicount='835' level='3' stamp='0.721'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='835' stamp='0.721'/>
</task>
<task compile_id='51' method='java.util.HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='728' backedge_count='37' iicount='728' level='3' stamp='0.721'>
<phase name='setup' stamp='0.721'>
<phase_done stamp='0.721'/>
</phase>
<phase name='buildIR' stamp='0.721'>
<klass id='1103' name='java.util.HashMap$Node' flags='8'/>
<type id='982' name='int'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.HashMap' flags='1'/>
<method id='1104' holder='1102' name='getNode' return='1103' arguments='982 989' flags='16' bytes='148' iicount='728'/>
<parse method='1104'  stamp='0.721'>
<phase name='parse_hir' stamp='0.721'>
<bc code='182' bci='59'/>
<type id='976' name='boolean'/>
<method id='1107' holder='989' name='equals' return='976' arguments='989' flags='1' bytes='11' iicount='2'/>
<call method='1107' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='94'/>
<klass id='1108' name='java.util.HashMap$TreeNode' flags='24'/>
<method id='1109' holder='1108' name='getTreeNode' return='1108' arguments='982 989' flags='16' bytes='22' iicount='1'/>
<call method='1109' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='126'/>
<call method='1107' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.721'/>
</phase>
<parse_done stamp='0.721'/>
</parse>
<phase name='optimize_blocks' stamp='0.721'>
<phase_done stamp='0.721'/>
</phase>
<phase name='gvn' stamp='0.721'>
<phase_done stamp='0.721'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.721'>
<phase_done stamp='0.721'/>
</phase>
<phase name='optimize_null_checks' stamp='0.721'>
<phase_done stamp='0.721'/>
</phase>
<phase_done stamp='0.721'/>
</phase>
<phase name='emit_lir' stamp='0.721'>
<phase name='lirGeneration' stamp='0.721'>
<phase_done stamp='0.721'/>
</phase>
<phase name='linearScan' stamp='0.721'>
<phase_done stamp='0.722'/>
</phase>
<phase_done stamp='0.722'/>
</phase>
<phase name='codeemit' stamp='0.722'>
<phase_done stamp='0.722'/>
</phase>
<phase name='codeinstall' stamp='0.722'>
<phase_done stamp='0.724'/>
</phase>
<code_cache total_blobs='266' nmethods='39' adapters='141' free_code_cache='250545920'/>
<task_done success='1' nmsize='2496' count='746' backedge_count='37' stamp='0.743'/>
</task>
<task compile_id='49' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='874' iicount='874' level='3' stamp='0.743'>
<phase name='setup' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<phase name='buildIR' stamp='0.743'>
<type id='984' name='void'/>
<type id='976' name='boolean'/>
<klass id='1102' name='java.util.HashMap' flags='1'/>
<method id='1103' holder='1102' name='afterNodeInsertion' return='984' arguments='976' flags='0' bytes='1' iicount='879'/>
<parse method='1103'  stamp='0.743'>
<phase name='parse_hir' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<parse_done stamp='0.743'/>
</parse>
<phase name='optimize_blocks' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<phase name='gvn' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<phase name='optimize_null_checks' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<phase_done stamp='0.743'/>
</phase>
<phase name='emit_lir' stamp='0.743'>
<phase name='lirGeneration' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<phase name='linearScan' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<phase_done stamp='0.743'/>
</phase>
<phase name='codeemit' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<phase name='codeinstall' stamp='0.743'>
<phase_done stamp='0.743'/>
</phase>
<code_cache total_blobs='267' nmethods='40' adapters='141' free_code_cache='250545024'/>
<task_done success='1' nmsize='240' count='927' stamp='0.745'/>
</task>
<task compile_id='45' method='java.util.HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='944' iicount='944' level='3' stamp='0.745'>
<phase name='setup' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<phase name='buildIR' stamp='0.745'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.HashMap' flags='1'/>
<method id='1103' holder='1102' name='put' return='989' arguments='989 989' flags='1' bytes='13' iicount='948'/>
<parse method='1103'  stamp='0.745'>
<phase name='parse_hir' stamp='0.745'>
<bc code='184' bci='2'/>
<type id='982' name='int'/>
<method id='1105' holder='1102' name='hash' return='982' arguments='989' flags='24' bytes='20' compile_id='42' compiler='c1' level='3' iicount='1752'/>
<call method='1105' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1105'>
<bc code='182' bci='9'/>
<method id='1107' holder='989' name='hashCode' return='982' flags='257' bytes='0' compile_id='53' compile_kind='c2n' compiler='' level='0' iicount='640'/>
<call method='1107' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.745'/>
</parse>
<bc code='182' bci='9'/>
<type id='976' name='boolean'/>
<method id='1108' holder='1102' name='putVal' return='989' arguments='982 989 989 976 976' flags='16' bytes='300' compile_id='46' compiler='c1' level='3' iicount='992'/>
<call method='1108' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='0.745'/>
</phase>
<parse_done stamp='0.745'/>
</parse>
<phase name='optimize_blocks' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<phase name='gvn' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<phase name='optimize_null_checks' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<phase_done stamp='0.745'/>
</phase>
<phase name='emit_lir' stamp='0.745'>
<phase name='lirGeneration' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<phase name='linearScan' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<phase_done stamp='0.745'/>
</phase>
<phase name='codeemit' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<phase name='codeinstall' stamp='0.745'>
<phase_done stamp='0.745'/>
</phase>
<code_cache total_blobs='268' nmethods='41' adapters='141' free_code_cache='250543360'/>
<task_done success='1' nmsize='752' count='1046' inlined_bytes='20' stamp='0.753'/>
</task>
<task compile_id='54' method='java.util.HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='846' iicount='846' level='3' stamp='0.753'>
<phase name='setup' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<phase name='buildIR' stamp='0.753'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.HashMap' flags='1'/>
<method id='1103' holder='1102' name='get' return='989' arguments='989' flags='1' bytes='23' iicount='846'/>
<parse method='1103'  stamp='0.753'>
<phase name='parse_hir' stamp='0.753'>
<bc code='184' bci='2'/>
<type id='982' name='int'/>
<method id='1105' holder='1102' name='hash' return='982' arguments='989' flags='24' bytes='20' compile_id='42' compiler='c1' level='3' iicount='1997'/>
<call method='1105' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1105'>
<bc code='182' bci='9'/>
<method id='1107' holder='989' name='hashCode' return='982' flags='257' bytes='0' compile_id='53' compile_kind='c2n' compiler='' level='0' iicount='640'/>
<call method='1107' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.753'/>
</parse>
<bc code='182' bci='6'/>
<klass id='1108' name='java.util.HashMap$Node' flags='8'/>
<method id='1109' holder='1102' name='getNode' return='1108' arguments='982 989' flags='16' bytes='148' compile_id='51' compiler='c1' level='3' iicount='951'/>
<call method='1109' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='0.753'/>
</phase>
<parse_done stamp='0.753'/>
</parse>
<phase name='optimize_blocks' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<phase name='gvn' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<phase name='optimize_null_checks' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<phase_done stamp='0.753'/>
</phase>
<phase name='emit_lir' stamp='0.753'>
<phase name='lirGeneration' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<phase name='linearScan' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<phase_done stamp='0.753'/>
</phase>
<phase name='codeemit' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<phase name='codeinstall' stamp='0.753'>
<phase_done stamp='0.753'/>
</phase>
<code_cache total_blobs='269' nmethods='42' adapters='141' free_code_cache='250541440'/>
<task_done success='1' nmsize='816' count='846' inlined_bytes='20' stamp='0.760'/>
</task>
<task compile_id='47' method='java.util.HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1200' iicount='1200' level='3' stamp='0.760'>
<phase name='setup' stamp='0.760'>
<phase_done stamp='0.760'/>
</phase>
<phase name='buildIR' stamp='0.760'>
<type id='984' name='void'/>
<type id='982' name='int'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.HashMap$Node' flags='8'/>
<method id='1103' holder='1102' name='&lt;init&gt;' return='984' arguments='982 989 989 1102' flags='0' bytes='26' iicount='1202'/>
<parse method='1103'  stamp='0.760'>
<phase name='parse_hir' stamp='0.760'>
<bc code='183' bci='1'/>
<method id='1105' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='2302'/>
<call method='1105' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1105'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<parse_done stamp='0.760'/>
</parse>
<phase_done stamp='0.760'/>
</phase>
<parse_done stamp='0.760'/>
</parse>
<phase name='optimize_blocks' stamp='0.760'>
<phase_done stamp='0.760'/>
</phase>
<phase name='gvn' stamp='0.760'>
<phase_done stamp='0.760'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.760'>
<phase_done stamp='0.760'/>
</phase>
<phase name='optimize_null_checks' stamp='0.760'>
<phase_done stamp='0.760'/>
</phase>
<phase_done stamp='0.760'/>
</phase>
<phase name='emit_lir' stamp='0.760'>
<phase name='lirGeneration' stamp='0.760'>
<phase_done stamp='0.760'/>
</phase>
<phase name='linearScan' stamp='0.760'>
<phase_done stamp='0.760'/>
</phase>
<phase_done stamp='0.760'/>
</phase>
<phase name='codeemit' stamp='0.760'>
<phase_done stamp='0.760'/>
</phase>
<phase name='codeinstall' stamp='0.760'>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<phase_done stamp='0.760'/>
</phase>
<code_cache total_blobs='270' nmethods='43' adapters='141' free_code_cache='250540032'/>
<task_done success='1' nmsize='656' count='1537' inlined_bytes='1' stamp='0.766'/>
</task>
<task compile_id='48' method='java.util.HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1536' iicount='1536' level='3' stamp='0.766'>
<phase name='setup' stamp='0.766'>
<phase_done stamp='0.766'/>
</phase>
<phase name='buildIR' stamp='0.766'>
<klass id='1103' name='java.util.HashMap$Node' flags='8'/>
<type id='982' name='int'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.HashMap' flags='1'/>
<method id='1104' holder='1102' name='newNode' return='1103' arguments='982 989 989 1103' flags='0' bytes='13' iicount='1539'/>
<parse method='1104'  stamp='0.766'>
<phase name='parse_hir' stamp='0.766'>
<bc code='183' bci='9'/>
<type id='984' name='void'/>
<method id='1106' holder='1103' name='&lt;init&gt;' return='984' arguments='982 989 989 1103' flags='0' bytes='26' compile_id='47' compiler='c1' level='3' iicount='1552'/>
<call method='1106' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1106'>
<bc code='183' bci='1'/>
<method id='1108' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='2607'/>
<call method='1108' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1108'>
<parse_done stamp='0.766'/>
</parse>
<parse_done stamp='0.766'/>
</parse>
<phase_done stamp='0.766'/>
</phase>
<parse_done stamp='0.766'/>
</parse>
<phase name='optimize_blocks' stamp='0.766'>
<phase_done stamp='0.766'/>
</phase>
<phase name='gvn' stamp='0.766'>
<phase_done stamp='0.766'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.766'>
<phase_done stamp='0.766'/>
</phase>
<phase name='optimize_null_checks' stamp='0.766'>
<phase_done stamp='0.766'/>
</phase>
<phase_done stamp='0.766'/>
</phase>
<phase name='emit_lir' stamp='0.766'>
<phase name='lirGeneration' stamp='0.766'>
<phase_done stamp='0.766'/>
</phase>
<phase name='linearScan' stamp='0.766'>
<phase_done stamp='0.766'/>
</phase>
<phase_done stamp='0.766'/>
</phase>
<phase name='codeemit' stamp='0.766'>
<phase_done stamp='0.766'/>
</phase>
<phase name='codeinstall' stamp='0.766'>
<phase_done stamp='0.771'/>
</phase>
<code_cache total_blobs='272' nmethods='45' adapters='141' free_code_cache='250536576'/>
<task_done success='1' nmsize='848' count='1696' inlined_bytes='27' stamp='0.778'/>
</task>
<task compile_id='34' method='java.lang.module.ResolvedModule reference ()Ljava/lang/module/ModuleReference;' bytes='5' count='635' iicount='635' level='1' stamp='0.778'>
<phase name='setup' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<phase name='buildIR' stamp='0.778'>
<klass id='1103' name='java.lang.module.ModuleReference' flags='1025'/>
<klass id='1102' name='java.lang.module.ResolvedModule' flags='17'/>
<method id='1104' holder='1102' name='reference' return='1103' flags='1' bytes='5' iicount='635'/>
<parse method='1104'  stamp='0.778'>
<phase name='parse_hir' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<parse_done stamp='0.778'/>
</parse>
<phase name='optimize_blocks' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<phase name='gvn' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<phase name='optimize_null_checks' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<phase_done stamp='0.778'/>
</phase>
<phase name='emit_lir' stamp='0.778'>
<phase name='lirGeneration' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<phase name='linearScan' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<phase_done stamp='0.778'/>
</phase>
<phase name='codeemit' stamp='0.778'>
<phase_done stamp='0.778'/>
</phase>
<phase name='codeinstall' stamp='0.778'>
<phase_done stamp='0.779'/>
</phase>
<code_cache total_blobs='274' nmethods='47' adapters='141' free_code_cache='250535040'/>
<task_done success='1' nmsize='176' count='635' stamp='0.781'/>
</task>
<task compile_id='57' method='java.util.ImmutableCollections$Set12$1 hasNext ()Z' bytes='13' count='869' iicount='869' level='3' stamp='0.781'>
<phase name='setup' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<phase name='buildIR' stamp='0.781'>
<type id='976' name='boolean'/>
<klass id='1102' name='java.util.ImmutableCollections$Set12$1' flags='0'/>
<method id='1103' holder='1102' name='hasNext' return='976' flags='1' bytes='13' iicount='869'/>
<parse method='1103'  stamp='0.781'>
<phase name='parse_hir' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<parse_done stamp='0.781'/>
</parse>
<phase name='optimize_blocks' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<phase name='gvn' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<phase name='optimize_null_checks' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<phase_done stamp='0.781'/>
</phase>
<phase name='emit_lir' stamp='0.781'>
<phase name='lirGeneration' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<phase name='linearScan' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<phase_done stamp='0.781'/>
</phase>
<phase name='codeemit' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<phase name='codeinstall' stamp='0.781'>
<phase_done stamp='0.781'/>
</phase>
<code_cache total_blobs='276' nmethods='49' adapters='141' free_code_cache='250533248'/>
<task_done success='1' nmsize='336' count='869' stamp='0.785'/>
</task>
<task compile_id='43' method='java.util.ImmutableCollections$SetN size ()I' bytes='5' count='668' iicount='668' level='1' stamp='0.785'>
<phase name='setup' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<phase name='buildIR' stamp='0.785'>
<type id='982' name='int'/>
<klass id='1102' name='java.util.ImmutableCollections$SetN' flags='24'/>
<method id='1103' holder='1102' name='size' return='982' flags='1' bytes='5' iicount='668'/>
<parse method='1103'  stamp='0.785'>
<phase name='parse_hir' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<parse_done stamp='0.785'/>
</parse>
<phase name='optimize_blocks' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<phase name='gvn' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<phase name='optimize_null_checks' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<phase_done stamp='0.785'/>
</phase>
<phase name='emit_lir' stamp='0.785'>
<phase name='lirGeneration' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<phase name='linearScan' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<phase_done stamp='0.785'/>
</phase>
<phase name='codeemit' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<phase name='codeinstall' stamp='0.785'>
<phase_done stamp='0.785'/>
</phase>
<code_cache total_blobs='277' nmethods='50' adapters='141' free_code_cache='250532480'/>
<task_done success='1' nmsize='176' count='668' stamp='0.787'/>
</task>
<task compile_id='64' method='jdk.internal.module.ModuleBootstrap$2 hasNext ()Z' bytes='30' count='642' iicount='642' level='3' stamp='0.787'>
<phase name='setup' stamp='0.787'>
<phase_done stamp='0.787'/>
</phase>
<phase name='buildIR' stamp='0.787'>
<type id='976' name='boolean'/>
<klass id='1102' name='jdk.internal.module.ModuleBootstrap$2' flags='0'/>
<method id='1103' holder='1102' name='hasNext' return='976' flags='1' bytes='30' iicount='642'/>
<parse method='1103'  stamp='0.787'>
<phase name='parse_hir' stamp='0.787'>
<bc code='185' bci='4'/>
<klass id='1087' name='java.util.Iterator' flags='1537'/>
<method id='1107' holder='1087' name='hasNext' return='976' flags='1025' bytes='0' iicount='1'/>
<call method='1107' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='185' bci='16'/>
<call method='1107' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.787'/>
</phase>
<parse_done stamp='0.787'/>
</parse>
<phase name='optimize_blocks' stamp='0.787'>
<phase_done stamp='0.787'/>
</phase>
<phase name='gvn' stamp='0.787'>
<phase_done stamp='0.787'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.787'>
<phase_done stamp='0.787'/>
</phase>
<phase name='optimize_null_checks' stamp='0.787'>
<phase_done stamp='0.787'/>
</phase>
<phase_done stamp='0.787'/>
</phase>
<phase name='emit_lir' stamp='0.787'>
<phase name='lirGeneration' stamp='0.787'>
<phase_done stamp='0.787'/>
</phase>
<phase name='linearScan' stamp='0.787'>
<phase_done stamp='0.788'/>
</phase>
<phase_done stamp='0.788'/>
</phase>
<phase name='codeemit' stamp='0.788'>
<phase_done stamp='0.788'/>
</phase>
<phase name='codeinstall' stamp='0.788'>
<phase_done stamp='0.788'/>
</phase>
<code_cache total_blobs='284' nmethods='51' adapters='147' free_code_cache='250526080'/>
<task_done success='1' nmsize='816' count='642' stamp='0.793'/>
</task>
<task compile_id='60' method='java.lang.module.ModuleDescriptor isOpen ()Z' bytes='5' count='183' iicount='183' level='1' stamp='0.793'>
<phase name='setup' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<phase name='buildIR' stamp='0.793'>
<type id='976' name='boolean'/>
<klass id='1102' name='java.lang.module.ModuleDescriptor' flags='1'/>
<method id='1103' holder='1102' name='isOpen' return='976' flags='1' bytes='5' iicount='183'/>
<parse method='1103'  stamp='0.793'>
<phase name='parse_hir' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<parse_done stamp='0.793'/>
</parse>
<phase name='optimize_blocks' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<phase name='gvn' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<phase name='optimize_null_checks' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<phase_done stamp='0.793'/>
</phase>
<phase name='emit_lir' stamp='0.793'>
<phase name='lirGeneration' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<phase name='linearScan' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<phase_done stamp='0.793'/>
</phase>
<phase name='codeemit' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<phase name='codeinstall' stamp='0.793'>
<phase_done stamp='0.793'/>
</phase>
<code_cache total_blobs='294' nmethods='52' adapters='156' free_code_cache='250518400'/>
<task_done success='1' nmsize='176' count='183' stamp='0.795'/>
</task>
<task compile_id='44' method='java.util.Objects equals (Ljava/lang/Object;Ljava/lang/Object;)Z' bytes='23' count='790' iicount='790' level='3' stamp='0.795'>
<phase name='setup' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<phase name='buildIR' stamp='0.795'>
<type id='976' name='boolean'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.Objects' flags='17'/>
<method id='1103' holder='1102' name='equals' return='976' arguments='989 989' flags='9' bytes='23' iicount='790'/>
<parse method='1103'  stamp='0.795'>
<phase name='parse_hir' stamp='0.795'>
<bc code='182' bci='11'/>
<method id='1107' holder='989' name='equals' return='976' arguments='989' flags='1' bytes='11' iicount='11'/>
<call method='1107' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.795'/>
</phase>
<parse_done stamp='0.795'/>
</parse>
<phase name='optimize_blocks' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<phase name='gvn' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<phase name='optimize_null_checks' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<phase_done stamp='0.795'/>
</phase>
<phase name='emit_lir' stamp='0.795'>
<phase name='lirGeneration' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<phase name='linearScan' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<phase_done stamp='0.795'/>
</phase>
<phase name='codeemit' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<phase name='codeinstall' stamp='0.795'>
<phase_done stamp='0.795'/>
</phase>
<code_cache total_blobs='295' nmethods='53' adapters='156' free_code_cache='250516864'/>
<task_done success='1' nmsize='640' count='790' stamp='0.799'/>
</task>
<task compile_id='63' method='java.lang.Module getDescriptor ()Ljava/lang/module/ModuleDescriptor;' bytes='5' count='144' iicount='144' level='1' stamp='0.799'>
<phase name='setup' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<phase name='buildIR' stamp='0.799'>
<klass id='1102' name='java.lang.module.ModuleDescriptor' flags='1'/>
<klass id='1026' name='java.lang.Module' flags='17'/>
<method id='1103' holder='1026' name='getDescriptor' return='1102' flags='1' bytes='5' iicount='144'/>
<parse method='1103'  stamp='0.799'>
<phase name='parse_hir' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<parse_done stamp='0.799'/>
</parse>
<phase name='optimize_blocks' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<phase name='gvn' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<phase name='optimize_null_checks' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<phase_done stamp='0.799'/>
</phase>
<phase name='emit_lir' stamp='0.799'>
<phase name='lirGeneration' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<phase name='linearScan' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<phase_done stamp='0.799'/>
</phase>
<phase name='codeemit' stamp='0.799'>
<phase_done stamp='0.799'/>
</phase>
<phase name='codeinstall' stamp='0.799'>
<phase_done stamp='0.801'/>
</phase>
<code_cache total_blobs='296' nmethods='54' adapters='156' free_code_cache='250516096'/>
<task_done success='1' nmsize='176' count='144' stamp='0.801'/>
</task>
<task compile_id='50' method='java.lang.module.ModuleDescriptor$Exports source ()Ljava/lang/String;' bytes='5' count='363' iicount='363' level='1' stamp='0.801'>
<phase name='setup' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<phase name='buildIR' stamp='0.801'>
<klass id='990' name='java.lang.String' flags='17'/>
<klass id='1102' name='java.lang.module.ModuleDescriptor$Exports' flags='25'/>
<method id='1103' holder='1102' name='source' return='990' flags='1' bytes='5' iicount='363'/>
<parse method='1103'  stamp='0.801'>
<phase name='parse_hir' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<parse_done stamp='0.801'/>
</parse>
<phase name='optimize_blocks' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<phase name='gvn' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<phase name='optimize_null_checks' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<phase_done stamp='0.801'/>
</phase>
<phase name='emit_lir' stamp='0.801'>
<phase name='lirGeneration' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<phase name='linearScan' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<phase_done stamp='0.801'/>
</phase>
<phase name='codeemit' stamp='0.801'>
<phase_done stamp='0.801'/>
</phase>
<phase name='codeinstall' stamp='0.801'>
<phase_done stamp='0.802'/>
</phase>
<code_cache total_blobs='297' nmethods='55' adapters='156' free_code_cache='250515328'/>
<task_done success='1' nmsize='176' count='363' stamp='0.803'/>
</task>
<task compile_id='58' method='java.util.KeyValueHolder getValue ()Ljava/lang/Object;' bytes='5' count='316' iicount='316' level='1' stamp='0.803'>
<phase name='setup' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<phase name='buildIR' stamp='0.803'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.KeyValueHolder' flags='16'/>
<method id='1103' holder='1102' name='getValue' return='989' flags='1' bytes='5' iicount='316'/>
<parse method='1103'  stamp='0.803'>
<phase name='parse_hir' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<parse_done stamp='0.803'/>
</parse>
<phase name='optimize_blocks' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<phase name='gvn' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<phase name='optimize_null_checks' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<phase_done stamp='0.803'/>
</phase>
<phase name='emit_lir' stamp='0.803'>
<phase name='lirGeneration' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<phase name='linearScan' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<phase_done stamp='0.803'/>
</phase>
<phase name='codeemit' stamp='0.803'>
<phase_done stamp='0.803'/>
</phase>
<phase name='codeinstall' stamp='0.803'>
<phase_done stamp='0.804'/>
</phase>
<code_cache total_blobs='298' nmethods='56' adapters='156' free_code_cache='250514560'/>
<task_done success='1' nmsize='176' count='316' stamp='0.805'/>
</task>
<task compile_id='52' method='java.lang.module.ModuleDescriptor isAutomatic ()Z' bytes='5' count='183' iicount='183' level='1' stamp='0.805'>
<phase name='setup' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<phase name='buildIR' stamp='0.805'>
<type id='976' name='boolean'/>
<klass id='1102' name='java.lang.module.ModuleDescriptor' flags='1'/>
<method id='1103' holder='1102' name='isAutomatic' return='976' flags='1' bytes='5' iicount='183'/>
<parse method='1103'  stamp='0.805'>
<phase name='parse_hir' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<parse_done stamp='0.805'/>
</parse>
<phase name='optimize_blocks' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<phase name='gvn' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<phase name='optimize_null_checks' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<phase_done stamp='0.805'/>
</phase>
<phase name='emit_lir' stamp='0.805'>
<phase name='lirGeneration' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<phase name='linearScan' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<phase_done stamp='0.805'/>
</phase>
<phase name='codeemit' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<phase name='codeinstall' stamp='0.805'>
<phase_done stamp='0.805'/>
</phase>
<code_cache total_blobs='302' nmethods='57' adapters='159' free_code_cache='250511488'/>
<task_done success='1' nmsize='176' count='183' stamp='0.807'/>
</task>
<task compile_id='56' method='java.lang.module.ResolvedModule configuration ()Ljava/lang/module/Configuration;' bytes='5' count='147' iicount='147' level='1' stamp='0.807'>
<phase name='setup' stamp='0.807'>
<phase_done stamp='0.807'/>
</phase>
<phase name='buildIR' stamp='0.807'>
<klass id='1103' name='java.lang.module.Configuration' flags='17'/>
<klass id='1102' name='java.lang.module.ResolvedModule' flags='17'/>
<method id='1104' holder='1102' name='configuration' return='1103' flags='1' bytes='5' iicount='147'/>
<parse method='1104'  stamp='0.807'>
<phase name='parse_hir' stamp='0.807'>
<phase_done stamp='0.807'/>
</phase>
<parse_done stamp='0.807'/>
</parse>
<phase name='optimize_blocks' stamp='0.807'>
<phase_done stamp='0.807'/>
</phase>
<phase name='gvn' stamp='0.807'>
<phase_done stamp='0.807'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.807'>
<phase_done stamp='0.807'/>
</phase>
<phase name='optimize_null_checks' stamp='0.808'>
<phase_done stamp='0.808'/>
</phase>
<phase_done stamp='0.808'/>
</phase>
<phase name='emit_lir' stamp='0.808'>
<phase name='lirGeneration' stamp='0.808'>
<phase_done stamp='0.808'/>
</phase>
<phase name='linearScan' stamp='0.808'>
<phase_done stamp='0.808'/>
</phase>
<phase_done stamp='0.808'/>
</phase>
<phase name='codeemit' stamp='0.808'>
<phase_done stamp='0.808'/>
</phase>
<phase name='codeinstall' stamp='0.808'>
<phase_done stamp='0.809'/>
</phase>
<code_cache total_blobs='303' nmethods='58' adapters='159' free_code_cache='250510720'/>
<task_done success='1' nmsize='176' count='147' stamp='0.811'/>
</task>
<task compile_id='55' method='java.lang.module.ModuleDescriptor$Exports targets ()Ljava/util/Set;' bytes='5' count='135' iicount='135' level='1' stamp='0.811'>
<phase name='setup' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<phase name='buildIR' stamp='0.811'>
<klass id='1103' name='java.util.Set' flags='1537'/>
<klass id='1102' name='java.lang.module.ModuleDescriptor$Exports' flags='25'/>
<method id='1104' holder='1102' name='targets' return='1103' flags='1' bytes='5' iicount='135'/>
<parse method='1104'  stamp='0.811'>
<phase name='parse_hir' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<parse_done stamp='0.811'/>
</parse>
<phase name='optimize_blocks' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<phase name='gvn' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<phase name='optimize_null_checks' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<phase_done stamp='0.811'/>
</phase>
<phase name='emit_lir' stamp='0.811'>
<phase name='lirGeneration' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<phase name='linearScan' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<phase_done stamp='0.811'/>
</phase>
<phase name='codeemit' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<phase name='codeinstall' stamp='0.811'>
<phase_done stamp='0.811'/>
</phase>
<code_cache total_blobs='310' nmethods='59' adapters='165' free_code_cache='250504704'/>
<task_done success='1' nmsize='176' count='135' stamp='0.813'/>
</task>
<task compile_id='65' method='java.util.AbstractMap &lt;init&gt; ()V' bytes='5' count='384' iicount='385' level='3' stamp='0.818'>
<phase name='setup' stamp='0.818'>
<phase_done stamp='0.818'/>
</phase>
<phase name='buildIR' stamp='0.818'>
<type id='984' name='void'/>
<klass id='1102' name='java.util.AbstractMap' flags='1025'/>
<method id='1103' holder='1102' name='&lt;init&gt;' return='984' flags='4' bytes='5' iicount='385'/>
<parse method='1103'  stamp='0.818'>
<phase name='parse_hir' stamp='0.818'>
<bc code='183' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<method id='1105' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='2914'/>
<call method='1105' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1105'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<parse_done stamp='0.818'/>
</parse>
<phase_done stamp='0.818'/>
</phase>
<parse_done stamp='0.818'/>
</parse>
<phase name='optimize_blocks' stamp='0.818'>
<phase_done stamp='0.818'/>
</phase>
<phase name='gvn' stamp='0.818'>
<phase_done stamp='0.818'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.818'>
<phase_done stamp='0.818'/>
</phase>
<phase name='optimize_null_checks' stamp='0.818'>
<phase_done stamp='0.818'/>
</phase>
<phase_done stamp='0.818'/>
</phase>
<phase name='emit_lir' stamp='0.818'>
<phase name='lirGeneration' stamp='0.818'>
<phase_done stamp='0.818'/>
</phase>
<phase name='linearScan' stamp='0.818'>
<phase_done stamp='0.818'/>
</phase>
<phase_done stamp='0.818'/>
</phase>
<phase name='codeemit' stamp='0.818'>
<phase_done stamp='0.818'/>
</phase>
<phase name='codeinstall' stamp='0.818'>
<dependency type='no_finalizable_subclasses' ctxk='1102'/>
<phase_done stamp='0.818'/>
</phase>
<code_cache total_blobs='345' nmethods='60' adapters='199' free_code_cache='250477568'/>
<task_done success='1' nmsize='336' count='388' inlined_bytes='1' stamp='0.819'/>
</task>
<task compile_id='68' method='java.util.concurrent.ConcurrentHashMap putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='8' count='904' iicount='904' level='3' stamp='0.826'>
<phase name='setup' stamp='0.826'>
<phase_done stamp='0.826'/>
</phase>
<phase name='buildIR' stamp='0.826'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1103' holder='1102' name='putIfAbsent' return='989' arguments='989 989' flags='1' bytes='8' iicount='904'/>
<parse method='1103'  stamp='0.826'>
<phase name='parse_hir' stamp='0.826'>
<bc code='182' bci='4'/>
<type id='976' name='boolean'/>
<method id='1105' holder='1102' name='putVal' return='989' arguments='989 989 976' flags='16' bytes='432' compile_id='35' compiler='c1' level='3' iicount='987'/>
<call method='1105' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='1102'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='0.826'/>
</phase>
<parse_done stamp='0.826'/>
</parse>
<phase name='optimize_blocks' stamp='0.826'>
<phase_done stamp='0.826'/>
</phase>
<phase name='gvn' stamp='0.826'>
<phase_done stamp='0.826'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.826'>
<phase_done stamp='0.826'/>
</phase>
<phase name='optimize_null_checks' stamp='0.826'>
<phase_done stamp='0.826'/>
</phase>
<phase_done stamp='0.826'/>
</phase>
<phase name='emit_lir' stamp='0.826'>
<phase name='lirGeneration' stamp='0.826'>
<phase_done stamp='0.826'/>
</phase>
<phase name='linearScan' stamp='0.826'>
<phase_done stamp='0.826'/>
</phase>
<phase_done stamp='0.826'/>
</phase>
<phase name='codeemit' stamp='0.826'>
<phase_done stamp='0.826'/>
</phase>
<phase name='codeinstall' stamp='0.826'>
<dependency type='leaf_type' ctxk='1102'/>
<phase_done stamp='0.826'/>
</phase>
<code_cache total_blobs='348' nmethods='63' adapters='199' free_code_cache='250474880'/>
<task_done success='1' nmsize='288' count='904' stamp='0.829'/>
</task>
<task compile_id='70' method='java.lang.Math min (II)I' bytes='11' count='385' iicount='385' level='3' stamp='0.829'>
<phase name='setup' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<phase name='buildIR' stamp='0.829'>
<type id='982' name='int'/>
<klass id='1102' name='java.lang.Math' flags='17'/>
<method id='1103' holder='1102' name='min' return='982' arguments='982 982' flags='9' bytes='11' iicount='385'/>
<parse method='1103'  stamp='0.829'>
<phase name='parse_hir' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<parse_done stamp='0.829'/>
</parse>
<phase name='optimize_blocks' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<phase name='gvn' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<phase name='optimize_null_checks' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<phase_done stamp='0.829'/>
</phase>
<phase name='emit_lir' stamp='0.829'>
<phase name='lirGeneration' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<phase name='linearScan' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<phase_done stamp='0.829'/>
</phase>
<phase name='codeemit' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<phase name='codeinstall' stamp='0.829'>
<phase_done stamp='0.829'/>
</phase>
<code_cache total_blobs='349' nmethods='64' adapters='199' free_code_cache='250473856'/>
<task_done success='1' nmsize='304' count='389' stamp='0.833'/>
</task>
<task compile_id='71' method='java.lang.StringLatin1 indexOf ([BII)I' bytes='61' count='232' backedge_count='3092' iicount='232' level='3' stamp='0.833'>
<phase name='setup' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<phase name='buildIR' stamp='0.833'>
<type id='982' name='int'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1102' name='java.lang.StringLatin1' flags='16'/>
<method id='1103' holder='1102' name='indexOf' return='982' arguments='1094 982 982' flags='9' bytes='61' iicount='232'/>
<parse method='1103'  stamp='0.833'>
<phase name='parse_hir' stamp='0.833'>
<bc code='184' bci='1'/>
<type id='976' name='boolean'/>
<method id='1105' holder='1102' name='canEncode' return='976' arguments='982' flags='9' bytes='13' iicount='382'/>
<call method='1105' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1105'>
<parse_done stamp='0.833'/>
</parse>
<phase_done stamp='0.833'/>
</phase>
<parse_done stamp='0.833'/>
</parse>
<phase name='optimize_blocks' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<phase name='gvn' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<phase name='optimize_null_checks' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<phase_done stamp='0.833'/>
</phase>
<phase name='emit_lir' stamp='0.833'>
<phase name='lirGeneration' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<phase name='linearScan' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<phase_done stamp='0.833'/>
</phase>
<phase name='codeemit' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<phase name='codeinstall' stamp='0.833'>
<phase_done stamp='0.833'/>
</phase>
<code_cache total_blobs='350' nmethods='65' adapters='199' free_code_cache='250471680'/>
<task_done success='1' nmsize='944' count='248' backedge_count='3249' inlined_bytes='13' stamp='0.838'/>
</task>
<task compile_id='69' method='java.lang.CharacterDataLatin1 getProperties (I)I' bytes='11' count='466' iicount='467' level='3' stamp='0.838'>
<phase name='setup' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='buildIR' stamp='0.838'>
<type id='982' name='int'/>
<klass id='1102' name='java.lang.CharacterDataLatin1' flags='0'/>
<method id='1103' holder='1102' name='getProperties' return='982' arguments='982' flags='0' bytes='11' iicount='486'/>
<parse method='1103'  stamp='0.838'>
<phase name='parse_hir' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<parse_done stamp='0.838'/>
</parse>
<phase name='optimize_blocks' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='gvn' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='optimize_null_checks' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase_done stamp='0.838'/>
</phase>
<phase name='emit_lir' stamp='0.838'>
<phase name='lirGeneration' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='linearScan' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase_done stamp='0.838'/>
</phase>
<phase name='codeemit' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<phase name='codeinstall' stamp='0.838'>
<phase_done stamp='0.838'/>
</phase>
<code_cache total_blobs='351' nmethods='66' adapters='199' free_code_cache='250470656'/>
<task_done success='1' nmsize='304' count='533' stamp='0.841'/>
</task>
<task compile_id='75' method='java.lang.String hashCode ()I' bytes='49' count='6145' iicount='6145' decompiles='1' unstable_if_traps='1' level='3' stamp='0.841'>
<phase name='setup' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<phase name='buildIR' stamp='0.841'>
<type id='982' name='int'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='990' name='hashCode' return='982' flags='1' bytes='49' iicount='6145'/>
<parse method='1102'  stamp='0.841'>
<phase name='parse_hir' stamp='0.841'>
<bc code='182' bci='19'/>
<type id='976' name='boolean'/>
<method id='1104' holder='990' name='isLatin1' return='976' flags='2' bytes='19' compile_id='5' compiler='c1' level='3' iicount='5872'/>
<call method='1104' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1104'>
<parse_done stamp='0.841'/>
</parse>
<bc code='184' bci='29'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1107' name='java.lang.StringLatin1' flags='16'/>
<method id='1108' holder='1107' name='hashCode' return='982' arguments='1094' flags='9' bytes='42' compile_id='13' compiler='c2' level='4' iicount='889'/>
<call method='1108' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='39'/>
<klass id='1110' name='java.lang.StringUTF16' unloaded='1'/>
<method id='1111' holder='1110' name='hashCode' return='982' arguments='1094' unloaded='1'/>
<call method='1111' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<phase_done stamp='0.841'/>
</phase>
<parse_done stamp='0.841'/>
</parse>
<phase name='optimize_blocks' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<phase name='gvn' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<phase name='optimize_null_checks' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<phase_done stamp='0.841'/>
</phase>
<phase name='emit_lir' stamp='0.841'>
<phase name='lirGeneration' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<phase name='linearScan' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<phase_done stamp='0.841'/>
</phase>
<phase name='codeemit' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<phase name='codeinstall' stamp='0.841'>
<phase_done stamp='0.841'/>
</phase>
<code_cache total_blobs='352' nmethods='67' adapters='199' free_code_cache='250468736'/>
<task_done success='1' nmsize='752' count='6150' inlined_bytes='19' stamp='0.848'/>
</task>
<task compile_id='74' method='java.lang.StringLatin1 canEncode (I)Z' bytes='13' count='579' iicount='579' level='3' stamp='0.848'>
<phase name='setup' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<phase name='buildIR' stamp='0.848'>
<type id='976' name='boolean'/>
<type id='982' name='int'/>
<klass id='1102' name='java.lang.StringLatin1' flags='16'/>
<method id='1103' holder='1102' name='canEncode' return='976' arguments='982' flags='9' bytes='13' iicount='579'/>
<parse method='1103'  stamp='0.848'>
<phase name='parse_hir' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<parse_done stamp='0.848'/>
</parse>
<phase name='optimize_blocks' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<phase name='gvn' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<phase name='optimize_null_checks' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<phase_done stamp='0.848'/>
</phase>
<phase name='emit_lir' stamp='0.848'>
<phase name='lirGeneration' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<phase name='linearScan' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<phase_done stamp='0.848'/>
</phase>
<phase name='codeemit' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<phase name='codeinstall' stamp='0.848'>
<phase_done stamp='0.848'/>
</phase>
<code_cache total_blobs='353' nmethods='68' adapters='199' free_code_cache='250467712'/>
<task_done success='1' nmsize='304' count='665' stamp='0.851'/>
</task>
<task compile_id='76' method='io.type.pollution.benchmarks.Main applicationStack (Lio/type/pollution/benchmarks/Context;I)Z' bytes='19' count='684' iicount='688' level='3' stamp='0.851'>
<phase name='setup' stamp='0.851'>
<phase_done stamp='0.851'/>
</phase>
<phase name='buildIR' stamp='0.851'>
<type id='976' name='boolean'/>
<klass id='1103' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<type id='982' name='int'/>
<klass id='1102' name='io.type.pollution.benchmarks.Main' flags='1'/>
<method id='1104' holder='1102' name='applicationStack' return='976' arguments='1103 982' flags='9' bytes='19' iicount='832'/>
<parse method='1104'  stamp='0.851'>
<phase name='parse_hir' stamp='0.851'>
<bc code='184' bci='6'/>
<klass id='1106' name='io.type.pollution.benchmarks.ContextUtil' flags='0'/>
<method id='1107' holder='1106' name='isDuplicatedContext' return='976' arguments='1103' flags='9' bytes='18' iicount='142'/>
<call method='1107' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1107'>
<bc code='184' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1110' name='java.util.Objects' flags='17'/>
<method id='1111' holder='1110' name='requireNonNull' return='989' arguments='989' flags='9' bytes='14' compile_id='17' compiler='c1' level='3' iicount='3068'/>
<call method='1111' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1111'>
<bc code='183' bci='8'/>
<type id='984' name='void'/>
<klass id='1098' name='java.lang.NullPointerException' flags='1'/>
<method id='1113' holder='1098' name='&lt;init&gt;' return='984' flags='1' bytes='5' iicount='1'/>
<call method='1113' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.851'/>
</parse>
<bc code='185' bci='12'/>
<klass id='1115' name='io.type.pollution.benchmarks.InternalContext' flags='1536'/>
<method id='1116' holder='1115' name='isDuplicated' return='976' flags='1025' bytes='0' iicount='1'/>
<call method='1116' instr='invokeinterface'/>
<klass id='1109' name='io.type.pollution.benchmarks.NonDuplicatedContext' flags='0'/>
<dependency type='unique_implementor' ctxk='1115' x='1109'/>
<method id='1117' holder='1109' name='isDuplicated' return='976' flags='1' bytes='2' iicount='234'/>
<dependency type='unique_concrete_method' ctxk='1115' x='1117'/>
<inline_success reason='inline'/>
<dependency type='leaf_type' ctxk='1109'/>
<parse method='1117'>
<parse_done stamp='0.851'/>
</parse>
<parse_done stamp='0.851'/>
</parse>
<bc code='184' bci='15'/>
<call method='1104' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1104'>
<bc code='184' bci='6'/>
<call method='1107' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1107'>
<bc code='184' bci='1'/>
<call method='1111' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1111'>
<bc code='183' bci='8'/>
<call method='1113' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.851'/>
</parse>
<bc code='185' bci='12'/>
<call method='1116' instr='invokeinterface'/>
<dependency type='unique_implementor' ctxk='1115' x='1109'/>
<dependency type='unique_concrete_method' ctxk='1115' x='1117'/>
<inline_success reason='inline'/>
<dependency type='leaf_type' ctxk='1109'/>
<parse method='1117'>
<parse_done stamp='0.851'/>
</parse>
<parse_done stamp='0.851'/>
</parse>
<bc code='184' bci='15'/>
<call method='1104' instr='invokestatic'/>
<inline_fail reason='recursive inlining too deep'/>
<parse_done stamp='0.851'/>
</parse>
<phase_done stamp='0.851'/>
</phase>
<parse_done stamp='0.851'/>
</parse>
<phase name='optimize_blocks' stamp='0.851'>
<phase_done stamp='0.851'/>
</phase>
<phase name='gvn' stamp='0.851'>
<phase_done stamp='0.851'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.851'>
<phase_done stamp='0.851'/>
</phase>
<phase name='optimize_null_checks' stamp='0.851'>
<phase_done stamp='0.851'/>
</phase>
<phase_done stamp='0.851'/>
</phase>
<phase name='emit_lir' stamp='0.851'>
<phase name='lirGeneration' stamp='0.851'>
<phase_done stamp='0.851'/>
</phase>
<phase name='linearScan' stamp='0.851'>
<phase_done stamp='0.851'/>
</phase>
<phase_done stamp='0.851'/>
</phase>
<phase name='codeemit' stamp='0.851'>
<phase_done stamp='0.851'/>
</phase>
<phase name='codeinstall' stamp='0.851'>
<dependency type='leaf_type' ctxk='1109'/>
<dependency type='unique_concrete_method' ctxk='1115' x='1117'/>
<dependency type='unique_implementor' ctxk='1115' x='1109'/>
<phase_done stamp='0.851'/>
</phase>
<code_cache total_blobs='354' nmethods='69' adapters='199' free_code_cache='250462976'/>
<task_done success='1' nmsize='2848' count='88000' inlined_bytes='87' stamp='0.878'/>
</task>
<task compile_id='77' method='io.type.pollution.benchmarks.NonDuplicatedContext isDuplicated ()Z' bytes='2' count='11000' iicount='11000' level='1' stamp='0.878'>
<phase name='setup' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<phase name='buildIR' stamp='0.878'>
<type id='976' name='boolean'/>
<klass id='1102' name='io.type.pollution.benchmarks.NonDuplicatedContext' flags='0'/>
<method id='1103' holder='1102' name='isDuplicated' return='976' flags='1' bytes='2' iicount='11000'/>
<parse method='1103'  stamp='0.878'>
<phase name='parse_hir' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<parse_done stamp='0.878'/>
</parse>
<phase name='optimize_blocks' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<phase name='gvn' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<phase name='optimize_null_checks' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<phase_done stamp='0.878'/>
</phase>
<phase name='emit_lir' stamp='0.878'>
<phase name='lirGeneration' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<phase name='linearScan' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<phase_done stamp='0.878'/>
</phase>
<phase name='codeemit' stamp='0.878'>
<phase_done stamp='0.878'/>
</phase>
<phase name='codeinstall' stamp='0.878'>
<phase_done stamp='0.881'/>
</phase>
<code_cache total_blobs='381' nmethods='71' adapters='224' free_code_cache='250442240'/>
<task_done success='1' nmsize='176' count='11000' stamp='0.881'/>
</task>
<task compile_id='78' method='io.type.pollution.benchmarks.Main applicationStackBase (Lio/type/pollution/benchmarks/Context;)Z' bytes='7' count='11000' iicount='11000' level='2' stamp='0.881'>
<phase name='setup' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='buildIR' stamp='0.881'>
<type id='976' name='boolean'/>
<klass id='1103' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<klass id='1102' name='io.type.pollution.benchmarks.Main' flags='1'/>
<method id='1104' holder='1102' name='applicationStackBase' return='976' arguments='1103' flags='9' bytes='7' iicount='11000'/>
<parse method='1104'  stamp='0.881'>
<phase name='parse_hir' stamp='0.881'>
<bc code='184' bci='3'/>
<type id='982' name='int'/>
<method id='1106' holder='1102' name='applicationStack' return='976' arguments='1103 982' flags='9' bytes='19' compile_id='76' compiler='c1' level='3' iicount='88000'/>
<call method='1106' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1106'>
<bc code='184' bci='15'/>
<call method='1106' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1106'>
<bc code='184' bci='15'/>
<call method='1106' instr='invokestatic'/>
<inline_fail reason='recursive inlining too deep'/>
<parse_done stamp='0.881'/>
</parse>
<parse_done stamp='0.881'/>
</parse>
<phase_done stamp='0.881'/>
</phase>
<parse_done stamp='0.881'/>
</parse>
<phase name='optimize_blocks' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='gvn' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='optimize_null_checks' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase_done stamp='0.881'/>
</phase>
<phase name='emit_lir' stamp='0.881'>
<phase name='lirGeneration' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='linearScan' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase_done stamp='0.881'/>
</phase>
<phase name='codeemit' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<phase name='codeinstall' stamp='0.881'>
<phase_done stamp='0.881'/>
</phase>
<code_cache total_blobs='383' nmethods='72' adapters='225' free_code_cache='250440576'/>
<task_done success='1' nmsize='256' count='11000' inlined_bytes='38' stamp='0.888'/>
</task>
<task compile_id='79' method='io.type.pollution.benchmarks.ContextUtil isDuplicatedContext (Lio/type/pollution/benchmarks/Context;)Z' bytes='18' count='11000' iicount='11000' level='2' stamp='0.888'>
<phase name='setup' stamp='0.888'>
<phase_done stamp='0.888'/>
</phase>
<phase name='buildIR' stamp='0.888'>
<type id='976' name='boolean'/>
<klass id='1103' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<klass id='1102' name='io.type.pollution.benchmarks.ContextUtil' flags='0'/>
<method id='1104' holder='1102' name='isDuplicatedContext' return='976' arguments='1103' flags='9' bytes='18' iicount='11000'/>
<parse method='1104'  stamp='0.888'>
<phase name='parse_hir' stamp='0.888'>
<bc code='184' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1107' name='java.util.Objects' flags='17'/>
<method id='1108' holder='1107' name='requireNonNull' return='989' arguments='989' flags='9' bytes='14' compile_id='17' compiler='c1' level='3' iicount='14004'/>
<call method='1108' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1108'>
<bc code='183' bci='8'/>
<type id='984' name='void'/>
<klass id='1098' name='java.lang.NullPointerException' flags='1'/>
<method id='1110' holder='1098' name='&lt;init&gt;' return='984' flags='1' bytes='5' iicount='1'/>
<call method='1110' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.888'/>
</parse>
<bc code='185' bci='12'/>
<klass id='1112' name='io.type.pollution.benchmarks.InternalContext' flags='1536'/>
<method id='1113' holder='1112' name='isDuplicated' return='976' flags='1025' bytes='0' iicount='1'/>
<call method='1113' instr='invokeinterface'/>
<klass id='1106' name='io.type.pollution.benchmarks.NonDuplicatedContext' flags='0'/>
<dependency type='unique_implementor' ctxk='1112' x='1106'/>
<method id='1114' holder='1106' name='isDuplicated' return='976' flags='1' bytes='2' compile_id='77' compiler='c1' level='1' iicount='11000'/>
<dependency type='unique_concrete_method' ctxk='1112' x='1114'/>
<inline_success reason='inline'/>
<parse method='1114'>
<parse_done stamp='0.888'/>
</parse>
<phase_done stamp='0.888'/>
</phase>
<parse_done stamp='0.888'/>
</parse>
<phase name='optimize_blocks' stamp='0.888'>
<phase_done stamp='0.888'/>
</phase>
<phase name='gvn' stamp='0.888'>
<phase_done stamp='0.888'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.888'>
<phase_done stamp='0.888'/>
</phase>
<phase name='optimize_null_checks' stamp='0.888'>
<phase_done stamp='0.888'/>
</phase>
<phase_done stamp='0.888'/>
</phase>
<phase name='emit_lir' stamp='0.888'>
<phase name='lirGeneration' stamp='0.888'>
<phase_done stamp='0.888'/>
</phase>
<phase name='linearScan' stamp='0.888'>
<phase_done stamp='0.888'/>
</phase>
<phase_done stamp='0.888'/>
</phase>
<phase name='codeemit' stamp='0.888'>
<phase_done stamp='0.888'/>
</phase>
<phase name='codeinstall' stamp='0.888'>
<dependency type='unique_concrete_method' ctxk='1112' x='1114'/>
<dependency type='unique_implementor' ctxk='1112' x='1106'/>
<phase_done stamp='0.888'/>
</phase>
<code_cache total_blobs='385' nmethods='73' adapters='226' free_code_cache='250438144'/>
<task_done success='1' nmsize='640' count='11000' inlined_bytes='16' stamp='0.894'/>
</task>
<task compile_id='81' method='java.lang.Enum ordinal ()I' bytes='5' count='168' iicount='168' level='1' stamp='0.894'>
<phase name='setup' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<phase name='buildIR' stamp='0.894'>
<type id='982' name='int'/>
<klass id='1102' name='java.lang.Enum' flags='1025'/>
<method id='1103' holder='1102' name='ordinal' return='982' flags='17' bytes='5' iicount='168'/>
<parse method='1103'  stamp='0.894'>
<phase name='parse_hir' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<parse_done stamp='0.894'/>
</parse>
<phase name='optimize_blocks' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<phase name='gvn' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<phase name='optimize_null_checks' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<phase_done stamp='0.894'/>
</phase>
<phase name='emit_lir' stamp='0.894'>
<phase name='lirGeneration' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<phase name='linearScan' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<phase_done stamp='0.894'/>
</phase>
<phase name='codeemit' stamp='0.894'>
<phase_done stamp='0.894'/>
</phase>
<phase name='codeinstall' stamp='0.894'>
<phase_done stamp='0.896'/>
</phase>
<code_cache total_blobs='387' nmethods='75' adapters='226' free_code_cache='250436608'/>
<task_done success='1' nmsize='176' count='168' stamp='0.898'/>
</task>
<task compile_id='73' method='java.lang.CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='624' iicount='624' level='3' stamp='0.898'>
<phase name='setup' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<phase name='buildIR' stamp='0.898'>
<klass id='1102' name='java.lang.CharacterData' flags='1024'/>
<type id='982' name='int'/>
<method id='1103' holder='1102' name='of' return='1102' arguments='982' flags='24' bytes='120' iicount='624'/>
<parse method='1103'  stamp='0.898'>
<phase name='parse_hir' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<parse_done stamp='0.898'/>
</parse>
<phase name='optimize_blocks' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<phase name='gvn' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<phase name='optimize_null_checks' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<phase_done stamp='0.898'/>
</phase>
<phase name='emit_lir' stamp='0.898'>
<phase name='lirGeneration' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<phase name='linearScan' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<phase_done stamp='0.898'/>
</phase>
<phase name='codeemit' stamp='0.898'>
<phase_done stamp='0.898'/>
</phase>
<phase name='codeinstall' stamp='0.898'>
<phase_done stamp='0.900'/>
</phase>
<code_cache total_blobs='389' nmethods='77' adapters='226' free_code_cache='250432640'/>
<task_done success='1' nmsize='1840' count='624' stamp='0.915'/>
</task>
<task compile_id='72' method='java.util.zip.ZipUtils SH ([BI)I' bytes='21' count='641' iicount='641' level='3' stamp='0.915'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='641' stamp='0.915'/>
</task>
<task compile_id='83' method='java.lang.Class getClassLoader0 ()Ljava/lang/ClassLoader;' bytes='5' count='131' iicount='131' level='1' stamp='0.915'>
<phase name='setup' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<phase name='buildIR' stamp='0.915'>
<klass id='993' name='java.lang.ClassLoader' flags='1025'/>
<klass id='991' name='java.lang.Class' flags='17'/>
<method id='1102' holder='991' name='getClassLoader0' return='993' flags='0' bytes='5' iicount='131'/>
<parse method='1102'  stamp='0.915'>
<phase name='parse_hir' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<parse_done stamp='0.915'/>
</parse>
<phase name='optimize_blocks' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<phase name='gvn' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<phase name='optimize_null_checks' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<phase_done stamp='0.915'/>
</phase>
<phase name='emit_lir' stamp='0.915'>
<phase name='lirGeneration' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<phase name='linearScan' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<phase_done stamp='0.915'/>
</phase>
<phase name='codeemit' stamp='0.915'>
<phase_done stamp='0.915'/>
</phase>
<phase name='codeinstall' stamp='0.915'>
<phase_done stamp='0.916'/>
</phase>
<code_cache total_blobs='391' nmethods='79' adapters='226' free_code_cache='250431104'/>
<task_done success='1' nmsize='176' count='133' stamp='0.918'/>
</task>
<task compile_id='86' method='java.util.concurrent.ConcurrentHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='162' count='261' backedge_count='4' iicount='261' level='3' stamp='0.918'>
<phase name='setup' stamp='0.918'>
<phase_done stamp='0.918'/>
</phase>
<phase name='buildIR' stamp='0.918'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.concurrent.ConcurrentHashMap' flags='1'/>
<method id='1103' holder='1102' name='get' return='989' arguments='989' flags='1' bytes='162' iicount='261'/>
<parse method='1103'  stamp='0.918'>
<phase name='parse_hir' stamp='0.918'>
<bc code='182' bci='1'/>
<type id='982' name='int'/>
<method id='1105' holder='989' name='hashCode' return='982' flags='257' bytes='0' compile_id='53' compile_kind='c2n' compiler='' level='0' iicount='640'/>
<call method='1105' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='4'/>
<method id='1106' holder='1102' name='spread' return='982' arguments='982' flags='24' bytes='10' compile_id='25' compiler='c1' level='3' iicount='1315'/>
<call method='1106' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1106'>
<parse_done stamp='0.918'/>
</parse>
<bc code='184' bci='34'/>
<klass id='1108' name='java.util.concurrent.ConcurrentHashMap$Node' flags='8'/>
<klass id='1109' name='[Ljava.util.concurrent.ConcurrentHashMap$Node;' flags='1040'/>
<method id='1110' holder='1102' name='tabAt' return='1108' arguments='1109 982' flags='24' bytes='22' compile_id='2' compiler='c1' level='3' iicount='1933'/>
<call method='1110' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1110'>
<bc code='182' bci='15'/>
<type id='983' name='long'/>
<klass id='1060' name='jdk.internal.misc.Unsafe' flags='17'/>
<method id='1115' holder='1060' name='getObjectAcquire' return='989' arguments='989 983' flags='17' bytes='7' iicount='1933'/>
<call method='1115' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1115'>
<bc code='182' bci='3'/>
<method id='1117' holder='1060' name='getObjectVolatile' return='989' arguments='989 983' flags='257' bytes='0' iicount='260'/>
<call method='1117' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.918'/>
</parse>
<parse_done stamp='0.918'/>
</parse>
<bc code='182' bci='73'/>
<type id='976' name='boolean'/>
<method id='1118' holder='989' name='equals' return='976' arguments='989' flags='1' bytes='11' iicount='27'/>
<call method='1118' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='93'/>
<method id='1119' holder='1108' name='find' return='1108' arguments='982 989' flags='0' bytes='52' iicount='1'/>
<call method='1119' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='149'/>
<call method='1118' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<phase_done stamp='0.918'/>
</phase>
<parse_done stamp='0.918'/>
</parse>
<phase name='optimize_blocks' stamp='0.918'>
<phase_done stamp='0.918'/>
</phase>
<phase name='gvn' stamp='0.918'>
<phase_done stamp='0.918'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.918'>
<phase_done stamp='0.918'/>
</phase>
<phase name='optimize_null_checks' stamp='0.918'>
<phase_done stamp='0.918'/>
</phase>
<phase_done stamp='0.918'/>
</phase>
<phase name='emit_lir' stamp='0.918'>
<phase name='lirGeneration' stamp='0.918'>
<phase_done stamp='0.918'/>
</phase>
<phase name='linearScan' stamp='0.918'>
<phase_done stamp='0.918'/>
</phase>
<phase_done stamp='0.918'/>
</phase>
<phase name='codeemit' stamp='0.918'>
<phase_done stamp='0.918'/>
</phase>
<phase name='codeinstall' stamp='0.918'>
<phase_done stamp='0.919'/>
</phase>
<code_cache total_blobs='400' nmethods='80' adapters='234' free_code_cache='250419072'/>
<task_done success='1' nmsize='3376' count='261' backedge_count='4' inlined_bytes='39' stamp='0.944'/>
</task>
<task compile_id='87' method='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry hashCode ()I' bytes='5' count='135' iicount='135' level='1' stamp='0.945'>
<phase name='setup' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<phase name='buildIR' stamp='0.945'>
<type id='982' name='int'/>
<klass id='1102' name='java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry' flags='10'/>
<method id='1103' holder='1102' name='hashCode' return='982' flags='1' bytes='5' iicount='139'/>
<parse method='1103'  stamp='0.945'>
<phase name='parse_hir' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<parse_done stamp='0.945'/>
</parse>
<phase name='optimize_blocks' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<phase name='gvn' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<phase name='optimize_null_checks' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<phase_done stamp='0.945'/>
</phase>
<phase name='emit_lir' stamp='0.945'>
<phase name='lirGeneration' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<phase name='linearScan' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<phase_done stamp='0.945'/>
</phase>
<phase name='codeemit' stamp='0.945'>
<phase_done stamp='0.945'/>
</phase>
<phase name='codeinstall' stamp='0.945'>
<phase_done stamp='0.951'/>
</phase>
<code_cache total_blobs='402' nmethods='82' adapters='234' free_code_cache='250417280'/>
<task_done success='1' nmsize='176' count='139' stamp='0.954'/>
</task>
<task compile_id='91' method='java.lang.StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='257' iicount='257' level='3' stamp='0.960'>
<phase name='setup' stamp='0.960'>
<phase_done stamp='0.960'/>
</phase>
<phase name='buildIR' stamp='0.960'>
<klass id='1059' name='java.lang.StringBuilder' flags='17'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='1059' name='append' return='1059' arguments='990' flags='1' bytes='8' iicount='257'/>
<parse method='1102'  stamp='0.960'>
<phase name='parse_hir' stamp='0.960'>
<bc code='183' bci='2'/>
<klass id='1057' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1104' holder='1057' name='append' return='1057' arguments='990' flags='1' bytes='45' iicount='257'/>
<call method='1104' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<phase_done stamp='0.960'/>
</phase>
<parse_done stamp='0.960'/>
</parse>
<phase name='optimize_blocks' stamp='0.960'>
<phase_done stamp='0.960'/>
</phase>
<phase name='gvn' stamp='0.960'>
<phase_done stamp='0.960'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.960'>
<phase_done stamp='0.960'/>
</phase>
<phase name='optimize_null_checks' stamp='0.960'>
<phase_done stamp='0.960'/>
</phase>
<phase_done stamp='0.960'/>
</phase>
<phase name='emit_lir' stamp='0.960'>
<phase name='lirGeneration' stamp='0.960'>
<phase_done stamp='0.960'/>
</phase>
<phase name='linearScan' stamp='0.960'>
<phase_done stamp='0.961'/>
</phase>
<phase_done stamp='0.961'/>
</phase>
<phase name='codeemit' stamp='0.961'>
<phase_done stamp='0.961'/>
</phase>
<phase name='codeinstall' stamp='0.961'>
<phase_done stamp='0.961'/>
</phase>
<code_cache total_blobs='409' nmethods='86' adapters='237' free_code_cache='250411264'/>
<task_done success='1' nmsize='320' count='257' stamp='0.967'/>
</task>
<task compile_id='92' method='java.lang.AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='45' count='257' iicount='257' level='3' stamp='0.967'>
<phase name='setup' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<phase name='buildIR' stamp='0.967'>
<klass id='1057' name='java.lang.AbstractStringBuilder' flags='1024'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='1057' name='append' return='1057' arguments='990' flags='1' bytes='45' iicount='257'/>
<parse method='1102'  stamp='0.967'>
<phase name='parse_hir' stamp='0.967'>
<bc code='182' bci='5'/>
<method id='1104' holder='1057' name='appendNull' return='1057' flags='2' bytes='83' iicount='1'/>
<call method='1104' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='982' name='int'/>
<method id='1106' holder='990' name='length' return='982' flags='1' bytes='11' compile_id='41' compiler='c1' level='3' iicount='1564'/>
<call method='1106' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1106'>
<bc code='182' bci='6'/>
<type id='980' name='byte'/>
<method id='1108' holder='990' name='coder' return='980' flags='0' bytes='15' compile_id='9' compiler='c1' level='3' iicount='6057'/>
<call method='1108' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1108'>
<parse_done stamp='0.967'/>
</parse>
<parse_done stamp='0.967'/>
</parse>
<bc code='182' bci='21'/>
<type id='984' name='void'/>
<method id='1111' holder='1057' name='ensureCapacityInternal' return='984' arguments='982' flags='2' bytes='39' iicount='350'/>
<call method='1111' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='30'/>
<method id='1113' holder='1057' name='putStringAt' return='984' arguments='982 990' flags='18' bytes='29' iicount='257'/>
<call method='1113' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1113'>
<bc code='182' bci='1'/>
<method id='1115' holder='1057' name='getCoder' return='980' flags='16' bytes='15' iicount='257'/>
<call method='1115' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1115'>
<parse_done stamp='0.967'/>
</parse>
<bc code='182' bci='5'/>
<call method='1108' instr='invokevirtual'/>
<inline_success reason='inline'/>
<parse method='1108'>
<parse_done stamp='0.967'/>
</parse>
<bc code='182' bci='12'/>
<method id='1117' holder='1057' name='inflate' return='984' flags='2' bytes='42' iicount='1'/>
<call method='1117' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='25'/>
<klass id='1094' name='[B' flags='1041'/>
<method id='1119' holder='990' name='getBytes' return='984' arguments='1094 982 980' flags='0' bytes='44' iicount='257'/>
<call method='1119' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.967'/>
</parse>
<phase_done stamp='0.967'/>
</phase>
<parse_done stamp='0.967'/>
</parse>
<phase name='optimize_blocks' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<phase name='gvn' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<phase name='optimize_null_checks' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<phase_done stamp='0.967'/>
</phase>
<phase name='emit_lir' stamp='0.967'>
<phase name='lirGeneration' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<phase name='linearScan' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<phase_done stamp='0.967'/>
</phase>
<phase name='codeemit' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<phase name='codeinstall' stamp='0.967'>
<phase_done stamp='0.967'/>
</phase>
<code_cache total_blobs='410' nmethods='87' adapters='237' free_code_cache='250408192'/>
<task_done success='1' nmsize='1296' count='274' inlined_bytes='85' stamp='0.978'/>
</task>
<task compile_id='95' method='java.lang.ref.Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='298' iicount='298' level='3' stamp='0.978'>
<phase name='setup' stamp='0.978'>
<phase_done stamp='0.978'/>
</phase>
<phase name='buildIR' stamp='0.978'>
<type id='984' name='void'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.lang.ref.ReferenceQueue' flags='1'/>
<klass id='1015' name='java.lang.ref.Reference' flags='1025'/>
<method id='1103' holder='1015' name='&lt;init&gt;' return='984' arguments='989 1102' flags='0' bytes='25' iicount='298'/>
<parse method='1103'  stamp='0.978'>
<phase name='parse_hir' stamp='0.978'>
<bc code='183' bci='1'/>
<method id='1105' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='3130'/>
<call method='1105' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1105'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='1015'/>
<parse_done stamp='0.978'/>
</parse>
<phase_done stamp='0.979'/>
</phase>
<parse_done stamp='0.979'/>
</parse>
<phase name='optimize_blocks' stamp='0.979'>
<phase_done stamp='0.979'/>
</phase>
<phase name='gvn' stamp='0.979'>
<phase_done stamp='0.979'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.979'>
<phase_done stamp='0.979'/>
</phase>
<phase name='optimize_null_checks' stamp='0.979'>
<phase_done stamp='0.979'/>
</phase>
<phase_done stamp='0.979'/>
</phase>
<phase name='emit_lir' stamp='0.979'>
<phase name='lirGeneration' stamp='0.979'>
<phase_done stamp='0.979'/>
</phase>
<phase name='linearScan' stamp='0.979'>
<phase_done stamp='0.979'/>
</phase>
<phase_done stamp='0.979'/>
</phase>
<phase name='codeemit' stamp='0.979'>
<phase_done stamp='0.979'/>
</phase>
<phase name='codeinstall' stamp='0.979'>
<dependency type='no_finalizable_subclasses' ctxk='1015'/>
<phase_done stamp='0.980'/>
</phase>
<code_cache total_blobs='414' nmethods='89' adapters='239' free_code_cache='250404480'/>
<task_done success='1' nmsize='624' count='303' inlined_bytes='1' stamp='0.983'/>
</task>
<task compile_id='93' method='java.lang.invoke.MethodType returnType ()Ljava/lang/Class;' bytes='5' count='152' iicount='152' level='1' stamp='0.983'>
<phase name='setup' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<phase name='buildIR' stamp='0.983'>
<klass id='991' name='java.lang.Class' flags='17'/>
<klass id='1049' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1102' holder='1049' name='returnType' return='991' flags='1' bytes='5' iicount='152'/>
<parse method='1102'  stamp='0.983'>
<phase name='parse_hir' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<parse_done stamp='0.983'/>
</parse>
<phase name='optimize_blocks' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<phase name='gvn' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<phase name='optimize_null_checks' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<phase_done stamp='0.983'/>
</phase>
<phase name='emit_lir' stamp='0.983'>
<phase name='lirGeneration' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<phase name='linearScan' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<phase_done stamp='0.983'/>
</phase>
<phase name='codeemit' stamp='0.983'>
<phase_done stamp='0.983'/>
</phase>
<phase name='codeinstall' stamp='0.983'>
<phase_done stamp='0.984'/>
</phase>
<code_cache total_blobs='416' nmethods='91' adapters='239' free_code_cache='250402944'/>
<task_done success='1' nmsize='176' count='155' stamp='0.986'/>
</task>
<task compile_id='98' method='java.lang.StringLatin1 lastIndexOf ([BII)I' bytes='40' count='128' backedge_count='2927' iicount='128' level='3' stamp='0.986'>
<phase name='setup' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<phase name='buildIR' stamp='0.986'>
<type id='982' name='int'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1102' name='java.lang.StringLatin1' flags='16'/>
<method id='1103' holder='1102' name='lastIndexOf' return='982' arguments='1094 982 982' flags='9' bytes='40' iicount='128'/>
<parse method='1103'  stamp='0.986'>
<phase name='parse_hir' stamp='0.986'>
<bc code='184' bci='1'/>
<type id='976' name='boolean'/>
<method id='1105' holder='1102' name='canEncode' return='976' arguments='982' flags='9' bytes='13' compile_id='74' compiler='c1' level='3' iicount='735'/>
<call method='1105' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1105'>
<parse_done stamp='0.986'/>
</parse>
<bc code='184' bci='14'/>
<klass id='1107' name='java.lang.Math' flags='17'/>
<method id='1108' holder='1107' name='min' return='982' arguments='982 982' flags='9' bytes='11' compile_id='70' compiler='c1' level='3' iicount='725'/>
<call method='1108' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1108'>
<parse_done stamp='0.986'/>
</parse>
<phase_done stamp='0.986'/>
</phase>
<parse_done stamp='0.986'/>
</parse>
<phase name='optimize_blocks' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<phase name='gvn' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<phase name='optimize_null_checks' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<phase_done stamp='0.986'/>
</phase>
<phase name='emit_lir' stamp='0.986'>
<phase name='lirGeneration' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<phase name='linearScan' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<phase_done stamp='0.986'/>
</phase>
<phase name='codeemit' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<phase name='codeinstall' stamp='0.986'>
<phase_done stamp='0.986'/>
</phase>
<code_cache total_blobs='417' nmethods='92' adapters='239' free_code_cache='250400768'/>
<task_done success='1' nmsize='944' count='128' backedge_count='2927' inlined_bytes='24' stamp='0.994'/>
</task>
<task compile_id='99' method='java.lang.invoke.MethodType checkPtype (Ljava/lang/Class;)V' bytes='19' count='287' iicount='287' level='3' stamp='0.995'>
<phase name='setup' stamp='0.995'>
<phase_done stamp='0.995'/>
</phase>
<phase name='buildIR' stamp='0.995'>
<type id='984' name='void'/>
<klass id='991' name='java.lang.Class' flags='17'/>
<klass id='1049' name='java.lang.invoke.MethodType' flags='17'/>
<method id='1102' holder='1049' name='checkPtype' return='984' arguments='991' flags='10' bytes='19' iicount='287'/>
<parse method='1102'  stamp='0.995'>
<phase name='parse_hir' stamp='0.995'>
<bc code='184' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1104' name='java.util.Objects' flags='17'/>
<method id='1105' holder='1104' name='requireNonNull' return='989' arguments='989' flags='9' bytes='14' compile_id='17' compiler='c1' level='3' iicount='14380'/>
<call method='1105' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1105'>
<bc code='183' bci='8'/>
<klass id='1098' name='java.lang.NullPointerException' flags='1'/>
<method id='1107' holder='1098' name='&lt;init&gt;' return='984' flags='1' bytes='5' iicount='1'/>
<call method='1107' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.000'/>
</parse>
<bc code='184' bci='14'/>
<klass id='1000' name='java.lang.RuntimeException' flags='1'/>
<klass id='990' name='java.lang.String' flags='17'/>
<klass id='1113' name='java.lang.invoke.MethodHandleStatics' flags='0'/>
<method id='1114' holder='1113' name='newIllegalArgumentException' return='1000' arguments='990' flags='8' bytes='9' iicount='1'/>
<call method='1114' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1114'>
<bc code='183' bci='5'/>
<klass id='1116' name='java.lang.IllegalArgumentException' flags='1'/>
<method id='1117' holder='1116' name='&lt;init&gt;' return='984' arguments='990' flags='1' bytes='6' iicount='1'/>
<call method='1117' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.000'/>
</parse>
<phase_done stamp='1.000'/>
</phase>
<parse_done stamp='1.000'/>
</parse>
<phase name='optimize_blocks' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='gvn' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='optimize_null_checks' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase_done stamp='1.000'/>
</phase>
<phase name='emit_lir' stamp='1.000'>
<phase name='lirGeneration' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='linearScan' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase_done stamp='1.000'/>
</phase>
<phase name='codeemit' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<phase name='codeinstall' stamp='1.000'>
<phase_done stamp='1.000'/>
</phase>
<code_cache total_blobs='420' nmethods='95' adapters='239' free_code_cache='250396928'/>
<task_done success='1' nmsize='944' count='287' inlined_bytes='23' stamp='1.007'/>
</task>
<task compile_id='103' method='java.lang.AbstractStringBuilder isLatin1 ()Z' bytes='19' count='258' iicount='258' level='3' stamp='1.007'>
<phase name='setup' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<phase name='buildIR' stamp='1.007'>
<type id='976' name='boolean'/>
<klass id='1057' name='java.lang.AbstractStringBuilder' flags='1024'/>
<method id='1102' holder='1057' name='isLatin1' return='976' flags='16' bytes='19' iicount='258'/>
<parse method='1102'  stamp='1.007'>
<phase name='parse_hir' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<parse_done stamp='1.007'/>
</parse>
<phase name='optimize_blocks' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<phase name='gvn' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<phase name='optimize_null_checks' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<phase_done stamp='1.007'/>
</phase>
<phase name='emit_lir' stamp='1.007'>
<phase name='lirGeneration' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<phase name='linearScan' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<phase_done stamp='1.007'/>
</phase>
<phase name='codeemit' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<phase name='codeinstall' stamp='1.007'>
<phase_done stamp='1.007'/>
</phase>
<code_cache total_blobs='421' nmethods='96' adapters='239' free_code_cache='250395904'/>
<task_done success='1' nmsize='368' count='258' stamp='1.010'/>
</task>
<task compile_id='101' method='java.lang.System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='262' iicount='262' level='3' stamp='1.010'>
<phase name='setup' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<phase name='buildIR' stamp='1.010'>
<klass id='1001' name='java.lang.SecurityManager' flags='1'/>
<klass id='995' name='java.lang.System' flags='17'/>
<method id='1102' holder='995' name='getSecurityManager' return='1001' flags='9' bytes='4' iicount='262'/>
<parse method='1102'  stamp='1.010'>
<phase name='parse_hir' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<parse_done stamp='1.010'/>
</parse>
<phase name='optimize_blocks' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<phase name='gvn' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<phase name='optimize_null_checks' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<phase_done stamp='1.010'/>
</phase>
<phase name='emit_lir' stamp='1.010'>
<phase name='lirGeneration' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<phase name='linearScan' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<phase_done stamp='1.010'/>
</phase>
<phase name='codeemit' stamp='1.010'>
<phase_done stamp='1.010'/>
</phase>
<phase name='codeinstall' stamp='1.010'>
<phase_done stamp='1.023'/>
</phase>
<code_cache total_blobs='424' nmethods='99' adapters='239' free_code_cache='250392832'/>
<task_done success='1' nmsize='240' count='262' stamp='1.024'/>
</task>
<task compile_id='109' method='java.lang.Thread isInterrupted ()Z' bytes='6' count='597' iicount='597' level='3' stamp='1.024'>
<phase name='setup' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<phase name='buildIR' stamp='1.024'>
<type id='976' name='boolean'/>
<klass id='1021' name='java.lang.Thread' flags='1'/>
<method id='1102' holder='1021' name='isInterrupted' return='976' flags='1' bytes='6' iicount='611'/>
<parse method='1102'  stamp='1.024'>
<phase name='parse_hir' stamp='1.024'>
<bc code='182' bci='2'/>
<method id='1104' holder='1021' name='isInterrupted' return='976' arguments='976' flags='258' bytes='0' compile_id='108' compile_kind='c2n' compiler='' level='0' iicount='263'/>
<call method='1104' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<phase_done stamp='1.024'/>
</phase>
<parse_done stamp='1.024'/>
</parse>
<phase name='optimize_blocks' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<phase name='gvn' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<phase name='optimize_null_checks' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<phase_done stamp='1.024'/>
</phase>
<phase name='emit_lir' stamp='1.024'>
<phase name='lirGeneration' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<phase name='linearScan' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<phase_done stamp='1.024'/>
</phase>
<phase name='codeemit' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<phase name='codeinstall' stamp='1.024'>
<phase_done stamp='1.024'/>
</phase>
<code_cache total_blobs='425' nmethods='100' adapters='239' free_code_cache='250391936'/>
<task_done success='1' nmsize='288' count='3393' stamp='1.025'/>
</task>
<task compile_id='105' method='io.type.pollution.benchmarks.DuplicatedContext isDuplicated ()Z' bytes='2' count='3409' iicount='3409' level='1' stamp='1.025'>
<phase name='setup' stamp='1.025'>
<phase_done stamp='1.025'/>
</phase>
<phase name='buildIR' stamp='1.025'>
<type id='976' name='boolean'/>
<klass id='1102' name='io.type.pollution.benchmarks.DuplicatedContext' flags='0'/>
<method id='1103' holder='1102' name='isDuplicated' return='976' flags='1' bytes='2' iicount='3422'/>
<parse method='1103'  stamp='1.025'>
<phase name='parse_hir' stamp='1.025'>
<phase_done stamp='1.025'/>
</phase>
<parse_done stamp='1.025'/>
</parse>
<phase name='optimize_blocks' stamp='1.025'>
<phase_done stamp='1.025'/>
</phase>
<phase name='gvn' stamp='1.025'>
<phase_done stamp='1.025'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.025'>
<phase_done stamp='1.025'/>
</phase>
<phase name='optimize_null_checks' stamp='1.025'>
<phase_done stamp='1.025'/>
</phase>
<phase_done stamp='1.025'/>
</phase>
<phase name='emit_lir' stamp='1.025'>
<phase name='lirGeneration' stamp='1.025'>
<phase_done stamp='1.025'/>
</phase>
<phase name='linearScan' stamp='1.025'>
<phase_done stamp='1.025'/>
</phase>
<phase_done stamp='1.025'/>
</phase>
<phase name='codeemit' stamp='1.025'>
<phase_done stamp='1.026'/>
</phase>
<phase name='codeinstall' stamp='1.026'>
<phase_done stamp='1.036'/>
</phase>
<code_cache total_blobs='427' nmethods='102' adapters='239' free_code_cache='250389376'/>
<task_done success='1' nmsize='176' count='3465' stamp='1.037'/>
</task>
<task compile_id='113' compile_kind='osr' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='68015' iicount='2' osr_bci='8' level='3' stamp='1.043'>
<phase name='setup' stamp='1.043'>
<phase_done stamp='1.043'/>
</phase>
<phase name='buildIR' stamp='1.043'>
<type id='984' name='void'/>
<klass id='1102' name='io.type.pollution.benchmarks.Main' flags='1'/>
<method id='1103' holder='1102' name='lambda$main$0' return='984' flags='4106' bytes='26' iicount='2'/>
<parse method='1103'  stamp='1.043'>
<phase name='parse_hir' stamp='1.043'>
<bc code='183' bci='4'/>
<klass id='1105' name='io.type.pollution.benchmarks.DuplicatedContext' flags='0'/>
<method id='1106' holder='1105' name='&lt;init&gt;' return='984' flags='0' bytes='5' iicount='2'/>
<call method='1106' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1106'>
<bc code='183' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<method id='1108' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='3187'/>
<call method='1108' instr='invokespecial'/>
<inline_success reason='inline'/>
<parse method='1108'>
<parse_done stamp='1.043'/>
</parse>
<parse_done stamp='1.043'/>
</parse>
<bc code='184' bci='8'/>
<klass id='1021' name='java.lang.Thread' flags='1'/>
<method id='1110' holder='1021' name='currentThread' return='1021' flags='265' bytes='0' compile_id='107' compile_kind='c2n' compiler='' level='0' iicount='332'/>
<call method='1110' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='11'/>
<type id='976' name='boolean'/>
<method id='1112' holder='1021' name='isInterrupted' return='976' flags='1' bytes='6' compile_id='112' compiler='c2' level='4' iicount='16225'/>
<call method='1112' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='1021' x='1112'/>
<inline_success reason='inline'/>
<parse method='1112'>
<bc code='182' bci='2'/>
<method id='1114' holder='1021' name='isInterrupted' return='976' arguments='976' flags='258' bytes='0' compile_id='108' compile_kind='c2n' compiler='' level='0' iicount='263'/>
<call method='1114' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<parse_done stamp='1.043'/>
</parse>
<bc code='184' bci='18'/>
<klass id='1115' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<method id='1116' holder='1102' name='applicationStackBase' return='976' arguments='1115' flags='9' bytes='7' compile_id='111' compiler='c2' level='4' iicount='36693'/>
<call method='1116' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1116'>
<bc code='184' bci='3'/>
<type id='982' name='int'/>
<method id='1118' holder='1102' name='applicationStack' return='976' arguments='1115 982' flags='9' bytes='19' compile_id='104' compiler='c2' level='4' iicount='107751'/>
<call method='1118' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1118'>
<bc code='184' bci='15'/>
<call method='1118' instr='invokestatic'/>
<inline_success reason='inline'/>
<parse method='1118'>
<bc code='184' bci='15'/>
<call method='1118' instr='invokestatic'/>
<inline_fail reason='recursive inlining too deep'/>
<parse_done stamp='1.043'/>
</parse>
<parse_done stamp='1.043'/>
</parse>
<parse_done stamp='1.043'/>
</parse>
<phase_done stamp='1.043'/>
</phase>
<parse_done stamp='1.043'/>
</parse>
<phase name='optimize_blocks' stamp='1.043'>
<phase_done stamp='1.043'/>
</phase>
<phase name='gvn' stamp='1.043'>
<phase_done stamp='1.043'/>
</phase>
<phase name='optimize_null_checks' stamp='1.043'>
<phase_done stamp='1.043'/>
</phase>
<phase_done stamp='1.043'/>
</phase>
<phase name='emit_lir' stamp='1.043'>
<phase name='lirGeneration' stamp='1.043'>
<phase_done stamp='1.043'/>
</phase>
<phase name='linearScan' stamp='1.043'>
<phase_done stamp='1.043'/>
</phase>
<phase_done stamp='1.043'/>
</phase>
<phase name='codeemit' stamp='1.043'>
<phase_done stamp='1.043'/>
</phase>
<phase name='codeinstall' stamp='1.043'>
<dependency type='unique_concrete_method' ctxk='1021' x='1112'/>
<phase_done stamp='1.043'/>
</phase>
<code_cache total_blobs='432' nmethods='107' adapters='239' free_code_cache='250383232'/>
<task_done success='1' nmsize='1424' count='2' backedge_count='169969' inlined_bytes='57' stamp='1.055'/>
</task>
</compilation_log>
<compilation_log thread='1329935'>
<start_compile_thread name='C2 CompilerThread0' thread='1329935' process='1329904' stamp='0.326'/>
<task compile_id='13' method='java.lang.StringLatin1 hashCode ([B)I' bytes='42' count='777' backedge_count='19707' iicount='777' stamp='0.451'>
<type id='982' name='int'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1102' name='java.lang.StringLatin1' flags='16'/>
<method id='1103' holder='1102' name='hashCode' return='982' arguments='1094' flags='9' bytes='42' compile_id='1' compiler='c1' level='3' iicount='777'/>
<parse method='1103' uses='777.000000' stamp='0.451'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='162' bci='13'/>
<branch target_bci='40' taken='677' not_taken='17634' cnt='18311.000000' prob='0.0369723'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='51' bci='19'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='162' bci='13'/>
<branch target_bci='40' taken='677' not_taken='17634' cnt='17634.000000' prob='0.0369723'/>
<parse_done stamp='0.451'/>
</parse>
<loop_tree>
<loop idx='166' >
<loop idx='167' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='166' >
<loop idx='354' inner_loop='1' main_loop='354' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='243' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='411' inner_loop='1' main_loop='411' >
</loop>
</loop>
<loop idx='216' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='243' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='411' inner_loop='1' main_loop='411' >
</loop>
</loop>
<loop idx='216' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='243' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='411' inner_loop='1' main_loop='411' >
</loop>
</loop>
<loop idx='216' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='243' inner_loop='1' pre_loop='167' >
</loop>
<loop idx='166' >
<loop idx='411' inner_loop='1' main_loop='411' >
</loop>
</loop>
<loop idx='216' inner_loop='1' post_loop='167' >
</loop>
</loop_tree>
<regalloc attempts='2' success='1'/>
<code_cache total_blobs='229' nmethods='11' adapters='131' free_code_cache='250609536'/>
<task_done success='1' nmsize='344' count='889' backedge_count='22905' stamp='0.459'/>
</task>
<task compile_id='18' method='java.lang.Object &lt;init&gt; ()V' bytes='1' count='1538' iicount='1538' stamp='0.464'>
<type id='984' name='void'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<method id='1102' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='4' compiler='c1' level='3' iicount='1547'/>
<parse method='1102' uses='1547.000000' stamp='0.464'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='989'/>
<parse_done stamp='0.464'/>
</parse>
<regalloc attempts='0' success='1'/>
<dependency type='no_finalizable_subclasses' ctxk='989'/>
<code_cache total_blobs='232' nmethods='14' adapters='131' free_code_cache='250605952'/>
<task_done success='1' nmsize='88' count='1558' stamp='0.468'/>
</task>
<task compile_id='59' method='java.lang.String hashCode ()I' bytes='49' count='5647' iicount='5647' stamp='0.760'>
<type id='982' name='int'/>
<klass id='990' name='java.lang.String' flags='17'/>
<method id='1102' holder='990' name='hashCode' return='982' flags='1' bytes='49' compile_id='6' compiler='c1' level='3' iicount='5649'/>
<klass id='1105' name='java.lang.StringUTF16' unloaded='1'/>
<uncommon_trap method='1102' bci='39' reason='unloaded' action='reinterpret' index='563' debug_id='0' klass='1105'/>
<parse method='1102' uses='5649.000000' stamp='0.760'>
<bc code='154' bci='6'/>
<branch target_bci='47' taken='4690' not_taken='956' cnt='5646.000000' prob='0.830677'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile' debug_id='0'/>
<bc code='158' bci='14'/>
<branch target_bci='47' taken='0' not_taken='956' cnt='956.000000' prob='never'/>
<uncommon_trap bci='14' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='182' bci='19'/>
<type id='976' name='boolean'/>
<method id='1104' holder='990' name='isLatin1' return='976' flags='2' bytes='19' compile_id='5' compiler='c1' level='3' iicount='3328'/>
<call method='1104' count='871' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1104' uses='956.000000' stamp='0.760'>
<bc code='153' bci='3'/>
<branch target_bci='17' taken='0' not_taken='3328' cnt='3328.000000' prob='never'/>
<bc code='154' bci='10'/>
<branch target_bci='17' taken='0' not_taken='3328' cnt='3328.000000' prob='never'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='0.760'/>
</parse>
<bc code='153' bci='22'/>
<branch target_bci='35' taken='0' not_taken='956' cnt='956.000000' prob='never'/>
<bc code='184' bci='29'/>
<klass id='1094' name='[B' flags='1041'/>
<klass id='1107' name='java.lang.StringLatin1' flags='16'/>
<method id='1108' holder='1107' name='hashCode' return='982' arguments='1094' flags='9' bytes='42' compile_id='13' compiler='c2' level='4' iicount='889'/>
<call method='1108' count='871' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1108' uses='956.000000' stamp='0.761'>
<bc code='162' bci='13'/>
<branch target_bci='40' taken='789' not_taken='20832' cnt='21621.000000' prob='0.0364923'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='51' bci='19'/>
<uncommon_trap bci='19' reason='range_check' action='make_not_entrant' debug_id='0' comment='range_check'/>
<bc code='162' bci='13'/>
<branch target_bci='40' taken='789' not_taken='20832' cnt='20832.000000' prob='0.0364923'/>
<parse_done stamp='0.761'/>
</parse>
<parse_done stamp='0.761'/>
</parse>
<loop_tree>
<loop idx='268' >
<loop idx='269' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='268' >
<loop idx='458' inner_loop='1' main_loop='458' >
</loop>
</loop>
</loop_tree>
<loop_tree>
<loop idx='347' inner_loop='1' pre_loop='269' >
</loop>
<loop idx='268' >
<loop idx='515' inner_loop='1' main_loop='515' >
</loop>
</loop>
<loop idx='319' inner_loop='1' post_loop='269' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='347' inner_loop='1' pre_loop='269' >
</loop>
<loop idx='268' >
<loop idx='515' inner_loop='1' main_loop='515' >
</loop>
</loop>
<loop idx='319' inner_loop='1' post_loop='269' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='347' inner_loop='1' pre_loop='269' >
</loop>
<loop idx='268' >
<loop idx='515' inner_loop='1' main_loop='515' >
</loop>
</loop>
<loop idx='319' inner_loop='1' post_loop='269' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='347' inner_loop='1' pre_loop='269' >
</loop>
<loop idx='268' >
<loop idx='515' inner_loop='1' main_loop='515' >
</loop>
</loop>
<loop idx='319' inner_loop='1' post_loop='269' >
</loop>
</loop_tree>
<regalloc attempts='2' success='1'/>
<code_cache total_blobs='272' nmethods='44' adapters='141' free_code_cache='250532608'/>
<task_done success='1' nmsize='440' count='6021' inlined_bytes='61' stamp='0.771'/>
</task>
<task compile_id='61' method='java.util.ImmutableCollections$SetN$SetNIterator hasNext ()Z' bytes='13' count='7031' iicount='7031' stamp='0.771'>
<type id='976' name='boolean'/>
<klass id='1102' name='java.util.ImmutableCollections$SetN$SetNIterator' flags='18'/>
<method id='1103' holder='1102' name='hasNext' return='976' flags='1' bytes='13' compile_id='24' compiler='c1' level='3' iicount='7031'/>
<parse method='1103' uses='7031.000000' stamp='0.771'>
<bc code='158' bci='4'/>
<branch target_bci='11' taken='611' not_taken='6420' cnt='7031.000000' prob='0.0869009'/>
<parse_done stamp='0.772'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='274' nmethods='46' adapters='141' free_code_cache='250530048'/>
<task_done success='1' nmsize='120' count='7154' stamp='0.779'/>
</task>
<task compile_id='62' method='java.util.HashMap afterNodeInsertion (Z)V' bytes='1' count='1794' iicount='1794' stamp='0.779'>
<type id='984' name='void'/>
<type id='976' name='boolean'/>
<klass id='1102' name='java.util.HashMap' flags='1'/>
<method id='1103' holder='1102' name='afterNodeInsertion' return='984' arguments='976' flags='0' bytes='1' compile_id='49' compiler='c1' level='3' iicount='1794'/>
<parse method='1103' uses='1794.000000' stamp='0.779'>
<parse_done stamp='0.779'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='276' nmethods='48' adapters='141' free_code_cache='250528512'/>
<task_done success='1' nmsize='88' count='1797' stamp='0.781'/>
</task>
<task compile_id='104' method='io.type.pollution.benchmarks.Main applicationStack (Lio/type/pollution/benchmarks/Context;I)Z' bytes='19' count='88629' iicount='88633' stamp='1.010'>
<type id='976' name='boolean'/>
<klass id='1103' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<type id='982' name='int'/>
<klass id='1102' name='io.type.pollution.benchmarks.Main' flags='1'/>
<method id='1104' holder='1102' name='applicationStack' return='976' arguments='1103 982' flags='9' bytes='19' iicount='88759'/>
<parse method='1104' uses='88759.000000' stamp='1.010'>
<bc code='160' bci='2'/>
<branch target_bci='10' taken='77614' not_taken='11133' cnt='88747.000000' prob='0.874554'/>
<bc code='184' bci='6'/>
<klass id='1106' name='io.type.pollution.benchmarks.ContextUtil' flags='0'/>
<method id='1107' holder='1106' name='isDuplicatedContext' return='976' arguments='1103' flags='9' bytes='18' iicount='11174'/>
<call method='1107' count='11091' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1107' uses='11133.000000' stamp='1.023'>
<bc code='184' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1108' name='java.util.Objects' flags='17'/>
<method id='1109' holder='1108' name='requireNonNull' return='989' arguments='989' flags='9' bytes='14' compile_id='17' compiler='c1' level='3' iicount='14716'/>
<call method='1109' count='11219' prof_factor='0.996331' inline='1'/>
<klass id='1098' name='java.lang.NullPointerException' flags='1'/>
<uncommon_trap method='1109' bci='4' reason='unloaded' action='reinterpret' index='12' debug_id='0' klass='1098'/>
<inline_success reason='inline (hot)'/>
<parse method='1109' uses='11178.000000' stamp='1.023'>
<bc code='199' bci='1'/>
<branch target_bci='12' taken='14716' not_taken='0' cnt='14716.000000' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<parse_done stamp='1.023'/>
</parse>
<bc code='192' bci='4'/>
<uncommon_trap bci='4' reason='class_check' action='maybe_recompile' debug_id='0'/>
<bc code='192' bci='9'/>
<uncommon_trap bci='9' reason='class_check' action='maybe_recompile' debug_id='0'/>
<bc code='185' bci='12'/>
<klass id='1113' name='io.type.pollution.benchmarks.NonDuplicatedContext' flags='0'/>
<klass id='1114' name='io.type.pollution.benchmarks.DuplicatedContext' flags='0'/>
<klass id='1110' name='io.type.pollution.benchmarks.InternalContext' flags='1536'/>
<method id='1111' holder='1110' name='isDuplicated' return='976' flags='1025' bytes='0' iicount='1'/>
<call method='1111' count='11220' prof_factor='0.996331' virtual='1' inline='1' receiver='1113' receiver_count='10846' receiver2='1114' receiver2_count='374'/>
<method id='1116' holder='1113' name='isDuplicated' return='976' flags='1' bytes='2' compile_id='77' compiler='c1' level='1' iicount='11000'/>
<call method='1116' count='11220' prof_factor='0.996331' inline='1'/>
<inline_success reason='inline (hot)'/>
<method id='1117' holder='1114' name='isDuplicated' return='976' flags='1' bytes='2' iicount='464'/>
<call method='1117' count='11220' prof_factor='0.996331' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='12' klass='1113'/>
<predicted_call bci='12' klass='1114'/>
<uncommon_trap bci='12' reason='bimorphic_or_optimized_type_check' action='maybe_recompile' debug_id='0'/>
<parse method='1117' uses='11179.000000' stamp='1.023'>
<parse_done stamp='1.023'/>
</parse>
<parse method='1116' uses='11179.000000' stamp='1.023'>
<parse_done stamp='1.023'/>
</parse>
<parse_done stamp='1.023'/>
</parse>
<bc code='184' bci='15'/>
<call method='1104' count='77319' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1104' uses='77615.000000' stamp='1.023'>
<bc code='160' bci='2'/>
<branch target_bci='10' taken='77614' not_taken='11133' cnt='88747.000000' prob='0.874554'/>
<bc code='184' bci='6'/>
<call method='1107' count='11091' prof_factor='0.874447' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1107' uses='9736.000000' stamp='1.023'>
<bc code='184' bci='1'/>
<call method='1109' count='11219' prof_factor='0.871308' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1109' uses='9775.000000' stamp='1.023'>
<bc code='199' bci='1'/>
<branch target_bci='12' taken='14716' not_taken='0' cnt='14716.000000' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<parse_done stamp='1.023'/>
</parse>
<bc code='192' bci='4'/>
<uncommon_trap bci='4' reason='class_check' action='maybe_recompile' debug_id='0'/>
<bc code='192' bci='9'/>
<uncommon_trap bci='9' reason='class_check' action='maybe_recompile' debug_id='0'/>
<bc code='185' bci='12'/>
<call method='1111' count='11220' prof_factor='0.871308' virtual='1' inline='1' receiver='1113' receiver_count='10846' receiver2='1114' receiver2_count='374'/>
<call method='1116' count='11220' prof_factor='0.871308' inline='1'/>
<inline_success reason='inline (hot)'/>
<call method='1117' count='11220' prof_factor='0.871308' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='12' klass='1113'/>
<predicted_call bci='12' klass='1114'/>
<uncommon_trap bci='12' reason='bimorphic_or_optimized_type_check' action='maybe_recompile' debug_id='0'/>
<parse method='1117' uses='9776.000000' stamp='1.023'>
<parse_done stamp='1.023'/>
</parse>
<parse method='1116' uses='9776.000000' stamp='1.023'>
<parse_done stamp='1.023'/>
</parse>
<parse_done stamp='1.023'/>
</parse>
<bc code='184' bci='15'/>
<call method='1104' count='77319' prof_factor='0.874447' inline='1'/>
<inline_fail reason='recursive inlining is too deep'/>
<direct_call bci='15'/>
<parse_done stamp='1.023'/>
</parse>
<parse_done stamp='1.023'/>
</parse>
<regalloc attempts='2' success='1'/>
<code_cache total_blobs='427' nmethods='101' adapters='239' free_code_cache='250384384'/>
<task_done success='1' nmsize='616' count='107751' inlined_bytes='83' stamp='1.036'/>
</task>
<task compile_id='110' method='java.util.Objects requireNonNull (Ljava/lang/Object;)Ljava/lang/Object;' bytes='14' count='17822' iicount='17822' stamp='1.036'>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1102' name='java.util.Objects' flags='17'/>
<method id='1103' holder='1102' name='requireNonNull' return='989' arguments='989' flags='9' bytes='14' compile_id='17' compiler='c1' level='3' iicount='17822'/>
<klass id='1098' name='java.lang.NullPointerException' flags='1'/>
<uncommon_trap method='1103' bci='4' reason='unloaded' action='reinterpret' index='12' debug_id='0' klass='1098'/>
<parse method='1103' uses='17822.000000' stamp='1.037'>
<bc code='199' bci='1'/>
<branch target_bci='12' taken='17822' not_taken='0' cnt='17822.000000' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<parse_done stamp='1.037'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='429' nmethods='103' adapters='239' free_code_cache='250382848'/>
<task_done success='1' nmsize='88' count='17822' stamp='1.038'/>
</task>
<task compile_id='112' method='java.lang.Thread isInterrupted ()Z' bytes='6' count='13149' iicount='13151' stamp='1.038'>
<type id='976' name='boolean'/>
<klass id='1021' name='java.lang.Thread' flags='1'/>
<method id='1102' holder='1021' name='isInterrupted' return='976' flags='1' bytes='6' compile_id='109' compiler='c1' level='3' iicount='13218'/>
<parse method='1102' uses='13218.000000' stamp='1.038'>
<bc code='182' bci='2'/>
<method id='1104' holder='1021' name='isInterrupted' return='976' arguments='976' flags='258' bytes='0' compile_id='108' compile_kind='c2n' compiler='' level='0' iicount='263'/>
<call method='1104' count='12863' prof_factor='1.000000' inline='1'/>
<intrinsic id='_isInterrupted' nodes='49'/>
<parse_done stamp='1.038'/>
</parse>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='430' nmethods='104' adapters='239' free_code_cache='250382080'/>
<task_done success='1' nmsize='168' count='16225' stamp='1.039'/>
</task>
<task compile_id='111' method='io.type.pollution.benchmarks.Main applicationStackBase (Lio/type/pollution/benchmarks/Context;)Z' bytes='7' count='33524' iicount='33526' stamp='1.039'>
<type id='976' name='boolean'/>
<klass id='1103' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<klass id='1102' name='io.type.pollution.benchmarks.Main' flags='1'/>
<method id='1104' holder='1102' name='applicationStackBase' return='976' arguments='1103' flags='9' bytes='7' compile_id='78' compiler='c1' level='2' iicount='33626'/>
<parse method='1104' uses='33626.000000' stamp='1.039'>
<bc code='184' bci='3'/>
<type id='982' name='int'/>
<method id='1106' holder='1102' name='applicationStack' return='976' arguments='1103 982' flags='9' bytes='19' compile_id='104' compiler='c2' level='4' iicount='107751'/>
<call method='1106' count='10488' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1106' uses='33626.000000' stamp='1.039'>
<bc code='160' bci='2'/>
<branch target_bci='10' taken='93431' not_taken='14424' cnt='107855.000000' prob='0.866265'/>
<bc code='184' bci='15'/>
<call method='1106' count='93023' prof_factor='0.312071' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1106' uses='29168.000000' stamp='1.039'>
<bc code='160' bci='2'/>
<branch target_bci='10' taken='93431' not_taken='14424' cnt='107855.000000' prob='0.866265'/>
<bc code='184' bci='15'/>
<call method='1106' count='93023' prof_factor='0.270698' inline='1'/>
<inline_fail reason='recursive inlining is too deep'/>
<direct_call bci='15'/>
<parse_done stamp='1.039'/>
</parse>
<parse_done stamp='1.039'/>
</parse>
<parse_done stamp='1.039'/>
</parse>
<regalloc attempts='1' success='1'/>
<code_cache total_blobs='431' nmethods='105' adapters='239' free_code_cache='250381312'/>
<task_done success='1' nmsize='104' count='36693' inlined_bytes='38' stamp='1.040'/>
</task>
<task compile_id='106' method='io.type.pollution.benchmarks.ContextUtil isDuplicatedContext (Lio/type/pollution/benchmarks/Context;)Z' bytes='18' count='14451' iicount='14451' stamp='1.040'>
<type id='976' name='boolean'/>
<klass id='1103' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<klass id='1102' name='io.type.pollution.benchmarks.ContextUtil' flags='0'/>
<method id='1104' holder='1102' name='isDuplicatedContext' return='976' arguments='1103' flags='9' bytes='18' iicount='14451'/>
<parse method='1104' uses='14451.000000' stamp='1.040'>
<bc code='184' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<klass id='1108' name='java.util.Objects' flags='17'/>
<method id='1109' holder='1108' name='requireNonNull' return='989' arguments='989' flags='9' bytes='14' compile_id='110' compiler='c2' level='4' iicount='17822'/>
<call method='1109' count='14274' prof_factor='1.000000' inline='1'/>
<klass id='1098' name='java.lang.NullPointerException' flags='1'/>
<uncommon_trap method='1109' bci='4' reason='unloaded' action='reinterpret' index='12' debug_id='0' klass='1098'/>
<inline_success reason='inline (hot)'/>
<parse method='1109' uses='14428.000000' stamp='1.040'>
<bc code='199' bci='1'/>
<branch target_bci='12' taken='17822' not_taken='0' cnt='17822.000000' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken always'/>
<parse_done stamp='1.040'/>
</parse>
<bc code='192' bci='4'/>
<uncommon_trap bci='4' reason='class_check' action='maybe_recompile' debug_id='0'/>
<bc code='192' bci='9'/>
<uncommon_trap bci='9' reason='class_check' action='maybe_recompile' debug_id='0'/>
<bc code='185' bci='12'/>
<klass id='1106' name='io.type.pollution.benchmarks.NonDuplicatedContext' flags='0'/>
<klass id='1107' name='io.type.pollution.benchmarks.DuplicatedContext' flags='0'/>
<klass id='1110' name='io.type.pollution.benchmarks.InternalContext' flags='1536'/>
<method id='1111' holder='1110' name='isDuplicated' return='976' flags='1025' bytes='0' iicount='1'/>
<call method='1111' count='14307' prof_factor='1.000000' virtual='1' inline='1' receiver='1106' receiver_count='10846' receiver2='1107' receiver2_count='3461'/>
<method id='1113' holder='1106' name='isDuplicated' return='976' flags='1' bytes='2' compile_id='77' compiler='c1' level='1' iicount='11000'/>
<call method='1113' count='14307' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<method id='1114' holder='1107' name='isDuplicated' return='976' flags='1' bytes='2' compile_id='105' compiler='c1' level='1' iicount='3465'/>
<call method='1114' count='14307' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='12' klass='1106'/>
<predicted_call bci='12' klass='1107'/>
<uncommon_trap bci='12' reason='bimorphic_or_optimized_type_check' action='maybe_recompile' debug_id='0'/>
<parse method='1114' uses='14461.000000' stamp='1.040'>
<parse_done stamp='1.040'/>
</parse>
<parse method='1113' uses='14461.000000' stamp='1.040'>
<parse_done stamp='1.040'/>
</parse>
<parse_done stamp='1.040'/>
</parse>
<regalloc attempts='0' success='1'/>
<code_cache total_blobs='432' nmethods='106' adapters='239' free_code_cache='250380160'/>
<task_done success='1' nmsize='280' count='14451' inlined_bytes='14' stamp='1.043'/>
</task>
<task compile_id='114' compile_kind='osr' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='175034' iicount='2' osr_bci='8' stamp='1.056'>
<type id='984' name='void'/>
<klass id='1102' name='io.type.pollution.benchmarks.Main' flags='1'/>
<method id='1103' holder='1102' name='lambda$main$0' return='984' flags='4106' bytes='26' iicount='2'/>
<parse method='1103' uses='2.000000' osr_bci='8' stamp='1.056'>
<klass id='1105' name='io.type.pollution.benchmarks.DuplicatedContext' flags='0'/>
<dependency type='leaf_type' ctxk='1105'/>
<dependency type='leaf_type' ctxk='1105'/>
<uncommon_trap bci='8' reason='constraint' action='reinterpret' debug_id='0'/>
<uncommon_trap bci='8' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='8' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='8' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='184' bci='8'/>
<klass id='1021' name='java.lang.Thread' flags='1'/>
<method id='1107' holder='1021' name='currentThread' return='1021' flags='265' bytes='0' compile_id='107' compile_kind='c2n' compiler='' level='0' iicount='332'/>
<call method='1107' count='99947' prof_factor='1.000000' inline='1'/>
<intrinsic id='_currentThread' nodes='4'/>
<bc code='182' bci='11'/>
<type id='976' name='boolean'/>
<method id='1108' holder='1021' name='isInterrupted' return='976' flags='1' bytes='6' compile_id='112' compiler='c2' level='4' iicount='116595'/>
<dependency type='unique_concrete_method' ctxk='1021' x='1108'/>
<call method='1108' count='100120' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1108' uses='100120.000000' stamp='1.056'>
<bc code='182' bci='2'/>
<method id='1111' holder='1021' name='isInterrupted' return='976' arguments='976' flags='258' bytes='0' compile_id='108' compile_kind='c2n' compiler='' level='0' iicount='263'/>
<call method='1111' count='117423' prof_factor='0.858699' inline='1'/>
<intrinsic id='_isInterrupted' nodes='47'/>
<parse_done stamp='1.056'/>
</parse>
<bc code='154' bci='14'/>
<branch target_bci='25' taken='0' not_taken='101846' cnt='101846.000000' prob='never'/>
<uncommon_trap bci='14' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<bc code='184' bci='18'/>
<klass id='1109' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<method id='1110' holder='1102' name='applicationStackBase' return='976' arguments='1109' flags='9' bytes='7' compile_id='111' compiler='c2' level='4' iicount='138537'/>
<call method='1110' count='101822' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1110' uses='101822.000000' stamp='1.056'>
<bc code='184' bci='3'/>
<type id='982' name='int'/>
<method id='1113' holder='1102' name='applicationStack' return='976' arguments='1109 982' flags='9' bytes='19' compile_id='104' compiler='c2' level='4' iicount='309552'/>
<call method='1113' count='114137' prof_factor='0.734981' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1113' uses='101794.000000' stamp='1.056'>
<bc code='160' bci='2'/>
<branch target_bci='10' taken='296072' not_taken='14357' cnt='310429.000000' prob='0.953751'/>
<bc code='184' bci='15'/>
<call method='1113' count='295443' prof_factor='0.328843' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1113' uses='97168.000000' stamp='1.056'>
<bc code='160' bci='2'/>
<branch target_bci='10' taken='296072' not_taken='14357' cnt='310429.000000' prob='0.953751'/>
<bc code='184' bci='15'/>
<call method='1113' count='295443' prof_factor='0.313899' inline='1'/>
<inline_fail reason='recursive inlining is too deep'/>
<direct_call bci='15'/>
<parse_done stamp='1.056'/>
</parse>
<parse_done stamp='1.056'/>
</parse>
<parse_done stamp='1.056'/>
</parse>
<parse_done stamp='1.056'/>
</parse>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='0' success='1'/>
<dependency type='leaf_type' ctxk='1105'/>
<dependency type='unique_concrete_method' ctxk='1021' x='1108'/>
<code_cache total_blobs='434' nmethods='108' adapters='239' free_code_cache='250376192'/>
<task_done success='1' nmsize='312' count='2' backedge_count='198216' inlined_bytes='51' stamp='1.059'/>
</task>
<task compile_id='115' method='io.type.pollution.benchmarks.Main lambda$main$0 ()V' bytes='26' count='2' backedge_count='199642' iicount='2' stamp='1.059'>
<type id='984' name='void'/>
<klass id='1102' name='io.type.pollution.benchmarks.Main' flags='1'/>
<method id='1103' holder='1102' name='lambda$main$0' return='984' flags='4106' bytes='26' iicount='2'/>
<parse method='1103' uses='2.000000' stamp='1.059'>
<bc code='183' bci='4'/>
<klass id='1105' name='io.type.pollution.benchmarks.DuplicatedContext' flags='0'/>
<method id='1106' holder='1105' name='&lt;init&gt;' return='984' flags='0' bytes='5' iicount='2'/>
<call method='1106' count='0' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1106' uses='0.000000' stamp='1.059'>
<bc code='183' bci='1'/>
<klass id='989' name='java.lang.Object' flags='1'/>
<method id='1111' holder='989' name='&lt;init&gt;' return='984' flags='1' bytes='1' compile_id='18' compiler='c2' level='4' iicount='3187'/>
<call method='1111' count='-1' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1111' uses='-1.000000' stamp='1.059'>
<parse_done stamp='1.059'/>
</parse>
<parse_done stamp='1.059'/>
</parse>
<bc code='184' bci='8'/>
<klass id='1021' name='java.lang.Thread' flags='1'/>
<method id='1107' holder='1021' name='currentThread' return='1021' flags='265' bytes='0' compile_id='107' compile_kind='c2n' compiler='' level='0' iicount='332'/>
<call method='1107' count='124423' prof_factor='1.000000' inline='1'/>
<intrinsic id='_currentThread' nodes='4'/>
<bc code='182' bci='11'/>
<type id='976' name='boolean'/>
<method id='1108' holder='1021' name='isInterrupted' return='976' flags='1' bytes='6' compile_id='112' compiler='c2' level='4' iicount='140033'/>
<dependency type='unique_concrete_method' ctxk='1021' x='1108'/>
<call method='1108' count='124498' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1108' uses='124498.000000' stamp='1.059'>
<bc code='182' bci='2'/>
<method id='1114' holder='1021' name='isInterrupted' return='976' arguments='976' flags='258' bytes='0' compile_id='108' compile_kind='c2n' compiler='' level='0' iicount='263'/>
<call method='1114' count='139608' prof_factor='0.889062' inline='1'/>
<intrinsic id='_isInterrupted' nodes='48'/>
<parse_done stamp='1.059'/>
</parse>
<bc code='154' bci='14'/>
<branch target_bci='25' taken='0' not_taken='126771' cnt='126771.000000' prob='never'/>
<uncommon_trap bci='14' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<uncommon_trap bci='14' reason='predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='14' reason='profile_predicate' action='maybe_recompile' debug_id='0'/>
<uncommon_trap bci='14' reason='loop_limit_check' action='maybe_recompile' debug_id='0'/>
<bc code='184' bci='18'/>
<klass id='1109' name='io.type.pollution.benchmarks.Context' flags='1537'/>
<method id='1110' holder='1102' name='applicationStackBase' return='976' arguments='1109' flags='9' bytes='7' compile_id='111' compiler='c2' level='4' iicount='162295'/>
<call method='1110' count='126753' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1110' uses='126753.000000' stamp='1.059'>
<bc code='184' bci='3'/>
<type id='982' name='int'/>
<method id='1116' holder='1102' name='applicationStack' return='976' arguments='1109 982' flags='9' bytes='19' compile_id='104' compiler='c2' level='4' iicount='352344'/>
<call method='1116' count='136065' prof_factor='0.781004' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1116' uses='126720.000000' stamp='1.059'>
<bc code='160' bci='2'/>
<branch target_bci='10' taken='339160' not_taken='14376' cnt='353536.000000' prob='0.959337'/>
<bc code='184' bci='15'/>
<call method='1116' count='338004' prof_factor='0.359649' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1116' uses='121740.000000' stamp='1.059'>
<bc code='160' bci='2'/>
<branch target_bci='10' taken='339160' not_taken='14376' cnt='353536.000000' prob='0.959337'/>
<bc code='184' bci='15'/>
<call method='1116' count='338004' prof_factor='0.345515' inline='1'/>
<inline_fail reason='recursive inlining is too deep'/>
<direct_call bci='15'/>
<parse_done stamp='1.059'/>
</parse>
<parse_done stamp='1.059'/>
</parse>
<parse_done stamp='1.059'/>
</parse>
<bc code='184' bci='8'/>
<call method='1107' count='124423' prof_factor='1.000000' inline='1'/>
<intrinsic id='_currentThread' nodes='3'/>
<bc code='182' bci='11'/>
<dependency type='unique_concrete_method' ctxk='1021' x='1108'/>
<call method='1108' count='124498' prof_factor='1.000000' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='1108' uses='124498.000000' stamp='1.059'>
<bc code='182' bci='2'/>
<call method='1114' count='139608' prof_factor='0.889062' inline='1'/>
<intrinsic id='_isInterrupted' nodes='45'/>
<parse_done stamp='1.059'/>
</parse>
<bc code='154' bci='14'/>
<branch target_bci='25' taken='0' not_taken='126771' cnt='124766.000000' prob='never'/>
<uncommon_trap bci='14' reason='unstable_if' action='reinterpret' debug_id='0' comment='taken never'/>
<parse_done stamp='1.059'/>
</parse>
<loop_tree>
<loop idx='386' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='386' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='386' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='386' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='386' inner_loop='1' >
</loop>
</loop_tree>
<loop_tree>
<loop idx='386' inner_loop='1' >
</loop>
</loop_tree>
<regalloc attempts='0' success='1'/>
<dependency type='unique_concrete_method' ctxk='1021' x='1108'/>
<code_cache total_blobs='435' nmethods='109' adapters='239' free_code_cache='250374656'/>
<task_done success='1' nmsize='424' count='2' backedge_count='200340' inlined_bytes='63' stamp='1.063'/>
</task>
</compilation_log>
<hotspot_log_done stamp='19.725'/>
</hotspot_log>
