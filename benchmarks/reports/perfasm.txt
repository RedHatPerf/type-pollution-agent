PrintAssembly processed: 31535 total address lines.
Perf output processed (skipped 1.000 seconds):
 Column 1: cycles (69834 events)

Hottest code regions (>1.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, io.type.pollution.benchmarks.Main::applicationStack, version 104 (101 bytes) 

             0x00007fb54f2d0d97: jne    0x00007fb54f2d0da1
             0x00007fb54f2d0d9d: mov    %rax,0x20(%rsi)
             0x00007fb54f2d0da1: je     0x00007fb54f2d0cd2
             0x00007fb54f2d0da7: mov    $0xffffffde,%esi
             0x00007fb54f2d0dac: mov    %r11,%rbp
             0x00007fb54f2d0daf: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                           ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                           ;   {runtime_call UncommonTrapBlob}
  0.01%      0x00007fb54f2d0db4: movabs $0x800062248,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
             0x00007fb54f2d0dbe: push   %rax
  0.02%      0x00007fb54f2d0dbf: mov    %rax,%rax
  0.27%      0x00007fb54f2d0dc2: mov    0x28(%rsi),%rdi
 23.61%      0x00007fb54f2d0dc6: mov    (%rdi),%ecx
  1.40%      0x00007fb54f2d0dc8: add    $0x8,%rdi
             0x00007fb54f2d0dcc: test   %rax,%rax
             0x00007fb54f2d0dcf: repnz scas %es:(%rdi),%rax
 10.78%      0x00007fb54f2d0dd2: pop    %rax
  2.76%  ╭   0x00007fb54f2d0dd3: jne    0x00007fb54f2d0ddd
  0.00%  │   0x00007fb54f2d0dd9: mov    %rax,0x20(%rsi)
  0.60%  ↘   0x00007fb54f2d0ddd: je     0x00007fb54f2d0d0f
             0x00007fb54f2d0de3: mov    $0xffffffde,%esi
             0x00007fb54f2d0de8: mov    %r8,%rbp
             0x00007fb54f2d0deb: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                           ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                           ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                           ;   {runtime_call UncommonTrapBlob}
  0.08%      0x00007fb54f2d0df0: movabs $0x800062448,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0.18%      0x00007fb54f2d0dfa: push   %rax
  0.02%      0x00007fb54f2d0dfb: mov    %rax,%rax
             0x00007fb54f2d0dfe: mov    0x28(%rsi),%rdi
 23.53%      0x00007fb54f2d0e02: mov    (%rdi),%ecx
  1.51%      0x00007fb54f2d0e04: add    $0x8,%rdi
  0.00%      0x00007fb54f2d0e08: test   %rax,%rax
  1.17%      0x00007fb54f2d0e0b: repnz scas %es:(%rdi),%rax
  9.96%      0x00007fb54f2d0e0e: pop    %rax
  2.82%   ╭  0x00007fb54f2d0e0f: jne    0x00007fb54f2d0e19
  0.00%   │  0x00007fb54f2d0e15: mov    %rax,0x20(%rsi)
  0.59%   ↘  0x00007fb54f2d0e19: je     0x00007fb54f2d0d22
             0x00007fb54f2d0e1f: mov    $0xffffffde,%esi
             0x00007fb54f2d0e24: mov    %r8,%rbp
             0x00007fb54f2d0e27: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                           ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                           ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                           ;   {runtime_call UncommonTrapBlob}
             0x00007fb54f2d0e2c: cmp    $0x67c70,%r10d     ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
             0x00007fb54f2d0e33: jne    0x00007fb54f2d0e52  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 79.33%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, io.type.pollution.benchmarks.Main::applicationStack, version 104 (55 bytes) 

           nul chk table  [0x00007fb54f2d1128,0x00007fb54f2d1140] = 24
          ----------------------------------------------------------------------
          io/type/pollution/benchmarks/Main.applicationStack(Lio/type/pollution/benchmarks/Context;I)Z  [0x00007fb54f2d0c60, 0x00007fb54f2d0ec8]  616 bytes
          [Entry Point]
          [Verified Entry Point]
          [Constants]
            # {method} {0x00007fb52d0bf8b8} &apos;applicationStack&apos; &apos;(Lio/type/pollution/benchmarks/Context;I)Z&apos; in &apos;io/type/pollution/benchmarks/Main&apos;
            # parm0:    rsi:rsi   = &apos;io/type/pollution/benchmarks/Context&apos;
            # parm1:    rdx       = int
            #           [sp+0x30]  (sp of caller)
  0.68%     0x00007fb54f2d0c60: mov    %eax,-0x14000(%rsp)
  2.38%     0x00007fb54f2d0c67: push   %rbp
  1.48%     0x00007fb54f2d0c68: sub    $0x20,%rsp         ;*synchronization entry
                                                          ; - io.type.pollution.benchmarks.Main::applicationStack@-1 (line 37)
  0.00%     0x00007fb54f2d0c6c: mov    %rsi,%r8
  0.38%     0x00007fb54f2d0c6f: cmp    $0x1,%edx
         ╭  0x00007fb54f2d0c72: je     0x00007fb54f2d0c98  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@2 (line 37)
  1.29%  │  0x00007fb54f2d0c74: mov    %edx,%r11d
  0.00%  │  0x00007fb54f2d0c77: dec    %r11d
  0.00%  │  0x00007fb54f2d0c7a: cmp    $0x1,%r11d
  0.00%  │  0x00007fb54f2d0c7e: je     0x00007fb54f2d0ce7  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@2 (line 37)
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
  0.25%  │  0x00007fb54f2d0c80: add    $0xfffffffe,%edx
  0.79%  │  0x00007fb54f2d0c83: callq  0x00007fb54f2d0c60  ; ImmutableOopMap{}
         │                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
         │                                                ;   {static_call}
  0.02%  │  0x00007fb54f2d0c88: add    $0x20,%rsp
  0.01%  │  0x00007fb54f2d0c8c: pop    %rbp
  3.87%  │  0x00007fb54f2d0c8d: mov    0x108(%r15),%r10
  0.01%  │  0x00007fb54f2d0c94: test   %eax,(%r10)        ;   {poll_return}
  3.97%  │  0x00007fb54f2d0c97: retq   
         ↘  0x00007fb54f2d0c98: mov    %rsi,%r11
            0x00007fb54f2d0c9b: mov    0x8(%rsi),%r10d    ; implicit exception: dispatches to 0x00007fb54f2d0e7d
            0x00007fb54f2d0c9f: movabs $0x800000000,%rsi
            0x00007fb54f2d0ca9: add    %r10,%rsi
            0x00007fb54f2d0cac: mov    0x20(%rsi),%r10
            0x00007fb54f2d0cb0: movabs $0x800062248,%r8   ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
            0x00007fb54f2d0cba: cmp    %r8,%r10
            0x00007fb54f2d0cbd: jne    0x00007fb54f2d0d3a  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                          ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
....................................................................................................
 15.14%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, io.type.pollution.benchmarks.Main::applicationStack, version 104 (63 bytes) 

           0x00007fb54f2d0ccc: jne    0x00007fb54f2d0d78  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                         ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
           0x00007fb54f2d0cd2: mov    0x8(%r11),%r10d
           0x00007fb54f2d0cd6: cmp    $0x67840,%r10d     ;   {metadata(&apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
           0x00007fb54f2d0cdd: jne    0x00007fb54f2d0e2c  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                         ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
           0x00007fb54f2d0ce3: xor    %eax,%eax
           0x00007fb54f2d0ce5: jmp    0x00007fb54f2d0c88
  0.11%    0x00007fb54f2d0ce7: mov    0x8(%rsi),%r11d    ; implicit exception: dispatches to 0x00007fb54f2d0e8c
  0.49%    0x00007fb54f2d0ceb: movabs $0x800000000,%rsi
           0x00007fb54f2d0cf5: add    %r11,%rsi
           0x00007fb54f2d0cf8: mov    0x20(%rsi),%r11
  0.17%    0x00007fb54f2d0cfc: movabs $0x800062248,%r10  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
  0.42%    0x00007fb54f2d0d06: cmp    %r10,%r11
           0x00007fb54f2d0d09: jne    0x00007fb54f2d0db4  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@4 (line 8)
                                                         ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                         ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
  0.02%    0x00007fb54f2d0d0f: movabs $0x800062448,%r10  ;   {metadata(&apos;io/type/pollution/benchmarks/InternalContext&apos;)}
  0.00%    0x00007fb54f2d0d19: cmp    %r10,%r11
           0x00007fb54f2d0d1c: jne    0x00007fb54f2d0df0  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                         ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                         ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
  0.01%    0x00007fb54f2d0d22: mov    0x8(%r8),%r11d
  0.84%    0x00007fb54f2d0d26: cmp    $0x67840,%r11d     ;   {metadata(&apos;io/type/pollution/benchmarks/NonDuplicatedContext&apos;)}
           0x00007fb54f2d0d2d: jne    0x00007fb54f2d0e3f  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
                                                         ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                         ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
           0x00007fb54f2d0d33: xor    %eax,%eax
           0x00007fb54f2d0d35: jmpq   0x00007fb54f2d0c88
           0x00007fb54f2d0d3a: movabs $0x800062248,%rax  ;   {metadata(&apos;io/type/pollution/benchmarks/Context&apos;)}
           0x00007fb54f2d0d44: push   %rax
           0x00007fb54f2d0d45: mov    %rax,%rax
           0x00007fb54f2d0d48: mov    0x28(%rsi),%rdi
....................................................................................................
  2.06%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, io.type.pollution.benchmarks.Main::lambda$main$0, version 114 (49 bytes) 

                                                          ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                          ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
                                                          ;   {optimized virtual_call}
            0x00007fb54f2d241c: test   %eax,%eax
            0x00007fb54f2d241e: jne    0x00007fb54f2d2481
            0x00007fb54f2d2420: mov    (%rsp),%r8
            0x00007fb54f2d2424: nopl   0x0(%rax,%rax,1)
            0x00007fb54f2d242c: data16 data16 xchg %ax,%ax  ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                          ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
  0.62%  ↗  0x00007fb54f2d2430: mov    %r8,%rbp
  0.00%  │  0x00007fb54f2d2433: mov    %r8,%rsi
  0.00%  │  0x00007fb54f2d2436: mov    $0x6,%edx
         │  0x00007fb54f2d243b: callq  0x00007fb54784a780  ; ImmutableOopMap{rbp=Oop }
         │                                                ;*invokestatic applicationStack {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStackBase@3 (line 32)
         │                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@18 (line 23)
         │                                                ;   {static_call}
  0.00%  │  0x00007fb54f2d2440: mov    %rbp,%r8
  0.00%  │  0x00007fb54f2d2443: mov    0x320(%r15),%rsi
  0.00%  │  0x00007fb54f2d244a: mov    0x320(%r15),%r10
  0.53%  │  0x00007fb54f2d2451: cmp    %rsi,%r10
         │  0x00007fb54f2d2454: jne    0x00007fb54f2d240e  ;*invokestatic currentThread {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - io.type.pollution.benchmarks.Main::lambda$main$0@8 (line 22)
  0.00%  │  0x00007fb54f2d2456: mov    0x270(%r15),%r10
  0.00%  │  0x00007fb54f2d245d: mov    0x14(%r10),%r11d
  0.55%  │  0x00007fb54f2d2461: test   %r11d,%r11d
         ╰  0x00007fb54f2d2464: je     0x00007fb54f2d2430
            0x00007fb54f2d2466: mov    $0x1,%ebp          ;*invokevirtual isInterrupted {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.Thread::isInterrupted@2 (line 1033)
                                                          ; - io.type.pollution.benchmarks.Main::lambda$main$0@11 (line 22)
            0x00007fb54f2d246b: mov    $0xffffff4d,%esi
            0x00007fb54f2d2470: mov    %r8,(%rsp)
            0x00007fb54f2d2474: data16 xchg %ax,%ax
            0x00007fb54f2d2477: callq  0x00007fb547849e00  ; ImmutableOopMap{[0]=Oop }
                                                          ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - io.type.pollution.benchmarks.Main::lambda$main$0@14 (line 22)
....................................................................................................
  1.72%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, level 4, io.type.pollution.benchmarks.Main::applicationStack, version 104 (9 bytes) 

                                                          ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@9 (line 9)
                                                          ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
                                                          ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
                                                          ;   {runtime_call UncommonTrapBlob}
            0x00007fb54f2d0e2c: cmp    $0x67c70,%r10d     ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
         ╭  0x00007fb54f2d0e33: jne    0x00007fb54f2d0e52  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
         │  0x00007fb54f2d0e35: mov    $0x1,%eax
         │  0x00007fb54f2d0e3a: jmpq   0x00007fb54f2d0c88
  0.63%  │  0x00007fb54f2d0e3f: cmp    $0x67c70,%r11d     ;   {metadata(&apos;io/type/pollution/benchmarks/DuplicatedContext&apos;)}
         │  0x00007fb54f2d0e46: jne    0x00007fb54f2d0e60  ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@6 (line 38)
         │                                                ; - io.type.pollution.benchmarks.Main::applicationStack@15 (line 41)
  0.63%  │  0x00007fb54f2d0e48: mov    $0x1,%eax
         │  0x00007fb54f2d0e4d: jmpq   0x00007fb54f2d0c88
         ↘  0x00007fb54f2d0e52: mov    $0xffffffc6,%esi
            0x00007fb54f2d0e57: mov    %r11,%rbp
            0x00007fb54f2d0e5a: nop
            0x00007fb54f2d0e5b: callq  0x00007fb547849e00  ; ImmutableOopMap{rbp=Oop }
                                                          ;*invokeinterface isDuplicated {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - io.type.pollution.benchmarks.ContextUtil::isDuplicatedContext@12 (line 9)
....................................................................................................
  1.27%  <total for region 5>

....[Hottest Regions]...............................................................................
 79.33%         c2, level 4  io.type.pollution.benchmarks.Main::applicationStack, version 104 (101 bytes) 
 15.14%         c2, level 4  io.type.pollution.benchmarks.Main::applicationStack, version 104 (55 bytes) 
  2.06%         c2, level 4  io.type.pollution.benchmarks.Main::applicationStack, version 104 (63 bytes) 
  1.72%         c2, level 4  io.type.pollution.benchmarks.Main::lambda$main$0, version 114 (49 bytes) 
  1.27%         c2, level 4  io.type.pollution.benchmarks.Main::applicationStack, version 104 (9 bytes) 
  0.21%   [kernel.kallsyms]  native_write_msr (0 bytes) 
  0.01%   [kernel.kallsyms]  perf_event_task_tick (60 bytes) 
  0.01%   [kernel.kallsyms]  xhci_update_erst_dequeue (3 bytes) 
  0.01%   [kernel.kallsyms]  xhci_ring_ep_doorbell (0 bytes) 
  0.01%   [kernel.kallsyms]  xhci_irq (0 bytes) 
  0.01%   [kernel.kallsyms]  read_tsc (0 bytes) 
  0.01%   [kernel.kallsyms]  cpuacct_account_field (7 bytes) 
  0.01%   [kernel.kallsyms]  check_preemption_disabled (35 bytes) 
  0.01%   [kernel.kallsyms]  asm_sysvec_apic_timer_interrupt (0 bytes) 
  0.01%   [kernel.kallsyms]  sync_regs (0 bytes) 
  0.00%   [kernel.kallsyms]  __intel_pmu_enable_all.constprop.0 (0 bytes) 
  0.00%   [kernel.kallsyms]  update_cfs_group (27 bytes) 
  0.00%   [kernel.kallsyms]  timerqueue_add (19 bytes) 
  0.00%           libjvm.so  VMError::is_error_reported (8 bytes) 
  0.00%   [kernel.kallsyms]  __intel_pmu_enable_all.constprop.0 (0 bytes) 
  0.16%  <...other 101 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.80%         c2, level 4  io.type.pollution.benchmarks.Main::applicationStack, version 104 
  1.72%         c2, level 4  io.type.pollution.benchmarks.Main::lambda$main$0, version 114 
  0.21%   [kernel.kallsyms]  native_write_msr 
  0.01%   [kernel.kallsyms]  perf_event_task_tick 
  0.01%   [kernel.kallsyms]  xhci_update_erst_dequeue 
  0.01%   [kernel.kallsyms]  xhci_ring_ep_doorbell 
  0.01%   [kernel.kallsyms]  xhci_irq 
  0.01%   [kernel.kallsyms]  cpuacct_account_field 
  0.01%   [kernel.kallsyms]  read_tsc 
  0.01%   [kernel.kallsyms]  __intel_pmu_enable_all.constprop.0 
  0.01%   [kernel.kallsyms]  update_cfs_group 
  0.01%   [kernel.kallsyms]  check_preemption_disabled 
  0.01%   [kernel.kallsyms]  asm_sysvec_apic_timer_interrupt 
  0.01%   [kernel.kallsyms]  update_irq_load_avg 
  0.01%   [kernel.kallsyms]  trigger_load_balance 
  0.01%   [kernel.kallsyms]  __update_load_avg_se 
  0.01%   [kernel.kallsyms]  sync_regs 
  0.00%   [kernel.kallsyms]  update_load_avg 
  0.00%   [kernel.kallsyms]  reweight_entity 
  0.00%           libjvm.so  VMError::is_error_reported 
  0.14%  <...other 74 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 99.52%         c2, level 4
  0.45%   [kernel.kallsyms]
  0.03%           libjvm.so
  0.00%           libc.so.6
....................................................................................................
100.00%  <totals>


